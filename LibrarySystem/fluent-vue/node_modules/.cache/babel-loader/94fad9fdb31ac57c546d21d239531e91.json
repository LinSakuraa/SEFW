{"ast":null,"code":"import { directionByIsDark } from '../utilities/direction-by-is-dark';\nimport { GradientSwatchRGB } from './gradient-swatch';\n/**\n * @internal\n */\n\nexport function underlineStroke(palette, reference, restDelta, hoverDelta, activeDelta, focusDelta, shadowDelta, width) {\n  const referenceIndex = palette.closestIndexOf(reference);\n  const direction = directionByIsDark(reference);\n  const restIndex = referenceIndex + direction * restDelta;\n  const hoverIndex = restIndex + direction * (hoverDelta - restDelta);\n  const activeIndex = restIndex + direction * (activeDelta - restDelta);\n  const focusIndex = restIndex + direction * (focusDelta - restDelta);\n  const midPosition = `calc(100% - ${width})`;\n\n  function gradientHelper(index, applyShadow) {\n    const color = palette.get(index);\n\n    if (applyShadow) {\n      const underlineColor = palette.get(index + direction * shadowDelta);\n      const g = `linear-gradient(${color.toColorString()} ${midPosition}, ${underlineColor.toColorString()} ${midPosition}, ${underlineColor.toColorString()})`;\n      return GradientSwatchRGB.fromObject(color, g);\n    } else {\n      return color;\n    }\n  }\n\n  return {\n    rest: gradientHelper(restIndex, true),\n    hover: gradientHelper(hoverIndex, true),\n    active: gradientHelper(activeIndex, false),\n    focus: gradientHelper(focusIndex, true)\n  };\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/color/recipes/underline-stroke.js"],"names":["directionByIsDark","GradientSwatchRGB","underlineStroke","palette","reference","restDelta","hoverDelta","activeDelta","focusDelta","shadowDelta","width","referenceIndex","closestIndexOf","direction","restIndex","hoverIndex","activeIndex","focusIndex","midPosition","gradientHelper","index","applyShadow","color","get","underlineColor","g","toColorString","fromObject","rest","hover","active","focus"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,mCAAlC;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,OAAzB,EAAkCC,SAAlC,EAA6CC,SAA7C,EAAwDC,UAAxD,EAAoEC,WAApE,EAAiFC,UAAjF,EAA6FC,WAA7F,EAA0GC,KAA1G,EAAiH;AACpH,QAAMC,cAAc,GAAGR,OAAO,CAACS,cAAR,CAAuBR,SAAvB,CAAvB;AACA,QAAMS,SAAS,GAAGb,iBAAiB,CAACI,SAAD,CAAnC;AACA,QAAMU,SAAS,GAAGH,cAAc,GAAGE,SAAS,GAAGR,SAA/C;AACA,QAAMU,UAAU,GAAGD,SAAS,GAAGD,SAAS,IAAIP,UAAU,GAAGD,SAAjB,CAAxC;AACA,QAAMW,WAAW,GAAGF,SAAS,GAAGD,SAAS,IAAIN,WAAW,GAAGF,SAAlB,CAAzC;AACA,QAAMY,UAAU,GAAGH,SAAS,GAAGD,SAAS,IAAIL,UAAU,GAAGH,SAAjB,CAAxC;AACA,QAAMa,WAAW,GAAI,eAAcR,KAAM,GAAzC;;AACA,WAASS,cAAT,CAAwBC,KAAxB,EAA+BC,WAA/B,EAA4C;AACxC,UAAMC,KAAK,GAAGnB,OAAO,CAACoB,GAAR,CAAYH,KAAZ,CAAd;;AACA,QAAIC,WAAJ,EAAiB;AACb,YAAMG,cAAc,GAAGrB,OAAO,CAACoB,GAAR,CAAYH,KAAK,GAAGP,SAAS,GAAGJ,WAAhC,CAAvB;AACA,YAAMgB,CAAC,GAAI,mBAAkBH,KAAK,CAACI,aAAN,EAAsB,IAAGR,WAAY,KAAIM,cAAc,CAACE,aAAf,EAA+B,IAAGR,WAAY,KAAIM,cAAc,CAACE,aAAf,EAA+B,GAAvJ;AACA,aAAOzB,iBAAiB,CAAC0B,UAAlB,CAA6BL,KAA7B,EAAoCG,CAApC,CAAP;AACH,KAJD,MAKK;AACD,aAAOH,KAAP;AACH;AACJ;;AACD,SAAO;AACHM,IAAAA,IAAI,EAAET,cAAc,CAACL,SAAD,EAAY,IAAZ,CADjB;AAEHe,IAAAA,KAAK,EAAEV,cAAc,CAACJ,UAAD,EAAa,IAAb,CAFlB;AAGHe,IAAAA,MAAM,EAAEX,cAAc,CAACH,WAAD,EAAc,KAAd,CAHnB;AAIHe,IAAAA,KAAK,EAAEZ,cAAc,CAACF,UAAD,EAAa,IAAb;AAJlB,GAAP;AAMH","sourcesContent":["import { directionByIsDark } from '../utilities/direction-by-is-dark';\nimport { GradientSwatchRGB } from './gradient-swatch';\n/**\n * @internal\n */\nexport function underlineStroke(palette, reference, restDelta, hoverDelta, activeDelta, focusDelta, shadowDelta, width) {\n    const referenceIndex = palette.closestIndexOf(reference);\n    const direction = directionByIsDark(reference);\n    const restIndex = referenceIndex + direction * restDelta;\n    const hoverIndex = restIndex + direction * (hoverDelta - restDelta);\n    const activeIndex = restIndex + direction * (activeDelta - restDelta);\n    const focusIndex = restIndex + direction * (focusDelta - restDelta);\n    const midPosition = `calc(100% - ${width})`;\n    function gradientHelper(index, applyShadow) {\n        const color = palette.get(index);\n        if (applyShadow) {\n            const underlineColor = palette.get(index + direction * shadowDelta);\n            const g = `linear-gradient(${color.toColorString()} ${midPosition}, ${underlineColor.toColorString()} ${midPosition}, ${underlineColor.toColorString()})`;\n            return GradientSwatchRGB.fromObject(color, g);\n        }\n        else {\n            return color;\n        }\n    }\n    return {\n        rest: gradientHelper(restIndex, true),\n        hover: gradientHelper(hoverIndex, true),\n        active: gradientHelper(activeIndex, false),\n        focus: gradientHelper(focusIndex, true),\n    };\n}\n"]},"metadata":{},"sourceType":"module"}