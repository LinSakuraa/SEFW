{"ast":null,"code":"import { defineComponent, computed, inject, h } from 'vue';\nimport { createKey, formatLength, resolveSlot, resolveWrappedSlot, throwError, useHoudini } from '../../_utils';\nimport { timelineInjectionKey } from './Timeline';\nimport { useConfig, useThemeClass } from '../../_mixins';\nconst timelineItemProps = {\n  time: [String, Number],\n  title: String,\n  content: String,\n  color: String,\n  lineType: {\n    type: String,\n    default: 'default'\n  },\n  type: {\n    type: String,\n    default: 'default'\n  }\n};\nexport default defineComponent({\n  name: 'TimelineItem',\n  props: timelineItemProps,\n\n  setup(props) {\n    const NTimeline = inject(timelineInjectionKey);\n\n    if (!NTimeline) {\n      throwError('timeline-item', '`n-timeline-item` must be placed inside `n-timeline`.');\n    }\n\n    useHoudini();\n    const {\n      inlineThemeDisabled\n    } = useConfig();\n    const cssVarsRef = computed(() => {\n      const {\n        props: {\n          size,\n          iconSize: iconSizeProp\n        },\n        mergedThemeRef\n      } = NTimeline;\n      const {\n        type\n      } = props;\n      const {\n        self: {\n          titleTextColor,\n          contentTextColor,\n          metaTextColor,\n          lineColor,\n          titleFontWeight,\n          contentFontSize,\n          [createKey('iconSize', size)]: iconSize,\n          [createKey('titleMargin', size)]: titleMargin,\n          [createKey('titleFontSize', size)]: titleFontSize,\n          [createKey('circleBorder', type)]: circleBorder,\n          [createKey('iconColor', type)]: iconColor\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = mergedThemeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-circle-border': circleBorder,\n        '--n-icon-color': iconColor,\n        '--n-content-font-size': contentFontSize,\n        '--n-content-text-color': contentTextColor,\n        '--n-line-color': lineColor,\n        '--n-meta-text-color': metaTextColor,\n        '--n-title-font-size': titleFontSize,\n        '--n-title-font-weight': titleFontWeight,\n        '--n-title-margin': titleMargin,\n        '--n-title-text-color': titleTextColor,\n        '--n-icon-size': formatLength(iconSizeProp) || iconSize\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('timeline-item', computed(() => {\n      const {\n        props: {\n          size,\n          iconSize: iconSizeProp\n        }\n      } = NTimeline;\n      const {\n        type\n      } = props;\n      return `${size[0]}${iconSizeProp || 'a'}${type[0]}`;\n    }), cssVarsRef, NTimeline.props) : undefined;\n    return {\n      mergedClsPrefix: NTimeline.mergedClsPrefixRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      color,\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-timeline-item`, this.themeClass, `${mergedClsPrefix}-timeline-item--${this.type}-type`, `${mergedClsPrefix}-timeline-item--${this.lineType}-line-type`],\n      style: this.cssVars\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-timeline-item-timeline`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-timeline-item-timeline__line`\n    }), resolveWrappedSlot($slots.icon, children => {\n      return children ? h(\"div\", {\n        class: `${mergedClsPrefix}-timeline-item-timeline__icon`,\n        style: {\n          color: color\n        }\n      }, children) : h(\"div\", {\n        class: `${mergedClsPrefix}-timeline-item-timeline__circle`,\n        style: {\n          borderColor: color\n        }\n      });\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-timeline-item-content`\n    }, resolveWrappedSlot($slots.header, children => {\n      const mergedChildren = children || this.title;\n\n      if (mergedChildren) {\n        return h(\"div\", {\n          class: `${mergedClsPrefix}-timeline-item-content__title`\n        }, children || this.title);\n      }\n\n      return null;\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-timeline-item-content__content`\n    }, resolveSlot($slots.default, () => [this.content])), h(\"div\", {\n      class: `${mergedClsPrefix}-timeline-item-content__meta`\n    }, resolveSlot($slots.footer, () => [this.time]))));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/timeline/src/TimelineItem.js"],"names":["defineComponent","computed","inject","h","createKey","formatLength","resolveSlot","resolveWrappedSlot","throwError","useHoudini","timelineInjectionKey","useConfig","useThemeClass","timelineItemProps","time","String","Number","title","content","color","lineType","type","default","name","props","setup","NTimeline","inlineThemeDisabled","cssVarsRef","size","iconSize","iconSizeProp","mergedThemeRef","self","titleTextColor","contentTextColor","metaTextColor","lineColor","titleFontWeight","contentFontSize","titleMargin","titleFontSize","circleBorder","iconColor","common","cubicBezierEaseInOut","value","themeClassHandle","undefined","mergedClsPrefix","mergedClsPrefixRef","cssVars","themeClass","onRender","render","$slots","class","style","icon","children","borderColor","header","mergedChildren","footer"],"mappings":"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","sourcesContent":["import { defineComponent, computed, inject, h } from 'vue';\nimport { createKey, formatLength, resolveSlot, resolveWrappedSlot, throwError, useHoudini } from '../../_utils';\nimport { timelineInjectionKey } from './Timeline';\nimport { useConfig, useThemeClass } from '../../_mixins';\nconst timelineItemProps = {\n    time: [String, Number],\n    title: String,\n    content: String,\n    color: String,\n    lineType: {\n        type: String,\n        default: 'default'\n    },\n    type: {\n        type: String,\n        default: 'default'\n    }\n};\nexport default defineComponent({\n    name: 'TimelineItem',\n    props: timelineItemProps,\n    setup(props) {\n        const NTimeline = inject(timelineInjectionKey);\n        if (!NTimeline) {\n            throwError('timeline-item', '`n-timeline-item` must be placed inside `n-timeline`.');\n        }\n        useHoudini();\n        const { inlineThemeDisabled } = useConfig();\n        const cssVarsRef = computed(() => {\n            const { props: { size, iconSize: iconSizeProp }, mergedThemeRef } = NTimeline;\n            const { type } = props;\n            const { self: { titleTextColor, contentTextColor, metaTextColor, lineColor, titleFontWeight, contentFontSize, [createKey('iconSize', size)]: iconSize, [createKey('titleMargin', size)]: titleMargin, [createKey('titleFontSize', size)]: titleFontSize, [createKey('circleBorder', type)]: circleBorder, [createKey('iconColor', type)]: iconColor }, common: { cubicBezierEaseInOut } } = mergedThemeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-circle-border': circleBorder,\n                '--n-icon-color': iconColor,\n                '--n-content-font-size': contentFontSize,\n                '--n-content-text-color': contentTextColor,\n                '--n-line-color': lineColor,\n                '--n-meta-text-color': metaTextColor,\n                '--n-title-font-size': titleFontSize,\n                '--n-title-font-weight': titleFontWeight,\n                '--n-title-margin': titleMargin,\n                '--n-title-text-color': titleTextColor,\n                '--n-icon-size': formatLength(iconSizeProp) || iconSize\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('timeline-item', computed(() => {\n                const { props: { size, iconSize: iconSizeProp } } = NTimeline;\n                const { type } = props;\n                return `${size[0]}${iconSizeProp || 'a'}${type[0]}`;\n            }), cssVarsRef, NTimeline.props)\n            : undefined;\n        return {\n            mergedClsPrefix: NTimeline.mergedClsPrefixRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, color, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-timeline-item`,\n                this.themeClass,\n                `${mergedClsPrefix}-timeline-item--${this.type}-type`,\n                `${mergedClsPrefix}-timeline-item--${this.lineType}-line-type`\n            ], style: this.cssVars },\n            h(\"div\", { class: `${mergedClsPrefix}-timeline-item-timeline` },\n                h(\"div\", { class: `${mergedClsPrefix}-timeline-item-timeline__line` }),\n                resolveWrappedSlot($slots.icon, (children) => {\n                    return children ? (h(\"div\", { class: `${mergedClsPrefix}-timeline-item-timeline__icon`, style: { color: color } }, children)) : (h(\"div\", { class: `${mergedClsPrefix}-timeline-item-timeline__circle`, style: { borderColor: color } }));\n                })),\n            h(\"div\", { class: `${mergedClsPrefix}-timeline-item-content` },\n                resolveWrappedSlot($slots.header, (children) => {\n                    const mergedChildren = children || this.title;\n                    if (mergedChildren) {\n                        return (h(\"div\", { class: `${mergedClsPrefix}-timeline-item-content__title` }, children || this.title));\n                    }\n                    return null;\n                }),\n                h(\"div\", { class: `${mergedClsPrefix}-timeline-item-content__content` }, resolveSlot($slots.default, () => [this.content])),\n                h(\"div\", { class: `${mergedClsPrefix}-timeline-item-content__meta` }, resolveSlot($slots.footer, () => [this.time])))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}