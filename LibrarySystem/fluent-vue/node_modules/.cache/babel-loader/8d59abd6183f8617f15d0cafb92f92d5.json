{"ast":null,"code":"/**\n * This method keeps a given value within the bounds of a min and max value. If the value\n * is larger than the max, the minimum value will be returned. If the value is smaller than the minimum,\n * the maximum will be returned. Otherwise, the value is returned un-changed.\n */\nexport function wrapInBounds(min, max, value) {\n  if (value < min) {\n    return max;\n  } else if (value > max) {\n    return min;\n  }\n\n  return value;\n}\n/**\n * Ensures that a value is between a min and max value. If value is lower than min, min will be returned.\n * If value is greater than max, max will be returned.\n */\n\nexport function limit(min, max, value) {\n  return Math.min(Math.max(value, min), max);\n}\n/**\n * Determines if a number value is within a specified range.\n *\n * @param value - the value to check\n * @param min - the range start\n * @param max - the range end\n */\n\nexport function inRange(value, min, max = 0) {\n  [min, max] = [min, max].sort((a, b) => a - b);\n  return min <= value && value < max;\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-web-utilities/dist/numbers.js"],"names":["wrapInBounds","min","max","value","limit","Math","inRange","sort","a","b"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuC;AAC1C,MAAIA,KAAK,GAAGF,GAAZ,EAAiB;AACb,WAAOC,GAAP;AACH,GAFD,MAGK,IAAIC,KAAK,GAAGD,GAAZ,EAAiB;AAClB,WAAOD,GAAP;AACH;;AACD,SAAOE,KAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAeH,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,EAAgC;AACnC,SAAOE,IAAI,CAACJ,GAAL,CAASI,IAAI,CAACH,GAAL,CAASC,KAAT,EAAgBF,GAAhB,CAAT,EAA+BC,GAA/B,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,OAAT,CAAiBH,KAAjB,EAAwBF,GAAxB,EAA6BC,GAAG,GAAG,CAAnC,EAAsC;AACzC,GAACD,GAAD,EAAMC,GAAN,IAAa,CAACD,GAAD,EAAMC,GAAN,EAAWK,IAAX,CAAgB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA9B,CAAb;AACA,SAAOR,GAAG,IAAIE,KAAP,IAAgBA,KAAK,GAAGD,GAA/B;AACH","sourcesContent":["/**\n * This method keeps a given value within the bounds of a min and max value. If the value\n * is larger than the max, the minimum value will be returned. If the value is smaller than the minimum,\n * the maximum will be returned. Otherwise, the value is returned un-changed.\n */\nexport function wrapInBounds(min, max, value) {\n    if (value < min) {\n        return max;\n    }\n    else if (value > max) {\n        return min;\n    }\n    return value;\n}\n/**\n * Ensures that a value is between a min and max value. If value is lower than min, min will be returned.\n * If value is greater than max, max will be returned.\n */\nexport function limit(min, max, value) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Determines if a number value is within a specified range.\n *\n * @param value - the value to check\n * @param min - the range start\n * @param max - the range end\n */\nexport function inRange(value, min, max = 0) {\n    [min, max] = [min, max].sort((a, b) => a - b);\n    return min <= value && value < max;\n}\n"]},"metadata":{},"sourceType":"module"}