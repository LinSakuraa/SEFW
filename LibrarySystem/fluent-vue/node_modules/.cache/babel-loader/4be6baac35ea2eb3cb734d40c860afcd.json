{"ast":null,"code":"import { h, defineComponent, computed, inject } from 'vue';\nimport { CheckmarkIcon as FinishedIcon, CloseIcon as ErrorIcon } from '../../_internal/icons';\nimport { NIconSwitchTransition, NBaseIcon } from '../../_internal';\nimport { createKey, resolveSlot, resolveWrappedSlot, throwError } from '../../_utils';\nimport { stepsInjectionKey } from './Steps';\nimport { useConfig, useThemeClass } from '../../_mixins';\nconst stepProps = {\n  status: String,\n  title: String,\n  description: String,\n  // index will be filled by parent steps, not user\n  internalIndex: {\n    type: Number,\n    default: 0\n  }\n};\nexport default defineComponent({\n  name: 'Step',\n  props: stepProps,\n\n  setup(props) {\n    const NSteps = inject(stepsInjectionKey, null);\n    if (!NSteps) throwError('step', '`n-step` must be placed inside `n-steps`.');\n    const {\n      inlineThemeDisabled\n    } = useConfig();\n    const {\n      props: stepsProps,\n      mergedThemeRef,\n      mergedClsPrefixRef,\n      stepsSlots\n    } = NSteps;\n    const verticalRef = computed(() => {\n      return stepsProps.vertical;\n    });\n    const mergedStatusRef = computed(() => {\n      const {\n        status\n      } = props;\n\n      if (status) {\n        return status;\n      } else {\n        const {\n          internalIndex\n        } = props;\n        const {\n          current\n        } = stepsProps;\n        if (current === undefined) return 'process';\n\n        if (internalIndex < current) {\n          return 'finish';\n        } else if (internalIndex === current) {\n          return stepsProps.status || 'process';\n        } else if (internalIndex > current) {\n          return 'wait';\n        }\n      }\n\n      return 'process';\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: status\n      } = mergedStatusRef;\n      const {\n        size\n      } = stepsProps;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          stepHeaderFontWeight,\n          [createKey('stepHeaderFontSize', size)]: stepHeaderFontSize,\n          [createKey('indicatorIndexFontSize', size)]: indicatorIndexFontSize,\n          [createKey('indicatorSize', size)]: indicatorSize,\n          [createKey('indicatorIconSize', size)]: indicatorIconSize,\n          [createKey('indicatorTextColor', status)]: indicatorTextColor,\n          [createKey('indicatorBorderColor', status)]: indicatorBorderColor,\n          [createKey('headerTextColor', status)]: headerTextColor,\n          [createKey('splitorColor', status)]: splitorColor,\n          [createKey('indicatorColor', status)]: indicatorColor,\n          [createKey('descriptionTextColor', status)]: descriptionTextColor\n        }\n      } = mergedThemeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-description-text-color': descriptionTextColor,\n        '--n-header-text-color': headerTextColor,\n        '--n-indicator-border-color': indicatorBorderColor,\n        '--n-indicator-color': indicatorColor,\n        '--n-indicator-icon-size': indicatorIconSize,\n        '--n-indicator-index-font-size': indicatorIndexFontSize,\n        '--n-indicator-size': indicatorSize,\n        '--n-indicator-text-color': indicatorTextColor,\n        '--n-splitor-color': splitorColor,\n        '--n-step-header-font-size': stepHeaderFontSize,\n        '--n-step-header-font-weight': stepHeaderFontWeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('step', computed(() => {\n      const {\n        value: status\n      } = mergedStatusRef;\n      const {\n        size\n      } = stepsProps;\n      return `${status[0]}${size[0]}`;\n    }), cssVarsRef, stepsProps) : undefined;\n    return {\n      stepsSlots,\n      mergedClsPrefix: mergedClsPrefixRef,\n      vertical: verticalRef,\n      mergedStatus: mergedStatusRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      onRender\n    } = this;\n    const descriptionNode = resolveWrappedSlot(this.$slots.default, children => {\n      const mergedDescription = children || this.description;\n\n      if (mergedDescription) {\n        return h(\"div\", {\n          class: `${mergedClsPrefix}-step-content__description`\n        }, mergedDescription);\n      }\n\n      return null;\n    });\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-step`, this.themeClass, descriptionNode && `${mergedClsPrefix}-step--show-description`, `${mergedClsPrefix}-step--${this.mergedStatus}-status`],\n      style: this.cssVars\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-step-indicator`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-step-indicator-slot`\n    }, h(NIconSwitchTransition, null, {\n      default: () => {\n        return resolveWrappedSlot(this.$slots.icon, icon => {\n          const {\n            mergedStatus,\n            stepsSlots\n          } = this;\n          return !(mergedStatus === 'finish' || mergedStatus === 'error') ? icon || h(\"div\", {\n            key: this.internalIndex,\n            class: `${mergedClsPrefix}-step-indicator-slot__index`\n          }, this.internalIndex) : mergedStatus === 'finish' ? h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            key: \"finish\"\n          }, {\n            default: () => resolveSlot(stepsSlots['finish-icon'], () => [h(FinishedIcon, null)])\n          }) : mergedStatus === 'error' ? h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            key: \"error\"\n          }, {\n            default: () => resolveSlot(stepsSlots['error-icon'], () => [h(ErrorIcon, null)])\n          }) : null;\n        });\n      }\n    })), this.vertical ? h(\"div\", {\n      class: `${mergedClsPrefix}-step-splitor`\n    }) : null), h(\"div\", {\n      class: `${mergedClsPrefix}-step-content`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-step-content-header`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-step-content-header__title`\n    }, resolveSlot(this.$slots.title, () => [this.title])), !this.vertical ? h(\"div\", {\n      class: `${mergedClsPrefix}-step-splitor`\n    }) : null), descriptionNode));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/steps/src/Step.js"],"names":["h","defineComponent","computed","inject","CheckmarkIcon","FinishedIcon","CloseIcon","ErrorIcon","NIconSwitchTransition","NBaseIcon","createKey","resolveSlot","resolveWrappedSlot","throwError","stepsInjectionKey","useConfig","useThemeClass","stepProps","status","String","title","description","internalIndex","type","Number","default","name","props","setup","NSteps","inlineThemeDisabled","stepsProps","mergedThemeRef","mergedClsPrefixRef","stepsSlots","verticalRef","vertical","mergedStatusRef","current","undefined","cssVarsRef","value","size","common","cubicBezierEaseInOut","self","stepHeaderFontWeight","stepHeaderFontSize","indicatorIndexFontSize","indicatorSize","indicatorIconSize","indicatorTextColor","indicatorBorderColor","headerTextColor","splitorColor","indicatorColor","descriptionTextColor","themeClassHandle","mergedClsPrefix","mergedStatus","cssVars","themeClass","onRender","render","descriptionNode","$slots","children","mergedDescription","class","style","icon","key","clsPrefix"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, inject } from 'vue';\nimport { CheckmarkIcon as FinishedIcon, CloseIcon as ErrorIcon } from '../../_internal/icons';\nimport { NIconSwitchTransition, NBaseIcon } from '../../_internal';\nimport { createKey, resolveSlot, resolveWrappedSlot, throwError } from '../../_utils';\nimport { stepsInjectionKey } from './Steps';\nimport { useConfig, useThemeClass } from '../../_mixins';\nconst stepProps = {\n    status: String,\n    title: String,\n    description: String,\n    // index will be filled by parent steps, not user\n    internalIndex: {\n        type: Number,\n        default: 0\n    }\n};\nexport default defineComponent({\n    name: 'Step',\n    props: stepProps,\n    setup(props) {\n        const NSteps = inject(stepsInjectionKey, null);\n        if (!NSteps)\n            throwError('step', '`n-step` must be placed inside `n-steps`.');\n        const { inlineThemeDisabled } = useConfig();\n        const { props: stepsProps, mergedThemeRef, mergedClsPrefixRef, stepsSlots } = NSteps;\n        const verticalRef = computed(() => {\n            return stepsProps.vertical;\n        });\n        const mergedStatusRef = computed(() => {\n            const { status } = props;\n            if (status) {\n                return status;\n            }\n            else {\n                const { internalIndex } = props;\n                const { current } = stepsProps;\n                if (current === undefined)\n                    return 'process';\n                if (internalIndex < current) {\n                    return 'finish';\n                }\n                else if (internalIndex === current) {\n                    return stepsProps.status || 'process';\n                }\n                else if (internalIndex > current) {\n                    return 'wait';\n                }\n            }\n            return 'process';\n        });\n        const cssVarsRef = computed(() => {\n            const { value: status } = mergedStatusRef;\n            const { size } = stepsProps;\n            const { common: { cubicBezierEaseInOut }, self: { stepHeaderFontWeight, [createKey('stepHeaderFontSize', size)]: stepHeaderFontSize, [createKey('indicatorIndexFontSize', size)]: indicatorIndexFontSize, [createKey('indicatorSize', size)]: indicatorSize, [createKey('indicatorIconSize', size)]: indicatorIconSize, [createKey('indicatorTextColor', status)]: indicatorTextColor, [createKey('indicatorBorderColor', status)]: indicatorBorderColor, [createKey('headerTextColor', status)]: headerTextColor, [createKey('splitorColor', status)]: splitorColor, [createKey('indicatorColor', status)]: indicatorColor, [createKey('descriptionTextColor', status)]: descriptionTextColor } } = mergedThemeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-description-text-color': descriptionTextColor,\n                '--n-header-text-color': headerTextColor,\n                '--n-indicator-border-color': indicatorBorderColor,\n                '--n-indicator-color': indicatorColor,\n                '--n-indicator-icon-size': indicatorIconSize,\n                '--n-indicator-index-font-size': indicatorIndexFontSize,\n                '--n-indicator-size': indicatorSize,\n                '--n-indicator-text-color': indicatorTextColor,\n                '--n-splitor-color': splitorColor,\n                '--n-step-header-font-size': stepHeaderFontSize,\n                '--n-step-header-font-weight': stepHeaderFontWeight\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('step', computed(() => {\n                const { value: status } = mergedStatusRef;\n                const { size } = stepsProps;\n                return `${status[0]}${size[0]}`;\n            }), cssVarsRef, stepsProps)\n            : undefined;\n        return {\n            stepsSlots,\n            mergedClsPrefix: mergedClsPrefixRef,\n            vertical: verticalRef,\n            mergedStatus: mergedStatusRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, onRender } = this;\n        const descriptionNode = resolveWrappedSlot(this.$slots.default, (children) => {\n            const mergedDescription = children || this.description;\n            if (mergedDescription) {\n                return (h(\"div\", { class: `${mergedClsPrefix}-step-content__description` }, mergedDescription));\n            }\n            return null;\n        });\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-step`,\n                this.themeClass,\n                descriptionNode && `${mergedClsPrefix}-step--show-description`,\n                `${mergedClsPrefix}-step--${this.mergedStatus}-status`\n            ], style: this.cssVars },\n            h(\"div\", { class: `${mergedClsPrefix}-step-indicator` },\n                h(\"div\", { class: `${mergedClsPrefix}-step-indicator-slot` },\n                    h(NIconSwitchTransition, null, {\n                        default: () => {\n                            return resolveWrappedSlot(this.$slots.icon, (icon) => {\n                                const { mergedStatus, stepsSlots } = this;\n                                return !(mergedStatus === 'finish' || mergedStatus === 'error') ? (icon || (h(\"div\", { key: this.internalIndex, class: `${mergedClsPrefix}-step-indicator-slot__index` }, this.internalIndex))) : mergedStatus === 'finish' ? (h(NBaseIcon, { clsPrefix: mergedClsPrefix, key: \"finish\" }, {\n                                    default: () => resolveSlot(stepsSlots['finish-icon'], () => [\n                                        h(FinishedIcon, null)\n                                    ])\n                                })) : mergedStatus === 'error' ? (h(NBaseIcon, { clsPrefix: mergedClsPrefix, key: \"error\" }, {\n                                    default: () => resolveSlot(stepsSlots['error-icon'], () => [\n                                        h(ErrorIcon, null)\n                                    ])\n                                })) : null;\n                            });\n                        }\n                    })),\n                this.vertical ? (h(\"div\", { class: `${mergedClsPrefix}-step-splitor` })) : null),\n            h(\"div\", { class: `${mergedClsPrefix}-step-content` },\n                h(\"div\", { class: `${mergedClsPrefix}-step-content-header` },\n                    h(\"div\", { class: `${mergedClsPrefix}-step-content-header__title` }, resolveSlot(this.$slots.title, () => [this.title])),\n                    !this.vertical ? (h(\"div\", { class: `${mergedClsPrefix}-step-splitor` })) : null),\n                descriptionNode)));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}