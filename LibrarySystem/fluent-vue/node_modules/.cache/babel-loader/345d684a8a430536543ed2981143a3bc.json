{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { h, defineComponent, computed, inject, ref, watchEffect } from 'vue';\nimport { CancelIcon, TrashIcon, AttachIcon, RetryIcon, DownloadIcon, EyeIcon } from '../../_internal/icons';\nimport { NButton } from '../../button';\nimport { NIconSwitchTransition, NBaseIcon } from '../../_internal';\nimport { warn } from '../../_utils';\nimport NUploadProgress from './UploadProgress';\nimport { uploadInjectionKey } from './interface';\nimport { imageIcon, documentIcon } from './icons';\nimport { environmentSupportFile, isImageFile } from './utils';\nimport { NImage } from '../../image';\nexport default defineComponent({\n  name: 'UploadFile',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    file: {\n      type: Object,\n      required: true\n    },\n    listType: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NUpload = inject(uploadInjectionKey);\n    const imageRef = ref(null);\n    const thumbnailUrlRef = ref('');\n    const progressStatusRef = computed(() => {\n      const {\n        file\n      } = props;\n      if (file.status === 'finished') return 'success';\n      if (file.status === 'error') return 'error';\n      return 'info';\n    });\n    const buttonTypeRef = computed(() => {\n      const {\n        file\n      } = props;\n      if (file.status === 'error') return 'error';\n      return undefined;\n    });\n    const showProgressRef = computed(() => {\n      const {\n        file\n      } = props;\n      return file.status === 'uploading';\n    });\n    const showCancelButtonRef = computed(() => {\n      if (!NUpload.showCancelButtonRef.value) return false;\n      const {\n        file\n      } = props;\n      return ['uploading', 'pending', 'error'].includes(file.status);\n    });\n    const showRemoveButtonRef = computed(() => {\n      if (!NUpload.showRemoveButtonRef.value) return false;\n      const {\n        file\n      } = props;\n      return ['finished'].includes(file.status);\n    });\n    const showDownloadButtonRef = computed(() => {\n      if (!NUpload.showDownloadButtonRef.value) return false;\n      const {\n        file\n      } = props;\n      return ['finished'].includes(file.status);\n    });\n    const showRetryButtonRef = computed(() => {\n      if (!NUpload.showRetryButtonRef.value) return false;\n      const {\n        file\n      } = props;\n      return ['error'].includes(file.status);\n    });\n    const showPreviewButtonRef = computed(() => {\n      if (!NUpload.showPreviewButtonRef.value) return false;\n      const {\n        file: {\n          status,\n          url\n        },\n        listType\n      } = props;\n      return ['finished'].includes(status) && (url || thumbnailUrlRef.value) && listType === 'image-card';\n    });\n\n    function handleRetryClick() {\n      NUpload.submit(props.file.id);\n    }\n\n    function handleRemoveOrCancelClick(e) {\n      e.preventDefault();\n      const {\n        file\n      } = props;\n\n      if (['finished', 'pending', 'error'].includes(file.status)) {\n        handleRemove(file);\n      } else if (['uploading'].includes(file.status)) {\n        handleAbort(file);\n      } else {\n        warn('upload', 'The button clicked type is unknown.');\n      }\n    }\n\n    function handleDownloadClick(e) {\n      e.preventDefault();\n      handleDownload(props.file);\n    }\n\n    function handleRemove(file) {\n      const {\n        XhrMap,\n        doChange,\n        onRemoveRef: {\n          value: onRemove\n        },\n        mergedFileListRef: {\n          value: mergedFileList\n        }\n      } = NUpload;\n      void Promise.resolve(onRemove ? onRemove({\n        file: Object.assign({}, file),\n        fileList: mergedFileList\n      }) : true).then(result => {\n        if (result === false) return;\n        const fileAfterChange = Object.assign({}, file, {\n          status: 'removed'\n        });\n        XhrMap.delete(file.id);\n        doChange(fileAfterChange, undefined, {\n          remove: true\n        });\n      });\n    }\n\n    function handleDownload(file) {\n      const {\n        onDownloadRef: {\n          value: onDownload\n        }\n      } = NUpload;\n      void Promise.resolve(onDownload ? onDownload(Object.assign({}, file)) : true).then(res => {\n        /** I haven't figure out its usage, so just leave it here */\n      });\n    }\n\n    function handleAbort(file) {\n      const {\n        XhrMap\n      } = NUpload;\n      const XHR = XhrMap.get(file.id);\n      XHR === null || XHR === void 0 ? void 0 : XHR.abort();\n      handleRemove(Object.assign({}, file));\n    }\n\n    function handlePreviewClick() {\n      const {\n        onPreviewRef: {\n          value: onPreview\n        }\n      } = NUpload;\n\n      if (onPreview) {\n        onPreview(props.file);\n      } else if (props.listType === 'image-card') {\n        const {\n          value\n        } = imageRef;\n        if (!value) return;\n        value.click();\n      }\n    }\n\n    const deriveFileThumbnailUrl = () => __awaiter(this, void 0, void 0, function* () {\n      const {\n        listType\n      } = props;\n\n      if (listType !== 'image' && listType !== 'image-card') {\n        return;\n      }\n\n      if (!environmentSupportFile || !(props.file.file instanceof File)) {\n        return;\n      }\n\n      thumbnailUrlRef.value = yield NUpload.getFileThumbnailUrl(props.file);\n    });\n\n    watchEffect(() => {\n      void deriveFileThumbnailUrl();\n    });\n    return {\n      mergedTheme: NUpload.mergedThemeRef,\n      progressStatus: progressStatusRef,\n      buttonType: buttonTypeRef,\n      showProgress: showProgressRef,\n      disabled: NUpload.mergedDisabledRef,\n      showCancelButton: showCancelButtonRef,\n      showRemoveButton: showRemoveButtonRef,\n      showDownloadButton: showDownloadButtonRef,\n      showRetryButton: showRetryButtonRef,\n      showPreviewButton: showPreviewButtonRef,\n      thumbnailUrl: thumbnailUrlRef,\n      imageRef,\n      handleRemoveOrCancelClick,\n      handleDownloadClick,\n      handleRetryClick,\n      handlePreviewClick\n    };\n  },\n\n  render() {\n    const {\n      clsPrefix,\n      mergedTheme,\n      listType,\n      file\n    } = this; // if there is text list type, show file icon\n\n    let icon;\n    const isImageType = listType === 'image';\n    const isImageCardType = listType === 'image-card';\n\n    if (isImageType || isImageCardType) {\n      icon = !isImageFile(file) ? h(\"span\", {\n        class: `${clsPrefix}-upload-file-info__thumbnail`\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => documentIcon\n      })) : (file.url || this.thumbnailUrl) && file.status !== 'error' ? h(\"a\", {\n        rel: \"noopener noreferer\",\n        target: \"_blank\",\n        href: file.url || undefined,\n        class: `${clsPrefix}-upload-file-info__thumbnail`,\n        onClick: this.handlePreviewClick\n      }, listType === 'image-card' ? h(NImage, {\n        src: this.thumbnailUrl || file.thumbnailUrl || file.url || undefined,\n        previewSrc: file.url || undefined,\n        alt: file.name,\n        ref: \"imageRef\"\n      }) : h(\"img\", {\n        src: this.thumbnailUrl || file.thumbnailUrl || file.url || undefined,\n        alt: file.name\n      })) : h(\"span\", {\n        class: `${clsPrefix}-upload-file-info__thumbnail`\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => imageIcon\n      }));\n    } else {\n      icon = h(\"span\", {\n        class: `${clsPrefix}-upload-file-info__thumbnail`\n      }, h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => h(AttachIcon, null)\n      }));\n    }\n\n    const progress = h(NUploadProgress, {\n      show: this.showProgress,\n      percentage: file.percentage || 0,\n      status: this.progressStatus\n    });\n    const showName = listType === 'text' || listType === 'image';\n    return h(\"div\", {\n      class: [`${clsPrefix}-upload-file`, `${clsPrefix}-upload-file--${this.progressStatus}-status`, file.url && file.status !== 'error' && listType !== 'image-card' && `${clsPrefix}-upload-file--with-url`, `${clsPrefix}-upload-file--${listType}-type`]\n    }, h(\"div\", {\n      class: `${clsPrefix}-upload-file-info`\n    }, icon, h(\"div\", {\n      class: `${clsPrefix}-upload-file-info__name`\n    }, showName && (file.url && file.status !== 'error' ? h(\"a\", {\n      rel: \"noopener noreferer\",\n      target: \"_blank\",\n      href: file.url || undefined,\n      onClick: this.handlePreviewClick\n    }, file.name) : h(\"span\", {\n      onClick: this.handlePreviewClick\n    }, file.name)), isImageType && progress), h(\"div\", {\n      class: [`${clsPrefix}-upload-file-info__action`, `${clsPrefix}-upload-file-info__action--${listType}-type`]\n    }, this.showPreviewButton ? h(NButton, {\n      key: \"preview\",\n      text: true,\n      type: this.buttonType,\n      onClick: this.handlePreviewClick,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button\n    }, {\n      icon: () => h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => h(EyeIcon, null)\n      })\n    }) : null, (this.showRemoveButton || this.showCancelButton) && !this.disabled && h(NButton, {\n      key: \"cancelOrTrash\",\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      text: true,\n      type: this.buttonType,\n      onClick: this.handleRemoveOrCancelClick\n    }, {\n      icon: () => h(NIconSwitchTransition, null, {\n        default: () => this.showRemoveButton ? h(NBaseIcon, {\n          clsPrefix: clsPrefix,\n          key: \"trash\"\n        }, {\n          default: () => h(TrashIcon, null)\n        }) : h(NBaseIcon, {\n          clsPrefix: clsPrefix,\n          key: \"cancel\"\n        }, {\n          default: () => h(CancelIcon, null)\n        })\n      })\n    }), this.showRetryButton && !this.disabled && h(NButton, {\n      key: \"retry\",\n      text: true,\n      type: this.buttonType,\n      onClick: this.handleRetryClick,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button\n    }, {\n      icon: () => h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => h(RetryIcon, null)\n      })\n    }), this.showDownloadButton ? h(NButton, {\n      key: \"download\",\n      text: true,\n      type: this.buttonType,\n      onClick: this.handleDownloadClick,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button\n    }, {\n      icon: () => h(NBaseIcon, {\n        clsPrefix: clsPrefix\n      }, {\n        default: () => h(DownloadIcon, null)\n      })\n    }) : null)), !isImageType && progress);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/upload/src/UploadFile.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","inject","ref","watchEffect","CancelIcon","TrashIcon","AttachIcon","RetryIcon","DownloadIcon","EyeIcon","NButton","NIconSwitchTransition","NBaseIcon","warn","NUploadProgress","uploadInjectionKey","imageIcon","documentIcon","environmentSupportFile","isImageFile","NImage","name","props","clsPrefix","type","String","required","file","Object","listType","setup","NUpload","imageRef","thumbnailUrlRef","progressStatusRef","status","buttonTypeRef","undefined","showProgressRef","showCancelButtonRef","includes","showRemoveButtonRef","showDownloadButtonRef","showRetryButtonRef","showPreviewButtonRef","url","handleRetryClick","submit","id","handleRemoveOrCancelClick","preventDefault","handleRemove","handleAbort","handleDownloadClick","handleDownload","XhrMap","doChange","onRemoveRef","onRemove","mergedFileListRef","mergedFileList","assign","fileList","fileAfterChange","delete","remove","onDownloadRef","onDownload","res","XHR","get","abort","handlePreviewClick","onPreviewRef","onPreview","click","deriveFileThumbnailUrl","File","getFileThumbnailUrl","mergedTheme","mergedThemeRef","progressStatus","buttonType","showProgress","disabled","mergedDisabledRef","showCancelButton","showRemoveButton","showDownloadButton","showRetryButton","showPreviewButton","thumbnailUrl","render","icon","isImageType","isImageCardType","class","default","rel","target","href","onClick","src","previewSrc","alt","progress","show","percentage","showName","key","text","theme","peers","Button","themeOverrides","peerOverrides"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, inject, ref, watchEffect } from 'vue';\nimport { CancelIcon, TrashIcon, AttachIcon, RetryIcon, DownloadIcon, EyeIcon } from '../../_internal/icons';\nimport { NButton } from '../../button';\nimport { NIconSwitchTransition, NBaseIcon } from '../../_internal';\nimport { warn } from '../../_utils';\nimport NUploadProgress from './UploadProgress';\nimport { uploadInjectionKey } from './interface';\nimport { imageIcon, documentIcon } from './icons';\nimport { environmentSupportFile, isImageFile } from './utils';\nimport { NImage } from '../../image';\nexport default defineComponent({\n    name: 'UploadFile',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        file: {\n            type: Object,\n            required: true\n        },\n        listType: {\n            type: String,\n            required: true\n        }\n    },\n    setup(props) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const NUpload = inject(uploadInjectionKey);\n        const imageRef = ref(null);\n        const thumbnailUrlRef = ref('');\n        const progressStatusRef = computed(() => {\n            const { file } = props;\n            if (file.status === 'finished')\n                return 'success';\n            if (file.status === 'error')\n                return 'error';\n            return 'info';\n        });\n        const buttonTypeRef = computed(() => {\n            const { file } = props;\n            if (file.status === 'error')\n                return 'error';\n            return undefined;\n        });\n        const showProgressRef = computed(() => {\n            const { file } = props;\n            return file.status === 'uploading';\n        });\n        const showCancelButtonRef = computed(() => {\n            if (!NUpload.showCancelButtonRef.value)\n                return false;\n            const { file } = props;\n            return ['uploading', 'pending', 'error'].includes(file.status);\n        });\n        const showRemoveButtonRef = computed(() => {\n            if (!NUpload.showRemoveButtonRef.value)\n                return false;\n            const { file } = props;\n            return ['finished'].includes(file.status);\n        });\n        const showDownloadButtonRef = computed(() => {\n            if (!NUpload.showDownloadButtonRef.value)\n                return false;\n            const { file } = props;\n            return ['finished'].includes(file.status);\n        });\n        const showRetryButtonRef = computed(() => {\n            if (!NUpload.showRetryButtonRef.value)\n                return false;\n            const { file } = props;\n            return ['error'].includes(file.status);\n        });\n        const showPreviewButtonRef = computed(() => {\n            if (!NUpload.showPreviewButtonRef.value)\n                return false;\n            const { file: { status, url }, listType } = props;\n            return (['finished'].includes(status) &&\n                (url || thumbnailUrlRef.value) &&\n                listType === 'image-card');\n        });\n        function handleRetryClick() {\n            NUpload.submit(props.file.id);\n        }\n        function handleRemoveOrCancelClick(e) {\n            e.preventDefault();\n            const { file } = props;\n            if (['finished', 'pending', 'error'].includes(file.status)) {\n                handleRemove(file);\n            }\n            else if (['uploading'].includes(file.status)) {\n                handleAbort(file);\n            }\n            else {\n                warn('upload', 'The button clicked type is unknown.');\n            }\n        }\n        function handleDownloadClick(e) {\n            e.preventDefault();\n            handleDownload(props.file);\n        }\n        function handleRemove(file) {\n            const { XhrMap, doChange, onRemoveRef: { value: onRemove }, mergedFileListRef: { value: mergedFileList } } = NUpload;\n            void Promise.resolve(onRemove\n                ? onRemove({\n                    file: Object.assign({}, file),\n                    fileList: mergedFileList\n                })\n                : true).then((result) => {\n                if (result === false)\n                    return;\n                const fileAfterChange = Object.assign({}, file, {\n                    status: 'removed'\n                });\n                XhrMap.delete(file.id);\n                doChange(fileAfterChange, undefined, {\n                    remove: true\n                });\n            });\n        }\n        function handleDownload(file) {\n            const { onDownloadRef: { value: onDownload } } = NUpload;\n            void Promise.resolve(onDownload ? onDownload(Object.assign({}, file)) : true).then((res) => {\n                /** I haven't figure out its usage, so just leave it here */\n            });\n        }\n        function handleAbort(file) {\n            const { XhrMap } = NUpload;\n            const XHR = XhrMap.get(file.id);\n            XHR === null || XHR === void 0 ? void 0 : XHR.abort();\n            handleRemove(Object.assign({}, file));\n        }\n        function handlePreviewClick() {\n            const { onPreviewRef: { value: onPreview } } = NUpload;\n            if (onPreview) {\n                onPreview(props.file);\n            }\n            else if (props.listType === 'image-card') {\n                const { value } = imageRef;\n                if (!value)\n                    return;\n                value.click();\n            }\n        }\n        const deriveFileThumbnailUrl = () => __awaiter(this, void 0, void 0, function* () {\n            const { listType } = props;\n            if (listType !== 'image' && listType !== 'image-card') {\n                return;\n            }\n            if (!environmentSupportFile || !(props.file.file instanceof File)) {\n                return;\n            }\n            thumbnailUrlRef.value = yield NUpload.getFileThumbnailUrl(props.file);\n        });\n        watchEffect(() => {\n            void deriveFileThumbnailUrl();\n        });\n        return {\n            mergedTheme: NUpload.mergedThemeRef,\n            progressStatus: progressStatusRef,\n            buttonType: buttonTypeRef,\n            showProgress: showProgressRef,\n            disabled: NUpload.mergedDisabledRef,\n            showCancelButton: showCancelButtonRef,\n            showRemoveButton: showRemoveButtonRef,\n            showDownloadButton: showDownloadButtonRef,\n            showRetryButton: showRetryButtonRef,\n            showPreviewButton: showPreviewButtonRef,\n            thumbnailUrl: thumbnailUrlRef,\n            imageRef,\n            handleRemoveOrCancelClick,\n            handleDownloadClick,\n            handleRetryClick,\n            handlePreviewClick\n        };\n    },\n    render() {\n        const { clsPrefix, mergedTheme, listType, file } = this;\n        // if there is text list type, show file icon\n        let icon;\n        const isImageType = listType === 'image';\n        const isImageCardType = listType === 'image-card';\n        if (isImageType || isImageCardType) {\n            icon = !isImageFile(file) ? (h(\"span\", { class: `${clsPrefix}-upload-file-info__thumbnail` },\n                h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => documentIcon }))) : (file.url || this.thumbnailUrl) && file.status !== 'error' ? (h(\"a\", { rel: \"noopener noreferer\", target: \"_blank\", href: file.url || undefined, class: `${clsPrefix}-upload-file-info__thumbnail`, onClick: this.handlePreviewClick }, listType === 'image-card' ? (h(NImage, { src: this.thumbnailUrl || file.thumbnailUrl || file.url || undefined, previewSrc: file.url || undefined, alt: file.name, ref: \"imageRef\" })) : (h(\"img\", { src: this.thumbnailUrl || file.thumbnailUrl || file.url || undefined, alt: file.name })))) : (h(\"span\", { class: `${clsPrefix}-upload-file-info__thumbnail` },\n                h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => imageIcon })));\n        }\n        else {\n            icon = (h(\"span\", { class: `${clsPrefix}-upload-file-info__thumbnail` },\n                h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => h(AttachIcon, null) })));\n        }\n        const progress = (h(NUploadProgress, { show: this.showProgress, percentage: file.percentage || 0, status: this.progressStatus }));\n        const showName = listType === 'text' || listType === 'image';\n        return (h(\"div\", { class: [\n                `${clsPrefix}-upload-file`,\n                `${clsPrefix}-upload-file--${this.progressStatus}-status`,\n                file.url &&\n                    file.status !== 'error' &&\n                    listType !== 'image-card' &&\n                    `${clsPrefix}-upload-file--with-url`,\n                `${clsPrefix}-upload-file--${listType}-type`\n            ] },\n            h(\"div\", { class: `${clsPrefix}-upload-file-info` },\n                icon,\n                h(\"div\", { class: `${clsPrefix}-upload-file-info__name` },\n                    showName &&\n                        (file.url && file.status !== 'error' ? (h(\"a\", { rel: \"noopener noreferer\", target: \"_blank\", href: file.url || undefined, onClick: this.handlePreviewClick }, file.name)) : (h(\"span\", { onClick: this.handlePreviewClick }, file.name))),\n                    isImageType && progress),\n                h(\"div\", { class: [\n                        `${clsPrefix}-upload-file-info__action`,\n                        `${clsPrefix}-upload-file-info__action--${listType}-type`\n                    ] },\n                    this.showPreviewButton ? (h(NButton, { key: \"preview\", text: true, type: this.buttonType, onClick: this.handlePreviewClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, {\n                        icon: () => (h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => h(EyeIcon, null) }))\n                    })) : null,\n                    (this.showRemoveButton || this.showCancelButton) &&\n                        !this.disabled && (h(NButton, { key: \"cancelOrTrash\", theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, text: true, type: this.buttonType, onClick: this.handleRemoveOrCancelClick }, {\n                        icon: () => (h(NIconSwitchTransition, null, {\n                            default: () => this.showRemoveButton ? (h(NBaseIcon, { clsPrefix: clsPrefix, key: \"trash\" }, { default: () => h(TrashIcon, null) })) : (h(NBaseIcon, { clsPrefix: clsPrefix, key: \"cancel\" }, { default: () => h(CancelIcon, null) }))\n                        }))\n                    })),\n                    this.showRetryButton && !this.disabled && (h(NButton, { key: \"retry\", text: true, type: this.buttonType, onClick: this.handleRetryClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, {\n                        icon: () => (h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => h(RetryIcon, null) }))\n                    })),\n                    this.showDownloadButton ? (h(NButton, { key: \"download\", text: true, type: this.buttonType, onClick: this.handleDownloadClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, {\n                        icon: () => (h(NBaseIcon, { clsPrefix: clsPrefix }, { default: () => h(DownloadIcon, null) }))\n                    })) : null)),\n            !isImageType && progress));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}