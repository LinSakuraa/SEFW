{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles/index';\nimport { bodyFont, controlCornerRadius, disabledOpacity, focusStrokeOuter, focusStrokeWidth, neutralFillStealthActive, neutralFillStealthHover, neutralForegroundHint, neutralForegroundRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight } from '../design-tokens';\nexport const menuItemStyles = (context, definition) => css`\n    ${display('grid')} :host {\n      contain: layout;\n      overflow: visible;\n      font-family: ${bodyFont};\n      outline: none;\n      box-sizing: border-box;\n      height: calc(${heightNumber} * 1px);\n      grid-template-columns: minmax(32px, auto) 1fr minmax(32px, auto);\n      grid-template-rows: auto;\n      justify-items: center;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid transparent;\n    }\n\n    :host(.indent-0) {\n      grid-template-columns: auto 1fr minmax(32px, auto);\n    }\n\n    :host(.indent-0) .content {\n      grid-column: 1;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-0) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) {\n      grid-template-columns: minmax(32px, auto) minmax(32px, auto) 1fr minmax(32px, auto) minmax(32px, auto);\n    }\n\n    :host(.indent-2) .content {\n      grid-column: 3;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-2) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) .start {\n      grid-column: 2;\n    }\n\n    :host(.indent-2) .end {\n      grid-column: 4;\n    }\n\n    :host(:${focusVisible}) {\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(:not([disabled]):hover) {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host(:not([disabled]):active),\n    :host(.expanded) {\n      background: ${neutralFillStealthActive};\n      color: ${neutralForegroundRest};\n    }\n\n    :host([disabled]) {\n      cursor: ${disabledCursor};\n      opacity: ${disabledOpacity};\n    }\n\n    .content {\n      grid-column-start: 2;\n      justify-self: start;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      justify-content: center;\n    }\n\n    :host(.indent-0[aria-haspopup='menu']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-1[aria-haspopup='menu']),\n    :host(.indent-1[role='menuitemcheckbox']),\n    :host(.indent-1[role='menuitemradio']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-2:not([aria-haspopup='menu'])) .end {\n      grid-column: 5;\n    }\n\n    :host .input-container,\n    :host .expand-collapse-glyph-container {\n      display: none;\n    }\n\n    :host([aria-haspopup='menu']) .expand-collapse-glyph-container,\n    :host([role='menuitemcheckbox']) .input-container,\n    :host([role='menuitemradio']) .input-container {\n      display: grid;\n    }\n\n    :host([aria-haspopup='menu']) .content,\n    :host([role='menuitemcheckbox']) .content,\n    :host([role='menuitemradio']) .content {\n      grid-column-start: 3;\n    }\n\n    :host([aria-haspopup='menu'].indent-0) .content {\n      grid-column-start: 1;\n    }\n\n    :host([aria-haspopup='menu']) .end,\n    :host([role='menuitemcheckbox']) .end,\n    :host([role='menuitemradio']) .end {\n      grid-column-start: 4;\n    }\n\n    :host .expand-collapse,\n    :host .checkbox,\n    :host .radio {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      box-sizing: border-box;\n      outline: none;\n    }\n\n    :host .checkbox-indicator,\n    :host .radio-indicator,\n    slot[name='checkbox-indicator'],\n    slot[name='radio-indicator'] {\n      display: none;\n    }\n\n    ::slotted([slot='end']:not(svg)) {\n      margin-inline-end: 10px;\n      color: ${neutralForegroundHint};\n    }\n\n    :host([aria-checked='true']) .checkbox-indicator,\n    :host([aria-checked='true']) slot[name='checkbox-indicator'],\n    :host([aria-checked='true']) .radio-indicator,\n    :host([aria-checked='true']) slot[name='radio-indicator'] {\n      display: flex;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host,\n        ::slotted([slot='end']:not(svg)) {\n          forced-color-adjust: none;\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host(:not([disabled]):hover) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(:hover) .start,\n        :host(:hover) .end,\n        :host(:hover)::slotted(svg),\n        :host(:active) .start,\n        :host(:active) .end,\n        :host(:active)::slotted(svg),\n        :host(:hover) ::slotted([slot='end']:not(svg)),\n        :host(:${focusVisible}) ::slotted([slot='end']:not(svg)) {\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(.expanded) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host(:${focusVisible}) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.ButtonText};\n          box-shadow: 0 0 0 calc(${strokeWidth} * 1px) inset ${SystemColors.HighlightText};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([disabled]),\n        :host([disabled]:hover),\n        :host([disabled]:hover) .start,\n        :host([disabled]:hover) .end,\n        :host([disabled]:hover)::slotted(svg),\n        :host([disabled]:${focusVisible}) {\n          background: ${SystemColors.ButtonFace};\n          color: ${SystemColors.GrayText};\n          fill: currentcolor;\n          opacity: 1;\n        }\n        :host([disabled]:${focusVisible}) {\n          border-color: ${SystemColors.GrayText};\n        }\n        :host .expanded-toggle,\n        :host .checkbox,\n        :host .radio {\n          border-color: ${SystemColors.ButtonText};\n          background: ${SystemColors.HighlightText};\n        }\n        :host([checked]) .checkbox,\n        :host([checked]) .radio {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host(:hover) .expanded-toggle,\n            :host(:hover) .checkbox,\n            :host(:hover) .radio,\n            :host(:${focusVisible}) .expanded-toggle,\n            :host(:${focusVisible}) .checkbox,\n            :host(:${focusVisible}) .radio,\n            :host([checked]:hover) .checkbox,\n            :host([checked]:hover) .radio,\n            :host([checked]:${focusVisible}) .checkbox,\n            :host([checked]:${focusVisible}) .radio {\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) .checkbox-indicator,\n        :host([aria-checked='true']) ::slotted([slot='checkbox-indicator']),\n        :host([aria-checked='true']) ::slotted([slot='radio-indicator']) {\n          fill: ${SystemColors.Highlight};\n        }\n        :host([aria-checked='true']) .radio-indicator {\n          background: ${SystemColors.Highlight};\n        }\n      `), new DirectionalStyleSheetBehavior(css`\n        .expand-collapse-glyph-container {\n          transform: rotate(0deg);\n        }\n      `, css`\n        .expand-collapse-glyph-container {\n          transform: rotate(180deg);\n        }\n      `));","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/menu-item/menu-item.styles.js"],"names":["css","disabledCursor","display","focusVisible","forcedColorsStylesheetBehavior","SystemColors","DirectionalStyleSheetBehavior","heightNumber","bodyFont","controlCornerRadius","disabledOpacity","focusStrokeOuter","focusStrokeWidth","neutralFillStealthActive","neutralFillStealthHover","neutralForegroundHint","neutralForegroundRest","strokeWidth","typeRampBaseFontSize","typeRampBaseLineHeight","menuItemStyles","context","definition","withBehaviors","ButtonText","Highlight","HighlightText","ButtonFace","GrayText"],"mappings":"AAAA,SAASA,GAAT,QAAoB,yBAApB;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,YAAlC,EAAgDC,8BAAhD,QAAuF,4BAAvF;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,6BAAT,EAAwCC,YAAxC,QAA4D,iBAA5D;AACA,SAASC,QAAT,EAAmBC,mBAAnB,EAAwCC,eAAxC,EAAyDC,gBAAzD,EAA2EC,gBAA3E,EAA6FC,wBAA7F,EAAuHC,uBAAvH,EAAgJC,qBAAhJ,EAAuKC,qBAAvK,EAA8LC,WAA9L,EAA2MC,oBAA3M,EAAiOC,sBAAjO,QAAgQ,kBAAhQ;AACA,OAAO,MAAMC,cAAc,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyBtB,GAAK;AAC5D,MAAME,OAAO,CAAC,MAAD,CAAS;AACtB;AACA;AACA,qBAAqBM,QAAS;AAC9B;AACA;AACA,qBAAqBD,YAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAeS,qBAAsB;AACrC;AACA;AACA,mBAAmBE,oBAAqB;AACxC,qBAAqBC,sBAAuB;AAC5C,4BAA4BV,mBAAoB;AAChD,qBAAqBQ,WAAY;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAad,YAAa;AAC1B,qBAAqBc,WAAY,iBAAgBN,gBAAiB;AAClE,gCAAgCC,gBAAiB,MAAKK,WAAY,YAAWN,gBAAiB;AAC9F;AACA;AACA;AACA,oBAAoBG,uBAAwB;AAC5C;AACA;AACA;AACA;AACA,oBAAoBD,wBAAyB;AAC7C,eAAeG,qBAAsB;AACrC;AACA;AACA;AACA,gBAAgBf,cAAe;AAC/B,iBAAiBS,eAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeK,qBAAsB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1KuD,CA0KnDQ,aA1KmD,CA0KrCnB,8BAA8B,CAACJ,GAAK;AACtD;AACA;AACA;AACA,mBAAmBK,YAAY,CAACmB,UAAW;AAC3C;AACA;AACA;AACA,wBAAwBnB,YAAY,CAACoB,SAAU;AAC/C,mBAAmBpB,YAAY,CAACqB,aAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiBvB,YAAa;AAC9B,mBAAmBE,YAAY,CAACqB,aAAc;AAC9C;AACA;AACA;AACA,wBAAwBrB,YAAY,CAACoB,SAAU;AAC/C,0BAA0BpB,YAAY,CAACoB,SAAU;AACjD,mBAAmBpB,YAAY,CAACqB,aAAc;AAC9C;AACA,iBAAiBvB,YAAa;AAC9B,wBAAwBE,YAAY,CAACoB,SAAU;AAC/C,0BAA0BpB,YAAY,CAACmB,UAAW;AAClD,mCAAmCP,WAAY,iBAAgBZ,YAAY,CAACqB,aAAc;AAC1F,mBAAmBrB,YAAY,CAACqB,aAAc;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2BvB,YAAa;AACxC,wBAAwBE,YAAY,CAACsB,UAAW;AAChD,mBAAmBtB,YAAY,CAACuB,QAAS;AACzC;AACA;AACA;AACA,2BAA2BzB,YAAa;AACxC,0BAA0BE,YAAY,CAACuB,QAAS;AAChD;AACA;AACA;AACA;AACA,0BAA0BvB,YAAY,CAACmB,UAAW;AAClD,wBAAwBnB,YAAY,CAACqB,aAAc;AACnD;AACA;AACA;AACA,wBAAwBrB,YAAY,CAACqB,aAAc;AACnD,0BAA0BrB,YAAY,CAACqB,aAAc;AACrD;AACA;AACA;AACA;AACA,qBAAqBvB,YAAa;AAClC,qBAAqBA,YAAa;AAClC,qBAAqBA,YAAa;AAClC;AACA;AACA,8BAA8BA,YAAa;AAC3C,8BAA8BA,YAAa;AAC3C,0BAA0BE,YAAY,CAACqB,aAAc;AACrD;AACA;AACA,wBAAwBrB,YAAY,CAACoB,SAAU;AAC/C,mBAAmBpB,YAAY,CAACqB,aAAc;AAC9C;AACA;AACA;AACA;AACA,kBAAkBrB,YAAY,CAACoB,SAAU;AACzC;AACA;AACA,wBAAwBpB,YAAY,CAACoB,SAAU;AAC/C;AACA,OApFgD,CA1KO,EA8P7C,IAAInB,6BAAJ,CAAkCN,GAAK;AACjD;AACA;AACA;AACA,OAJU,EAIDA,GAAK;AACd;AACA;AACA;AACA,OARU,CA9P6C,CAAhD","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles/index';\nimport { bodyFont, controlCornerRadius, disabledOpacity, focusStrokeOuter, focusStrokeWidth, neutralFillStealthActive, neutralFillStealthHover, neutralForegroundHint, neutralForegroundRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../design-tokens';\nexport const menuItemStyles = (context, definition) => css `\n    ${display('grid')} :host {\n      contain: layout;\n      overflow: visible;\n      font-family: ${bodyFont};\n      outline: none;\n      box-sizing: border-box;\n      height: calc(${heightNumber} * 1px);\n      grid-template-columns: minmax(32px, auto) 1fr minmax(32px, auto);\n      grid-template-rows: auto;\n      justify-items: center;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      border: calc(${strokeWidth} * 1px) solid transparent;\n    }\n\n    :host(.indent-0) {\n      grid-template-columns: auto 1fr minmax(32px, auto);\n    }\n\n    :host(.indent-0) .content {\n      grid-column: 1;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-0) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) {\n      grid-template-columns: minmax(32px, auto) minmax(32px, auto) 1fr minmax(32px, auto) minmax(32px, auto);\n    }\n\n    :host(.indent-2) .content {\n      grid-column: 3;\n      grid-row: 1;\n      margin-inline-start: 10px;\n    }\n\n    :host(.indent-2) .expand-collapse-glyph-container {\n      grid-column: 5;\n      grid-row: 1;\n    }\n\n    :host(.indent-2) .start {\n      grid-column: 2;\n    }\n\n    :host(.indent-2) .end {\n      grid-column: 4;\n    }\n\n    :host(:${focusVisible}) {\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(:not([disabled]):hover) {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host(:not([disabled]):active),\n    :host(.expanded) {\n      background: ${neutralFillStealthActive};\n      color: ${neutralForegroundRest};\n    }\n\n    :host([disabled]) {\n      cursor: ${disabledCursor};\n      opacity: ${disabledOpacity};\n    }\n\n    .content {\n      grid-column-start: 2;\n      justify-self: start;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      justify-content: center;\n    }\n\n    :host(.indent-0[aria-haspopup='menu']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-1[aria-haspopup='menu']),\n    :host(.indent-1[role='menuitemcheckbox']),\n    :host(.indent-1[role='menuitemradio']) {\n      display: grid;\n      grid-template-columns: minmax(32px, auto) auto 1fr minmax(32px, auto) minmax(32px, auto);\n      align-items: center;\n      min-height: 32px;\n    }\n\n    :host(.indent-2:not([aria-haspopup='menu'])) .end {\n      grid-column: 5;\n    }\n\n    :host .input-container,\n    :host .expand-collapse-glyph-container {\n      display: none;\n    }\n\n    :host([aria-haspopup='menu']) .expand-collapse-glyph-container,\n    :host([role='menuitemcheckbox']) .input-container,\n    :host([role='menuitemradio']) .input-container {\n      display: grid;\n    }\n\n    :host([aria-haspopup='menu']) .content,\n    :host([role='menuitemcheckbox']) .content,\n    :host([role='menuitemradio']) .content {\n      grid-column-start: 3;\n    }\n\n    :host([aria-haspopup='menu'].indent-0) .content {\n      grid-column-start: 1;\n    }\n\n    :host([aria-haspopup='menu']) .end,\n    :host([role='menuitemcheckbox']) .end,\n    :host([role='menuitemradio']) .end {\n      grid-column-start: 4;\n    }\n\n    :host .expand-collapse,\n    :host .checkbox,\n    :host .radio {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      position: relative;\n      box-sizing: border-box;\n      outline: none;\n    }\n\n    :host .checkbox-indicator,\n    :host .radio-indicator,\n    slot[name='checkbox-indicator'],\n    slot[name='radio-indicator'] {\n      display: none;\n    }\n\n    ::slotted([slot='end']:not(svg)) {\n      margin-inline-end: 10px;\n      color: ${neutralForegroundHint};\n    }\n\n    :host([aria-checked='true']) .checkbox-indicator,\n    :host([aria-checked='true']) slot[name='checkbox-indicator'],\n    :host([aria-checked='true']) .radio-indicator,\n    :host([aria-checked='true']) slot[name='radio-indicator'] {\n      display: flex;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host,\n        ::slotted([slot='end']:not(svg)) {\n          forced-color-adjust: none;\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host(:not([disabled]):hover) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(:hover) .start,\n        :host(:hover) .end,\n        :host(:hover)::slotted(svg),\n        :host(:active) .start,\n        :host(:active) .end,\n        :host(:active)::slotted(svg),\n        :host(:hover) ::slotted([slot='end']:not(svg)),\n        :host(:${focusVisible}) ::slotted([slot='end']:not(svg)) {\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host(.expanded) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host(:${focusVisible}) {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.ButtonText};\n          box-shadow: 0 0 0 calc(${strokeWidth} * 1px) inset ${SystemColors.HighlightText};\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([disabled]),\n        :host([disabled]:hover),\n        :host([disabled]:hover) .start,\n        :host([disabled]:hover) .end,\n        :host([disabled]:hover)::slotted(svg),\n        :host([disabled]:${focusVisible}) {\n          background: ${SystemColors.ButtonFace};\n          color: ${SystemColors.GrayText};\n          fill: currentcolor;\n          opacity: 1;\n        }\n        :host([disabled]:${focusVisible}) {\n          border-color: ${SystemColors.GrayText};\n        }\n        :host .expanded-toggle,\n        :host .checkbox,\n        :host .radio {\n          border-color: ${SystemColors.ButtonText};\n          background: ${SystemColors.HighlightText};\n        }\n        :host([checked]) .checkbox,\n        :host([checked]) .radio {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host(:hover) .expanded-toggle,\n            :host(:hover) .checkbox,\n            :host(:hover) .radio,\n            :host(:${focusVisible}) .expanded-toggle,\n            :host(:${focusVisible}) .checkbox,\n            :host(:${focusVisible}) .radio,\n            :host([checked]:hover) .checkbox,\n            :host([checked]:hover) .radio,\n            :host([checked]:${focusVisible}) .checkbox,\n            :host([checked]:${focusVisible}) .radio {\n          border-color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) {\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host([aria-checked='true']) .checkbox-indicator,\n        :host([aria-checked='true']) ::slotted([slot='checkbox-indicator']),\n        :host([aria-checked='true']) ::slotted([slot='radio-indicator']) {\n          fill: ${SystemColors.Highlight};\n        }\n        :host([aria-checked='true']) .radio-indicator {\n          background: ${SystemColors.Highlight};\n        }\n      `), new DirectionalStyleSheetBehavior(css `\n        .expand-collapse-glyph-container {\n          transform: rotate(0deg);\n        }\n      `, css `\n        .expand-collapse-glyph-container {\n          transform: rotate(180deg);\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}