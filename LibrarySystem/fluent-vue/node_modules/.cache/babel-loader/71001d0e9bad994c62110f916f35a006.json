{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, ref, defineComponent, inject, computed, watchEffect } from 'vue';\nimport { formatLength } from '../../_utils';\nimport TableHeader from './TableParts/Header';\nimport TableBody from './TableParts/Body';\nimport { dataTableInjectionKey } from './interface';\nexport default defineComponent({\n  setup() {\n    const {\n      mergedClsPrefixRef,\n      rightFixedColumnsRef,\n      leftFixedColumnsRef,\n      bodyWidthRef,\n      maxHeightRef,\n      minHeightRef,\n      flexHeightRef,\n      syncScrollState // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(dataTableInjectionKey);\n    const headerInstRef = ref(null);\n    const bodyInstRef = ref(null);\n    const selfElRef = ref(null);\n    const fixedStateInitializedRef = ref(!(leftFixedColumnsRef.value.length || rightFixedColumnsRef.value.length));\n    const bodyStyleRef = computed(() => {\n      return {\n        maxHeight: formatLength(maxHeightRef.value),\n        minHeight: formatLength(minHeightRef.value)\n      };\n    });\n\n    function handleBodyResize(entry) {\n      bodyWidthRef.value = entry.contentRect.width;\n      syncScrollState();\n\n      if (!fixedStateInitializedRef.value) {\n        fixedStateInitializedRef.value = true;\n      }\n    }\n\n    function getHeaderElement() {\n      const {\n        value\n      } = headerInstRef;\n\n      if (value) {\n        return value.$el;\n      }\n\n      return null;\n    }\n\n    function getBodyElement() {\n      const {\n        value\n      } = bodyInstRef;\n\n      if (value) {\n        return value.getScrollContainer();\n      }\n\n      return null;\n    }\n\n    const exposedMethods = {\n      getBodyElement,\n      getHeaderElement\n    };\n    watchEffect(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      if (!selfEl) return;\n      const transitionDisabledClass = `${mergedClsPrefixRef.value}-data-table-base-table--transition-disabled`;\n\n      if (fixedStateInitializedRef.value) {\n        setTimeout(() => {\n          selfEl.classList.remove(transitionDisabledClass);\n        }, 0);\n      } else {\n        selfEl.classList.add(transitionDisabledClass);\n      }\n    });\n    return Object.assign({\n      maxHeight: maxHeightRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      selfElRef,\n      headerInstRef,\n      bodyInstRef,\n      bodyStyle: bodyStyleRef,\n      flexHeight: flexHeightRef,\n      handleBodyResize\n    }, exposedMethods);\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      maxHeight,\n      flexHeight\n    } = this;\n    const headerInBody = maxHeight === undefined && !flexHeight;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-data-table-base-table`,\n      ref: \"selfElRef\"\n    }, headerInBody ? null : h(TableHeader, {\n      ref: \"headerInstRef\"\n    }), h(TableBody, {\n      ref: \"bodyInstRef\",\n      bodyStyle: this.bodyStyle,\n      showHeader: headerInBody,\n      flexHeight: flexHeight,\n      onResize: this.handleBodyResize\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/data-table/src/MainTable.js"],"names":["h","ref","defineComponent","inject","computed","watchEffect","formatLength","TableHeader","TableBody","dataTableInjectionKey","setup","mergedClsPrefixRef","rightFixedColumnsRef","leftFixedColumnsRef","bodyWidthRef","maxHeightRef","minHeightRef","flexHeightRef","syncScrollState","headerInstRef","bodyInstRef","selfElRef","fixedStateInitializedRef","value","length","bodyStyleRef","maxHeight","minHeight","handleBodyResize","entry","contentRect","width","getHeaderElement","$el","getBodyElement","getScrollContainer","exposedMethods","selfEl","transitionDisabledClass","setTimeout","classList","remove","add","Object","assign","mergedClsPrefix","bodyStyle","flexHeight","render","headerInBody","undefined","class","showHeader","onResize"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { h, ref, defineComponent, inject, computed, watchEffect } from 'vue';\nimport { formatLength } from '../../_utils';\nimport TableHeader from './TableParts/Header';\nimport TableBody from './TableParts/Body';\nimport { dataTableInjectionKey } from './interface';\nexport default defineComponent({\n    setup() {\n        const { mergedClsPrefixRef, rightFixedColumnsRef, leftFixedColumnsRef, bodyWidthRef, maxHeightRef, minHeightRef, flexHeightRef, syncScrollState\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dataTableInjectionKey);\n        const headerInstRef = ref(null);\n        const bodyInstRef = ref(null);\n        const selfElRef = ref(null);\n        const fixedStateInitializedRef = ref(!(leftFixedColumnsRef.value.length || rightFixedColumnsRef.value.length));\n        const bodyStyleRef = computed(() => {\n            return {\n                maxHeight: formatLength(maxHeightRef.value),\n                minHeight: formatLength(minHeightRef.value)\n            };\n        });\n        function handleBodyResize(entry) {\n            bodyWidthRef.value = entry.contentRect.width;\n            syncScrollState();\n            if (!fixedStateInitializedRef.value) {\n                fixedStateInitializedRef.value = true;\n            }\n        }\n        function getHeaderElement() {\n            const { value } = headerInstRef;\n            if (value) {\n                return value.$el;\n            }\n            return null;\n        }\n        function getBodyElement() {\n            const { value } = bodyInstRef;\n            if (value) {\n                return value.getScrollContainer();\n            }\n            return null;\n        }\n        const exposedMethods = {\n            getBodyElement,\n            getHeaderElement\n        };\n        watchEffect(() => {\n            const { value: selfEl } = selfElRef;\n            if (!selfEl)\n                return;\n            const transitionDisabledClass = `${mergedClsPrefixRef.value}-data-table-base-table--transition-disabled`;\n            if (fixedStateInitializedRef.value) {\n                setTimeout(() => {\n                    selfEl.classList.remove(transitionDisabledClass);\n                }, 0);\n            }\n            else {\n                selfEl.classList.add(transitionDisabledClass);\n            }\n        });\n        return Object.assign({ maxHeight: maxHeightRef, mergedClsPrefix: mergedClsPrefixRef, selfElRef,\n            headerInstRef,\n            bodyInstRef, bodyStyle: bodyStyleRef, flexHeight: flexHeightRef, handleBodyResize }, exposedMethods);\n    },\n    render() {\n        const { mergedClsPrefix, maxHeight, flexHeight } = this;\n        const headerInBody = maxHeight === undefined && !flexHeight;\n        return (h(\"div\", { class: `${mergedClsPrefix}-data-table-base-table`, ref: \"selfElRef\" },\n            headerInBody ? null : h(TableHeader, { ref: \"headerInstRef\" }),\n            h(TableBody, { ref: \"bodyInstRef\", bodyStyle: this.bodyStyle, showHeader: headerInBody, flexHeight: flexHeight, onResize: this.handleBodyResize })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}