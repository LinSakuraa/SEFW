{"ast":null,"code":"import { defineComponent, computed, h } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, formatLength, useHoudini } from '../../_utils';\nimport { gradientTextLight } from '../styles';\nimport style from './styles/index.cssr';\nconst gradientTextProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: [String, Number],\n  fontSize: [String, Number],\n  type: {\n    type: String,\n    default: 'primary'\n  },\n  color: [Object, String],\n  gradient: [Object, String]\n});\nexport default defineComponent({\n  name: 'GradientText',\n  props: gradientTextProps,\n\n  setup(props) {\n    useHoudini();\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const compatibleTypeRef = computed(() => {\n      const {\n        type\n      } = props;\n      if (type === 'danger') return 'error';\n      return type;\n    });\n    const styleFontSizeRef = computed(() => {\n      let fontSize = props.size || props.fontSize;\n      if (fontSize) fontSize = formatLength(fontSize);\n      return fontSize || undefined;\n    });\n    const styleBgImageRef = computed(() => {\n      const gradient = props.color || props.gradient;\n\n      if (typeof gradient === 'string') {\n        return gradient;\n      } else if (gradient) {\n        const deg = gradient.deg || 0;\n        const from = gradient.from;\n        const to = gradient.to;\n        return `linear-gradient(${deg}deg, ${from} 0%, ${to} 100%)`;\n      }\n\n      return undefined;\n    });\n    const themeRef = useTheme('GradientText', '-gradient-text', style, gradientTextLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: type\n      } = compatibleTypeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          rotate,\n          [createKey('colorStart', type)]: colorStart,\n          [createKey('colorEnd', type)]: colorEnd,\n          fontWeight\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-rotate': rotate,\n        '--n-color-start': colorStart,\n        '--n-color-end': colorEnd,\n        '--n-font-weight': fontWeight\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('gradient-text', computed(() => compatibleTypeRef.value[0]), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      compatibleType: compatibleTypeRef,\n      styleFontSize: styleFontSizeRef,\n      styleBgImage: styleBgImageRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"span\", {\n      class: [`${mergedClsPrefix}-gradient-text`, `${mergedClsPrefix}-gradient-text--${this.compatibleType}-type`, this.themeClass],\n      style: [{\n        fontSize: this.styleFontSize,\n        backgroundImage: this.styleBgImage\n      }, this.cssVars]\n    }, this.$slots);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/gradient-text/src/GradientText.js"],"names":["defineComponent","computed","h","useConfig","useTheme","useThemeClass","createKey","formatLength","useHoudini","gradientTextLight","style","gradientTextProps","Object","assign","props","size","String","Number","fontSize","type","default","color","gradient","name","setup","mergedClsPrefixRef","inlineThemeDisabled","compatibleTypeRef","styleFontSizeRef","undefined","styleBgImageRef","deg","from","to","themeRef","cssVarsRef","value","common","cubicBezierEaseInOut","self","rotate","colorStart","colorEnd","fontWeight","themeClassHandle","mergedClsPrefix","compatibleType","styleFontSize","styleBgImage","cssVars","themeClass","onRender","render","class","backgroundImage","$slots"],"mappings":"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","sourcesContent":["import { defineComponent, computed, h } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, formatLength, useHoudini } from '../../_utils';\nimport { gradientTextLight } from '../styles';\nimport style from './styles/index.cssr';\nconst gradientTextProps = Object.assign(Object.assign({}, useTheme.props), { size: [String, Number], fontSize: [String, Number], type: {\n        type: String,\n        default: 'primary'\n    }, color: [Object, String], gradient: [Object, String] });\nexport default defineComponent({\n    name: 'GradientText',\n    props: gradientTextProps,\n    setup(props) {\n        useHoudini();\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const compatibleTypeRef = computed(() => {\n            const { type } = props;\n            if (type === 'danger')\n                return 'error';\n            return type;\n        });\n        const styleFontSizeRef = computed(() => {\n            let fontSize = props.size || props.fontSize;\n            if (fontSize)\n                fontSize = formatLength(fontSize);\n            return fontSize || undefined;\n        });\n        const styleBgImageRef = computed(() => {\n            const gradient = props.color || props.gradient;\n            if (typeof gradient === 'string') {\n                return gradient;\n            }\n            else if (gradient) {\n                const deg = gradient.deg || 0;\n                const from = gradient.from;\n                const to = gradient.to;\n                return `linear-gradient(${deg}deg, ${from} 0%, ${to} 100%)`;\n            }\n            return undefined;\n        });\n        const themeRef = useTheme('GradientText', '-gradient-text', style, gradientTextLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: type } = compatibleTypeRef;\n            const { common: { cubicBezierEaseInOut }, self: { rotate, [createKey('colorStart', type)]: colorStart, [createKey('colorEnd', type)]: colorEnd, fontWeight } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-rotate': rotate,\n                '--n-color-start': colorStart,\n                '--n-color-end': colorEnd,\n                '--n-font-weight': fontWeight\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('gradient-text', computed(() => compatibleTypeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            compatibleType: compatibleTypeRef,\n            styleFontSize: styleFontSizeRef,\n            styleBgImage: styleBgImageRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"span\", { class: [\n                `${mergedClsPrefix}-gradient-text`,\n                `${mergedClsPrefix}-gradient-text--${this.compatibleType}-type`,\n                this.themeClass\n            ], style: [\n                {\n                    fontSize: this.styleFontSize,\n                    backgroundImage: this.styleBgImage\n                },\n                this.cssVars\n            ] }, this.$slots));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}