{"ast":null,"code":"import { h, defineComponent, inject, computed, mergeProps, Fragment } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseClose, NBaseIcon } from '../../_internal';\nimport { render, omit } from '../../_utils';\nimport { tabsInjectionKey } from './interface';\nimport { tabPaneProps } from './TabPane';\nconst typeProps = Object.assign({\n  internalLeftPadded: Boolean,\n  internalAddable: Boolean,\n  internalCreatedByPane: Boolean\n}, omit(tabPaneProps, ['displayDirective']));\nexport default defineComponent({\n  __TAB__: true,\n  inheritAttrs: false,\n  name: 'Tab',\n  props: typeProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      valueRef,\n      typeRef,\n      closableRef,\n      tabStyleRef,\n      tabChangeIdRef,\n      onBeforeLeaveRef,\n      triggerRef,\n      handleAdd,\n      activateTab,\n      handleClose // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(tabsInjectionKey);\n    return {\n      trigger: triggerRef,\n      mergedClosable: computed(() => {\n        if (props.internalAddable) return false;\n        const {\n          closable\n        } = props;\n        if (closable === undefined) return closableRef.value;\n        return closable;\n      }),\n      style: tabStyleRef,\n      clsPrefix: mergedClsPrefixRef,\n      value: valueRef,\n      type: typeRef,\n\n      handleClose(e) {\n        e.stopPropagation();\n        if (props.disabled) return;\n        handleClose(props.name);\n      },\n\n      activateTab() {\n        if (props.disabled) return;\n\n        if (props.internalAddable) {\n          handleAdd();\n          return;\n        }\n\n        const {\n          name: nameProp\n        } = props;\n        const id = ++tabChangeIdRef.id;\n\n        if (nameProp !== valueRef.value) {\n          const {\n            value: onBeforeLeave\n          } = onBeforeLeaveRef;\n\n          if (!onBeforeLeave) {\n            activateTab(nameProp);\n          } else {\n            void Promise.resolve(onBeforeLeave(props.name, valueRef.value)).then(allowLeave => {\n              if (allowLeave && tabChangeIdRef.id === id) {\n                activateTab(nameProp);\n              }\n            });\n          }\n        }\n      }\n\n    };\n  },\n\n  render() {\n    const {\n      internalAddable,\n      clsPrefix,\n      name,\n      disabled,\n      label,\n      tab,\n      value,\n      mergedClosable,\n      style,\n      trigger,\n      $slots: {\n        default: defaultSlot\n      }\n    } = this;\n    const mergedTab = label !== null && label !== void 0 ? label : tab;\n    return h(\"div\", {\n      class: `${clsPrefix}-tabs-tab-wrapper`\n    }, this.internalLeftPadded ? h(\"div\", {\n      class: `${clsPrefix}-tabs-tab-pad`\n    }) : null, h(\"div\", Object.assign({\n      key: name,\n      \"data-name\": name,\n      \"data-disabled\": disabled ? true : undefined\n    }, mergeProps({\n      class: [`${clsPrefix}-tabs-tab`, value === name && `${clsPrefix}-tabs-tab--active`, disabled && `${clsPrefix}-tabs-tab--disabled`, mergedClosable && `${clsPrefix}-tabs-tab--closable`, internalAddable && `${clsPrefix}-tabs-tab--addable`],\n      onClick: trigger === 'click' ? this.activateTab : undefined,\n      onMouseenter: trigger === 'hover' ? this.activateTab : undefined,\n      style: internalAddable ? undefined : style\n    }, this.internalCreatedByPane ? this.tabProps || {} : this.$attrs)), h(\"span\", {\n      class: `${clsPrefix}-tabs-tab__label`\n    }, internalAddable ? h(Fragment, null, h(\"div\", {\n      class: `${clsPrefix}-tabs-tab__height-placeholder`\n    }, \"\\u00A0\"), h(NBaseIcon, {\n      clsPrefix: clsPrefix\n    }, {\n      default: () => h(AddIcon, null)\n    })) : defaultSlot ? defaultSlot() : typeof mergedTab === 'object' ? mergedTab // VNode\n    : render(mergedTab !== null && mergedTab !== void 0 ? mergedTab : name)), mergedClosable && this.type === 'card' ? h(NBaseClose, {\n      clsPrefix: clsPrefix,\n      class: `${clsPrefix}-tabs-tab__close`,\n      onClick: this.handleClose,\n      disabled: disabled\n    }) : null));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tabs/src/Tab.js"],"names":["h","defineComponent","inject","computed","mergeProps","Fragment","AddIcon","NBaseClose","NBaseIcon","render","omit","tabsInjectionKey","tabPaneProps","typeProps","Object","assign","internalLeftPadded","Boolean","internalAddable","internalCreatedByPane","__TAB__","inheritAttrs","name","props","setup","mergedClsPrefixRef","valueRef","typeRef","closableRef","tabStyleRef","tabChangeIdRef","onBeforeLeaveRef","triggerRef","handleAdd","activateTab","handleClose","trigger","mergedClosable","closable","undefined","value","style","clsPrefix","type","e","stopPropagation","disabled","nameProp","id","onBeforeLeave","Promise","resolve","then","allowLeave","label","tab","$slots","default","defaultSlot","mergedTab","class","key","onClick","onMouseenter","tabProps","$attrs"],"mappings":"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","sourcesContent":["import { h, defineComponent, inject, computed, mergeProps, Fragment } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseClose, NBaseIcon } from '../../_internal';\nimport { render, omit } from '../../_utils';\nimport { tabsInjectionKey } from './interface';\nimport { tabPaneProps } from './TabPane';\nconst typeProps = Object.assign({ internalLeftPadded: Boolean, internalAddable: Boolean, internalCreatedByPane: Boolean }, omit(tabPaneProps, ['displayDirective']));\nexport default defineComponent({\n    __TAB__: true,\n    inheritAttrs: false,\n    name: 'Tab',\n    props: typeProps,\n    setup(props) {\n        const { mergedClsPrefixRef, valueRef, typeRef, closableRef, tabStyleRef, tabChangeIdRef, onBeforeLeaveRef, triggerRef, handleAdd, activateTab, handleClose\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(tabsInjectionKey);\n        return {\n            trigger: triggerRef,\n            mergedClosable: computed(() => {\n                if (props.internalAddable)\n                    return false;\n                const { closable } = props;\n                if (closable === undefined)\n                    return closableRef.value;\n                return closable;\n            }),\n            style: tabStyleRef,\n            clsPrefix: mergedClsPrefixRef,\n            value: valueRef,\n            type: typeRef,\n            handleClose(e) {\n                e.stopPropagation();\n                if (props.disabled)\n                    return;\n                handleClose(props.name);\n            },\n            activateTab() {\n                if (props.disabled)\n                    return;\n                if (props.internalAddable) {\n                    handleAdd();\n                    return;\n                }\n                const { name: nameProp } = props;\n                const id = ++tabChangeIdRef.id;\n                if (nameProp !== valueRef.value) {\n                    const { value: onBeforeLeave } = onBeforeLeaveRef;\n                    if (!onBeforeLeave) {\n                        activateTab(nameProp);\n                    }\n                    else {\n                        void Promise.resolve(onBeforeLeave(props.name, valueRef.value)).then((allowLeave) => {\n                            if (allowLeave && tabChangeIdRef.id === id) {\n                                activateTab(nameProp);\n                            }\n                        });\n                    }\n                }\n            }\n        };\n    },\n    render() {\n        const { internalAddable, clsPrefix, name, disabled, label, tab, value, mergedClosable, style, trigger, $slots: { default: defaultSlot } } = this;\n        const mergedTab = label !== null && label !== void 0 ? label : tab;\n        return (h(\"div\", { class: `${clsPrefix}-tabs-tab-wrapper` },\n            this.internalLeftPadded ? (h(\"div\", { class: `${clsPrefix}-tabs-tab-pad` })) : null,\n            h(\"div\", Object.assign({ key: name, \"data-name\": name, \"data-disabled\": disabled ? true : undefined }, mergeProps({\n                class: [\n                    `${clsPrefix}-tabs-tab`,\n                    value === name && `${clsPrefix}-tabs-tab--active`,\n                    disabled && `${clsPrefix}-tabs-tab--disabled`,\n                    mergedClosable && `${clsPrefix}-tabs-tab--closable`,\n                    internalAddable && `${clsPrefix}-tabs-tab--addable`\n                ],\n                onClick: trigger === 'click' ? this.activateTab : undefined,\n                onMouseenter: trigger === 'hover' ? this.activateTab : undefined,\n                style: internalAddable ? undefined : style\n            }, this.internalCreatedByPane\n                ? (this.tabProps || {})\n                : this.$attrs)),\n                h(\"span\", { class: `${clsPrefix}-tabs-tab__label` }, internalAddable ? (h(Fragment, null,\n                    h(\"div\", { class: `${clsPrefix}-tabs-tab__height-placeholder` }, \"\\u00A0\"),\n                    h(NBaseIcon, { clsPrefix: clsPrefix }, {\n                        default: () => h(AddIcon, null)\n                    }))) : defaultSlot ? (defaultSlot()) : typeof mergedTab === 'object' ? (mergedTab // VNode\n                ) : (render(mergedTab !== null && mergedTab !== void 0 ? mergedTab : name))),\n                mergedClosable && this.type === 'card' ? (h(NBaseClose, { clsPrefix: clsPrefix, class: `${clsPrefix}-tabs-tab__close`, onClick: this.handleClose, disabled: disabled })) : null)));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}