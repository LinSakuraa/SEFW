{"ast":null,"code":"import { h, defineComponent, computed, provide, ref, watch, toRef, isReactive, watchEffect } from 'vue';\nimport { createTreeMate, SubtreeNotLoadedError } from 'treemate';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { depx, changeColor, happensIn } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { NInternalSelection } from '../../_internal';\nimport { useLocale, useTheme, useConfig, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { cascaderLight } from '../styles';\nimport { getPathLabel, getRawNodePath } from './utils';\nimport CascaderMenu from './CascaderMenu';\nimport CascaderSelectMenu from './CascaderSelectMenu';\nimport { cascaderInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nconst cascaderProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  value: [String, Number, Array],\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  placeholder: String,\n  multiple: Boolean,\n  size: String,\n  filterable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  expandTrigger: {\n    type: String,\n    default: 'click'\n  },\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  remote: Boolean,\n  onLoad: Function,\n  separator: {\n    type: String,\n    default: ' / '\n  },\n  filter: Function,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  cascade: {\n    type: Boolean,\n    default: true\n  },\n  leafOnly: Boolean,\n  showPath: {\n    type: Boolean,\n    default: true\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  maxTagCount: [String, Number],\n  menuProps: Object,\n  filterMenuProps: Object,\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  checkStrategy: {\n    type: String,\n    default: 'all'\n  },\n  valueField: {\n    type: String,\n    default: 'value'\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  renderLabel: Function,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  onBlur: Function,\n  onFocus: Function,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Cascader',\n  props: cascaderProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.leafOnly) {\n          warnOnce('cascader', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead');\n        }\n\n        if (props.onChange !== undefined) {\n          warnOnce('cascader', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Cascader', '-cascader', style, cascaderLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('Cascader');\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = computed(() => props.value);\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const mergedCheckStrategyRef = computed(() => {\n      return props.leafOnly ? 'child' : props.checkStrategy;\n    });\n    const patternRef = ref('');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    const cascaderMenuInstRef = ref(null);\n    const selectMenuInstRef = ref(null);\n    const triggerInstRef = ref(null);\n    const keyboardKeyRef = ref(null);\n    const hoverKeyRef = ref(null);\n    const loadingKeySetRef = ref(new Set());\n    const selectMenuFollowerRef = ref(null);\n    const cascaderMenuFollowerRef = ref(null);\n    const adjustedToRef = useAdjustedTo(props);\n    const focusedRef = ref(false);\n\n    const addLoadingKey = key => {\n      loadingKeySetRef.value.add(key);\n    };\n\n    const deleteLoadingKey = key => {\n      loadingKeySetRef.value.delete(key);\n    };\n\n    const treeMateRef = computed(() => {\n      const {\n        valueField,\n        childrenField\n      } = props;\n      return createTreeMate(props.options, {\n        getKey(node) {\n          return node[valueField];\n        },\n\n        getChildren(node) {\n          return node[childrenField];\n        }\n\n      });\n    });\n    const mergedKeysRef = computed(() => {\n      const {\n        cascade,\n        multiple\n      } = props;\n\n      if (multiple && Array.isArray(mergedValueRef.value)) {\n        return treeMateRef.value.getCheckedKeys(mergedValueRef.value, {\n          cascade\n        });\n      } else {\n        return {\n          checkedKeys: [],\n          indeterminateKeys: []\n        };\n      }\n    });\n    const checkedKeysRef = computed(() => mergedKeysRef.value.checkedKeys);\n    const indeterminateKeysRef = computed(() => mergedKeysRef.value.indeterminateKeys);\n    const menuModelRef = computed(() => {\n      const {\n        treeNodePath,\n        treeNode\n      } = treeMateRef.value.getPath(hoverKeyRef.value);\n      let ret;\n\n      if (treeNode === null) {\n        ret = [treeMateRef.value.treeNodes];\n      } else {\n        ret = treeNodePath.map(treeNode => treeNode.siblings);\n\n        if (!treeNode.isLeaf && !loadingKeySetRef.value.has(treeNode.key) && treeNode.children) {\n          ret.push(treeNode.children);\n        }\n      }\n\n      return ret;\n    });\n    const hoverKeyPathRef = computed(() => {\n      const {\n        keyPath\n      } = treeMateRef.value.getPath(hoverKeyRef.value);\n      return keyPath;\n    });\n    const optionHeightRef = computed(() => {\n      return themeRef.value.self.optionHeight;\n    });\n\n    if (isReactive(props.options)) {\n      watch(props.options, (value, oldValue) => {\n        if (!(value === oldValue)) {\n          hoverKeyRef.value = null;\n          keyboardKeyRef.value = null;\n        }\n      });\n    }\n\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n\n      if (onUpdateShow) {\n        call(onUpdateShow, value);\n      }\n\n      if (_onUpdateShow) {\n        call(_onUpdateShow, value);\n      }\n\n      uncontrolledShowRef.value = value;\n    }\n\n    function doUpdateValue(value, option, optionPath) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, option, optionPath);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option, optionPath);\n      }\n\n      if (onChange) {\n        call(onChange, value, option, optionPath);\n      }\n\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n\n    function updateKeyboardKey(key) {\n      keyboardKeyRef.value = key;\n    }\n\n    function updateHoverKey(key) {\n      hoverKeyRef.value = key;\n    }\n\n    function doCheck(key) {\n      var _a;\n\n      const {\n        cascade,\n        multiple,\n        filterable\n      } = props;\n      const {\n        value: {\n          check,\n          getNode,\n          getPath\n        }\n      } = treeMateRef;\n\n      if (multiple) {\n        try {\n          const {\n            checkedKeys\n          } = check(key, mergedKeysRef.value.checkedKeys, {\n            cascade,\n            checkStrategy: mergedCheckStrategyRef.value\n          });\n          doUpdateValue(checkedKeys, checkedKeys.map(checkedKey => {\n            var _a;\n\n            return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n          }), checkedKeys.map(checkedKey => {\n            var _a;\n\n            return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath);\n          }));\n          if (filterable) focusSelectionInput();\n        } catch (err) {\n          if (err instanceof SubtreeNotLoadedError) {\n            if (cascaderMenuInstRef.value) {\n              const tmNode = getNode(key);\n\n              if (tmNode !== null) {\n                cascaderMenuInstRef.value.showErrorMessage(tmNode.rawNode[props.labelField]);\n              }\n            }\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (mergedCheckStrategyRef.value === 'child') {\n          const tmNode = getNode(key);\n\n          if (tmNode === null || tmNode === void 0 ? void 0 : tmNode.isLeaf) {\n            doUpdateValue(key, tmNode.rawNode, getRawNodePath(getPath(key).treeNodePath));\n          } else {\n            return false;\n          }\n        } else {\n          const tmNode = getNode(key);\n          doUpdateValue(key, (tmNode === null || tmNode === void 0 ? void 0 : tmNode.rawNode) || null, getRawNodePath((_a = getPath(key)) === null || _a === void 0 ? void 0 : _a.treeNodePath));\n        }\n      }\n\n      return true;\n    }\n\n    function doUncheck(key) {\n      const {\n        cascade,\n        multiple\n      } = props;\n\n      if (multiple) {\n        const {\n          value: {\n            uncheck,\n            getNode,\n            getPath\n          }\n        } = treeMateRef;\n        const {\n          checkedKeys\n        } = uncheck(key, mergedKeysRef.value.checkedKeys, {\n          cascade,\n          checkStrategy: mergedCheckStrategyRef.value\n        });\n        doUpdateValue(checkedKeys, checkedKeys.map(checkedKey => {\n          var _a;\n\n          return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null;\n        }), checkedKeys.map(checkedKey => {\n          var _a;\n\n          return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath);\n        }));\n      }\n    }\n\n    const selectedOptionsRef = computed(() => {\n      if (props.multiple) {\n        const {\n          showPath,\n          separator,\n          labelField,\n          cascade\n        } = props;\n        const {\n          getCheckedKeys,\n          getNode\n        } = treeMateRef.value;\n        const value = getCheckedKeys(checkedKeysRef.value, {\n          cascade,\n          checkStrategy: mergedCheckStrategyRef.value\n        }).checkedKeys;\n        return value.map(key => {\n          const node = getNode(key);\n\n          if (node === null) {\n            return {\n              label: String(key),\n              value: key\n            };\n          } else {\n            return {\n              label: showPath ? getPathLabel(node, separator, labelField) : node.rawNode[labelField],\n              value: node.key\n            };\n          }\n        });\n      } else return [];\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        multiple,\n        showPath,\n        separator,\n        labelField\n      } = props;\n      const {\n        value\n      } = mergedValueRef;\n\n      if (!multiple && !Array.isArray(value)) {\n        const {\n          getNode\n        } = treeMateRef.value;\n\n        if (value === null) {\n          return null;\n        }\n\n        const node = getNode(value);\n\n        if (node === null) {\n          return {\n            label: String(value),\n            value\n          };\n        } else {\n          return {\n            label: showPath ? getPathLabel(node, separator, labelField) : node.rawNode[labelField],\n            value: node.key\n          };\n        }\n      } else return null;\n    });\n    const uncontrolledShowRef = ref(false);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const localizedPlaceholderRef = computed(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    }); // select option related\n\n    const showSelectMenuRef = computed(() => {\n      return !!(props.filterable && patternRef.value);\n    }); // --- methods\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function focusSelectionInput() {\n      var _a;\n\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n\n    function focusSelection() {\n      var _a;\n\n      (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        patternRef.value = '';\n        doUpdateShow(true);\n\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n\n    function closeMenu(returnFocus = false) {\n      if (returnFocus) {\n        focusSelection();\n      }\n\n      doUpdateShow(false);\n      patternRef.value = '';\n    }\n\n    function handleCascaderMenuClickOutside(e) {\n      var _a;\n\n      if (showSelectMenuRef.value) return;\n\n      if (mergedShowRef.value) {\n        if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target))) {\n          closeMenu();\n        }\n      }\n    }\n\n    function handleSelectMenuClickOutside(e) {\n      if (!showSelectMenuRef.value) return;\n      handleCascaderMenuClickOutside(e);\n    }\n\n    function clearPattern() {\n      if (props.clearFilterAfterSelect) patternRef.value = '';\n    } // --- keyboard\n\n\n    function move(direction) {\n      var _a, _b, _c;\n\n      const {\n        value: keyboardKey\n      } = keyboardKeyRef;\n      const {\n        value: treeMate\n      } = treeMateRef;\n\n      switch (direction) {\n        case 'prev':\n          if (keyboardKey !== null) {\n            const node = treeMate.getPrev(keyboardKey, {\n              loop: true\n            });\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          }\n\n          break;\n\n        case 'next':\n          if (keyboardKey === null) {\n            const node = treeMate.getFirstAvailableNode();\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_b = cascaderMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          } else {\n            const node = treeMate.getNext(keyboardKey, {\n              loop: true\n            });\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              (_c = cascaderMenuInstRef.value) === null || _c === void 0 ? void 0 : _c.scroll(node.level, node.index, depx(optionHeightRef.value));\n            }\n          }\n\n          break;\n\n        case 'child':\n          if (keyboardKey !== null) {\n            const currentNode = treeMate.getNode(keyboardKey);\n\n            if (currentNode !== null) {\n              if (currentNode.shallowLoaded) {\n                const node = treeMate.getChild(keyboardKey);\n\n                if (node !== null) {\n                  updateHoverKey(keyboardKey);\n                  updateKeyboardKey(node.key);\n                }\n              } else {\n                const {\n                  value: loadingKeySet\n                } = loadingKeySetRef;\n\n                if (!loadingKeySet.has(keyboardKey)) {\n                  addLoadingKey(keyboardKey);\n                  updateHoverKey(keyboardKey);\n                  const {\n                    onLoad\n                  } = props;\n\n                  if (onLoad) {\n                    onLoad(currentNode.rawNode).then(() => {\n                      deleteLoadingKey(keyboardKey);\n                    }).catch(() => {\n                      deleteLoadingKey(keyboardKey);\n                    });\n                  }\n                }\n              }\n            }\n          }\n\n          break;\n\n        case 'parent':\n          if (keyboardKey !== null) {\n            const node = treeMate.getParent(keyboardKey);\n\n            if (node !== null) {\n              updateKeyboardKey(node.key);\n              const parentNode = node.getParent();\n\n              if (parentNode === null) {\n                updateHoverKey(null);\n              } else {\n                updateHoverKey(parentNode.key);\n              }\n            }\n          }\n\n          break;\n      }\n    }\n\n    function handleKeyUp(e) {\n      var _a, _b;\n\n      if (happensIn(e, 'action')) return;\n\n      switch (e.code) {\n        case 'Space':\n          if (props.filterable) return;\n        // eslint-disable-next-line no-fallthrough\n\n        case 'Enter':\n        case 'NumpadEnter':\n          if (!mergedShowRef.value) {\n            openMenu();\n          } else {\n            const {\n              value: showSelectMenu\n            } = showSelectMenuRef;\n            const {\n              value: keyboardKey\n            } = keyboardKeyRef;\n\n            if (!showSelectMenu) {\n              if (keyboardKey !== null) {\n                if (checkedKeysRef.value.includes(keyboardKey) || indeterminateKeysRef.value.includes(keyboardKey)) {\n                  doUncheck(keyboardKey);\n                } else {\n                  const checkIsValid = doCheck(keyboardKey);\n\n                  if (!props.multiple && checkIsValid) {\n                    closeMenu(true);\n                  }\n                }\n              }\n            } else {\n              if (selectMenuInstRef.value) {\n                const hasCorrespondingOption = selectMenuInstRef.value.enter();\n                if (hasCorrespondingOption) clearPattern();\n              }\n            }\n          }\n\n          break;\n\n        case 'ArrowUp':\n          e.preventDefault();\n\n          if (mergedShowRef.value) {\n            if (showSelectMenuRef.value) {\n              (_a = selectMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n            } else {\n              move('prev');\n            }\n          }\n\n          break;\n\n        case 'ArrowDown':\n          e.preventDefault();\n\n          if (mergedShowRef.value) {\n            if (showSelectMenuRef.value) {\n              (_b = selectMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.next();\n            } else {\n              move('next');\n            }\n          } else {\n            openMenu();\n          }\n\n          break;\n\n        case 'ArrowLeft':\n          e.preventDefault();\n\n          if (mergedShowRef.value && !showSelectMenuRef.value) {\n            move('parent');\n          }\n\n          break;\n\n        case 'ArrowRight':\n          e.preventDefault();\n\n          if (mergedShowRef.value && !showSelectMenuRef.value) {\n            move('child');\n          }\n\n          break;\n\n        case 'Escape':\n          closeMenu(true);\n      }\n    }\n\n    function handleMenuKeyUp(e) {\n      handleKeyUp(e);\n    } // --- search\n\n\n    function handleClear(e) {\n      e.stopPropagation();\n\n      if (props.multiple) {\n        doUpdateValue([], [], []);\n      } else {\n        doUpdateValue(null, null, null);\n      }\n    }\n\n    function handleTriggerFocus(e) {\n      var _a;\n\n      if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = true;\n        doFocus(e);\n      }\n    }\n\n    function handleTriggerBlur(e) {\n      var _a;\n\n      if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = false;\n        doBlur(e);\n        closeMenu();\n      }\n    }\n\n    function handleMenuFocus(e) {\n      var _a;\n\n      if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = true;\n        doFocus(e);\n      }\n    }\n\n    function handleMenuBlur(e) {\n      var _a;\n\n      if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n        focusedRef.value = false;\n        doBlur(e);\n      }\n    }\n\n    function handleMenuMousedown(e) {\n      if (!happensIn(e, 'action')) {\n        if (props.multiple && props.filter) {\n          e.preventDefault();\n          focusSelectionInput();\n        }\n      }\n    }\n\n    function handleMenuTabout() {\n      closeMenu(true);\n    }\n\n    function handleTriggerClick() {\n      if (props.filterable) {\n        openMenu();\n      } else {\n        if (mergedShowRef.value) {\n          closeMenu(true);\n        } else {\n          openMenu();\n        }\n      }\n    }\n\n    function handlePatternInput(e) {\n      patternRef.value = e.target.value;\n    }\n\n    function handleDeleteOption(option) {\n      const {\n        multiple\n      } = props;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (multiple && Array.isArray(mergedValue)) {\n        doUncheck(option.value);\n      } else {\n        doUpdateValue(null, null, null);\n      }\n    }\n\n    function handleKeyDown(e) {\n      switch (e.code) {\n        case 'Space':\n        case 'ArrowDown':\n        case 'ArrowUp':\n          if (props.filterable && mergedShowRef.value) {\n            return;\n          }\n\n          e.preventDefault();\n          break;\n      }\n    } // sync position\n\n\n    function syncSelectMenuPosition() {\n      var _a;\n\n      (_a = selectMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n\n    function syncCascaderMenuPosition() {\n      var _a;\n\n      (_a = cascaderMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n\n    provide(cascaderInjectionKey, {\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      mergedValueRef,\n      checkedKeysRef,\n      indeterminateKeysRef,\n      hoverKeyPathRef,\n      mergedCheckStrategyRef,\n      cascadeRef: toRef(props, 'cascade'),\n      multipleRef: toRef(props, 'multiple'),\n      keyboardKeyRef,\n      hoverKeyRef,\n      remoteRef: toRef(props, 'remote'),\n      loadingKeySetRef,\n      expandTriggerRef: toRef(props, 'expandTrigger'),\n      isMountedRef: useIsMounted(),\n      onLoadRef: toRef(props, 'onLoad'),\n      virtualScrollRef: toRef(props, 'virtualScroll'),\n      optionHeightRef,\n      localeRef,\n      labelFieldRef: toRef(props, 'labelField'),\n      renderLabelRef: toRef(props, 'renderLabel'),\n      syncCascaderMenuPosition,\n      syncSelectMenuPosition,\n      updateKeyboardKey,\n      updateHoverKey,\n      addLoadingKey,\n      deleteLoadingKey,\n      doCheck,\n      doUncheck,\n      closeMenu,\n      handleSelectMenuClickOutside,\n      handleCascaderMenuClickOutside,\n      clearPattern\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          optionArrowColor,\n          optionTextColor,\n          optionTextColorActive,\n          optionTextColorDisabled,\n          optionCheckMarkColor,\n          menuColor,\n          menuBoxShadow,\n          menuDividerColor,\n          menuBorderRadius,\n          menuHeight,\n          optionColorHover,\n          optionHeight,\n          optionFontSize,\n          loadingColor,\n          columnWidth\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-menu-border-radius': menuBorderRadius,\n        '--n-menu-box-shadow': menuBoxShadow,\n        '--n-menu-height': menuHeight,\n        '--n-column-width': columnWidth,\n        '--n-menu-color': menuColor,\n        '--n-menu-divider-color': menuDividerColor,\n        '--n-option-height': optionHeight,\n        '--n-option-font-size': optionFontSize,\n        '--n-option-text-color': optionTextColor,\n        '--n-option-text-color-disabled': optionTextColorDisabled,\n        '--n-option-text-color-active': optionTextColorActive,\n        '--n-option-color-hover': optionColorHover,\n        '--n-option-check-mark-color': optionCheckMarkColor,\n        '--n-option-arrow-color': optionArrowColor,\n        '--n-menu-mask-color': changeColor(menuColor, {\n          alpha: 0.75\n        }),\n        '--n-loading-color': loadingColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('cascader', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedStatus: mergedStatusRef,\n      selectMenuFollowerRef,\n      cascaderMenuFollowerRef,\n      triggerInstRef,\n      selectMenuInstRef,\n      cascaderMenuInstRef,\n      mergedBordered: mergedBorderedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      mergedValue: mergedValueRef,\n      mergedShow: mergedShowRef,\n      showSelectMenu: showSelectMenuRef,\n      pattern: patternRef,\n      treeMate: treeMateRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      adjustedTo: adjustedToRef,\n      menuModel: menuModelRef,\n      handleMenuTabout,\n      handleMenuFocus,\n      handleMenuBlur,\n      handleMenuKeyUp,\n      handleMenuMousedown,\n      handleTriggerFocus,\n      handleTriggerBlur,\n      handleTriggerClick,\n      handleClear,\n      handleDeleteOption,\n      handlePatternInput,\n      handleKeyDown,\n      handleKeyUp,\n      focused: focusedRef,\n      optionHeight: optionHeightRef,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-cascader`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerInstRef\",\n          status: this.mergedStatus,\n          clsPrefix: mergedClsPrefix,\n          maxTagCount: this.maxTagCount,\n          bordered: this.mergedBordered,\n          size: this.mergedSize,\n          theme: this.mergedTheme.peers.InternalSelection,\n          themeOverrides: this.mergedTheme.peerOverrides.InternalSelection,\n          active: this.mergedShow,\n          pattern: this.pattern,\n          placeholder: this.localizedPlaceholder,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          multiple: this.multiple,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          focused: this.focused,\n          onFocus: this.handleTriggerFocus,\n          onBlur: this.handleTriggerBlur,\n          onClick: this.handleTriggerClick,\n          onClear: this.handleClear,\n          onDeleteOption: this.handleDeleteOption,\n          onPatternInput: this.handlePatternInput,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp\n        })\n      }), h(VFollower, {\n        key: \"cascaderMenu\",\n        ref: \"cascaderMenuFollowerRef\",\n        show: this.mergedShow && !this.showSelectMenu,\n        containerClass: this.namespace,\n        placement: this.placement,\n        width: !this.options.length ? 'target' : undefined,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => {\n          var _a;\n\n          (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n          const {\n            menuProps\n          } = this;\n          return h(CascaderMenu, Object.assign({}, menuProps, {\n            ref: \"cascaderMenuInstRef\",\n            class: [this.themeClass, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class],\n            value: this.mergedValue,\n            show: this.mergedShow && !this.showSelectMenu,\n            menuModel: this.menuModel,\n            style: [this.cssVars, menuProps === null || menuProps === void 0 ? void 0 : menuProps.style],\n            onFocus: this.handleMenuFocus,\n            onBlur: this.handleMenuBlur,\n            onKeyup: this.handleMenuKeyUp,\n            onMousedown: this.handleMenuMousedown,\n            onTabout: this.handleMenuTabout\n          }), {\n            action: () => {\n              var _a, _b;\n\n              return (_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a);\n            },\n            empty: () => {\n              var _a, _b;\n\n              return (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a);\n            }\n          });\n        }\n      }), h(VFollower, {\n        key: \"selectMenu\",\n        ref: \"selectMenuFollowerRef\",\n        show: this.mergedShow && this.showSelectMenu,\n        containerClass: this.namespace,\n        width: \"target\",\n        placement: this.placement,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey\n      }, {\n        default: () => {\n          var _a;\n\n          (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n          const {\n            filterMenuProps\n          } = this;\n          return h(CascaderSelectMenu, Object.assign({}, filterMenuProps, {\n            ref: \"selectMenuInstRef\",\n            class: [this.themeClass, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.class],\n            value: this.mergedValue,\n            show: this.mergedShow && this.showSelectMenu,\n            pattern: this.pattern,\n            multiple: this.multiple,\n            tmNodes: this.treeMate.treeNodes,\n            filter: this.filter,\n            labelField: this.labelField,\n            separator: this.separator,\n            style: [this.cssVars, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.style]\n          }));\n        }\n      })]\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/cascader/src/Cascader.js"],"names":["h","defineComponent","computed","provide","ref","watch","toRef","isReactive","watchEffect","createTreeMate","SubtreeNotLoadedError","VBinder","VTarget","VFollower","depx","changeColor","happensIn","useIsMounted","useMergedState","NInternalSelection","useLocale","useTheme","useConfig","useFormItem","useThemeClass","call","useAdjustedTo","warnOnce","cascaderLight","getPathLabel","getRawNodePath","CascaderMenu","CascaderSelectMenu","cascaderInjectionKey","style","cascaderProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","undefined","options","Array","value","String","Number","defaultValue","placeholder","multiple","size","filterable","disabled","expandTrigger","clearable","clearFilterAfterSelect","remote","onLoad","Function","separator","filter","placement","cascade","leafOnly","showPath","show","maxTagCount","menuProps","filterMenuProps","virtualScroll","checkStrategy","valueField","labelField","childrenField","renderLabel","status","onUpdateValue","onUpdateShow","onBlur","onFocus","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","mergedCheckStrategyRef","patternRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","cascaderMenuInstRef","selectMenuInstRef","triggerInstRef","keyboardKeyRef","hoverKeyRef","loadingKeySetRef","Set","selectMenuFollowerRef","cascaderMenuFollowerRef","adjustedToRef","focusedRef","addLoadingKey","key","add","deleteLoadingKey","delete","treeMateRef","getKey","node","getChildren","mergedKeysRef","isArray","getCheckedKeys","checkedKeys","indeterminateKeys","checkedKeysRef","indeterminateKeysRef","menuModelRef","treeNodePath","treeNode","getPath","ret","treeNodes","map","siblings","isLeaf","has","children","push","hoverKeyPathRef","keyPath","optionHeightRef","self","optionHeight","oldValue","doUpdateShow","_onUpdateShow","uncontrolledShowRef","doUpdateValue","option","optionPath","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","updateKeyboardKey","updateHoverKey","doCheck","_a","check","getNode","checkedKey","rawNode","focusSelectionInput","err","tmNode","showErrorMessage","doUncheck","uncheck","selectedOptionsRef","label","selectedOptionRef","controlledShowRef","mergedShowRef","localizedPlaceholderRef","showSelectMenuRef","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","focusInput","focusSelection","focus","openMenu","closeMenu","returnFocus","handleCascaderMenuClickOutside","$el","contains","target","handleSelectMenuClickOutside","clearPattern","move","direction","_b","_c","keyboardKey","treeMate","getPrev","loop","scroll","level","index","getFirstAvailableNode","getNext","currentNode","shallowLoaded","getChild","loadingKeySet","then","catch","getParent","parentNode","handleKeyUp","code","showSelectMenu","includes","checkIsValid","hasCorrespondingOption","enter","preventDefault","prev","next","handleMenuKeyUp","handleClear","stopPropagation","handleTriggerFocus","relatedTarget","handleTriggerBlur","handleMenuFocus","handleMenuBlur","handleMenuMousedown","handleMenuTabout","handleTriggerClick","handlePatternInput","handleDeleteOption","mergedValue","handleKeyDown","syncSelectMenuPosition","syncPosition","syncCascaderMenuPosition","mergedThemeRef","cascadeRef","multipleRef","remoteRef","expandTriggerRef","isMountedRef","onLoadRef","virtualScrollRef","labelFieldRef","renderLabelRef","exposedMethods","blur","cssVarsRef","optionArrowColor","optionTextColor","optionTextColorActive","optionTextColorDisabled","optionCheckMarkColor","menuColor","menuBoxShadow","menuDividerColor","menuBorderRadius","menuHeight","optionColorHover","optionFontSize","loadingColor","columnWidth","common","cubicBezierEaseInOut","alpha","themeClassHandle","mergedStatus","mergedBordered","mergedClsPrefix","namespace","mergedShow","pattern","mergedSize","mergedDisabled","localizedPlaceholder","selectedOption","selectedOptions","adjustedTo","menuModel","focused","mergedTheme","cssVars","themeClass","onRender","render","class","clsPrefix","theme","peers","InternalSelection","themeOverrides","peerOverrides","active","onClick","onClear","onDeleteOption","onPatternInput","onKeydown","onKeyup","containerClass","width","length","teleportDisabled","tdkey","onMousedown","onTabout","action","$slots","empty","tmNodes"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, provide, ref, watch, toRef, isReactive, watchEffect } from 'vue';\nimport { createTreeMate, SubtreeNotLoadedError } from 'treemate';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { depx, changeColor, happensIn } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { NInternalSelection } from '../../_internal';\nimport { useLocale, useTheme, useConfig, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { cascaderLight } from '../styles';\nimport { getPathLabel, getRawNodePath } from './utils';\nimport CascaderMenu from './CascaderMenu';\nimport CascaderSelectMenu from './CascaderSelectMenu';\nimport { cascaderInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nconst cascaderProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, options: {\n        type: Array,\n        default: () => []\n    }, value: [String, Number, Array], defaultValue: {\n        type: [String, Number, Array],\n        default: null\n    }, placeholder: String, multiple: Boolean, size: String, filterable: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, expandTrigger: {\n        type: String,\n        default: 'click'\n    }, clearable: Boolean, clearFilterAfterSelect: {\n        type: Boolean,\n        default: true\n    }, remote: Boolean, onLoad: Function, separator: {\n        type: String,\n        default: ' / '\n    }, filter: Function, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, cascade: {\n        type: Boolean,\n        default: true\n    }, leafOnly: Boolean, showPath: {\n        type: Boolean,\n        default: true\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, maxTagCount: [String, Number], menuProps: Object, filterMenuProps: Object, virtualScroll: {\n        type: Boolean,\n        default: true\n    }, checkStrategy: {\n        type: String,\n        default: 'all'\n    }, valueField: {\n        type: String,\n        default: 'value'\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, renderLabel: Function, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], onBlur: Function, onFocus: Function, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Cascader',\n    props: cascaderProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.leafOnly) {\n                    warnOnce('cascader', '`leaf-only` is deprecated, please use `check-strategy=\"child\"` instead');\n                }\n                if (props.onChange !== undefined) {\n                    warnOnce('cascader', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Cascader', '-cascader', style, cascaderLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('Cascader');\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = computed(() => props.value);\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const mergedCheckStrategyRef = computed(() => {\n            return props.leafOnly ? 'child' : props.checkStrategy;\n        });\n        const patternRef = ref('');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        const cascaderMenuInstRef = ref(null);\n        const selectMenuInstRef = ref(null);\n        const triggerInstRef = ref(null);\n        const keyboardKeyRef = ref(null);\n        const hoverKeyRef = ref(null);\n        const loadingKeySetRef = ref(new Set());\n        const selectMenuFollowerRef = ref(null);\n        const cascaderMenuFollowerRef = ref(null);\n        const adjustedToRef = useAdjustedTo(props);\n        const focusedRef = ref(false);\n        const addLoadingKey = (key) => {\n            loadingKeySetRef.value.add(key);\n        };\n        const deleteLoadingKey = (key) => {\n            loadingKeySetRef.value.delete(key);\n        };\n        const treeMateRef = computed(() => {\n            const { valueField, childrenField } = props;\n            return createTreeMate(props.options, {\n                getKey(node) {\n                    return node[valueField];\n                },\n                getChildren(node) {\n                    return node[childrenField];\n                }\n            });\n        });\n        const mergedKeysRef = computed(() => {\n            const { cascade, multiple } = props;\n            if (multiple && Array.isArray(mergedValueRef.value)) {\n                return treeMateRef.value.getCheckedKeys(mergedValueRef.value, {\n                    cascade\n                });\n            }\n            else {\n                return {\n                    checkedKeys: [],\n                    indeterminateKeys: []\n                };\n            }\n        });\n        const checkedKeysRef = computed(() => mergedKeysRef.value.checkedKeys);\n        const indeterminateKeysRef = computed(() => mergedKeysRef.value.indeterminateKeys);\n        const menuModelRef = computed(() => {\n            const { treeNodePath, treeNode } = treeMateRef.value.getPath(hoverKeyRef.value);\n            let ret;\n            if (treeNode === null) {\n                ret = [treeMateRef.value.treeNodes];\n            }\n            else {\n                ret = treeNodePath.map((treeNode) => treeNode.siblings);\n                if (!treeNode.isLeaf &&\n                    !loadingKeySetRef.value.has(treeNode.key) &&\n                    treeNode.children) {\n                    ret.push(treeNode.children);\n                }\n            }\n            return ret;\n        });\n        const hoverKeyPathRef = computed(() => {\n            const { keyPath } = treeMateRef.value.getPath(hoverKeyRef.value);\n            return keyPath;\n        });\n        const optionHeightRef = computed(() => {\n            return themeRef.value.self.optionHeight;\n        });\n        if (isReactive(props.options)) {\n            watch(props.options, (value, oldValue) => {\n                if (!(value === oldValue)) {\n                    hoverKeyRef.value = null;\n                    keyboardKeyRef.value = null;\n                }\n            });\n        }\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow) {\n                call(onUpdateShow, value);\n            }\n            if (_onUpdateShow) {\n                call(_onUpdateShow, value);\n            }\n            uncontrolledShowRef.value = value;\n        }\n        function doUpdateValue(value, option, optionPath) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onChange } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onUpdateValue) {\n                call(onUpdateValue, value, option, optionPath);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, option, optionPath);\n            }\n            if (onChange) {\n                call(onChange, value, option, optionPath);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        }\n        function updateKeyboardKey(key) {\n            keyboardKeyRef.value = key;\n        }\n        function updateHoverKey(key) {\n            hoverKeyRef.value = key;\n        }\n        function doCheck(key) {\n            var _a;\n            const { cascade, multiple, filterable } = props;\n            const { value: { check, getNode, getPath } } = treeMateRef;\n            if (multiple) {\n                try {\n                    const { checkedKeys } = check(key, mergedKeysRef.value.checkedKeys, {\n                        cascade,\n                        checkStrategy: mergedCheckStrategyRef.value\n                    });\n                    doUpdateValue(checkedKeys, checkedKeys.map((checkedKey) => { var _a; return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null; }), checkedKeys.map((checkedKey) => { var _a; return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath); }));\n                    if (filterable)\n                        focusSelectionInput();\n                }\n                catch (err) {\n                    if (err instanceof SubtreeNotLoadedError) {\n                        if (cascaderMenuInstRef.value) {\n                            const tmNode = getNode(key);\n                            if (tmNode !== null) {\n                                cascaderMenuInstRef.value.showErrorMessage(tmNode.rawNode[props.labelField]);\n                            }\n                        }\n                    }\n                    else {\n                        throw err;\n                    }\n                }\n            }\n            else {\n                if (mergedCheckStrategyRef.value === 'child') {\n                    const tmNode = getNode(key);\n                    if (tmNode === null || tmNode === void 0 ? void 0 : tmNode.isLeaf) {\n                        doUpdateValue(key, tmNode.rawNode, getRawNodePath(getPath(key).treeNodePath));\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                else {\n                    const tmNode = getNode(key);\n                    doUpdateValue(key, (tmNode === null || tmNode === void 0 ? void 0 : tmNode.rawNode) || null, getRawNodePath((_a = getPath(key)) === null || _a === void 0 ? void 0 : _a.treeNodePath));\n                }\n            }\n            return true;\n        }\n        function doUncheck(key) {\n            const { cascade, multiple } = props;\n            if (multiple) {\n                const { value: { uncheck, getNode, getPath } } = treeMateRef;\n                const { checkedKeys } = uncheck(key, mergedKeysRef.value.checkedKeys, {\n                    cascade,\n                    checkStrategy: mergedCheckStrategyRef.value\n                });\n                doUpdateValue(checkedKeys, checkedKeys.map((checkedKey) => { var _a; return ((_a = getNode(checkedKey)) === null || _a === void 0 ? void 0 : _a.rawNode) || null; }), checkedKeys.map((checkedKey) => { var _a; return getRawNodePath((_a = getPath(checkedKey)) === null || _a === void 0 ? void 0 : _a.treeNodePath); }));\n            }\n        }\n        const selectedOptionsRef = computed(() => {\n            if (props.multiple) {\n                const { showPath, separator, labelField, cascade } = props;\n                const { getCheckedKeys, getNode } = treeMateRef.value;\n                const value = getCheckedKeys(checkedKeysRef.value, {\n                    cascade,\n                    checkStrategy: mergedCheckStrategyRef.value\n                }).checkedKeys;\n                return value.map((key) => {\n                    const node = getNode(key);\n                    if (node === null) {\n                        return {\n                            label: String(key),\n                            value: key\n                        };\n                    }\n                    else {\n                        return {\n                            label: showPath\n                                ? getPathLabel(node, separator, labelField)\n                                : node.rawNode[labelField],\n                            value: node.key\n                        };\n                    }\n                });\n            }\n            else\n                return [];\n        });\n        const selectedOptionRef = computed(() => {\n            const { multiple, showPath, separator, labelField } = props;\n            const { value } = mergedValueRef;\n            if (!multiple && !Array.isArray(value)) {\n                const { getNode } = treeMateRef.value;\n                if (value === null) {\n                    return null;\n                }\n                const node = getNode(value);\n                if (node === null) {\n                    return {\n                        label: String(value),\n                        value\n                    };\n                }\n                else {\n                    return {\n                        label: showPath\n                            ? getPathLabel(node, separator, labelField)\n                            : node.rawNode[labelField],\n                        value: node.key\n                    };\n                }\n            }\n            else\n                return null;\n        });\n        const uncontrolledShowRef = ref(false);\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const localizedPlaceholderRef = computed(() => {\n            const { placeholder } = props;\n            if (placeholder !== undefined)\n                return placeholder;\n            return localeRef.value.placeholder;\n        });\n        // select option related\n        const showSelectMenuRef = computed(() => {\n            return !!(props.filterable && patternRef.value);\n        });\n        // --- methods\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function focusSelectionInput() {\n            var _a;\n            (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n        }\n        function focusSelection() {\n            var _a;\n            (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        function openMenu() {\n            if (!mergedDisabledRef.value) {\n                patternRef.value = '';\n                doUpdateShow(true);\n                if (props.filterable) {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function closeMenu(returnFocus = false) {\n            if (returnFocus) {\n                focusSelection();\n            }\n            doUpdateShow(false);\n            patternRef.value = '';\n        }\n        function handleCascaderMenuClickOutside(e) {\n            var _a;\n            if (showSelectMenuRef.value)\n                return;\n            if (mergedShowRef.value) {\n                if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target))) {\n                    closeMenu();\n                }\n            }\n        }\n        function handleSelectMenuClickOutside(e) {\n            if (!showSelectMenuRef.value)\n                return;\n            handleCascaderMenuClickOutside(e);\n        }\n        function clearPattern() {\n            if (props.clearFilterAfterSelect)\n                patternRef.value = '';\n        }\n        // --- keyboard\n        function move(direction) {\n            var _a, _b, _c;\n            const { value: keyboardKey } = keyboardKeyRef;\n            const { value: treeMate } = treeMateRef;\n            switch (direction) {\n                case 'prev':\n                    if (keyboardKey !== null) {\n                        const node = treeMate.getPrev(keyboardKey, { loop: true });\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    break;\n                case 'next':\n                    if (keyboardKey === null) {\n                        const node = treeMate.getFirstAvailableNode();\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_b = cascaderMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    else {\n                        const node = treeMate.getNext(keyboardKey, { loop: true });\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            (_c = cascaderMenuInstRef.value) === null || _c === void 0 ? void 0 : _c.scroll(node.level, node.index, depx(optionHeightRef.value));\n                        }\n                    }\n                    break;\n                case 'child':\n                    if (keyboardKey !== null) {\n                        const currentNode = treeMate.getNode(keyboardKey);\n                        if (currentNode !== null) {\n                            if (currentNode.shallowLoaded) {\n                                const node = treeMate.getChild(keyboardKey);\n                                if (node !== null) {\n                                    updateHoverKey(keyboardKey);\n                                    updateKeyboardKey(node.key);\n                                }\n                            }\n                            else {\n                                const { value: loadingKeySet } = loadingKeySetRef;\n                                if (!loadingKeySet.has(keyboardKey)) {\n                                    addLoadingKey(keyboardKey);\n                                    updateHoverKey(keyboardKey);\n                                    const { onLoad } = props;\n                                    if (onLoad) {\n                                        onLoad(currentNode.rawNode)\n                                            .then(() => {\n                                            deleteLoadingKey(keyboardKey);\n                                        })\n                                            .catch(() => {\n                                            deleteLoadingKey(keyboardKey);\n                                        });\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    break;\n                case 'parent':\n                    if (keyboardKey !== null) {\n                        const node = treeMate.getParent(keyboardKey);\n                        if (node !== null) {\n                            updateKeyboardKey(node.key);\n                            const parentNode = node.getParent();\n                            if (parentNode === null) {\n                                updateHoverKey(null);\n                            }\n                            else {\n                                updateHoverKey(parentNode.key);\n                            }\n                        }\n                    }\n                    break;\n            }\n        }\n        function handleKeyUp(e) {\n            var _a, _b;\n            if (happensIn(e, 'action'))\n                return;\n            switch (e.code) {\n                case 'Space':\n                    if (props.filterable)\n                        return;\n                // eslint-disable-next-line no-fallthrough\n                case 'Enter':\n                case 'NumpadEnter':\n                    if (!mergedShowRef.value) {\n                        openMenu();\n                    }\n                    else {\n                        const { value: showSelectMenu } = showSelectMenuRef;\n                        const { value: keyboardKey } = keyboardKeyRef;\n                        if (!showSelectMenu) {\n                            if (keyboardKey !== null) {\n                                if (checkedKeysRef.value.includes(keyboardKey) ||\n                                    indeterminateKeysRef.value.includes(keyboardKey)) {\n                                    doUncheck(keyboardKey);\n                                }\n                                else {\n                                    const checkIsValid = doCheck(keyboardKey);\n                                    if (!props.multiple && checkIsValid) {\n                                        closeMenu(true);\n                                    }\n                                }\n                            }\n                        }\n                        else {\n                            if (selectMenuInstRef.value) {\n                                const hasCorrespondingOption = selectMenuInstRef.value.enter();\n                                if (hasCorrespondingOption)\n                                    clearPattern();\n                            }\n                        }\n                    }\n                    break;\n                case 'ArrowUp':\n                    e.preventDefault();\n                    if (mergedShowRef.value) {\n                        if (showSelectMenuRef.value) {\n                            (_a = selectMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.prev();\n                        }\n                        else {\n                            move('prev');\n                        }\n                    }\n                    break;\n                case 'ArrowDown':\n                    e.preventDefault();\n                    if (mergedShowRef.value) {\n                        if (showSelectMenuRef.value) {\n                            (_b = selectMenuInstRef.value) === null || _b === void 0 ? void 0 : _b.next();\n                        }\n                        else {\n                            move('next');\n                        }\n                    }\n                    else {\n                        openMenu();\n                    }\n                    break;\n                case 'ArrowLeft':\n                    e.preventDefault();\n                    if (mergedShowRef.value && !showSelectMenuRef.value) {\n                        move('parent');\n                    }\n                    break;\n                case 'ArrowRight':\n                    e.preventDefault();\n                    if (mergedShowRef.value && !showSelectMenuRef.value) {\n                        move('child');\n                    }\n                    break;\n                case 'Escape':\n                    closeMenu(true);\n            }\n        }\n        function handleMenuKeyUp(e) {\n            handleKeyUp(e);\n        }\n        // --- search\n        function handleClear(e) {\n            e.stopPropagation();\n            if (props.multiple) {\n                doUpdateValue([], [], []);\n            }\n            else {\n                doUpdateValue(null, null, null);\n            }\n        }\n        function handleTriggerFocus(e) {\n            var _a;\n            if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = true;\n                doFocus(e);\n            }\n        }\n        function handleTriggerBlur(e) {\n            var _a;\n            if (!((_a = cascaderMenuInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = false;\n                doBlur(e);\n                closeMenu();\n            }\n        }\n        function handleMenuFocus(e) {\n            var _a;\n            if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = true;\n                doFocus(e);\n            }\n        }\n        function handleMenuBlur(e) {\n            var _a;\n            if (!((_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))) {\n                focusedRef.value = false;\n                doBlur(e);\n            }\n        }\n        function handleMenuMousedown(e) {\n            if (!happensIn(e, 'action')) {\n                if (props.multiple && props.filter) {\n                    e.preventDefault();\n                    focusSelectionInput();\n                }\n            }\n        }\n        function handleMenuTabout() {\n            closeMenu(true);\n        }\n        function handleTriggerClick() {\n            if (props.filterable) {\n                openMenu();\n            }\n            else {\n                if (mergedShowRef.value) {\n                    closeMenu(true);\n                }\n                else {\n                    openMenu();\n                }\n            }\n        }\n        function handlePatternInput(e) {\n            patternRef.value = e.target.value;\n        }\n        function handleDeleteOption(option) {\n            const { multiple } = props;\n            const { value: mergedValue } = mergedValueRef;\n            if (multiple && Array.isArray(mergedValue)) {\n                doUncheck(option.value);\n            }\n            else {\n                doUpdateValue(null, null, null);\n            }\n        }\n        function handleKeyDown(e) {\n            switch (e.code) {\n                case 'Space':\n                case 'ArrowDown':\n                case 'ArrowUp':\n                    if (props.filterable && mergedShowRef.value) {\n                        return;\n                    }\n                    e.preventDefault();\n                    break;\n            }\n        }\n        // sync position\n        function syncSelectMenuPosition() {\n            var _a;\n            (_a = selectMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        function syncCascaderMenuPosition() {\n            var _a;\n            (_a = cascaderMenuFollowerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        provide(cascaderInjectionKey, {\n            mergedClsPrefixRef,\n            mergedThemeRef: themeRef,\n            mergedValueRef,\n            checkedKeysRef,\n            indeterminateKeysRef,\n            hoverKeyPathRef,\n            mergedCheckStrategyRef,\n            cascadeRef: toRef(props, 'cascade'),\n            multipleRef: toRef(props, 'multiple'),\n            keyboardKeyRef,\n            hoverKeyRef,\n            remoteRef: toRef(props, 'remote'),\n            loadingKeySetRef,\n            expandTriggerRef: toRef(props, 'expandTrigger'),\n            isMountedRef: useIsMounted(),\n            onLoadRef: toRef(props, 'onLoad'),\n            virtualScrollRef: toRef(props, 'virtualScroll'),\n            optionHeightRef,\n            localeRef,\n            labelFieldRef: toRef(props, 'labelField'),\n            renderLabelRef: toRef(props, 'renderLabel'),\n            syncCascaderMenuPosition,\n            syncSelectMenuPosition,\n            updateKeyboardKey,\n            updateHoverKey,\n            addLoadingKey,\n            deleteLoadingKey,\n            doCheck,\n            doUncheck,\n            closeMenu,\n            handleSelectMenuClickOutside,\n            handleCascaderMenuClickOutside,\n            clearPattern\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = triggerInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { optionArrowColor, optionTextColor, optionTextColorActive, optionTextColorDisabled, optionCheckMarkColor, menuColor, menuBoxShadow, menuDividerColor, menuBorderRadius, menuHeight, optionColorHover, optionHeight, optionFontSize, loadingColor, columnWidth }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-menu-border-radius': menuBorderRadius,\n                '--n-menu-box-shadow': menuBoxShadow,\n                '--n-menu-height': menuHeight,\n                '--n-column-width': columnWidth,\n                '--n-menu-color': menuColor,\n                '--n-menu-divider-color': menuDividerColor,\n                '--n-option-height': optionHeight,\n                '--n-option-font-size': optionFontSize,\n                '--n-option-text-color': optionTextColor,\n                '--n-option-text-color-disabled': optionTextColorDisabled,\n                '--n-option-text-color-active': optionTextColorActive,\n                '--n-option-color-hover': optionColorHover,\n                '--n-option-check-mark-color': optionCheckMarkColor,\n                '--n-option-arrow-color': optionArrowColor,\n                '--n-menu-mask-color': changeColor(menuColor, { alpha: 0.75 }),\n                '--n-loading-color': loadingColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('cascader', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedMethods), { mergedStatus: mergedStatusRef, selectMenuFollowerRef,\n            cascaderMenuFollowerRef,\n            triggerInstRef,\n            selectMenuInstRef,\n            cascaderMenuInstRef, mergedBordered: mergedBorderedRef, mergedClsPrefix: mergedClsPrefixRef, namespace: namespaceRef, mergedValue: mergedValueRef, mergedShow: mergedShowRef, showSelectMenu: showSelectMenuRef, pattern: patternRef, treeMate: treeMateRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, localizedPlaceholder: localizedPlaceholderRef, selectedOption: selectedOptionRef, selectedOptions: selectedOptionsRef, adjustedTo: adjustedToRef, menuModel: menuModelRef, handleMenuTabout,\n            handleMenuFocus,\n            handleMenuBlur,\n            handleMenuKeyUp,\n            handleMenuMousedown,\n            handleTriggerFocus,\n            handleTriggerBlur,\n            handleTriggerClick,\n            handleClear,\n            handleDeleteOption,\n            handlePatternInput,\n            handleKeyDown,\n            handleKeyUp, focused: focusedRef, optionHeight: optionHeightRef, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { class: `${mergedClsPrefix}-cascader` },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInternalSelection, { ref: \"triggerInstRef\", status: this.mergedStatus, clsPrefix: mergedClsPrefix, maxTagCount: this.maxTagCount, bordered: this.mergedBordered, size: this.mergedSize, theme: this.mergedTheme.peers.InternalSelection, themeOverrides: this.mergedTheme.peerOverrides.InternalSelection, active: this.mergedShow, pattern: this.pattern, placeholder: this.localizedPlaceholder, selectedOption: this.selectedOption, selectedOptions: this.selectedOptions, multiple: this.multiple, filterable: this.filterable, clearable: this.clearable, disabled: this.mergedDisabled, focused: this.focused, onFocus: this.handleTriggerFocus, onBlur: this.handleTriggerBlur, onClick: this.handleTriggerClick, onClear: this.handleClear, onDeleteOption: this.handleDeleteOption, onPatternInput: this.handlePatternInput, onKeydown: this.handleKeyDown, onKeyup: this.handleKeyUp }))\n                    }),\n                    h(VFollower, { key: \"cascaderMenu\", ref: \"cascaderMenuFollowerRef\", show: this.mergedShow && !this.showSelectMenu, containerClass: this.namespace, placement: this.placement, width: !this.options.length ? 'target' : undefined, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, to: this.adjustedTo }, {\n                        default: () => {\n                            var _a;\n                            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                            const { menuProps } = this;\n                            return (h(CascaderMenu, Object.assign({}, menuProps, { ref: \"cascaderMenuInstRef\", class: [this.themeClass, menuProps === null || menuProps === void 0 ? void 0 : menuProps.class], value: this.mergedValue, show: this.mergedShow && !this.showSelectMenu, menuModel: this.menuModel, style: [\n                                    this.cssVars,\n                                    menuProps === null || menuProps === void 0 ? void 0 : menuProps.style\n                                ], onFocus: this.handleMenuFocus, onBlur: this.handleMenuBlur, onKeyup: this.handleMenuKeyUp, onMousedown: this.handleMenuMousedown, onTabout: this.handleMenuTabout }), {\n                                action: () => { var _a, _b; return (_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a); },\n                                empty: () => { var _a, _b; return (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a); }\n                            }));\n                        }\n                    }),\n                    h(VFollower, { key: \"selectMenu\", ref: \"selectMenuFollowerRef\", show: this.mergedShow && this.showSelectMenu, containerClass: this.namespace, width: \"target\", placement: this.placement, to: this.adjustedTo, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey }, {\n                        default: () => {\n                            var _a;\n                            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                            const { filterMenuProps } = this;\n                            return (h(CascaderSelectMenu, Object.assign({}, filterMenuProps, { ref: \"selectMenuInstRef\", class: [this.themeClass, filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.class], value: this.mergedValue, show: this.mergedShow && this.showSelectMenu, pattern: this.pattern, multiple: this.multiple, tmNodes: this.treeMate.treeNodes, filter: this.filter, labelField: this.labelField, separator: this.separator, style: [\n                                    this.cssVars,\n                                    filterMenuProps === null || filterMenuProps === void 0 ? void 0 : filterMenuProps.style\n                                ] })));\n                        }\n                    })\n                ]\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}