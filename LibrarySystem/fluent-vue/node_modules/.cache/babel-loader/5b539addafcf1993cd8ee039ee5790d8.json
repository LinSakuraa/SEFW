{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n  name: 'UploadTrigger',\n  props: {\n    abstract: Boolean\n  },\n\n  setup(props, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n\n    if (!NUpload) {\n      throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n    }\n\n    const {\n      mergedClsPrefixRef,\n      mergedDisabledRef,\n      maxReachedRef,\n      listTypeRef,\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition\n    } = NUpload;\n    const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value || maxReachedRef.value) return;\n      openOpenFileDialog();\n    }\n\n    function handleTriggerDragOver(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n\n    function handleTriggerDragEnter(e) {\n      e.preventDefault();\n      dragOverRef.value = true;\n    }\n\n    function handleTriggerDragLeave(e) {\n      e.preventDefault();\n      dragOverRef.value = false;\n    }\n\n    function handleTriggerDrop(e) {\n      e.preventDefault();\n\n      if (!draggerInsideRef.value || mergedDisabledRef.value || maxReachedRef.value) {\n        return;\n      }\n\n      const dataTransfer = e.dataTransfer;\n      const files = dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.files;\n\n      if (files) {\n        handleFileAddition(files);\n      }\n\n      dragOverRef.value = false;\n    }\n\n    return () => {\n      var _a;\n\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return props.abstract ? (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n        handleClick: handleTriggerClick,\n        handleDrop: handleTriggerDrop,\n        handleDragOver: handleTriggerDragOver,\n        handleDragEnter: handleTriggerDragEnter,\n        handleDragLeave: handleTriggerDragLeave\n      }) : h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-trigger`, (mergedDisabledRef.value || maxReachedRef.value) && `${mergedClsPrefix}-upload-trigger--disabled`, isImageCardTypeRef.value && `${mergedClsPrefix}-upload-trigger--image-card`],\n        onClick: handleTriggerClick,\n        onDrop: handleTriggerDrop,\n        onDragover: handleTriggerDragOver,\n        onDragenter: handleTriggerDragEnter,\n        onDragleave: handleTriggerDragLeave\n      }, isImageCardTypeRef.value ? h(NUploadDragger, null, {\n        default: slots.default || (() => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        }))\n      }) : slots);\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/upload/src/UploadTrigger.js"],"names":["h","defineComponent","inject","computed","AddIcon","NBaseIcon","throwError","uploadInjectionKey","NUploadDragger","name","props","abstract","Boolean","setup","slots","NUpload","mergedClsPrefixRef","mergedDisabledRef","maxReachedRef","listTypeRef","dragOverRef","openOpenFileDialog","draggerInsideRef","handleFileAddition","isImageCardTypeRef","value","handleTriggerClick","handleTriggerDragOver","e","preventDefault","handleTriggerDragEnter","handleTriggerDragLeave","handleTriggerDrop","dataTransfer","files","_a","mergedClsPrefix","default","call","handleClick","handleDrop","handleDragOver","handleDragEnter","handleDragLeave","class","onClick","onDrop","onDragover","onDragenter","onDragleave","clsPrefix"],"mappings":"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","sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { AddIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nimport NUploadDragger from './UploadDragger';\nexport default defineComponent({\n    name: 'UploadTrigger',\n    props: {\n        abstract: Boolean\n    },\n    setup(props, { slots }) {\n        const NUpload = inject(uploadInjectionKey, null);\n        if (!NUpload) {\n            throwError('upload-trigger', '`n-upload-trigger` must be placed inside `n-upload`.');\n        }\n        const { mergedClsPrefixRef, mergedDisabledRef, maxReachedRef, listTypeRef, dragOverRef, openOpenFileDialog, draggerInsideRef, handleFileAddition } = NUpload;\n        const isImageCardTypeRef = computed(() => listTypeRef.value === 'image-card');\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value || maxReachedRef.value)\n                return;\n            openOpenFileDialog();\n        }\n        function handleTriggerDragOver(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragEnter(e) {\n            e.preventDefault();\n            dragOverRef.value = true;\n        }\n        function handleTriggerDragLeave(e) {\n            e.preventDefault();\n            dragOverRef.value = false;\n        }\n        function handleTriggerDrop(e) {\n            e.preventDefault();\n            if (!draggerInsideRef.value ||\n                mergedDisabledRef.value ||\n                maxReachedRef.value) {\n                return;\n            }\n            const dataTransfer = e.dataTransfer;\n            const files = dataTransfer === null || dataTransfer === void 0 ? void 0 : dataTransfer.files;\n            if (files) {\n                handleFileAddition(files);\n            }\n            dragOverRef.value = false;\n        }\n        return () => {\n            var _a;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return props.abstract ? ((_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n                handleClick: handleTriggerClick,\n                handleDrop: handleTriggerDrop,\n                handleDragOver: handleTriggerDragOver,\n                handleDragEnter: handleTriggerDragEnter,\n                handleDragLeave: handleTriggerDragLeave\n            })) : (h(\"div\", { class: [\n                    `${mergedClsPrefix}-upload-trigger`,\n                    (mergedDisabledRef.value || maxReachedRef.value) &&\n                        `${mergedClsPrefix}-upload-trigger--disabled`,\n                    isImageCardTypeRef.value &&\n                        `${mergedClsPrefix}-upload-trigger--image-card`\n                ], onClick: handleTriggerClick, onDrop: handleTriggerDrop, onDragover: handleTriggerDragOver, onDragenter: handleTriggerDragEnter, onDragleave: handleTriggerDragLeave }, isImageCardTypeRef.value ? (h(NUploadDragger, null, {\n                default: slots.default ||\n                    (() => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) })))\n            })) : (slots)));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}