{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\nimport { getPadding } from 'seemly';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call, createKey, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { NBaseClose } from '../../_internal';\nimport { cardLight } from '../styles';\nimport style from './styles/index.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nexport const cardBaseProps = {\n  title: String,\n  contentStyle: [Object, String],\n  headerStyle: [Object, String],\n  headerExtraStyle: [Object, String],\n  footerStyle: [Object, String],\n  embedded: Boolean,\n  segmented: {\n    type: [Boolean, Object],\n    default: false\n  },\n  size: {\n    type: String,\n    default: 'medium'\n  },\n  bordered: {\n    type: Boolean,\n    default: true\n  },\n  closable: {\n    type: Boolean,\n    default: false\n  },\n  hoverable: Boolean,\n  role: String,\n  onClose: [Function, Array]\n};\nexport const cardBasePropKeys = keysOf(cardBaseProps);\nconst cardProps = Object.assign(Object.assign({}, useTheme.props), cardBaseProps);\nexport default defineComponent({\n  name: 'Card',\n  props: cardProps,\n\n  setup(props) {\n    const handleCloseClick = () => {\n      const {\n        onClose\n      } = props;\n      if (onClose) call(onClose);\n    };\n\n    const {\n      inlineThemeDisabled,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Card', '-card', style, cardLight, props, mergedClsPrefixRef);\n    const rtlEnabledRef = useRtl('Card', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        size\n      } = props;\n      const {\n        self: {\n          color,\n          colorModal,\n          colorTarget,\n          textColor,\n          titleTextColor,\n          titleFontWeight,\n          borderColor,\n          actionColor,\n          borderRadius,\n          closeColor,\n          closeColorHover,\n          closeColorPressed,\n          lineHeight,\n          closeSize,\n          boxShadow,\n          colorPopover,\n          colorEmbedded,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('titleFontSize', size)]: titleFontSize\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      const {\n        top: paddingTop,\n        left: paddingLeft,\n        bottom: paddingBottom\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-color': props.embedded ? colorEmbedded : color,\n        '--n-color-modal': colorModal,\n        '--n-color-popover': colorPopover,\n        '--n-color-target': colorTarget,\n        '--n-text-color': textColor,\n        '--n-line-height': lineHeight,\n        '--n-action-color': actionColor,\n        '--n-title-text-color': titleTextColor,\n        '--n-title-font-weight': titleFontWeight,\n        '--n-close-color': closeColor,\n        '--n-close-color-hover': closeColorHover,\n        '--n-close-color-pressed': closeColorPressed,\n        '--n-border-color': borderColor,\n        '--n-box-shadow': boxShadow,\n        // size\n        '--n-padding-top': paddingTop,\n        '--n-padding-bottom': paddingBottom,\n        '--n-padding-left': paddingLeft,\n        '--n-font-size': fontSize,\n        '--n-title-font-size': titleFontSize,\n        '--n-close-size': closeSize\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('card', computed(() => {\n      return props.size[0];\n    }), cssVarsRef, props) : undefined;\n    return {\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: themeRef,\n      handleCloseClick,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      segmented,\n      bordered,\n      hoverable,\n      mergedClsPrefix,\n      rtlEnabled,\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-card`, this.themeClass, {\n        [`${mergedClsPrefix}-card--rtl`]: rtlEnabled,\n        [`${mergedClsPrefix}-card--content${typeof segmented !== 'boolean' && segmented.content === 'soft' ? '-soft' : ''}-segmented`]: segmented === true || segmented !== false && segmented.content,\n        [`${mergedClsPrefix}-card--footer${typeof segmented !== 'boolean' && segmented.footer === 'soft' ? '-soft' : ''}-segmented`]: segmented === true || segmented !== false && segmented.footer,\n        [`${mergedClsPrefix}-card--action-segmented`]: segmented === true || segmented !== false && segmented.action,\n        [`${mergedClsPrefix}-card--bordered`]: bordered,\n        [`${mergedClsPrefix}-card--hoverable`]: hoverable\n      }],\n      style: this.cssVars,\n      role: this.role\n    }, resolveWrappedSlot($slots.cover, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-card-cover`,\n      role: \"none\"\n    }, children)), resolveWrappedSlot($slots.header, children => {\n      return children || this.title || this.closable ? h(\"div\", {\n        class: `${mergedClsPrefix}-card-header`,\n        style: this.headerStyle\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-card-header__main`,\n        role: \"heading\"\n      }, children || [this.title]), resolveWrappedSlot($slots['header-extra'], children => children && h(\"div\", {\n        class: `${mergedClsPrefix}-card-header__extra`,\n        style: this.headerExtraStyle\n      }, children)), this.closable ? h(NBaseClose, {\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-card-header__close`,\n        onClick: this.handleCloseClick\n      }) : null) : null;\n    }), resolveWrappedSlot($slots.default, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-card__content`,\n      style: this.contentStyle,\n      role: \"none\"\n    }, children)), resolveWrappedSlot($slots.footer, children => children && [h(\"div\", {\n      class: `${mergedClsPrefix}-card__footer`,\n      style: this.footerStyle,\n      role: \"none\"\n    }, children)]), resolveWrappedSlot($slots.action, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-card__action`,\n      role: \"none\"\n    }, children)));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/card/src/Card.js"],"names":["h","defineComponent","computed","getPadding","useConfig","useTheme","useThemeClass","call","createKey","keysOf","resolveWrappedSlot","NBaseClose","cardLight","style","useRtl","cardBaseProps","title","String","contentStyle","Object","headerStyle","headerExtraStyle","footerStyle","embedded","Boolean","segmented","type","default","size","bordered","closable","hoverable","role","onClose","Function","Array","cardBasePropKeys","cardProps","assign","props","name","setup","handleCloseClick","inlineThemeDisabled","mergedClsPrefixRef","mergedRtlRef","themeRef","rtlEnabledRef","cssVarsRef","self","color","colorModal","colorTarget","textColor","titleTextColor","titleFontWeight","borderColor","actionColor","borderRadius","closeColor","closeColorHover","closeColorPressed","lineHeight","closeSize","boxShadow","colorPopover","colorEmbedded","padding","fontSize","titleFontSize","common","cubicBezierEaseInOut","value","top","paddingTop","left","paddingLeft","bottom","paddingBottom","themeClassHandle","undefined","rtlEnabled","mergedClsPrefix","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","content","footer","action","cover","children","header","clsPrefix","onClick"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed } from 'vue';\nimport { getPadding } from 'seemly';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call, createKey, keysOf, resolveWrappedSlot } from '../../_utils';\nimport { NBaseClose } from '../../_internal';\nimport { cardLight } from '../styles';\nimport style from './styles/index.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nexport const cardBaseProps = {\n    title: String,\n    contentStyle: [Object, String],\n    headerStyle: [Object, String],\n    headerExtraStyle: [Object, String],\n    footerStyle: [Object, String],\n    embedded: Boolean,\n    segmented: {\n        type: [Boolean, Object],\n        default: false\n    },\n    size: {\n        type: String,\n        default: 'medium'\n    },\n    bordered: {\n        type: Boolean,\n        default: true\n    },\n    closable: {\n        type: Boolean,\n        default: false\n    },\n    hoverable: Boolean,\n    role: String,\n    onClose: [Function, Array]\n};\nexport const cardBasePropKeys = keysOf(cardBaseProps);\nconst cardProps = Object.assign(Object.assign({}, useTheme.props), cardBaseProps);\nexport default defineComponent({\n    name: 'Card',\n    props: cardProps,\n    setup(props) {\n        const handleCloseClick = () => {\n            const { onClose } = props;\n            if (onClose)\n                call(onClose);\n        };\n        const { inlineThemeDisabled, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Card', '-card', style, cardLight, props, mergedClsPrefixRef);\n        const rtlEnabledRef = useRtl('Card', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { size } = props;\n            const { self: { color, colorModal, colorTarget, textColor, titleTextColor, titleFontWeight, borderColor, actionColor, borderRadius, closeColor, closeColorHover, closeColorPressed, lineHeight, closeSize, boxShadow, colorPopover, colorEmbedded, [createKey('padding', size)]: padding, [createKey('fontSize', size)]: fontSize, [createKey('titleFontSize', size)]: titleFontSize }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            const { top: paddingTop, left: paddingLeft, bottom: paddingBottom } = getPadding(padding);\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-color': props.embedded ? colorEmbedded : color,\n                '--n-color-modal': colorModal,\n                '--n-color-popover': colorPopover,\n                '--n-color-target': colorTarget,\n                '--n-text-color': textColor,\n                '--n-line-height': lineHeight,\n                '--n-action-color': actionColor,\n                '--n-title-text-color': titleTextColor,\n                '--n-title-font-weight': titleFontWeight,\n                '--n-close-color': closeColor,\n                '--n-close-color-hover': closeColorHover,\n                '--n-close-color-pressed': closeColorPressed,\n                '--n-border-color': borderColor,\n                '--n-box-shadow': boxShadow,\n                // size\n                '--n-padding-top': paddingTop,\n                '--n-padding-bottom': paddingBottom,\n                '--n-padding-left': paddingLeft,\n                '--n-font-size': fontSize,\n                '--n-title-font-size': titleFontSize,\n                '--n-close-size': closeSize\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('card', computed(() => {\n                return props.size[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedTheme: themeRef,\n            handleCloseClick,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { segmented, bordered, hoverable, mergedClsPrefix, rtlEnabled, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-card`,\n                this.themeClass,\n                {\n                    [`${mergedClsPrefix}-card--rtl`]: rtlEnabled,\n                    [`${mergedClsPrefix}-card--content${typeof segmented !== 'boolean' && segmented.content === 'soft'\n                        ? '-soft'\n                        : ''}-segmented`]: segmented === true || (segmented !== false && segmented.content),\n                    [`${mergedClsPrefix}-card--footer${typeof segmented !== 'boolean' && segmented.footer === 'soft'\n                        ? '-soft'\n                        : ''}-segmented`]: segmented === true || (segmented !== false && segmented.footer),\n                    [`${mergedClsPrefix}-card--action-segmented`]: segmented === true || (segmented !== false && segmented.action),\n                    [`${mergedClsPrefix}-card--bordered`]: bordered,\n                    [`${mergedClsPrefix}-card--hoverable`]: hoverable\n                }\n            ], style: this.cssVars, role: this.role },\n            resolveWrappedSlot($slots.cover, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-card-cover`, role: \"none\" }, children))),\n            resolveWrappedSlot($slots.header, (children) => {\n                return children || this.title || this.closable ? (h(\"div\", { class: `${mergedClsPrefix}-card-header`, style: this.headerStyle },\n                    h(\"div\", { class: `${mergedClsPrefix}-card-header__main`, role: \"heading\" }, children || [this.title]),\n                    resolveWrappedSlot($slots['header-extra'], (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-card-header__extra`, style: this.headerExtraStyle }, children))),\n                    this.closable ? (h(NBaseClose, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-card-header__close`, onClick: this.handleCloseClick })) : null)) : null;\n            }),\n            resolveWrappedSlot($slots.default, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-card__content`, style: this.contentStyle, role: \"none\" }, children))),\n            resolveWrappedSlot($slots.footer, (children) => children && [\n                h(\"div\", { class: `${mergedClsPrefix}-card__footer`, style: this.footerStyle, role: \"none\" }, children)\n            ]),\n            resolveWrappedSlot($slots.action, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-card__action`, role: \"none\" }, children)))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}