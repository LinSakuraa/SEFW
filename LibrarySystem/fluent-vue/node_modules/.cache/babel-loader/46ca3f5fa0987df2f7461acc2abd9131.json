{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\nimport { useCompitable } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey } from '../../_utils';\nimport { typographyLight } from '../styles';\nimport style from './styles/text.cssr';\nconst textProps = Object.assign(Object.assign({}, useTheme.props), {\n  code: Boolean,\n  type: {\n    type: String,\n    default: 'default'\n  },\n  delete: Boolean,\n  strong: Boolean,\n  italic: Boolean,\n  underline: Boolean,\n  depth: [String, Number],\n  tag: String,\n  // deprecated\n  as: {\n    type: String,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('text', '`as` is deprecated, please use `tag` instead.');\n      }\n\n      return true;\n    },\n    default: undefined\n  }\n});\nexport default defineComponent({\n  name: 'Text',\n  props: textProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Typography', '-text', style, typographyLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        depth,\n        type\n      } = props;\n      const textColorKey = type === 'default' ? depth === undefined ? 'textColor' : `textColor${depth}Depth` : createKey('textColor', type);\n      const {\n        common: {\n          fontWeightStrong,\n          fontFamilyMono,\n          cubicBezierEaseInOut\n        },\n        self: {\n          codeTextColor,\n          codeBorderRadius,\n          codeColor,\n          codeBorder,\n          [textColorKey]: textColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-font-weight-strong': fontWeightStrong,\n        '--n-font-famliy-mono': fontFamilyMono,\n        '--n-code-border-radius': codeBorderRadius,\n        '--n-code-text-color': codeTextColor,\n        '--n-code-color': codeColor,\n        '--n-code-border': codeBorder\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('text', computed(() => `${props.type[0]}${props.depth || ''}`), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      compitableTag: useCompitable(props, ['as', 'tag']),\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    var _a, _b, _c;\n\n    const {\n      mergedClsPrefix\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    const textClass = [`${mergedClsPrefix}-text`, this.themeClass, {\n      [`${mergedClsPrefix}-text--code`]: this.code,\n      [`${mergedClsPrefix}-text--delete`]: this.delete,\n      [`${mergedClsPrefix}-text--strong`]: this.strong,\n      [`${mergedClsPrefix}-text--italic`]: this.italic,\n      [`${mergedClsPrefix}-text--underline`]: this.underline\n    }];\n    const children = (_c = (_b = this.$slots).default) === null || _c === void 0 ? void 0 : _c.call(_b);\n    return this.code ? h(\"code\", {\n      class: textClass,\n      style: this.cssVars\n    }, this.delete ? h(\"del\", null, children) : children) : this.delete ? h(\"del\", {\n      class: textClass,\n      style: this.cssVars\n    }, children) : h(this.compitableTag || 'span', {\n      class: textClass,\n      style: this.cssVars\n    }, children);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/typography/src/text.js"],"names":["h","defineComponent","computed","useCompitable","useConfig","useTheme","useThemeClass","warn","createKey","typographyLight","style","textProps","Object","assign","props","code","Boolean","type","String","default","delete","strong","italic","underline","depth","Number","tag","as","validator","process","env","NODE_ENV","undefined","name","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","cssVarsRef","textColorKey","common","fontWeightStrong","fontFamilyMono","cubicBezierEaseInOut","self","codeTextColor","codeBorderRadius","codeColor","codeBorder","textColor","value","themeClassHandle","mergedClsPrefix","compitableTag","cssVars","themeClass","onRender","render","_a","_b","_c","call","textClass","children","$slots","class"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed } from 'vue';\nimport { useCompitable } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey } from '../../_utils';\nimport { typographyLight } from '../styles';\nimport style from './styles/text.cssr';\nconst textProps = Object.assign(Object.assign({}, useTheme.props), { code: Boolean, type: {\n        type: String,\n        default: 'default'\n    }, delete: Boolean, strong: Boolean, italic: Boolean, underline: Boolean, depth: [String, Number], tag: String, \n    // deprecated\n    as: {\n        type: String,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('text', '`as` is deprecated, please use `tag` instead.');\n            }\n            return true;\n        },\n        default: undefined\n    } });\nexport default defineComponent({\n    name: 'Text',\n    props: textProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Typography', '-text', style, typographyLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { depth, type } = props;\n            const textColorKey = type === 'default'\n                ? depth === undefined\n                    ? 'textColor'\n                    : `textColor${depth}Depth`\n                : createKey('textColor', type);\n            const { common: { fontWeightStrong, fontFamilyMono, cubicBezierEaseInOut }, self: { codeTextColor, codeBorderRadius, codeColor, codeBorder, [textColorKey]: textColor } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-font-weight-strong': fontWeightStrong,\n                '--n-font-famliy-mono': fontFamilyMono,\n                '--n-code-border-radius': codeBorderRadius,\n                '--n-code-text-color': codeTextColor,\n                '--n-code-color': codeColor,\n                '--n-code-border': codeBorder\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('text', computed(() => `${props.type[0]}${props.depth || ''}`), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            compitableTag: useCompitable(props, ['as', 'tag']),\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a, _b, _c;\n        const { mergedClsPrefix } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        const textClass = [\n            `${mergedClsPrefix}-text`,\n            this.themeClass,\n            {\n                [`${mergedClsPrefix}-text--code`]: this.code,\n                [`${mergedClsPrefix}-text--delete`]: this.delete,\n                [`${mergedClsPrefix}-text--strong`]: this.strong,\n                [`${mergedClsPrefix}-text--italic`]: this.italic,\n                [`${mergedClsPrefix}-text--underline`]: this.underline\n            }\n        ];\n        const children = (_c = (_b = this.$slots).default) === null || _c === void 0 ? void 0 : _c.call(_b);\n        return this.code ? (h(\"code\", { class: textClass, style: this.cssVars }, this.delete ? h(\"del\", null, children) : children)) : this.delete ? (h(\"del\", { class: textClass, style: this.cssVars }, children)) : (h(this.compitableTag || 'span', { class: textClass, style: this.cssVars }, children));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}