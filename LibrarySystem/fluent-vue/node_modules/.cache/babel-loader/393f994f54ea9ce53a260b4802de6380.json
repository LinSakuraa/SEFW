{"ast":null,"code":"import { defineComponent, inject, h, computed } from 'vue';\nimport { resolveSlotWithProps } from '../../_utils';\nimport { inputInjectionKey } from './interface';\nimport { len } from './utils';\nexport default defineComponent({\n  name: 'InputWordCount',\n\n  setup(_, {\n    slots\n  }) {\n    const {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef\n    } = // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    inject(inputInjectionKey);\n    const wordCountRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (mergedValue === null || Array.isArray(mergedValue)) return 0;\n      return len(mergedValue);\n    });\n    return () => {\n      const {\n        value: maxlength\n      } = maxlengthRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      return h(\"span\", {\n        class: `${mergedClsPrefixRef.value}-input-word-count`\n      }, resolveSlotWithProps(slots.default, {\n        value: mergedValue === null || Array.isArray(mergedValue) ? '' : mergedValue\n      }, () => [maxlength === undefined ? wordCountRef.value : `${wordCountRef.value} / ${maxlength}`]));\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/input/src/WordCount.js"],"names":["defineComponent","inject","h","computed","resolveSlotWithProps","inputInjectionKey","len","name","setup","_","slots","mergedValueRef","maxlengthRef","mergedClsPrefixRef","wordCountRef","value","mergedValue","Array","isArray","maxlength","class","default","undefined"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,MAA1B,EAAkCC,CAAlC,EAAqCC,QAArC,QAAqD,KAArD;AACA,SAASC,oBAAT,QAAqC,cAArC;AACA,SAASC,iBAAT,QAAkC,aAAlC;AACA,SAASC,GAAT,QAAoB,SAApB;AACA,eAAeN,eAAe,CAAC;AAC3BO,EAAAA,IAAI,EAAE,gBADqB;;AAE3BC,EAAAA,KAAK,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,EAAe;AAChB,UAAM;AAAEC,MAAAA,cAAF;AAAkBC,MAAAA,YAAlB;AAAgCC,MAAAA;AAAhC,QACN;AACAZ,IAAAA,MAAM,CAACI,iBAAD,CAFN;AAGA,UAAMS,YAAY,GAAGX,QAAQ,CAAC,MAAM;AAChC,YAAM;AAAEY,QAAAA,KAAK,EAAEC;AAAT,UAAyBL,cAA/B;AACA,UAAIK,WAAW,KAAK,IAAhB,IAAwBC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAA5B,EACI,OAAO,CAAP;AACJ,aAAOV,GAAG,CAACU,WAAD,CAAV;AACH,KAL4B,CAA7B;AAMA,WAAO,MAAM;AACT,YAAM;AAAED,QAAAA,KAAK,EAAEI;AAAT,UAAuBP,YAA7B;AACA,YAAM;AAAEG,QAAAA,KAAK,EAAEC;AAAT,UAAyBL,cAA/B;AACA,aAAQT,CAAC,CAAC,MAAD,EAAS;AAAEkB,QAAAA,KAAK,EAAG,GAAEP,kBAAkB,CAACE,KAAM;AAArC,OAAT,EAAoEX,oBAAoB,CAACM,KAAK,CAACW,OAAP,EAAgB;AAC7GN,QAAAA,KAAK,EAAEC,WAAW,KAAK,IAAhB,IAAwBC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAxB,GACD,EADC,GAEDA;AAHuG,OAAhB,EAI9F,MAAM,CACLG,SAAS,KAAKG,SAAd,GACMR,YAAY,CAACC,KADnB,GAEO,GAAED,YAAY,CAACC,KAAM,MAAKI,SAAU,EAHtC,CAJwF,CAAxF,CAAT;AASH,KAZD;AAaH;;AAzB0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, inject, h, computed } from 'vue';\nimport { resolveSlotWithProps } from '../../_utils';\nimport { inputInjectionKey } from './interface';\nimport { len } from './utils';\nexport default defineComponent({\n    name: 'InputWordCount',\n    setup(_, { slots }) {\n        const { mergedValueRef, maxlengthRef, mergedClsPrefixRef } = \n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        inject(inputInjectionKey);\n        const wordCountRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null || Array.isArray(mergedValue))\n                return 0;\n            return len(mergedValue);\n        });\n        return () => {\n            const { value: maxlength } = maxlengthRef;\n            const { value: mergedValue } = mergedValueRef;\n            return (h(\"span\", { class: `${mergedClsPrefixRef.value}-input-word-count` }, resolveSlotWithProps(slots.default, {\n                value: mergedValue === null || Array.isArray(mergedValue)\n                    ? ''\n                    : mergedValue\n            }, () => [\n                maxlength === undefined\n                    ? wordCountRef.value\n                    : `${wordCountRef.value} / ${maxlength}`\n            ])));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}