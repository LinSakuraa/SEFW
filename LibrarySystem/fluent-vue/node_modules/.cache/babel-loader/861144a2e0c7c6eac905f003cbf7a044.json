{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport Feedbacks from './Feedbacks';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), {\n  label: String,\n  labelWidth: [Number, String],\n  labelStyle: [String, Object],\n  labelAlign: String,\n  labelPlacement: String,\n  path: String,\n  first: Boolean,\n  rulePath: String,\n  required: Boolean,\n  showRequireMark: {\n    type: Boolean,\n    default: undefined\n  },\n  requireMarkPlacement: String,\n  showFeedback: {\n    type: Boolean,\n    default: undefined\n  },\n  rule: [Object, Array],\n  size: String,\n  ignorePathChange: Boolean,\n  validationStatus: String,\n  feedback: String,\n  showLabel: {\n    type: Boolean,\n    default: undefined\n  },\n  labelProps: Object\n});\nexport const formItemPropKeys = keysOf(formItemProps); // wrap sync validator\n\nfunction wrapValidator(validator, async) {\n  return (...args) => {\n    try {\n      const validateResult = validator(...args);\n\n      if (!async && (typeof validateResult === 'boolean' || validateResult instanceof Error || Array.isArray(validateResult)) || ( // Error[]\n      validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n        return validateResult;\n      } else if (validateResult === undefined) {\n        return true;\n      } else {\n        warn('form-item/validate', `You return a ${typeof validateResult} ` + 'typed value in the validator method, which is not recommended. Please use ' + (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') + ' typed value instead.');\n        return true;\n      }\n    } catch (err) {\n      warn('form-item/validate', 'An error is catched in the validation, ' + \"so the validation won't be done. Your callback in `validate` method of \" + \"`n-form` or `n-form-item` won't be called in this validation.\");\n      console.error(err); // If returns undefined, async-validator won't trigger callback\n      // so the result will be abandoned, which means not true and not false\n\n      return undefined;\n    }\n  };\n}\n\nexport default defineComponent({\n  name: 'FormItem',\n  props: formItemProps,\n\n  setup(props) {\n    useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const NForm = inject(formInjectionKey, null);\n    const formItemSizeRefs = formItemSize(props);\n    const formItemMiscRefs = formItemMisc(props);\n    const {\n      validationErrored: validationErroredRef\n    } = formItemMiscRefs;\n    const {\n      mergedRequired: mergedRequiredRef,\n      mergedRules: mergedRulesRef\n    } = formItemRule(props);\n    const {\n      mergedSize: mergedSizeRef\n    } = formItemSizeRefs;\n    const {\n      mergedLabelPlacement: labelPlacementRef,\n      mergedLabelAlign: labelTextAlignRef\n    } = formItemMiscRefs;\n    const explainsRef = ref([]);\n    const feedbackIdRef = ref(createId());\n    const hasFeedbackRef = computed(() => {\n      const {\n        feedback\n      } = props;\n      if (feedback !== undefined && feedback !== null) return true;\n      return explainsRef.value.length;\n    });\n    const mergedDisabledRef = NForm ? toRef(NForm.props, 'disabled') : ref(false);\n    const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n    watch(toRef(props, 'path'), () => {\n      if (props.ignorePathChange) return;\n      restoreValidation();\n    });\n\n    function restoreValidation() {\n      explainsRef.value = [];\n      validationErroredRef.value = false;\n\n      if (props.feedback) {\n        feedbackIdRef.value = createId();\n      }\n    }\n\n    function handleContentBlur() {\n      void internalValidate('blur');\n    }\n\n    function handleContentChange() {\n      void internalValidate('change');\n    }\n\n    function handleContentFocus() {\n      void internalValidate('focus');\n    }\n\n    function handleContentInput() {\n      void internalValidate('input');\n    }\n\n    function validate(options, callback) {\n      return __awaiter(this, void 0, void 0, function* () {\n        /** the following code is for compatibility */\n        let trigger;\n        let validateCallback;\n        let shouldRuleBeApplied;\n        let asyncValidatorOptions;\n\n        if (typeof options === 'string') {\n          trigger = options;\n          validateCallback = callback;\n        } else if (options !== null && typeof options === 'object') {\n          trigger = options.trigger;\n          validateCallback = options.callback;\n          shouldRuleBeApplied = options.shouldRuleBeApplied;\n          asyncValidatorOptions = options.options;\n        }\n\n        return yield new Promise((resolve, reject) => {\n          void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({\n            valid,\n            errors\n          }) => {\n            if (valid) {\n              if (validateCallback) {\n                validateCallback();\n              }\n\n              resolve();\n            } else {\n              if (validateCallback) {\n                validateCallback(errors);\n              }\n\n              reject(errors);\n            }\n          });\n        });\n      });\n    }\n\n    const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n      suppressWarning: true\n    }) => __awaiter(this, void 0, void 0, function* () {\n      const {\n        path\n      } = props;\n\n      if (!options) {\n        options = {};\n      } else {\n        if (!options.first) options.first = props.first;\n      }\n\n      const {\n        value: rules\n      } = mergedRulesRef;\n      const value = NForm ? get(NForm.props.model, path || '') : undefined;\n      const activeRules = (!trigger ? rules : rules.filter(rule => {\n        // if (rule.trigger === undefined) return true\n        if (Array.isArray(rule.trigger)) {\n          return rule.trigger.includes(trigger);\n        } else {\n          return rule.trigger === trigger;\n        }\n      })).filter(shouldRuleBeApplied).map(rule => {\n        const shallowClonedRule = Object.assign({}, rule);\n\n        if (shallowClonedRule.validator) {\n          shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n        }\n\n        if (shallowClonedRule.asyncValidator) {\n          shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n        }\n\n        return shallowClonedRule;\n      });\n\n      if (!activeRules.length) {\n        return yield Promise.resolve({\n          valid: true\n        });\n      }\n\n      const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n      const validator = new Schema({\n        [mergedPath]: activeRules\n      });\n      const {\n        validateMessages\n      } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n\n      if (validateMessages) {\n        validator.messages(validateMessages);\n      }\n\n      return yield new Promise(resolve => {\n        void validator.validate({\n          [mergedPath]: value\n        }, options, (errors, fields) => {\n          if (errors === null || errors === void 0 ? void 0 : errors.length) {\n            explainsRef.value = errors.map(error => (error === null || error === void 0 ? void 0 : error.message) || '');\n            validationErroredRef.value = true;\n            resolve({\n              valid: false,\n              errors\n            });\n          } else {\n            restoreValidation();\n            resolve({\n              valid: true\n            });\n          }\n        });\n      });\n    });\n\n    provide(formItemInjectionKey, {\n      path: toRef(props, 'path'),\n      disabled: mergedDisabledRef,\n      mergedSize: formItemSizeRefs.mergedSize,\n      mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n      restoreValidation,\n      handleContentBlur,\n      handleContentChange,\n      handleContentFocus,\n      handleContentInput\n    });\n    const exposedRef = {\n      validate,\n      restoreValidation,\n      internalValidate\n    };\n    const labelElementRef = ref(null);\n    onMounted(() => {\n      if (labelElementRef.value !== null) {\n        NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElementRef.value).width.slice(0, -2)));\n      }\n    });\n    const cssVarsRef = computed(() => {\n      var _a;\n\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        value: labelPlacement\n      } = labelPlacementRef;\n      const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          labelTextColor,\n          asteriskColor,\n          lineHeight,\n          feedbackTextColor,\n          feedbackTextColorWarning,\n          feedbackTextColorError,\n          feedbackPadding,\n          [createKey('labelHeight', size)]: labelHeight,\n          [createKey('blankHeight', size)]: blankHeight,\n          [createKey('feedbackFontSize', size)]: feedbackFontSize,\n          [createKey('feedbackHeight', size)]: feedbackHeight,\n          [createKey('labelPadding', direction)]: labelPadding,\n          [createKey('labelTextAlign', direction)]: labelTextAlign,\n          [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize\n        }\n      } = themeRef.value;\n      let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n\n      if (labelPlacement === 'top') {\n        mergedLabelTextAlign = mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n      }\n\n      const cssVars = {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-line-height': lineHeight,\n        '--n-blank-height': blankHeight,\n        '--n-label-font-size': labelFontSize,\n        '--n-label-text-align': mergedLabelTextAlign,\n        '--n-label-height': labelHeight,\n        '--n-label-padding': labelPadding,\n        '--n-asterisk-color': asteriskColor,\n        '--n-label-text-color': labelTextColor,\n        '--n-feedback-padding': feedbackPadding,\n        '--n-feedback-font-size': feedbackFontSize,\n        '--n-feedback-height': feedbackHeight,\n        '--n-feedback-text-color': feedbackTextColor,\n        '--n-feedback-text-color-warning': feedbackTextColorWarning,\n        '--n-feedback-text-color-error': feedbackTextColorError\n      };\n      return cssVars;\n    });\n    const themeClassHandle = useThemeClass('form-item', computed(() => {\n      var _a;\n\n      return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n    }), cssVarsRef, props);\n    return Object.assign(Object.assign(Object.assign(Object.assign({\n      labelElementRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedRequired: mergedRequiredRef,\n      hasFeedback: hasFeedbackRef,\n      feedbackId: feedbackIdRef,\n      explains: explainsRef\n    }, formItemMiscRefs), formItemSizeRefs), exposedRef), {\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a;\n\n    const {\n      $slots,\n      mergedClsPrefix,\n      mergedShowLabel,\n      mergedShowRequireMark,\n      mergedRequireMarkPlacement,\n      onRender\n    } = this;\n    const renderedShowRequireMark = mergedShowRequireMark !== undefined ? mergedShowRequireMark : this.mergedRequired;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item`, this.themeClass, `${mergedClsPrefix}-form-item--${this.mergedSize}-size`, `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`, !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`],\n      style: this.cssVars\n    }, mergedShowLabel && (this.label || $slots.label) ? h(\"label\", Object.assign({}, this.labelProps, {\n      class: [(_a = this.labelProps) === null || _a === void 0 ? void 0 : _a.class, `${mergedClsPrefix}-form-item-label`],\n      style: this.mergedLabelStyle,\n      ref: \"labelElementRef\"\n    }), mergedRequireMarkPlacement !== 'left' ? $slots.label ? $slots.label() : this.label : null, renderedShowRequireMark ? h(\"span\", {\n      class: `${mergedClsPrefix}-form-item-label__asterisk`\n    }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0') : mergedRequireMarkPlacement === 'right-hanging' && h(\"span\", {\n      class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder`\n    }, '\\u00A0*'), mergedRequireMarkPlacement === 'left' ? $slots.label ? $slots.label() : this.label : null) : null, h(\"div\", {\n      class: [`${mergedClsPrefix}-form-item-blank`, this.mergedValidationStatus && `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`]\n    }, $slots), this.mergedShowFeedback ? h(\"div\", {\n      key: this.feedbackId,\n      class: `${mergedClsPrefix}-form-item-feedback-wrapper`\n    }, h(Transition, {\n      name: \"fade-down-transition\",\n      mode: \"out-in\"\n    }, {\n      default: () => {\n        const feedbacks = h(Feedbacks, {\n          clsPrefix: mergedClsPrefix,\n          explains: this.explains,\n          feedback: this.feedback\n        }, {\n          default: $slots.feedback\n        });\n        const {\n          hasFeedback,\n          mergedValidationStatus\n        } = this;\n        return hasFeedback || $slots.feedback ? mergedValidationStatus === 'warning' ? h(\"div\", {\n          key: \"controlled-warning\",\n          class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning`\n        }, feedbacks) : mergedValidationStatus === 'error' ? h(\"div\", {\n          key: \"controlled-error\",\n          class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error`\n        }, feedbacks) : mergedValidationStatus === 'success' ? h(\"div\", {\n          key: \"controlled-success\",\n          class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success`\n        }, feedbacks) : h(\"div\", {\n          key: \"controlled-default\",\n          class: `${mergedClsPrefix}-form-item-feedback`\n        }, feedbacks) : null;\n      }\n    })) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/form/src/FormItem.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","toRef","ref","provide","inject","watch","Transition","onMounted","Schema","get","createId","formItemInjectionKey","useConfig","useTheme","useThemeClass","warn","createKey","useInjectionInstanceCollection","keysOf","formLight","formItemMisc","formItemSize","formItemRule","Feedbacks","formInjectionKey","formItemInstsInjectionKey","style","formItemProps","Object","assign","props","label","String","labelWidth","Number","labelStyle","labelAlign","labelPlacement","path","first","Boolean","rulePath","required","showRequireMark","type","default","undefined","requireMarkPlacement","showFeedback","rule","Array","size","ignorePathChange","validationStatus","feedback","showLabel","labelProps","formItemPropKeys","wrapValidator","validator","async","args","validateResult","Error","isArray","err","console","error","name","setup","mergedClsPrefixRef","inlineThemeDisabled","NForm","formItemSizeRefs","formItemMiscRefs","validationErrored","validationErroredRef","mergedRequired","mergedRequiredRef","mergedRules","mergedRulesRef","mergedSize","mergedSizeRef","mergedLabelPlacement","labelPlacementRef","mergedLabelAlign","labelTextAlignRef","explainsRef","feedbackIdRef","hasFeedbackRef","length","mergedDisabledRef","themeRef","restoreValidation","handleContentBlur","internalValidate","handleContentChange","handleContentFocus","handleContentInput","validate","options","callback","trigger","validateCallback","shouldRuleBeApplied","asyncValidatorOptions","valid","errors","suppressWarning","rules","model","activeRules","filter","includes","map","shallowClonedRule","asyncValidator","mergedPath","validateMessages","messages","fields","message","disabled","mergedValidationStatus","exposedRef","labelElementRef","deriveMaxChildLabelWidth","getComputedStyle","width","slice","cssVarsRef","_a","direction","common","cubicBezierEaseInOut","self","labelTextColor","asteriskColor","lineHeight","feedbackTextColor","feedbackTextColorWarning","feedbackTextColorError","feedbackPadding","labelHeight","blankHeight","feedbackFontSize","feedbackHeight","labelPadding","labelTextAlign","labelFontSize","mergedLabelTextAlign","cssVars","themeClassHandle","mergedClsPrefix","hasFeedback","feedbackId","explains","themeClass","onRender","render","$slots","mergedShowLabel","mergedShowRequireMark","mergedRequireMarkPlacement","renderedShowRequireMark","class","mergedLabelStyle","mergedShowFeedback","key","mode","feedbacks","clsPrefix"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, toRef, ref, provide, inject, watch, Transition, onMounted } from 'vue';\nimport Schema from 'async-validator';\nimport { get } from 'lodash-es';\nimport { createId } from 'seemly';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, useInjectionInstanceCollection, keysOf } from '../../_utils';\nimport { formLight } from '../styles';\nimport { formItemMisc, formItemSize, formItemRule } from './utils';\nimport Feedbacks from './Feedbacks';\nimport { formInjectionKey, formItemInstsInjectionKey } from './context';\nimport style from './styles/form-item.cssr';\nexport const formItemProps = Object.assign(Object.assign({}, useTheme.props), { label: String, labelWidth: [Number, String], labelStyle: [String, Object], labelAlign: String, labelPlacement: String, path: String, first: Boolean, rulePath: String, required: Boolean, showRequireMark: {\n        type: Boolean,\n        default: undefined\n    }, requireMarkPlacement: String, showFeedback: {\n        type: Boolean,\n        default: undefined\n    }, rule: [Object, Array], size: String, ignorePathChange: Boolean, validationStatus: String, feedback: String, showLabel: {\n        type: Boolean,\n        default: undefined\n    }, labelProps: Object });\nexport const formItemPropKeys = keysOf(formItemProps);\n// wrap sync validator\nfunction wrapValidator(validator, async) {\n    return (...args) => {\n        try {\n            const validateResult = validator(...args);\n            if ((!async &&\n                (typeof validateResult === 'boolean' ||\n                    validateResult instanceof Error ||\n                    Array.isArray(validateResult))) || // Error[]\n                (validateResult === null || validateResult === void 0 ? void 0 : validateResult.then)) {\n                return validateResult;\n            }\n            else if (validateResult === undefined) {\n                return true;\n            }\n            else {\n                warn('form-item/validate', `You return a ${typeof validateResult} ` +\n                    'typed value in the validator method, which is not recommended. Please use ' +\n                    (async ? '`Promise`' : '`boolean`, `Error` or `Promise`') +\n                    ' typed value instead.');\n                return true;\n            }\n        }\n        catch (err) {\n            warn('form-item/validate', 'An error is catched in the validation, ' +\n                \"so the validation won't be done. Your callback in `validate` method of \" +\n                \"`n-form` or `n-form-item` won't be called in this validation.\");\n            console.error(err);\n            // If returns undefined, async-validator won't trigger callback\n            // so the result will be abandoned, which means not true and not false\n            return undefined;\n        }\n    };\n}\nexport default defineComponent({\n    name: 'FormItem',\n    props: formItemProps,\n    setup(props) {\n        useInjectionInstanceCollection(formItemInstsInjectionKey, 'formItems', toRef(props, 'path'));\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const NForm = inject(formInjectionKey, null);\n        const formItemSizeRefs = formItemSize(props);\n        const formItemMiscRefs = formItemMisc(props);\n        const { validationErrored: validationErroredRef } = formItemMiscRefs;\n        const { mergedRequired: mergedRequiredRef, mergedRules: mergedRulesRef } = formItemRule(props);\n        const { mergedSize: mergedSizeRef } = formItemSizeRefs;\n        const { mergedLabelPlacement: labelPlacementRef, mergedLabelAlign: labelTextAlignRef } = formItemMiscRefs;\n        const explainsRef = ref([]);\n        const feedbackIdRef = ref(createId());\n        const hasFeedbackRef = computed(() => {\n            const { feedback } = props;\n            if (feedback !== undefined && feedback !== null)\n                return true;\n            return explainsRef.value.length;\n        });\n        const mergedDisabledRef = NForm\n            ? toRef(NForm.props, 'disabled')\n            : ref(false);\n        const themeRef = useTheme('Form', '-form-item', style, formLight, props, mergedClsPrefixRef);\n        watch(toRef(props, 'path'), () => {\n            if (props.ignorePathChange)\n                return;\n            restoreValidation();\n        });\n        function restoreValidation() {\n            explainsRef.value = [];\n            validationErroredRef.value = false;\n            if (props.feedback) {\n                feedbackIdRef.value = createId();\n            }\n        }\n        function handleContentBlur() {\n            void internalValidate('blur');\n        }\n        function handleContentChange() {\n            void internalValidate('change');\n        }\n        function handleContentFocus() {\n            void internalValidate('focus');\n        }\n        function handleContentInput() {\n            void internalValidate('input');\n        }\n        function validate(options, callback) {\n            return __awaiter(this, void 0, void 0, function* () {\n                /** the following code is for compatibility */\n                let trigger;\n                let validateCallback;\n                let shouldRuleBeApplied;\n                let asyncValidatorOptions;\n                if (typeof options === 'string') {\n                    trigger = options;\n                    validateCallback = callback;\n                }\n                else if (options !== null && typeof options === 'object') {\n                    trigger = options.trigger;\n                    validateCallback = options.callback;\n                    shouldRuleBeApplied = options.shouldRuleBeApplied;\n                    asyncValidatorOptions = options.options;\n                }\n                return yield new Promise((resolve, reject) => {\n                    void internalValidate(trigger, shouldRuleBeApplied, asyncValidatorOptions).then(({ valid, errors }) => {\n                        if (valid) {\n                            if (validateCallback) {\n                                validateCallback();\n                            }\n                            resolve();\n                        }\n                        else {\n                            if (validateCallback) {\n                                validateCallback(errors);\n                            }\n                            reject(errors);\n                        }\n                    });\n                });\n            });\n        }\n        const internalValidate = (trigger = null, shouldRuleBeApplied = () => true, options = {\n            suppressWarning: true\n        }) => __awaiter(this, void 0, void 0, function* () {\n            const { path } = props;\n            if (!options) {\n                options = {};\n            }\n            else {\n                if (!options.first)\n                    options.first = props.first;\n            }\n            const { value: rules } = mergedRulesRef;\n            const value = NForm ? get(NForm.props.model, path || '') : undefined;\n            const activeRules = (!trigger\n                ? rules\n                : rules.filter((rule) => {\n                    // if (rule.trigger === undefined) return true\n                    if (Array.isArray(rule.trigger)) {\n                        return rule.trigger.includes(trigger);\n                    }\n                    else {\n                        return rule.trigger === trigger;\n                    }\n                }))\n                .filter(shouldRuleBeApplied)\n                .map((rule) => {\n                const shallowClonedRule = Object.assign({}, rule);\n                if (shallowClonedRule.validator) {\n                    shallowClonedRule.validator = wrapValidator(shallowClonedRule.validator, false);\n                }\n                if (shallowClonedRule.asyncValidator) {\n                    shallowClonedRule.asyncValidator = wrapValidator(shallowClonedRule.asyncValidator, true);\n                }\n                return shallowClonedRule;\n            });\n            if (!activeRules.length) {\n                return yield Promise.resolve({\n                    valid: true\n                });\n            }\n            const mergedPath = path !== null && path !== void 0 ? path : '__n_no_path__';\n            const validator = new Schema({ [mergedPath]: activeRules });\n            const { validateMessages } = (NForm === null || NForm === void 0 ? void 0 : NForm.props) || {};\n            if (validateMessages) {\n                validator.messages(validateMessages);\n            }\n            return yield new Promise((resolve) => {\n                void validator.validate({ [mergedPath]: value }, options, (errors, fields) => {\n                    if (errors === null || errors === void 0 ? void 0 : errors.length) {\n                        explainsRef.value = errors.map((error) => (error === null || error === void 0 ? void 0 : error.message) || '');\n                        validationErroredRef.value = true;\n                        resolve({\n                            valid: false,\n                            errors\n                        });\n                    }\n                    else {\n                        restoreValidation();\n                        resolve({\n                            valid: true\n                        });\n                    }\n                });\n            });\n        });\n        provide(formItemInjectionKey, {\n            path: toRef(props, 'path'),\n            disabled: mergedDisabledRef,\n            mergedSize: formItemSizeRefs.mergedSize,\n            mergedValidationStatus: formItemMiscRefs.mergedValidationStatus,\n            restoreValidation,\n            handleContentBlur,\n            handleContentChange,\n            handleContentFocus,\n            handleContentInput\n        });\n        const exposedRef = {\n            validate,\n            restoreValidation,\n            internalValidate\n        };\n        const labelElementRef = ref(null);\n        onMounted(() => {\n            if (labelElementRef.value !== null) {\n                NForm === null || NForm === void 0 ? void 0 : NForm.deriveMaxChildLabelWidth(Number(getComputedStyle(labelElementRef.value).width.slice(0, -2)));\n            }\n        });\n        const cssVarsRef = computed(() => {\n            var _a;\n            const { value: size } = mergedSizeRef;\n            const { value: labelPlacement } = labelPlacementRef;\n            const direction = labelPlacement === 'top' ? 'vertical' : 'horizontal';\n            const { common: { cubicBezierEaseInOut }, self: { labelTextColor, asteriskColor, lineHeight, feedbackTextColor, feedbackTextColorWarning, feedbackTextColorError, feedbackPadding, [createKey('labelHeight', size)]: labelHeight, [createKey('blankHeight', size)]: blankHeight, [createKey('feedbackFontSize', size)]: feedbackFontSize, [createKey('feedbackHeight', size)]: feedbackHeight, [createKey('labelPadding', direction)]: labelPadding, [createKey('labelTextAlign', direction)]: labelTextAlign, [createKey(createKey('labelFontSize', labelPlacement), size)]: labelFontSize } } = themeRef.value;\n            let mergedLabelTextAlign = (_a = labelTextAlignRef.value) !== null && _a !== void 0 ? _a : labelTextAlign;\n            if (labelPlacement === 'top') {\n                mergedLabelTextAlign =\n                    mergedLabelTextAlign === 'right' ? 'flex-end' : 'flex-start';\n            }\n            const cssVars = {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-line-height': lineHeight,\n                '--n-blank-height': blankHeight,\n                '--n-label-font-size': labelFontSize,\n                '--n-label-text-align': mergedLabelTextAlign,\n                '--n-label-height': labelHeight,\n                '--n-label-padding': labelPadding,\n                '--n-asterisk-color': asteriskColor,\n                '--n-label-text-color': labelTextColor,\n                '--n-feedback-padding': feedbackPadding,\n                '--n-feedback-font-size': feedbackFontSize,\n                '--n-feedback-height': feedbackHeight,\n                '--n-feedback-text-color': feedbackTextColor,\n                '--n-feedback-text-color-warning': feedbackTextColorWarning,\n                '--n-feedback-text-color-error': feedbackTextColorError\n            };\n            return cssVars;\n        });\n        const themeClassHandle = useThemeClass('form-item', computed(() => {\n            var _a;\n            return `${mergedSizeRef.value[0]}${labelPlacementRef.value[0]}${((_a = labelTextAlignRef.value) === null || _a === void 0 ? void 0 : _a[0]) || ''}`;\n        }), cssVarsRef, props);\n        return Object.assign(Object.assign(Object.assign(Object.assign({ labelElementRef, mergedClsPrefix: mergedClsPrefixRef, mergedRequired: mergedRequiredRef, hasFeedback: hasFeedbackRef, feedbackId: feedbackIdRef, explains: explainsRef }, formItemMiscRefs), formItemSizeRefs), exposedRef), { cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a;\n        const { $slots, mergedClsPrefix, mergedShowLabel, mergedShowRequireMark, mergedRequireMarkPlacement, onRender } = this;\n        const renderedShowRequireMark = mergedShowRequireMark !== undefined\n            ? mergedShowRequireMark\n            : this.mergedRequired;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-form-item`,\n                this.themeClass,\n                `${mergedClsPrefix}-form-item--${this.mergedSize}-size`,\n                `${mergedClsPrefix}-form-item--${this.mergedLabelPlacement}-labelled`,\n                !mergedShowLabel && `${mergedClsPrefix}-form-item--no-label`\n            ], style: this.cssVars },\n            mergedShowLabel && (this.label || $slots.label) ? (h(\"label\", Object.assign({}, this.labelProps, { class: [\n                    (_a = this.labelProps) === null || _a === void 0 ? void 0 : _a.class,\n                    `${mergedClsPrefix}-form-item-label`\n                ], style: this.mergedLabelStyle, ref: \"labelElementRef\" }),\n                mergedRequireMarkPlacement !== 'left'\n                    ? $slots.label\n                        ? $slots.label()\n                        : this.label\n                    : null,\n                renderedShowRequireMark ? (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk` }, mergedRequireMarkPlacement !== 'left' ? '\\u00A0*' : '*\\u00A0')) : (mergedRequireMarkPlacement === 'right-hanging' && (h(\"span\", { class: `${mergedClsPrefix}-form-item-label__asterisk-placeholder` }, '\\u00A0*'))),\n                mergedRequireMarkPlacement === 'left'\n                    ? $slots.label\n                        ? $slots.label()\n                        : this.label\n                    : null)) : null,\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-form-item-blank`,\n                    this.mergedValidationStatus &&\n                        `${mergedClsPrefix}-form-item-blank--${this.mergedValidationStatus}`\n                ] }, $slots),\n            this.mergedShowFeedback ? (h(\"div\", { key: this.feedbackId, class: `${mergedClsPrefix}-form-item-feedback-wrapper` },\n                h(Transition, { name: \"fade-down-transition\", mode: \"out-in\" }, {\n                    default: () => {\n                        const feedbacks = (h(Feedbacks, { clsPrefix: mergedClsPrefix, explains: this.explains, feedback: this.feedback }, { default: $slots.feedback }));\n                        const { hasFeedback, mergedValidationStatus } = this;\n                        return hasFeedback || $slots.feedback ? (mergedValidationStatus === 'warning' ? (h(\"div\", { key: \"controlled-warning\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--warning` }, feedbacks)) : mergedValidationStatus === 'error' ? (h(\"div\", { key: \"controlled-error\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--error` }, feedbacks)) : mergedValidationStatus === 'success' ? (h(\"div\", { key: \"controlled-success\", class: `${mergedClsPrefix}-form-item-feedback ${mergedClsPrefix}-form-item-feedback--success` }, feedbacks)) : (h(\"div\", { key: \"controlled-default\", class: `${mergedClsPrefix}-form-item-feedback` }, feedbacks))) : null;\n                    }\n                }))) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}