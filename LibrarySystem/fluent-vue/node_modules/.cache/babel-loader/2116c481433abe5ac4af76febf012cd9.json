{"ast":null,"code":"import { h, computed, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'TransferHeader',\n  props: {\n    source: {\n      type: Boolean,\n      default: false\n    },\n    onChange: {\n      type: Function,\n      required: true\n    },\n    title: String\n  },\n\n  setup(props) {\n    const {\n      srcOptsRef,\n      tgtOptsRef,\n      srcCheckedStatusRef,\n      tgtCheckedStatusRef,\n      srcCheckedValuesRef,\n      tgtCheckedValuesRef,\n      mergedThemeRef,\n      disabledRef,\n      mergedClsPrefixRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(transferInjectionKey);\n    const checkboxPropsRef = computed(() => {\n      const {\n        source\n      } = props;\n\n      if (source) {\n        return srcCheckedStatusRef.value;\n      } else {\n        return tgtCheckedStatusRef.value;\n      }\n    });\n    return () => {\n      const {\n        source\n      } = props;\n      const {\n        value: checkboxProps\n      } = checkboxPropsRef;\n      const {\n        value: mergedTheme\n      } = mergedThemeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__checkbox`\n      }, h(NCheckbox, {\n        theme: mergedTheme.peers.Checkbox,\n        themeOverrides: mergedTheme.peerOverrides.Checkbox,\n        checked: checkboxProps.checked,\n        indeterminate: checkboxProps.indeterminate,\n        disabled: checkboxProps.disabled || disabledRef.value,\n        onUpdateChecked: props.onChange\n      })), h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__header`\n      }, props.title), h(\"div\", {\n        class: `${mergedClsPrefix}-transfer-list-header__extra`\n      }, source ? srcCheckedValuesRef.value.length : tgtCheckedValuesRef.value.length, \"/\", source ? srcOptsRef.value.length : tgtOptsRef.value.length));\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/transfer/src/TransferHeader.js"],"names":["h","computed","defineComponent","inject","NCheckbox","transferInjectionKey","name","props","source","type","Boolean","default","onChange","Function","required","title","String","setup","srcOptsRef","tgtOptsRef","srcCheckedStatusRef","tgtCheckedStatusRef","srcCheckedValuesRef","tgtCheckedValuesRef","mergedThemeRef","disabledRef","mergedClsPrefixRef","checkboxPropsRef","value","checkboxProps","mergedTheme","mergedClsPrefix","class","theme","peers","Checkbox","themeOverrides","peerOverrides","checked","indeterminate","disabled","onUpdateChecked","length"],"mappings":"AAAA,SAASA,CAAT,EAAYC,QAAZ,EAAsBC,eAAtB,EAAuCC,MAAvC,QAAqD,KAArD;AACA,SAASC,SAAT,QAA0B,gBAA1B;AACA,SAASC,oBAAT,QAAqC,aAArC;AACA,eAAeH,eAAe,CAAC;AAC3BI,EAAAA,IAAI,EAAE,gBADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAEC,OADF;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADL;AAKHC,IAAAA,QAAQ,EAAE;AACNH,MAAAA,IAAI,EAAEI,QADA;AAENC,MAAAA,QAAQ,EAAE;AAFJ,KALP;AASHC,IAAAA,KAAK,EAAEC;AATJ,GAFoB;;AAa3BC,EAAAA,KAAK,CAACV,KAAD,EAAQ;AACT,UAAM;AAAEW,MAAAA,UAAF;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA,mBAA1B;AAA+CC,MAAAA,mBAA/C;AAAoEC,MAAAA,mBAApE;AAAyFC,MAAAA,mBAAzF;AAA8GC,MAAAA,cAA9G;AAA8HC,MAAAA,WAA9H;AAA2IC,MAAAA,kBAA3I,CACN;;AADM,QAEDvB,MAAM,CAACE,oBAAD,CAFX;AAGA,UAAMsB,gBAAgB,GAAG1B,QAAQ,CAAC,MAAM;AACpC,YAAM;AAAEO,QAAAA;AAAF,UAAaD,KAAnB;;AACA,UAAIC,MAAJ,EAAY;AACR,eAAOY,mBAAmB,CAACQ,KAA3B;AACH,OAFD,MAGK;AACD,eAAOP,mBAAmB,CAACO,KAA3B;AACH;AACJ,KARgC,CAAjC;AASA,WAAO,MAAM;AACT,YAAM;AAAEpB,QAAAA;AAAF,UAAaD,KAAnB;AACA,YAAM;AAAEqB,QAAAA,KAAK,EAAEC;AAAT,UAA2BF,gBAAjC;AACA,YAAM;AAAEC,QAAAA,KAAK,EAAEE;AAAT,UAAyBN,cAA/B;AACA,YAAM;AAAEI,QAAAA,KAAK,EAAEG;AAAT,UAA6BL,kBAAnC;AACA,aAAQ1B,CAAC,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,OAAR,EACL/B,CAAC,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,OAAR,EACG/B,CAAC,CAACI,SAAD,EAAY;AAAE6B,QAAAA,KAAK,EAAEH,WAAW,CAACI,KAAZ,CAAkBC,QAA3B;AAAqCC,QAAAA,cAAc,EAAEN,WAAW,CAACO,aAAZ,CAA0BF,QAA/E;AAAyFG,QAAAA,OAAO,EAAET,aAAa,CAACS,OAAhH;AAAyHC,QAAAA,aAAa,EAAEV,aAAa,CAACU,aAAtJ;AAAqKC,QAAAA,QAAQ,EAAEX,aAAa,CAACW,QAAd,IAA0Bf,WAAW,CAACG,KAArN;AAA4Na,QAAAA,eAAe,EAAElC,KAAK,CAACK;AAAnP,OAAZ,CADJ,CADI,EAGLZ,CAAC,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,OAAR,EAAsExB,KAAK,CAACQ,KAA5E,CAHI,EAILf,CAAC,CAAC,KAAD,EAAQ;AAAEgC,QAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,OAAR,EACGvB,MAAM,GACAc,mBAAmB,CAACM,KAApB,CAA0Bc,MAD1B,GAEAnB,mBAAmB,CAACK,KAApB,CAA0Bc,MAHnC,EAIG,GAJH,EAKGlC,MAAM,GAAGU,UAAU,CAACU,KAAX,CAAiBc,MAApB,GAA6BvB,UAAU,CAACS,KAAX,CAAiBc,MALvD,CAJI,CAAT;AAUH,KAfD;AAgBH;;AA1C0B,CAAD,CAA9B","sourcesContent":["import { h, computed, defineComponent, inject } from 'vue';\nimport { NCheckbox } from '../../checkbox';\nimport { transferInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'TransferHeader',\n    props: {\n        source: {\n            type: Boolean,\n            default: false\n        },\n        onChange: {\n            type: Function,\n            required: true\n        },\n        title: String\n    },\n    setup(props) {\n        const { srcOptsRef, tgtOptsRef, srcCheckedStatusRef, tgtCheckedStatusRef, srcCheckedValuesRef, tgtCheckedValuesRef, mergedThemeRef, disabledRef, mergedClsPrefixRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(transferInjectionKey);\n        const checkboxPropsRef = computed(() => {\n            const { source } = props;\n            if (source) {\n                return srcCheckedStatusRef.value;\n            }\n            else {\n                return tgtCheckedStatusRef.value;\n            }\n        });\n        return () => {\n            const { source } = props;\n            const { value: checkboxProps } = checkboxPropsRef;\n            const { value: mergedTheme } = mergedThemeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header` },\n                h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__checkbox` },\n                    h(NCheckbox, { theme: mergedTheme.peers.Checkbox, themeOverrides: mergedTheme.peerOverrides.Checkbox, checked: checkboxProps.checked, indeterminate: checkboxProps.indeterminate, disabled: checkboxProps.disabled || disabledRef.value, onUpdateChecked: props.onChange })),\n                h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__header` }, props.title),\n                h(\"div\", { class: `${mergedClsPrefix}-transfer-list-header__extra` },\n                    source\n                        ? srcCheckedValuesRef.value.length\n                        : tgtCheckedValuesRef.value.length,\n                    \"/\",\n                    source ? srcOptsRef.value.length : tgtOptsRef.value.length)));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}