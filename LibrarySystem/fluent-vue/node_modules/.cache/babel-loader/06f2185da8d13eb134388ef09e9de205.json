{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { uniqueId } from \"@microsoft/fast-web-utilities\";\nimport { observable } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * A List Picker Menu Custom HTML Element.\n *\n * @alpha\n */\n\nexport class PickerMenu extends FoundationElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Children that are list items\n     *\n     * @internal\n     */\n\n    this.optionElements = [];\n  }\n\n  menuElementsChanged() {\n    this.updateOptions();\n  }\n\n  headerElementsChanged() {\n    this.updateOptions();\n  }\n\n  footerElementsChanged() {\n    this.updateOptions();\n  }\n\n  updateOptions() {\n    this.optionElements.splice(0, this.optionElements.length);\n    this.addSlottedListItems(this.headerElements);\n    this.addSlottedListItems(this.menuElements);\n    this.addSlottedListItems(this.footerElements);\n    this.$emit(\"optionsupdated\", {\n      bubbles: false\n    });\n  }\n\n  addSlottedListItems(slotChildren) {\n    if (slotChildren === undefined) {\n      return;\n    }\n\n    slotChildren.forEach(child => {\n      if (child.nodeType === 1 && child.getAttribute(\"role\") === \"listitem\") {\n        child.id = child.id || uniqueId(\"option-\");\n        this.optionElements.push(child);\n      }\n    });\n  }\n\n}\n\n__decorate([observable], PickerMenu.prototype, \"menuElements\", void 0);\n\n__decorate([observable], PickerMenu.prototype, \"headerElements\", void 0);\n\n__decorate([observable], PickerMenu.prototype, \"footerElements\", void 0);\n\n__decorate([observable], PickerMenu.prototype, \"suggestionsAvailableText\", void 0);","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/picker/picker-menu.js"],"names":["__decorate","uniqueId","observable","FoundationElement","PickerMenu","constructor","arguments","optionElements","menuElementsChanged","updateOptions","headerElementsChanged","footerElementsChanged","splice","length","addSlottedListItems","headerElements","menuElements","footerElements","$emit","bubbles","slotChildren","undefined","forEach","child","nodeType","getAttribute","id","push","prototype"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,+BAAzB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,UAAN,SAAyBD,iBAAzB,CAA2C;AAC9CE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA;AACR;AACA;AACA;AACA;;AACQ,SAAKC,cAAL,GAAsB,EAAtB;AACH;;AACDC,EAAAA,mBAAmB,GAAG;AAClB,SAAKC,aAAL;AACH;;AACDC,EAAAA,qBAAqB,GAAG;AACpB,SAAKD,aAAL;AACH;;AACDE,EAAAA,qBAAqB,GAAG;AACpB,SAAKF,aAAL;AACH;;AACDA,EAAAA,aAAa,GAAG;AACZ,SAAKF,cAAL,CAAoBK,MAApB,CAA2B,CAA3B,EAA8B,KAAKL,cAAL,CAAoBM,MAAlD;AACA,SAAKC,mBAAL,CAAyB,KAAKC,cAA9B;AACA,SAAKD,mBAAL,CAAyB,KAAKE,YAA9B;AACA,SAAKF,mBAAL,CAAyB,KAAKG,cAA9B;AACA,SAAKC,KAAL,CAAW,gBAAX,EAA6B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA7B;AACH;;AACDL,EAAAA,mBAAmB,CAACM,YAAD,EAAe;AAC9B,QAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC5B;AACH;;AACDD,IAAAA,YAAY,CAACE,OAAb,CAAsBC,KAAD,IAAW;AAC5B,UAAIA,KAAK,CAACC,QAAN,KAAmB,CAAnB,IAAwBD,KAAK,CAACE,YAAN,CAAmB,MAAnB,MAA+B,UAA3D,EAAuE;AACnEF,QAAAA,KAAK,CAACG,EAAN,GAAWH,KAAK,CAACG,EAAN,IAAYzB,QAAQ,CAAC,SAAD,CAA/B;AACA,aAAKM,cAAL,CAAoBoB,IAApB,CAAyBJ,KAAzB;AACH;AACJ,KALD;AAMH;;AApC6C;;AAsClDvB,UAAU,CAAC,CACPE,UADO,CAAD,EAEPE,UAAU,CAACwB,SAFJ,EAEe,cAFf,EAE+B,KAAK,CAFpC,CAAV;;AAGA5B,UAAU,CAAC,CACPE,UADO,CAAD,EAEPE,UAAU,CAACwB,SAFJ,EAEe,gBAFf,EAEiC,KAAK,CAFtC,CAAV;;AAGA5B,UAAU,CAAC,CACPE,UADO,CAAD,EAEPE,UAAU,CAACwB,SAFJ,EAEe,gBAFf,EAEiC,KAAK,CAFtC,CAAV;;AAGA5B,UAAU,CAAC,CACPE,UADO,CAAD,EAEPE,UAAU,CAACwB,SAFJ,EAEe,0BAFf,EAE2C,KAAK,CAFhD,CAAV","sourcesContent":["import { __decorate } from \"tslib\";\nimport { uniqueId } from \"@microsoft/fast-web-utilities\";\nimport { observable } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * A List Picker Menu Custom HTML Element.\n *\n * @alpha\n */\nexport class PickerMenu extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Children that are list items\n         *\n         * @internal\n         */\n        this.optionElements = [];\n    }\n    menuElementsChanged() {\n        this.updateOptions();\n    }\n    headerElementsChanged() {\n        this.updateOptions();\n    }\n    footerElementsChanged() {\n        this.updateOptions();\n    }\n    updateOptions() {\n        this.optionElements.splice(0, this.optionElements.length);\n        this.addSlottedListItems(this.headerElements);\n        this.addSlottedListItems(this.menuElements);\n        this.addSlottedListItems(this.footerElements);\n        this.$emit(\"optionsupdated\", { bubbles: false });\n    }\n    addSlottedListItems(slotChildren) {\n        if (slotChildren === undefined) {\n            return;\n        }\n        slotChildren.forEach((child) => {\n            if (child.nodeType === 1 && child.getAttribute(\"role\") === \"listitem\") {\n                child.id = child.id || uniqueId(\"option-\");\n                this.optionElements.push(child);\n            }\n        });\n    }\n}\n__decorate([\n    observable\n], PickerMenu.prototype, \"menuElements\", void 0);\n__decorate([\n    observable\n], PickerMenu.prototype, \"headerElements\", void 0);\n__decorate([\n    observable\n], PickerMenu.prototype, \"footerElements\", void 0);\n__decorate([\n    observable\n], PickerMenu.prototype, \"suggestionsAvailableText\", void 0);\n"]},"metadata":{},"sourceType":"module"}