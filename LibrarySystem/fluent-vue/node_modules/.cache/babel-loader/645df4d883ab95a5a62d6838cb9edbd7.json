{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { ARIAGlobalStatesAndProperties, StartEnd } from \"../patterns/index\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { FormAssociatedButton } from \"./button.form-associated\";\n/**\n * A Button Custom HTML Element.\n * Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button | <button> element }.\n *\n * @public\n */\n\nexport class Button extends FormAssociatedButton {\n  constructor() {\n    super(...arguments);\n    /**\n     * Prevent events to propagate if disabled and has no slotted content wrapped in HTML elements\n     * @internal\n     */\n\n    this.handleClick = e => {\n      var _a;\n\n      if (this.disabled && ((_a = this.defaultSlottedContent) === null || _a === void 0 ? void 0 : _a.length) <= 1) {\n        e.stopPropagation();\n      }\n    };\n    /**\n     * Submits the parent form\n     */\n\n\n    this.handleSubmission = () => {\n      if (!this.form) {\n        return;\n      }\n\n      const attached = this.proxy.isConnected;\n\n      if (!attached) {\n        this.attachProxy();\n      } // Browser support for requestSubmit is not comprehensive\n      // so click the proxy if it isn't supported\n\n\n      typeof this.form.requestSubmit === \"function\" ? this.form.requestSubmit(this.proxy) : this.proxy.click();\n\n      if (!attached) {\n        this.detachProxy();\n      }\n    };\n    /**\n     * Resets the parent form\n     */\n\n\n    this.handleFormReset = () => {\n      var _a;\n\n      (_a = this.form) === null || _a === void 0 ? void 0 : _a.reset();\n    };\n    /**\n     * Overrides the focus call for where delegatesFocus is unsupported.\n     * This check works for Chrome, Edge Chromium, FireFox, and Safari\n     * Relevant PR on the Firefox browser: https://phabricator.services.mozilla.com/D123858\n     */\n\n\n    this.handleUnsupportedDelegatesFocus = () => {\n      var _a; // Check to see if delegatesFocus is supported\n\n\n      if (window.ShadowRoot && !window.ShadowRoot.prototype.hasOwnProperty(\"delegatesFocus\") && ((_a = this.$fastController.definition.shadowOptions) === null || _a === void 0 ? void 0 : _a.delegatesFocus)) {\n        this.focus = () => {\n          this.control.focus();\n        };\n      }\n    };\n  }\n\n  formactionChanged() {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.formAction = this.formaction;\n    }\n  }\n\n  formenctypeChanged() {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.formEnctype = this.formenctype;\n    }\n  }\n\n  formmethodChanged() {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.formMethod = this.formmethod;\n    }\n  }\n\n  formnovalidateChanged() {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.formNoValidate = this.formnovalidate;\n    }\n  }\n\n  formtargetChanged() {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.formTarget = this.formtarget;\n    }\n  }\n\n  typeChanged(previous, next) {\n    if (this.proxy instanceof HTMLInputElement) {\n      this.proxy.type = this.type;\n    }\n\n    next === \"submit\" && this.addEventListener(\"click\", this.handleSubmission);\n    previous === \"submit\" && this.removeEventListener(\"click\", this.handleSubmission);\n    next === \"reset\" && this.addEventListener(\"click\", this.handleFormReset);\n    previous === \"reset\" && this.removeEventListener(\"click\", this.handleFormReset);\n  }\n  /**\n   * @internal\n   */\n\n\n  connectedCallback() {\n    var _a;\n\n    super.connectedCallback();\n    this.proxy.setAttribute(\"type\", this.type);\n    this.handleUnsupportedDelegatesFocus();\n    const elements = Array.from((_a = this.control) === null || _a === void 0 ? void 0 : _a.children);\n\n    if (elements) {\n      elements.forEach(span => {\n        span.addEventListener(\"click\", this.handleClick);\n      });\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  disconnectedCallback() {\n    var _a;\n\n    super.disconnectedCallback();\n    const elements = Array.from((_a = this.control) === null || _a === void 0 ? void 0 : _a.children);\n\n    if (elements) {\n      elements.forEach(span => {\n        span.removeEventListener(\"click\", this.handleClick);\n      });\n    }\n  }\n\n}\n\n__decorate([attr({\n  mode: \"boolean\"\n})], Button.prototype, \"autofocus\", void 0);\n\n__decorate([attr({\n  attribute: \"form\"\n})], Button.prototype, \"formId\", void 0);\n\n__decorate([attr], Button.prototype, \"formaction\", void 0);\n\n__decorate([attr], Button.prototype, \"formenctype\", void 0);\n\n__decorate([attr], Button.prototype, \"formmethod\", void 0);\n\n__decorate([attr({\n  mode: \"boolean\"\n})], Button.prototype, \"formnovalidate\", void 0);\n\n__decorate([attr], Button.prototype, \"formtarget\", void 0);\n\n__decorate([attr], Button.prototype, \"type\", void 0);\n\n__decorate([observable], Button.prototype, \"defaultSlottedContent\", void 0);\n/**\n * Includes ARIA states and properties relating to the ARIA button role\n *\n * @public\n */\n\n\nexport class DelegatesARIAButton {}\n\n__decorate([attr({\n  attribute: \"aria-expanded\",\n  mode: \"fromView\"\n})], DelegatesARIAButton.prototype, \"ariaExpanded\", void 0);\n\n__decorate([attr({\n  attribute: \"aria-pressed\",\n  mode: \"fromView\"\n})], DelegatesARIAButton.prototype, \"ariaPressed\", void 0);\n\napplyMixins(DelegatesARIAButton, ARIAGlobalStatesAndProperties);\napplyMixins(Button, StartEnd, DelegatesARIAButton);","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/button/button.js"],"names":["__decorate","attr","observable","ARIAGlobalStatesAndProperties","StartEnd","applyMixins","FormAssociatedButton","Button","constructor","arguments","handleClick","e","_a","disabled","defaultSlottedContent","length","stopPropagation","handleSubmission","form","attached","proxy","isConnected","attachProxy","requestSubmit","click","detachProxy","handleFormReset","reset","handleUnsupportedDelegatesFocus","window","ShadowRoot","prototype","hasOwnProperty","$fastController","definition","shadowOptions","delegatesFocus","focus","control","formactionChanged","HTMLInputElement","formAction","formaction","formenctypeChanged","formEnctype","formenctype","formmethodChanged","formMethod","formmethod","formnovalidateChanged","formNoValidate","formnovalidate","formtargetChanged","formTarget","formtarget","typeChanged","previous","next","type","addEventListener","removeEventListener","connectedCallback","setAttribute","elements","Array","from","children","forEach","span","disconnectedCallback","mode","attribute","DelegatesARIAButton"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { ARIAGlobalStatesAndProperties, StartEnd, } from \"../patterns/index\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { FormAssociatedButton } from \"./button.form-associated\";\n/**\n * A Button Custom HTML Element.\n * Based largely on the {@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button | <button> element }.\n *\n * @public\n */\nexport class Button extends FormAssociatedButton {\n    constructor() {\n        super(...arguments);\n        /**\n         * Prevent events to propagate if disabled and has no slotted content wrapped in HTML elements\n         * @internal\n         */\n        this.handleClick = (e) => {\n            var _a;\n            if (this.disabled && ((_a = this.defaultSlottedContent) === null || _a === void 0 ? void 0 : _a.length) <= 1) {\n                e.stopPropagation();\n            }\n        };\n        /**\n         * Submits the parent form\n         */\n        this.handleSubmission = () => {\n            if (!this.form) {\n                return;\n            }\n            const attached = this.proxy.isConnected;\n            if (!attached) {\n                this.attachProxy();\n            }\n            // Browser support for requestSubmit is not comprehensive\n            // so click the proxy if it isn't supported\n            typeof this.form.requestSubmit === \"function\"\n                ? this.form.requestSubmit(this.proxy)\n                : this.proxy.click();\n            if (!attached) {\n                this.detachProxy();\n            }\n        };\n        /**\n         * Resets the parent form\n         */\n        this.handleFormReset = () => {\n            var _a;\n            (_a = this.form) === null || _a === void 0 ? void 0 : _a.reset();\n        };\n        /**\n         * Overrides the focus call for where delegatesFocus is unsupported.\n         * This check works for Chrome, Edge Chromium, FireFox, and Safari\n         * Relevant PR on the Firefox browser: https://phabricator.services.mozilla.com/D123858\n         */\n        this.handleUnsupportedDelegatesFocus = () => {\n            var _a;\n            // Check to see if delegatesFocus is supported\n            if (window.ShadowRoot &&\n                !window.ShadowRoot.prototype.hasOwnProperty(\"delegatesFocus\") && ((_a = this.$fastController.definition.shadowOptions) === null || _a === void 0 ? void 0 : _a.delegatesFocus)) {\n                this.focus = () => {\n                    this.control.focus();\n                };\n            }\n        };\n    }\n    formactionChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.formAction = this.formaction;\n        }\n    }\n    formenctypeChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.formEnctype = this.formenctype;\n        }\n    }\n    formmethodChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.formMethod = this.formmethod;\n        }\n    }\n    formnovalidateChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.formNoValidate = this.formnovalidate;\n        }\n    }\n    formtargetChanged() {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.formTarget = this.formtarget;\n        }\n    }\n    typeChanged(previous, next) {\n        if (this.proxy instanceof HTMLInputElement) {\n            this.proxy.type = this.type;\n        }\n        next === \"submit\" && this.addEventListener(\"click\", this.handleSubmission);\n        previous === \"submit\" && this.removeEventListener(\"click\", this.handleSubmission);\n        next === \"reset\" && this.addEventListener(\"click\", this.handleFormReset);\n        previous === \"reset\" && this.removeEventListener(\"click\", this.handleFormReset);\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        var _a;\n        super.connectedCallback();\n        this.proxy.setAttribute(\"type\", this.type);\n        this.handleUnsupportedDelegatesFocus();\n        const elements = Array.from((_a = this.control) === null || _a === void 0 ? void 0 : _a.children);\n        if (elements) {\n            elements.forEach((span) => {\n                span.addEventListener(\"click\", this.handleClick);\n            });\n        }\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        var _a;\n        super.disconnectedCallback();\n        const elements = Array.from((_a = this.control) === null || _a === void 0 ? void 0 : _a.children);\n        if (elements) {\n            elements.forEach((span) => {\n                span.removeEventListener(\"click\", this.handleClick);\n            });\n        }\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], Button.prototype, \"autofocus\", void 0);\n__decorate([\n    attr({ attribute: \"form\" })\n], Button.prototype, \"formId\", void 0);\n__decorate([\n    attr\n], Button.prototype, \"formaction\", void 0);\n__decorate([\n    attr\n], Button.prototype, \"formenctype\", void 0);\n__decorate([\n    attr\n], Button.prototype, \"formmethod\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], Button.prototype, \"formnovalidate\", void 0);\n__decorate([\n    attr\n], Button.prototype, \"formtarget\", void 0);\n__decorate([\n    attr\n], Button.prototype, \"type\", void 0);\n__decorate([\n    observable\n], Button.prototype, \"defaultSlottedContent\", void 0);\n/**\n * Includes ARIA states and properties relating to the ARIA button role\n *\n * @public\n */\nexport class DelegatesARIAButton {\n}\n__decorate([\n    attr({ attribute: \"aria-expanded\", mode: \"fromView\" })\n], DelegatesARIAButton.prototype, \"ariaExpanded\", void 0);\n__decorate([\n    attr({ attribute: \"aria-pressed\", mode: \"fromView\" })\n], DelegatesARIAButton.prototype, \"ariaPressed\", void 0);\napplyMixins(DelegatesARIAButton, ARIAGlobalStatesAndProperties);\napplyMixins(Button, StartEnd, DelegatesARIAButton);\n"]},"metadata":{},"sourceType":"module"}