{"ast":null,"code":"import axios from 'axios';\nimport qs from 'qs';\naxios.defaults.baseURL = baseURL;\naxios.defaults.timeout = 3000;\naxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest';\naxios.interceptors.request.use(config => {\n  if (localStorage.getItem('token')) {\n    config.headers['token'] = localStorage.getItem('token');\n  }\n\n  return config.headers;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  // 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据\n  // 否则的话抛出错误\n  if (response.status === 200) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(response);\n  }\n}, error => {\n  if (error.response.status) {\n    switch (error.response.status) {\n      // 404请求不存在\n      case 404:\n        console.log('网络请求不存在');\n        break;\n\n      case 500:\n        console.log('内部服务器错误');\n        break;\n      // 其他错误，直接抛出错误提示\n\n      default:\n        console.log(error.response.data.msg);\n    }\n\n    return Promise.reject(error.response);\n  }\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/src/utils/axios.js"],"names":["axios","qs","defaults","baseURL","timeout","headers","interceptors","request","use","config","localStorage","getItem","error","Promise","reject","response","status","resolve","console","log","data","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAwBA,OAAxB;AACAH,KAAK,CAACE,QAAN,CAAeE,OAAf,GAAwB,IAAxB;AACAJ,KAAK,CAACE,QAAN,CAAeG,OAAf,CAAuB,kBAAvB,IAA6C,gBAA7C;AAEAL,KAAK,CAACM,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CAA+BC,MAAM,IAAI;AACrC,MAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EAAiC;AAC7BF,IAAAA,MAAM,CAACJ,OAAP,CAAe,OAAf,IAA0BK,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA1B;AACH;;AACD,SAAOF,MAAM,CAACJ,OAAd;AACH,CALD,EAKEO,KAAK,IAAG;AACN,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AASAZ,KAAK,CAACM,YAAN,CAAmBS,QAAnB,CAA4BP,GAA5B,CACCO,QAAQ,IAAI;AACX;AACA;AACA,MAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC5B,WAAOH,OAAO,CAACI,OAAR,CAAgBF,QAAhB,CAAP;AACA,GAFD,MAEO;AACN,WAAOF,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACA;AACD,CATF,EAUCH,KAAK,IAAI;AACR,MAAIA,KAAK,CAACG,QAAN,CAAeC,MAAnB,EAA2B;AAC1B,YAAQJ,KAAK,CAACG,QAAN,CAAeC,MAAvB;AACC;AACA,WAAK,GAAL;AACCE,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;;AACD,WAAK,GAAL;AACCD,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA;AACA;;AACD;AACCD,QAAAA,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACG,QAAN,CAAeK,IAAf,CAAoBC,GAAhC;AAVF;;AAYA,WAAOR,OAAO,CAACC,MAAR,CAAeF,KAAK,CAACG,QAArB,CAAP;AACA;AACD,CA1BF","sourcesContent":["import axios from 'axios'\r\nimport qs from 'qs'\r\n\r\naxios.defaults.baseURL= baseURL;\r\naxios.defaults.timeout= 3000;\r\naxios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest';\r\n\r\naxios.interceptors.request.use(config => {\r\n    if(localStorage.getItem('token')){\r\n        config.headers['token'] = localStorage.getItem('token');\r\n    }\r\n    return config.headers;\r\n},error =>{\r\n    return Promise.reject(error);\r\n})\r\n\r\naxios.interceptors.response.use(\r\n\tresponse => {\r\n\t\t// 如果返回的状态码为200，说明接口请求成功，可以正常拿到数据\r\n\t\t// 否则的话抛出错误\r\n\t\tif (response.status === 200) {\r\n\t\t\treturn Promise.resolve(response);\r\n\t\t} else {\r\n\t\t\treturn Promise.reject(response);\r\n\t\t}\r\n\t},\r\n\terror => {\r\n\t\tif (error.response.status) {\r\n\t\t\tswitch (error.response.status) {\r\n\t\t\t\t// 404请求不存在\r\n\t\t\t\tcase 404:\r\n\t\t\t\t\tconsole.log('网络请求不存在');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 500:\r\n\t\t\t\t\tconsole.log('内部服务器错误');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t// 其他错误，直接抛出错误提示\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tconsole.log(error.response.data.msg);\r\n\t\t\t}\r\n\t\t\treturn Promise.reject(error.response);\r\n\t\t}\r\n\t}\r\n);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}