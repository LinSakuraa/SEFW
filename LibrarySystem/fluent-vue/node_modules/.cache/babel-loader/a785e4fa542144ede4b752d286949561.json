{"ast":null,"code":"import { h, ref, computed, defineComponent, mergeProps } from 'vue';\nimport { getMargin } from 'seemly';\nimport { InfoIcon, SuccessIcon, WarningIcon, ErrorIcon } from '../../_internal/icons';\nimport { NFadeInExpandTransition, NBaseClose, NBaseIcon } from '../../_internal';\nimport useRtl from '../../_mixins/use-rtl';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { alertLight } from '../styles';\nimport style from './styles/index.cssr';\nconst alertProps = Object.assign(Object.assign({}, useTheme.props), {\n  title: {\n    type: String,\n    default: undefined\n  },\n  showIcon: {\n    type: Boolean,\n    default: true\n  },\n  type: {\n    type: String,\n    default: 'default'\n  },\n  closable: {\n    type: Boolean,\n    default: false\n  },\n  onClose: Function,\n  onAfterLeave: {\n    type: Function,\n    default: undefined\n  },\n  onAfterHide: {\n    type: Function,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('alert', '`on-after-hide` is deprecated, please use `on-after-leave` instead.');\n      }\n\n      return true;\n    },\n    default: undefined\n  }\n});\nexport default defineComponent({\n  name: 'Alert',\n  inheritAttrs: false,\n  props: alertProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Alert', '-alert', style, alertLight, props, mergedClsPrefixRef);\n    const rtlEnabledRef = useRtl('Alert', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self\n      } = themeRef.value;\n      const {\n        fontSize,\n        borderRadius,\n        titleFontWeight,\n        lineHeight,\n        iconSize,\n        iconMargin,\n        iconMarginRtl,\n        closeSize,\n        closeMargin,\n        closeMarginRtl,\n        padding\n      } = self;\n      const {\n        type\n      } = props;\n      const {\n        left,\n        right\n      } = getMargin(iconMargin);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-color': self[createKey('color', type)],\n        '--n-close-color': self[createKey('closeColor', type)],\n        '--n-close-color-hover': self[createKey('closeColorHover', type)],\n        '--n-close-color-pressed': self[createKey('closeColorPressed', type)],\n        '--n-icon-color': self[createKey('iconColor', type)],\n        '--n-border': self[createKey('border', type)],\n        '--n-title-text-color': self[createKey('titleTextColor', type)],\n        '--n-content-text-color': self[createKey('contentTextColor', type)],\n        '--n-line-height': lineHeight,\n        '--n-border-radius': borderRadius,\n        '--n-font-size': fontSize,\n        '--n-title-font-weight': titleFontWeight,\n        '--n-icon-size': iconSize,\n        '--n-icon-margin': iconMargin,\n        '--n-icon-margin-rtl': iconMarginRtl,\n        '--n-close-size': closeSize,\n        '--n-close-margin': closeMargin,\n        '--n-close-margin-rtl': closeMarginRtl,\n        '--n-padding': padding,\n        '--n-icon-margin-left': left,\n        '--n-icon-margin-right': right\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('alert', computed(() => {\n      return props.type[0];\n    }), cssVarsRef, props) : undefined;\n    const visibleRef = ref(true);\n\n    const doAfterLeave = () => {\n      const {\n        onAfterLeave,\n        onAfterHide // deprecated\n\n      } = props;\n      if (onAfterLeave) onAfterLeave();\n      if (onAfterHide) onAfterHide();\n    };\n\n    const handleCloseClick = () => {\n      var _a;\n\n      void Promise.resolve((_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props)).then(result => {\n        if (result === false) return;\n        visibleRef.value = false;\n      });\n    };\n\n    const handleAfterLeave = () => {\n      doAfterLeave();\n    };\n\n    return {\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      visible: visibleRef,\n      handleCloseClick,\n      handleAfterLeave,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    var _a;\n\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    return h(NFadeInExpandTransition, {\n      onAfterLeave: this.handleAfterLeave\n    }, {\n      default: () => {\n        const {\n          mergedClsPrefix,\n          $slots\n        } = this;\n        const attrs = {\n          class: [`${mergedClsPrefix}-alert`, this.themeClass, this.showIcon && `${mergedClsPrefix}-alert--show-icon`, this.rtlEnabled && `${mergedClsPrefix}-alert--rtl`],\n          style: this.cssVars,\n          role: 'alert'\n        };\n        return this.visible ? h(\"div\", Object.assign({}, mergeProps(this.$attrs, attrs)), this.closable && h(NBaseClose, {\n          clsPrefix: mergedClsPrefix,\n          class: `${mergedClsPrefix}-alert__close`,\n          onClick: this.handleCloseClick\n        }), this.showIcon && h(\"div\", {\n          class: `${mergedClsPrefix}-alert__icon`,\n          \"aria-hidden\": \"true\"\n        }, resolveSlot($slots.icon, () => [h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => {\n            switch (this.type) {\n              case 'success':\n                return h(SuccessIcon, null);\n\n              case 'info':\n                return h(InfoIcon, null);\n\n              case 'warning':\n                return h(WarningIcon, null);\n\n              case 'error':\n                return h(ErrorIcon, null);\n\n              default:\n                return null;\n            }\n          }\n        })])), h(\"div\", {\n          class: `${mergedClsPrefix}-alert-body`\n        }, resolveWrappedSlot($slots.header, children => {\n          const mergedChildren = children || this.title;\n          return mergedChildren ? h(\"div\", {\n            class: `${mergedClsPrefix}-alert-body__title`\n          }, mergedChildren) : null;\n        }), $slots.default && h(\"div\", {\n          class: `${mergedClsPrefix}-alert-body__content`\n        }, $slots))) : null;\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/alert/src/Alert.js"],"names":["h","ref","computed","defineComponent","mergeProps","getMargin","InfoIcon","SuccessIcon","WarningIcon","ErrorIcon","NFadeInExpandTransition","NBaseClose","NBaseIcon","useRtl","useConfig","useTheme","useThemeClass","warn","createKey","resolveSlot","resolveWrappedSlot","alertLight","style","alertProps","Object","assign","props","title","type","String","default","undefined","showIcon","Boolean","closable","onClose","Function","onAfterLeave","onAfterHide","validator","process","env","NODE_ENV","name","inheritAttrs","setup","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","themeRef","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","value","fontSize","borderRadius","titleFontWeight","lineHeight","iconSize","iconMargin","iconMarginRtl","closeSize","closeMargin","closeMarginRtl","padding","left","right","themeClassHandle","visibleRef","doAfterLeave","handleCloseClick","_a","Promise","resolve","call","then","result","handleAfterLeave","rtlEnabled","mergedClsPrefix","visible","mergedTheme","cssVars","themeClass","onRender","render","$slots","attrs","class","role","$attrs","clsPrefix","onClick","icon","header","children","mergedChildren"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,QAAjB,EAA2BC,eAA3B,EAA4CC,UAA5C,QAA8D,KAA9D;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,WAAhC,EAA6CC,SAA7C,QAA8D,uBAA9D;AACA,SAASC,uBAAT,EAAkCC,UAAlC,EAA8CC,SAA9C,QAA+D,iBAA/D;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,eAAnD;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,WAA1B,EAAuCC,kBAAvC,QAAiE,cAAjE;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,MAAMC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBV,QAAQ,CAACW,KAA3B,CAAd,EAAiD;AAAEC,EAAAA,KAAK,EAAE;AACrEC,IAAAA,IAAI,EAAEC,MAD+D;AAErEC,IAAAA,OAAO,EAAEC;AAF4D,GAAT;AAG7DC,EAAAA,QAAQ,EAAE;AACTJ,IAAAA,IAAI,EAAEK,OADG;AAETH,IAAAA,OAAO,EAAE;AAFA,GAHmD;AAM7DF,EAAAA,IAAI,EAAE;AACLA,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GANuD;AAS7DI,EAAAA,QAAQ,EAAE;AACTN,IAAAA,IAAI,EAAEK,OADG;AAETH,IAAAA,OAAO,EAAE;AAFA,GATmD;AAY7DK,EAAAA,OAAO,EAAEC,QAZoD;AAY1CC,EAAAA,YAAY,EAAE;AAChCT,IAAAA,IAAI,EAAEQ,QAD0B;AAEhCN,IAAAA,OAAO,EAAEC;AAFuB,GAZ4B;AAe7DO,EAAAA,WAAW,EAAE;AACZV,IAAAA,IAAI,EAAEQ,QADM;AAEZG,IAAAA,SAAS,EAAE,MAAM;AACb,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCzB,QAAAA,IAAI,CAAC,OAAD,EAAU,qEAAV,CAAJ;AACH;;AACD,aAAO,IAAP;AACH,KAPW;AAQZa,IAAAA,OAAO,EAAEC;AARG;AAfgD,CAAjD,CAAnB;AAyBA,eAAe5B,eAAe,CAAC;AAC3BwC,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,YAAY,EAAE,KAFa;AAG3BlB,EAAAA,KAAK,EAAEH,UAHoB;;AAI3BsB,EAAAA,KAAK,CAACnB,KAAD,EAAQ;AACT,UAAM;AAAEoB,MAAAA,kBAAF;AAAsBC,MAAAA,mBAAtB;AAA2CC,MAAAA;AAA3C,QAA4DlC,SAAS,CAACY,KAAD,CAA3E;AACA,UAAMuB,QAAQ,GAAGlC,QAAQ,CAAC,OAAD,EAAU,QAAV,EAAoBO,KAApB,EAA2BD,UAA3B,EAAuCK,KAAvC,EAA8CoB,kBAA9C,CAAzB;AACA,UAAMI,aAAa,GAAGrC,MAAM,CAAC,OAAD,EAAUmC,YAAV,EAAwBF,kBAAxB,CAA5B;AACA,UAAMK,UAAU,GAAGjD,QAAQ,CAAC,MAAM;AAC9B,YAAM;AAAEkD,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF,SAAV;AAAoCC,QAAAA;AAApC,UAA6CL,QAAQ,CAACM,KAA5D;AACA,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,YAAZ;AAA0BC,QAAAA,eAA1B;AAA2CC,QAAAA,UAA3C;AAAuDC,QAAAA,QAAvD;AAAiEC,QAAAA,UAAjE;AAA6EC,QAAAA,aAA7E;AAA4FC,QAAAA,SAA5F;AAAuGC,QAAAA,WAAvG;AAAoHC,QAAAA,cAApH;AAAoIC,QAAAA;AAApI,UAAgJZ,IAAtJ;AACA,YAAM;AAAE1B,QAAAA;AAAF,UAAWF,KAAjB;AACA,YAAM;AAAEyC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkB/D,SAAS,CAACwD,UAAD,CAAjC;AACA,aAAO;AACH,sBAAcR,oBADX;AAEH,qBAAaC,IAAI,CAACpC,SAAS,CAAC,OAAD,EAAUU,IAAV,CAAV,CAFd;AAGH,2BAAmB0B,IAAI,CAACpC,SAAS,CAAC,YAAD,EAAeU,IAAf,CAAV,CAHpB;AAIH,iCAAyB0B,IAAI,CAACpC,SAAS,CAAC,iBAAD,EAAoBU,IAApB,CAAV,CAJ1B;AAKH,mCAA2B0B,IAAI,CAACpC,SAAS,CAAC,mBAAD,EAAsBU,IAAtB,CAAV,CAL5B;AAMH,0BAAkB0B,IAAI,CAACpC,SAAS,CAAC,WAAD,EAAcU,IAAd,CAAV,CANnB;AAOH,sBAAc0B,IAAI,CAACpC,SAAS,CAAC,QAAD,EAAWU,IAAX,CAAV,CAPf;AAQH,gCAAwB0B,IAAI,CAACpC,SAAS,CAAC,gBAAD,EAAmBU,IAAnB,CAAV,CARzB;AASH,kCAA0B0B,IAAI,CAACpC,SAAS,CAAC,kBAAD,EAAqBU,IAArB,CAAV,CAT3B;AAUH,2BAAmB+B,UAVhB;AAWH,6BAAqBF,YAXlB;AAYH,yBAAiBD,QAZd;AAaH,iCAAyBE,eAbtB;AAcH,yBAAiBE,QAdd;AAeH,2BAAmBC,UAfhB;AAgBH,+BAAuBC,aAhBpB;AAiBH,0BAAkBC,SAjBf;AAkBH,4BAAoBC,WAlBjB;AAmBH,gCAAwBC,cAnBrB;AAoBH,uBAAeC,OApBZ;AAqBH,gCAAwBC,IArBrB;AAsBH,iCAAyBC;AAtBtB,OAAP;AAwBH,KA7B0B,CAA3B;AA8BA,UAAMC,gBAAgB,GAAGtB,mBAAmB,GACtC/B,aAAa,CAAC,OAAD,EAAUd,QAAQ,CAAC,MAAM;AACpC,aAAOwB,KAAK,CAACE,IAAN,CAAW,CAAX,CAAP;AACH,KAFgC,CAAlB,EAEXuB,UAFW,EAECzB,KAFD,CADyB,GAItCK,SAJN;AAKA,UAAMuC,UAAU,GAAGrE,GAAG,CAAC,IAAD,CAAtB;;AACA,UAAMsE,YAAY,GAAG,MAAM;AACvB,YAAM;AAAElC,QAAAA,YAAF;AAAgBC,QAAAA,WAAhB,CAA4B;;AAA5B,UACDZ,KADL;AAEA,UAAIW,YAAJ,EACIA,YAAY;AAChB,UAAIC,WAAJ,EACIA,WAAW;AAClB,KAPD;;AAQA,UAAMkC,gBAAgB,GAAG,MAAM;AAC3B,UAAIC,EAAJ;;AACA,WAAKC,OAAO,CAACC,OAAR,CAAgB,CAACF,EAAE,GAAG/C,KAAK,CAACS,OAAZ,MAAyB,IAAzB,IAAiCsC,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACG,IAAH,CAAQlD,KAAR,CAA1E,EAA0FmD,IAA1F,CAAgGC,MAAD,IAAY;AAC5G,YAAIA,MAAM,KAAK,KAAf,EACI;AACJR,QAAAA,UAAU,CAACf,KAAX,GAAmB,KAAnB;AACH,OAJI,CAAL;AAKH,KAPD;;AAQA,UAAMwB,gBAAgB,GAAG,MAAM;AAC3BR,MAAAA,YAAY;AACf,KAFD;;AAGA,WAAO;AACHS,MAAAA,UAAU,EAAE9B,aADT;AAEH+B,MAAAA,eAAe,EAAEnC,kBAFd;AAGHoC,MAAAA,OAAO,EAAEZ,UAHN;AAIHE,MAAAA,gBAJG;AAKHO,MAAAA,gBALG;AAMHI,MAAAA,WAAW,EAAElC,QANV;AAOHmC,MAAAA,OAAO,EAAErC,mBAAmB,GAAGhB,SAAH,GAAeoB,UAPxC;AAQHkC,MAAAA,UAAU,EAAEhB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACgB,UAR9F;AASHC,MAAAA,QAAQ,EAAEjB,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACiB;AAT5F,KAAP;AAWH,GA1E0B;;AA2E3BC,EAAAA,MAAM,GAAG;AACL,QAAId,EAAJ;;AACA,KAACA,EAAE,GAAG,KAAKa,QAAX,MAAyB,IAAzB,IAAiCb,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACG,IAAH,CAAQ,IAAR,CAA1D;AACA,WAAQ5E,CAAC,CAACU,uBAAD,EAA0B;AAAE2B,MAAAA,YAAY,EAAE,KAAK0C;AAArB,KAA1B,EAAmE;AACxEjD,MAAAA,OAAO,EAAE,MAAM;AACX,cAAM;AAAEmD,UAAAA,eAAF;AAAmBO,UAAAA;AAAnB,YAA8B,IAApC;AACA,cAAMC,KAAK,GAAG;AACVC,UAAAA,KAAK,EAAE,CACF,GAAET,eAAgB,QADhB,EAEH,KAAKI,UAFF,EAGH,KAAKrD,QAAL,IAAkB,GAAEiD,eAAgB,mBAHjC,EAIH,KAAKD,UAAL,IAAoB,GAAEC,eAAgB,aAJnC,CADG;AAOV3D,UAAAA,KAAK,EAAE,KAAK8D,OAPF;AAQVO,UAAAA,IAAI,EAAE;AARI,SAAd;AAUA,eAAO,KAAKT,OAAL,GAAgBlF,CAAC,CAAC,KAAD,EAAQwB,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBrB,UAAU,CAAC,KAAKwF,MAAN,EAAcH,KAAd,CAA5B,CAAR,EACpB,KAAKvD,QAAL,IAAkBlC,CAAC,CAACW,UAAD,EAAa;AAAEkF,UAAAA,SAAS,EAAEZ,eAAb;AAA8BS,UAAAA,KAAK,EAAG,GAAET,eAAgB,eAAxD;AAAwEa,UAAAA,OAAO,EAAE,KAAKtB;AAAtF,SAAb,CADC,EAEpB,KAAKxC,QAAL,IAAkBhC,CAAC,CAAC,KAAD,EAAQ;AAAE0F,UAAAA,KAAK,EAAG,GAAET,eAAgB,cAA5B;AAA2C,yBAAe;AAA1D,SAAR,EAA4E9D,WAAW,CAACqE,MAAM,CAACO,IAAR,EAAc,MAAM,CAC1H/F,CAAC,CAACY,SAAD,EAAY;AAAEiF,UAAAA,SAAS,EAAEZ;AAAb,SAAZ,EAA4C;AACzCnD,UAAAA,OAAO,EAAE,MAAM;AACX,oBAAQ,KAAKF,IAAb;AACI,mBAAK,SAAL;AACI,uBAAO5B,CAAC,CAACO,WAAD,EAAc,IAAd,CAAR;;AACJ,mBAAK,MAAL;AACI,uBAAOP,CAAC,CAACM,QAAD,EAAW,IAAX,CAAR;;AACJ,mBAAK,SAAL;AACI,uBAAON,CAAC,CAACQ,WAAD,EAAc,IAAd,CAAR;;AACJ,mBAAK,OAAL;AACI,uBAAOR,CAAC,CAACS,SAAD,EAAY,IAAZ,CAAR;;AACJ;AACI,uBAAO,IAAP;AAVR;AAYH;AAdwC,SAA5C,CADyH,CAApB,CAAvF,CAFC,EAoBpBT,CAAC,CAAC,KAAD,EAAQ;AAAE0F,UAAAA,KAAK,EAAG,GAAET,eAAgB;AAA5B,SAAR,EACG7D,kBAAkB,CAACoE,MAAM,CAACQ,MAAR,EAAiBC,QAAD,IAAc;AAC5C,gBAAMC,cAAc,GAAGD,QAAQ,IAAI,KAAKtE,KAAxC;AACA,iBAAOuE,cAAc,GAAIlG,CAAC,CAAC,KAAD,EAAQ;AAAE0F,YAAAA,KAAK,EAAG,GAAET,eAAgB;AAA5B,WAAR,EAA2DiB,cAA3D,CAAL,GAAmF,IAAxG;AACH,SAHiB,CADrB,EAKGV,MAAM,CAAC1D,OAAP,IAAmB9B,CAAC,CAAC,KAAD,EAAQ;AAAE0F,UAAAA,KAAK,EAAG,GAAET,eAAgB;AAA5B,SAAR,EAA6DO,MAA7D,CALvB,CApBmB,CAAjB,GAyBgG,IAzBvG;AA0BH;AAvCuE,KAAnE,CAAT;AAyCH;;AAvH0B,CAAD,CAA9B","sourcesContent":["import { h, ref, computed, defineComponent, mergeProps } from 'vue';\nimport { getMargin } from 'seemly';\nimport { InfoIcon, SuccessIcon, WarningIcon, ErrorIcon } from '../../_internal/icons';\nimport { NFadeInExpandTransition, NBaseClose, NBaseIcon } from '../../_internal';\nimport useRtl from '../../_mixins/use-rtl';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { warn, createKey, resolveSlot, resolveWrappedSlot } from '../../_utils';\nimport { alertLight } from '../styles';\nimport style from './styles/index.cssr';\nconst alertProps = Object.assign(Object.assign({}, useTheme.props), { title: {\n        type: String,\n        default: undefined\n    }, showIcon: {\n        type: Boolean,\n        default: true\n    }, type: {\n        type: String,\n        default: 'default'\n    }, closable: {\n        type: Boolean,\n        default: false\n    }, onClose: Function, onAfterLeave: {\n        type: Function,\n        default: undefined\n    }, onAfterHide: {\n        type: Function,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('alert', '`on-after-hide` is deprecated, please use `on-after-leave` instead.');\n            }\n            return true;\n        },\n        default: undefined\n    } });\nexport default defineComponent({\n    name: 'Alert',\n    inheritAttrs: false,\n    props: alertProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Alert', '-alert', style, alertLight, props, mergedClsPrefixRef);\n        const rtlEnabledRef = useRtl('Alert', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { fontSize, borderRadius, titleFontWeight, lineHeight, iconSize, iconMargin, iconMarginRtl, closeSize, closeMargin, closeMarginRtl, padding } = self;\n            const { type } = props;\n            const { left, right } = getMargin(iconMargin);\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-color': self[createKey('color', type)],\n                '--n-close-color': self[createKey('closeColor', type)],\n                '--n-close-color-hover': self[createKey('closeColorHover', type)],\n                '--n-close-color-pressed': self[createKey('closeColorPressed', type)],\n                '--n-icon-color': self[createKey('iconColor', type)],\n                '--n-border': self[createKey('border', type)],\n                '--n-title-text-color': self[createKey('titleTextColor', type)],\n                '--n-content-text-color': self[createKey('contentTextColor', type)],\n                '--n-line-height': lineHeight,\n                '--n-border-radius': borderRadius,\n                '--n-font-size': fontSize,\n                '--n-title-font-weight': titleFontWeight,\n                '--n-icon-size': iconSize,\n                '--n-icon-margin': iconMargin,\n                '--n-icon-margin-rtl': iconMarginRtl,\n                '--n-close-size': closeSize,\n                '--n-close-margin': closeMargin,\n                '--n-close-margin-rtl': closeMarginRtl,\n                '--n-padding': padding,\n                '--n-icon-margin-left': left,\n                '--n-icon-margin-right': right\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('alert', computed(() => {\n                return props.type[0];\n            }), cssVarsRef, props)\n            : undefined;\n        const visibleRef = ref(true);\n        const doAfterLeave = () => {\n            const { onAfterLeave, onAfterHide // deprecated\n             } = props;\n            if (onAfterLeave)\n                onAfterLeave();\n            if (onAfterHide)\n                onAfterHide();\n        };\n        const handleCloseClick = () => {\n            var _a;\n            void Promise.resolve((_a = props.onClose) === null || _a === void 0 ? void 0 : _a.call(props)).then((result) => {\n                if (result === false)\n                    return;\n                visibleRef.value = false;\n            });\n        };\n        const handleAfterLeave = () => {\n            doAfterLeave();\n        };\n        return {\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            visible: visibleRef,\n            handleCloseClick,\n            handleAfterLeave,\n            mergedTheme: themeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(NFadeInExpandTransition, { onAfterLeave: this.handleAfterLeave }, {\n            default: () => {\n                const { mergedClsPrefix, $slots } = this;\n                const attrs = {\n                    class: [\n                        `${mergedClsPrefix}-alert`,\n                        this.themeClass,\n                        this.showIcon && `${mergedClsPrefix}-alert--show-icon`,\n                        this.rtlEnabled && `${mergedClsPrefix}-alert--rtl`\n                    ],\n                    style: this.cssVars,\n                    role: 'alert'\n                };\n                return this.visible ? (h(\"div\", Object.assign({}, mergeProps(this.$attrs, attrs)),\n                    this.closable && (h(NBaseClose, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-alert__close`, onClick: this.handleCloseClick })),\n                    this.showIcon && (h(\"div\", { class: `${mergedClsPrefix}-alert__icon`, \"aria-hidden\": \"true\" }, resolveSlot($slots.icon, () => [\n                        h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                            default: () => {\n                                switch (this.type) {\n                                    case 'success':\n                                        return h(SuccessIcon, null);\n                                    case 'info':\n                                        return h(InfoIcon, null);\n                                    case 'warning':\n                                        return h(WarningIcon, null);\n                                    case 'error':\n                                        return h(ErrorIcon, null);\n                                    default:\n                                        return null;\n                                }\n                            }\n                        })\n                    ]))),\n                    h(\"div\", { class: `${mergedClsPrefix}-alert-body` },\n                        resolveWrappedSlot($slots.header, (children) => {\n                            const mergedChildren = children || this.title;\n                            return mergedChildren ? (h(\"div\", { class: `${mergedClsPrefix}-alert-body__title` }, mergedChildren)) : null;\n                        }),\n                        $slots.default && (h(\"div\", { class: `${mergedClsPrefix}-alert-body__content` }, $slots))))) : null;\n            }\n        }));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}