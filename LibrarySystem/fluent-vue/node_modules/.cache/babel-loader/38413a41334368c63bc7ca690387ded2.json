{"ast":null,"code":"export function convertStylePropertyPixelsToNumber(computedStyle, property) {\n  if (!computedStyle || !property) {\n    return;\n  }\n\n  return parseInt(computedStyle.getPropertyValue(property).substring(0, computedStyle.getPropertyValue(property).length - 2), 10);\n}\n/**\n * Gets the client bounding rectangle including any margins of an element.\n */\n\nexport function getClientRectWithMargin(element) {\n  if (!element) {\n    return;\n  }\n\n  const rect = element.getBoundingClientRect();\n  const style = window.getComputedStyle(element, null);\n  const clone = {\n    width: rect.width,\n    height: rect.height,\n    top: rect.top,\n    bottom: rect.bottom,\n    left: rect.left,\n    right: rect.right\n  };\n  clone.width += convertStylePropertyPixelsToNumber(style, \"margin-left\");\n  clone.width += convertStylePropertyPixelsToNumber(style, \"margin-right\");\n  clone.height += convertStylePropertyPixelsToNumber(style, \"margin-top\");\n  clone.height += convertStylePropertyPixelsToNumber(style, \"margin-bottom\");\n  return clone;\n}","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-web-utilities/dist/html.js"],"names":["convertStylePropertyPixelsToNumber","computedStyle","property","parseInt","getPropertyValue","substring","length","getClientRectWithMargin","element","rect","getBoundingClientRect","style","window","getComputedStyle","clone","width","height","top","bottom","left","right"],"mappings":"AAAA,OAAO,SAASA,kCAAT,CAA4CC,aAA5C,EAA2DC,QAA3D,EAAqE;AACxE,MAAI,CAACD,aAAD,IAAkB,CAACC,QAAvB,EAAiC;AAC7B;AACH;;AACD,SAAOC,QAAQ,CAACF,aAAa,CACxBG,gBADW,CACMF,QADN,EAEXG,SAFW,CAED,CAFC,EAEEJ,aAAa,CAACG,gBAAd,CAA+BF,QAA/B,EAAyCI,MAAzC,GAAkD,CAFpD,CAAD,EAEyD,EAFzD,CAAf;AAGH;AACD;AACA;AACA;;AACA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC7C,MAAI,CAACA,OAAL,EAAc;AACV;AACH;;AACD,QAAMC,IAAI,GAAGD,OAAO,CAACE,qBAAR,EAAb;AACA,QAAMC,KAAK,GAAGC,MAAM,CAACC,gBAAP,CAAwBL,OAAxB,EAAiC,IAAjC,CAAd;AACA,QAAMM,KAAK,GAAG;AACVC,IAAAA,KAAK,EAAEN,IAAI,CAACM,KADF;AAEVC,IAAAA,MAAM,EAAEP,IAAI,CAACO,MAFH;AAGVC,IAAAA,GAAG,EAAER,IAAI,CAACQ,GAHA;AAIVC,IAAAA,MAAM,EAAET,IAAI,CAACS,MAJH;AAKVC,IAAAA,IAAI,EAAEV,IAAI,CAACU,IALD;AAMVC,IAAAA,KAAK,EAAEX,IAAI,CAACW;AANF,GAAd;AAQAN,EAAAA,KAAK,CAACC,KAAN,IAAef,kCAAkC,CAACW,KAAD,EAAQ,aAAR,CAAjD;AACAG,EAAAA,KAAK,CAACC,KAAN,IAAef,kCAAkC,CAACW,KAAD,EAAQ,cAAR,CAAjD;AACAG,EAAAA,KAAK,CAACE,MAAN,IAAgBhB,kCAAkC,CAACW,KAAD,EAAQ,YAAR,CAAlD;AACAG,EAAAA,KAAK,CAACE,MAAN,IAAgBhB,kCAAkC,CAACW,KAAD,EAAQ,eAAR,CAAlD;AACA,SAAOG,KAAP;AACH","sourcesContent":["export function convertStylePropertyPixelsToNumber(computedStyle, property) {\n    if (!computedStyle || !property) {\n        return;\n    }\n    return parseInt(computedStyle\n        .getPropertyValue(property)\n        .substring(0, computedStyle.getPropertyValue(property).length - 2), 10);\n}\n/**\n * Gets the client bounding rectangle including any margins of an element.\n */\nexport function getClientRectWithMargin(element) {\n    if (!element) {\n        return;\n    }\n    const rect = element.getBoundingClientRect();\n    const style = window.getComputedStyle(element, null);\n    const clone = {\n        width: rect.width,\n        height: rect.height,\n        top: rect.top,\n        bottom: rect.bottom,\n        left: rect.left,\n        right: rect.right,\n    };\n    clone.width += convertStylePropertyPixelsToNumber(style, \"margin-left\");\n    clone.width += convertStylePropertyPixelsToNumber(style, \"margin-right\");\n    clone.height += convertStylePropertyPixelsToNumber(style, \"margin-top\");\n    clone.height += convertStylePropertyPixelsToNumber(style, \"margin-bottom\");\n    return clone;\n}\n"]},"metadata":{},"sourceType":"module"}