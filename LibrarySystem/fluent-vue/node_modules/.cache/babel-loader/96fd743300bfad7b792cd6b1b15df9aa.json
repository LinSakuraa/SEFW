{"ast":null,"code":"import { h, ref, defineComponent, inject, computed } from 'vue';\nimport { NScrollbar, NBaseFocusDetector } from '../../_internal';\nimport { NButton } from '../../button';\nimport { getTimeUnits, time, getAmPm } from './utils';\nimport { timePickerInjectionKey } from './interface';\nimport PanelCol from './PanelCol';\nconst timePickerPanelProps = {\n  actions: {\n    type: Array,\n    default: () => ['now', 'confirm']\n  },\n  showHour: {\n    type: Boolean,\n    default: true\n  },\n  showMinute: {\n    type: Boolean,\n    default: true\n  },\n  showSecond: {\n    type: Boolean,\n    default: true\n  },\n  showPeriod: {\n    type: Boolean,\n    default: true\n  },\n  isHourInvalid: Boolean,\n  isMinuteInvalid: Boolean,\n  isSecondInvalid: Boolean,\n  isAmPmInvalid: Boolean,\n  isValueInvalid: Boolean,\n  hourValue: {\n    type: Number,\n    default: null\n  },\n  minuteValue: {\n    type: Number,\n    default: null\n  },\n  secondValue: {\n    type: Number,\n    default: null\n  },\n  amPmValue: {\n    type: String,\n    default: null\n  },\n  isHourDisabled: Function,\n  isMinuteDisabled: Function,\n  isSecondDisabled: Function,\n  onHourClick: {\n    type: Function,\n    required: true\n  },\n  onMinuteClick: {\n    type: Function,\n    required: true\n  },\n  onSecondClick: {\n    type: Function,\n    required: true\n  },\n  onAmPmClick: {\n    type: Function,\n    required: true\n  },\n  onNowClick: Function,\n  nowText: String,\n  confirmText: String,\n  transitionDisabled: Boolean,\n  onConfirmClick: Function,\n  onFocusin: Function,\n  onFocusout: Function,\n  onFocusDetectorFocus: Function,\n  onKeydown: Function,\n  hours: [Number, Array],\n  minutes: [Number, Array],\n  seconds: [Number, Array],\n  use12Hours: Boolean\n};\nexport default defineComponent({\n  name: 'TimePickerPanel',\n  props: timePickerPanelProps,\n\n  setup(props) {\n    const {\n      mergedThemeRef,\n      mergedClsPrefixRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(timePickerInjectionKey);\n    const hoursRef = computed(() => {\n      const {\n        isHourDisabled,\n        hours,\n        use12Hours,\n        amPmValue\n      } = props;\n\n      if (!use12Hours) {\n        return getTimeUnits(time.hours, hours).map(hour => {\n          return {\n            label: hour,\n            value: Number(hour),\n            disabled: isHourDisabled ? isHourDisabled(Number(hour)) : false\n          };\n        });\n      } else {\n        const mergedAmPmValue = amPmValue !== null && amPmValue !== void 0 ? amPmValue : getAmPm(Date.now());\n        return getTimeUnits(time.hours, hours, mergedAmPmValue).map(hour => {\n          const hourAs12FormattedNumber = Number(hour);\n          const hourAs24FormattedNumber = mergedAmPmValue === 'pm' && hourAs12FormattedNumber !== 12 ? hourAs12FormattedNumber + 12 : hourAs12FormattedNumber;\n          return {\n            label: hour,\n            value: hourAs24FormattedNumber,\n            disabled: isHourDisabled ? isHourDisabled(hourAs24FormattedNumber) : false\n          };\n        });\n      }\n    });\n    const minutesRef = computed(() => {\n      const {\n        isMinuteDisabled,\n        minutes\n      } = props;\n      return getTimeUnits(time.minutes, minutes).map(minute => {\n        return {\n          label: minute,\n          value: Number(minute),\n          disabled: isMinuteDisabled ? isMinuteDisabled(Number(minute), props.hourValue) : false\n        };\n      });\n    });\n    const secondsRef = computed(() => {\n      const {\n        isSecondDisabled,\n        seconds\n      } = props;\n      return getTimeUnits(time.seconds, seconds).map(second => {\n        return {\n          label: second,\n          value: Number(second),\n          disabled: isSecondDisabled ? isSecondDisabled(Number(second), props.minuteValue, props.hourValue) : false\n        };\n      });\n    });\n    const amPmRef = computed(() => {\n      const {\n        isHourDisabled\n      } = props;\n      let amDisabled = true;\n      let pmDisabled = true;\n\n      for (let i = 0; i < 12; ++i) {\n        if (!(isHourDisabled === null || isHourDisabled === void 0 ? void 0 : isHourDisabled(i))) {\n          amDisabled = false;\n          break;\n        }\n      }\n\n      for (let i = 12; i < 24; ++i) {\n        if (!(isHourDisabled === null || isHourDisabled === void 0 ? void 0 : isHourDisabled(i))) {\n          pmDisabled = false;\n          break;\n        }\n      }\n\n      return [{\n        label: 'AM',\n        value: 'am',\n        disabled: amDisabled\n      }, {\n        label: 'PM',\n        value: 'pm',\n        disabled: pmDisabled\n      }];\n    });\n    return {\n      mergedTheme: mergedThemeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      hours: hoursRef,\n      minutes: minutesRef,\n      seconds: secondsRef,\n      amPm: amPmRef,\n      hourScrollRef: ref(null),\n      minuteScrollRef: ref(null),\n      secondScrollRef: ref(null),\n      amPmScrollRef: ref(null)\n    };\n  },\n\n  render() {\n    var _a, _b, _c;\n\n    const {\n      mergedClsPrefix,\n      mergedTheme\n    } = this;\n    return h(\"div\", {\n      tabindex: 0,\n      class: `${mergedClsPrefix}-time-picker-panel`,\n      onFocusin: this.onFocusin,\n      onFocusout: this.onFocusout,\n      onKeydown: this.onKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-time-picker-cols`\n    }, this.showHour ? h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker-col`, this.isHourInvalid && `${mergedClsPrefix}-time-picker-col--invalid`, this.transitionDisabled && `${mergedClsPrefix}-time-picker-col--transition-disabled`]\n    }, h(NScrollbar, {\n      ref: \"hourScrollRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar\n    }, {\n      default: () => [h(PanelCol, {\n        clsPrefix: mergedClsPrefix,\n        data: this.hours,\n        activeValue: this.hourValue,\n        onItemClick: this.onHourClick\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-time-picker-col__padding`\n      })]\n    })) : null, this.showMinute ? h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker-col`, this.transitionDisabled && `${mergedClsPrefix}-time-picker-col--transition-disabled`, this.isMinuteInvalid && `${mergedClsPrefix}-time-picker-col--invalid`]\n    }, h(NScrollbar, {\n      ref: \"minuteScrollRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar\n    }, {\n      default: () => [h(PanelCol, {\n        clsPrefix: mergedClsPrefix,\n        data: this.minutes,\n        activeValue: this.minuteValue,\n        onItemClick: this.onMinuteClick\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-time-picker-col__padding`\n      })]\n    })) : null, this.showSecond ? h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker-col`, this.isSecondInvalid && `${mergedClsPrefix}-time-picker-col--invalid`, this.transitionDisabled && `${mergedClsPrefix}-time-picker-col--transition-disabled`]\n    }, h(NScrollbar, {\n      ref: \"secondScrollRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar\n    }, {\n      default: () => [h(PanelCol, {\n        clsPrefix: mergedClsPrefix,\n        data: this.seconds,\n        activeValue: this.secondValue,\n        onItemClick: this.onSecondClick\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-time-picker-col__padding`\n      })]\n    })) : null, this.use12Hours ? h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker-col`, this.isAmPmInvalid && `${mergedClsPrefix}-time-picker-col--invalid`, this.transitionDisabled && `${mergedClsPrefix}-time-picker-col--transition-disabled`]\n    }, h(NScrollbar, {\n      ref: \"amPmScrollRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar\n    }, {\n      default: () => [h(PanelCol, {\n        clsPrefix: mergedClsPrefix,\n        data: this.amPm,\n        activeValue: this.amPmValue,\n        onItemClick: this.onAmPmClick\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-time-picker-col__padding`\n      })]\n    })) : null), ((_a = this.actions) === null || _a === void 0 ? void 0 : _a.length) ? h(\"div\", {\n      class: `${mergedClsPrefix}-time-picker-actions`\n    }, ((_b = this.actions) === null || _b === void 0 ? void 0 : _b.includes('now')) ? h(NButton, {\n      size: \"tiny\",\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      onClick: this.onNowClick\n    }, {\n      default: () => this.nowText\n    }) : null, ((_c = this.actions) === null || _c === void 0 ? void 0 : _c.includes('confirm')) ? h(NButton, {\n      size: \"tiny\",\n      type: \"primary\",\n      class: `${mergedClsPrefix}-time-picker-actions__confirm`,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      disabled: this.isValueInvalid,\n      onClick: this.onConfirmClick\n    }, {\n      default: () => this.confirmText\n    }) : null) : null, h(NBaseFocusDetector, {\n      onFocus: this.onFocusDetectorFocus\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/time-picker/src/Panel.js"],"names":["h","ref","defineComponent","inject","computed","NScrollbar","NBaseFocusDetector","NButton","getTimeUnits","time","getAmPm","timePickerInjectionKey","PanelCol","timePickerPanelProps","actions","type","Array","default","showHour","Boolean","showMinute","showSecond","showPeriod","isHourInvalid","isMinuteInvalid","isSecondInvalid","isAmPmInvalid","isValueInvalid","hourValue","Number","minuteValue","secondValue","amPmValue","String","isHourDisabled","Function","isMinuteDisabled","isSecondDisabled","onHourClick","required","onMinuteClick","onSecondClick","onAmPmClick","onNowClick","nowText","confirmText","transitionDisabled","onConfirmClick","onFocusin","onFocusout","onFocusDetectorFocus","onKeydown","hours","minutes","seconds","use12Hours","name","props","setup","mergedThemeRef","mergedClsPrefixRef","hoursRef","map","hour","label","value","disabled","mergedAmPmValue","Date","now","hourAs12FormattedNumber","hourAs24FormattedNumber","minutesRef","minute","secondsRef","second","amPmRef","amDisabled","pmDisabled","i","mergedTheme","mergedClsPrefix","amPm","hourScrollRef","minuteScrollRef","secondScrollRef","amPmScrollRef","render","_a","_b","_c","tabindex","class","theme","peers","Scrollbar","themeOverrides","peerOverrides","clsPrefix","data","activeValue","onItemClick","length","includes","size","Button","onClick","onFocus"],"mappings":"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","sourcesContent":["import { h, ref, defineComponent, inject, computed } from 'vue';\nimport { NScrollbar, NBaseFocusDetector } from '../../_internal';\nimport { NButton } from '../../button';\nimport { getTimeUnits, time, getAmPm } from './utils';\nimport { timePickerInjectionKey } from './interface';\nimport PanelCol from './PanelCol';\nconst timePickerPanelProps = {\n    actions: {\n        type: Array,\n        default: () => ['now', 'confirm']\n    },\n    showHour: {\n        type: Boolean,\n        default: true\n    },\n    showMinute: {\n        type: Boolean,\n        default: true\n    },\n    showSecond: {\n        type: Boolean,\n        default: true\n    },\n    showPeriod: {\n        type: Boolean,\n        default: true\n    },\n    isHourInvalid: Boolean,\n    isMinuteInvalid: Boolean,\n    isSecondInvalid: Boolean,\n    isAmPmInvalid: Boolean,\n    isValueInvalid: Boolean,\n    hourValue: {\n        type: Number,\n        default: null\n    },\n    minuteValue: {\n        type: Number,\n        default: null\n    },\n    secondValue: {\n        type: Number,\n        default: null\n    },\n    amPmValue: {\n        type: String,\n        default: null\n    },\n    isHourDisabled: Function,\n    isMinuteDisabled: Function,\n    isSecondDisabled: Function,\n    onHourClick: {\n        type: Function,\n        required: true\n    },\n    onMinuteClick: {\n        type: Function,\n        required: true\n    },\n    onSecondClick: {\n        type: Function,\n        required: true\n    },\n    onAmPmClick: {\n        type: Function,\n        required: true\n    },\n    onNowClick: Function,\n    nowText: String,\n    confirmText: String,\n    transitionDisabled: Boolean,\n    onConfirmClick: Function,\n    onFocusin: Function,\n    onFocusout: Function,\n    onFocusDetectorFocus: Function,\n    onKeydown: Function,\n    hours: [Number, Array],\n    minutes: [Number, Array],\n    seconds: [Number, Array],\n    use12Hours: Boolean\n};\nexport default defineComponent({\n    name: 'TimePickerPanel',\n    props: timePickerPanelProps,\n    setup(props) {\n        const { mergedThemeRef, mergedClsPrefixRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(timePickerInjectionKey);\n        const hoursRef = computed(() => {\n            const { isHourDisabled, hours, use12Hours, amPmValue } = props;\n            if (!use12Hours) {\n                return getTimeUnits(time.hours, hours).map((hour) => {\n                    return {\n                        label: hour,\n                        value: Number(hour),\n                        disabled: isHourDisabled ? isHourDisabled(Number(hour)) : false\n                    };\n                });\n            }\n            else {\n                const mergedAmPmValue = amPmValue !== null && amPmValue !== void 0 ? amPmValue : getAmPm(Date.now());\n                return getTimeUnits(time.hours, hours, mergedAmPmValue).map((hour) => {\n                    const hourAs12FormattedNumber = Number(hour);\n                    const hourAs24FormattedNumber = mergedAmPmValue === 'pm' && hourAs12FormattedNumber !== 12\n                        ? hourAs12FormattedNumber + 12\n                        : hourAs12FormattedNumber;\n                    return {\n                        label: hour,\n                        value: hourAs24FormattedNumber,\n                        disabled: isHourDisabled\n                            ? isHourDisabled(hourAs24FormattedNumber)\n                            : false\n                    };\n                });\n            }\n        });\n        const minutesRef = computed(() => {\n            const { isMinuteDisabled, minutes } = props;\n            return getTimeUnits(time.minutes, minutes).map((minute) => {\n                return {\n                    label: minute,\n                    value: Number(minute),\n                    disabled: isMinuteDisabled\n                        ? isMinuteDisabled(Number(minute), props.hourValue)\n                        : false\n                };\n            });\n        });\n        const secondsRef = computed(() => {\n            const { isSecondDisabled, seconds } = props;\n            return getTimeUnits(time.seconds, seconds).map((second) => {\n                return {\n                    label: second,\n                    value: Number(second),\n                    disabled: isSecondDisabled\n                        ? isSecondDisabled(Number(second), props.minuteValue, props.hourValue)\n                        : false\n                };\n            });\n        });\n        const amPmRef = computed(() => {\n            const { isHourDisabled } = props;\n            let amDisabled = true;\n            let pmDisabled = true;\n            for (let i = 0; i < 12; ++i) {\n                if (!(isHourDisabled === null || isHourDisabled === void 0 ? void 0 : isHourDisabled(i))) {\n                    amDisabled = false;\n                    break;\n                }\n            }\n            for (let i = 12; i < 24; ++i) {\n                if (!(isHourDisabled === null || isHourDisabled === void 0 ? void 0 : isHourDisabled(i))) {\n                    pmDisabled = false;\n                    break;\n                }\n            }\n            return [\n                {\n                    label: 'AM',\n                    value: 'am',\n                    disabled: amDisabled\n                },\n                {\n                    label: 'PM',\n                    value: 'pm',\n                    disabled: pmDisabled\n                }\n            ];\n        });\n        return {\n            mergedTheme: mergedThemeRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            hours: hoursRef,\n            minutes: minutesRef,\n            seconds: secondsRef,\n            amPm: amPmRef,\n            hourScrollRef: ref(null),\n            minuteScrollRef: ref(null),\n            secondScrollRef: ref(null),\n            amPmScrollRef: ref(null)\n        };\n    },\n    render() {\n        var _a, _b, _c;\n        const { mergedClsPrefix, mergedTheme } = this;\n        return (h(\"div\", { tabindex: 0, class: `${mergedClsPrefix}-time-picker-panel`, onFocusin: this.onFocusin, onFocusout: this.onFocusout, onKeydown: this.onKeydown },\n            h(\"div\", { class: `${mergedClsPrefix}-time-picker-cols` },\n                this.showHour ? (h(\"div\", { class: [\n                        `${mergedClsPrefix}-time-picker-col`,\n                        this.isHourInvalid &&\n                            `${mergedClsPrefix}-time-picker-col--invalid`,\n                        this.transitionDisabled &&\n                            `${mergedClsPrefix}-time-picker-col--transition-disabled`\n                    ] },\n                    h(NScrollbar, { ref: \"hourScrollRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar }, {\n                        default: () => [\n                            h(PanelCol, { clsPrefix: mergedClsPrefix, data: this.hours, activeValue: this.hourValue, onItemClick: this.onHourClick }),\n                            h(\"div\", { class: `${mergedClsPrefix}-time-picker-col__padding` })\n                        ]\n                    }))) : null,\n                this.showMinute ? (h(\"div\", { class: [\n                        `${mergedClsPrefix}-time-picker-col`,\n                        this.transitionDisabled &&\n                            `${mergedClsPrefix}-time-picker-col--transition-disabled`,\n                        this.isMinuteInvalid &&\n                            `${mergedClsPrefix}-time-picker-col--invalid`\n                    ] },\n                    h(NScrollbar, { ref: \"minuteScrollRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar }, {\n                        default: () => [\n                            h(PanelCol, { clsPrefix: mergedClsPrefix, data: this.minutes, activeValue: this.minuteValue, onItemClick: this.onMinuteClick }),\n                            h(\"div\", { class: `${mergedClsPrefix}-time-picker-col__padding` })\n                        ]\n                    }))) : null,\n                this.showSecond ? (h(\"div\", { class: [\n                        `${mergedClsPrefix}-time-picker-col`,\n                        this.isSecondInvalid &&\n                            `${mergedClsPrefix}-time-picker-col--invalid`,\n                        this.transitionDisabled &&\n                            `${mergedClsPrefix}-time-picker-col--transition-disabled`\n                    ] },\n                    h(NScrollbar, { ref: \"secondScrollRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar }, {\n                        default: () => [\n                            h(PanelCol, { clsPrefix: mergedClsPrefix, data: this.seconds, activeValue: this.secondValue, onItemClick: this.onSecondClick }),\n                            h(\"div\", { class: `${mergedClsPrefix}-time-picker-col__padding` })\n                        ]\n                    }))) : null,\n                this.use12Hours ? (h(\"div\", { class: [\n                        `${mergedClsPrefix}-time-picker-col`,\n                        this.isAmPmInvalid &&\n                            `${mergedClsPrefix}-time-picker-col--invalid`,\n                        this.transitionDisabled &&\n                            `${mergedClsPrefix}-time-picker-col--transition-disabled`\n                    ] },\n                    h(NScrollbar, { ref: \"amPmScrollRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar }, {\n                        default: () => [\n                            h(PanelCol, { clsPrefix: mergedClsPrefix, data: this.amPm, activeValue: this.amPmValue, onItemClick: this.onAmPmClick }),\n                            h(\"div\", { class: `${mergedClsPrefix}-time-picker-col__padding` })\n                        ]\n                    }))) : null),\n            ((_a = this.actions) === null || _a === void 0 ? void 0 : _a.length) ? (h(\"div\", { class: `${mergedClsPrefix}-time-picker-actions` },\n                ((_b = this.actions) === null || _b === void 0 ? void 0 : _b.includes('now')) ? (h(NButton, { size: \"tiny\", theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: this.onNowClick }, { default: () => this.nowText })) : null,\n                ((_c = this.actions) === null || _c === void 0 ? void 0 : _c.includes('confirm')) ? (h(NButton, { size: \"tiny\", type: \"primary\", class: `${mergedClsPrefix}-time-picker-actions__confirm`, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, disabled: this.isValueInvalid, onClick: this.onConfirmClick }, { default: () => this.confirmText })) : null)) : null,\n            h(NBaseFocusDetector, { onFocus: this.onFocusDetectorFocus })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}