{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\nimport { InfoIcon, SuccessIcon, WarningIcon, ErrorIcon } from '../../_internal/icons';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { render, createKey, resolveWrappedSlot, resolveSlot } from '../../_utils';\nimport { NBaseIcon, NBaseClose } from '../../_internal';\nimport { NButton } from '../../button';\nimport { dialogLight } from '../styles';\nimport { dialogProps } from './dialogProps';\nimport style from './styles/index.cssr';\nconst infoIcon = h(InfoIcon, null);\nconst iconMap = {\n  default: infoIcon,\n  info: infoIcon,\n  success: h(SuccessIcon, null),\n  warning: h(WarningIcon, null),\n  error: h(ErrorIcon, null)\n};\nexport const NDialog = defineComponent({\n  name: 'Dialog',\n  alias: ['NimbusConfirmCard', 'Confirm' // deprecated\n  ],\n  props: Object.assign(Object.assign({}, useTheme.props), dialogProps),\n\n  setup(props) {\n    const {\n      mergedComponentPropsRef,\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const mergedIconPlacementRef = computed(() => {\n      var _a, _b;\n\n      const {\n        iconPlacement\n      } = props;\n      return iconPlacement || ((_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.Dialog) === null || _b === void 0 ? void 0 : _b.iconPlacement) || 'left';\n    });\n\n    function handlePositiveClick(e) {\n      const {\n        onPositiveClick\n      } = props;\n      if (onPositiveClick) onPositiveClick(e);\n    }\n\n    function handleNegativeClick(e) {\n      const {\n        onNegativeClick\n      } = props;\n      if (onNegativeClick) onNegativeClick(e);\n    }\n\n    function handleCloseClick() {\n      const {\n        onClose\n      } = props;\n      if (onClose) onClose();\n    }\n\n    const themeRef = useTheme('Dialog', '-dialog', style, dialogLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        type\n      } = props;\n      const iconPlacement = mergedIconPlacementRef.value;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          fontSize,\n          lineHeight,\n          border,\n          titleTextColor,\n          textColor,\n          color,\n          closeColor,\n          closeColorHover,\n          closeColorPressed,\n          borderRadius,\n          titleFontWeight,\n          titleFontSize,\n          padding,\n          iconSize,\n          actionSpace,\n          contentMargin,\n          closeSize,\n          [iconPlacement === 'top' ? 'iconMarginIconTop' : 'iconMargin']: iconMargin,\n          [iconPlacement === 'top' ? 'closeMarginIconTop' : 'closeMargin']: closeMargin,\n          [createKey('iconColor', type)]: iconColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-font-size': fontSize,\n        '--n-icon-color': iconColor,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-close-margin': closeMargin,\n        '--n-icon-margin': iconMargin,\n        '--n-icon-size': iconSize,\n        '--n-close-size': closeSize,\n        '--n-close-color': closeColor,\n        '--n-close-color-hover': closeColorHover,\n        '--n-close-color-pressed': closeColorPressed,\n        '--n-color': color,\n        '--n-text-color': textColor,\n        '--n-border-radius': borderRadius,\n        '--n-padding': padding,\n        '--n-line-height': lineHeight,\n        '--n-border': border,\n        '--n-content-margin': contentMargin,\n        '--n-title-font-size': titleFontSize,\n        '--n-title-font-weight': titleFontWeight,\n        '--n-title-text-color': titleTextColor,\n        '--n-action-space': actionSpace\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('dialog', computed(() => `${props.type[0]}${mergedIconPlacementRef.value[0]}`), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedIconPlacement: mergedIconPlacementRef,\n      mergedTheme: themeRef,\n      handlePositiveClick,\n      handleNegativeClick,\n      handleCloseClick,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    var _a;\n\n    const {\n      bordered,\n      mergedIconPlacement,\n      cssVars,\n      closable,\n      showIcon,\n      title,\n      content,\n      action,\n      negativeText,\n      positiveText,\n      positiveButtonProps,\n      negativeButtonProps,\n      handlePositiveClick,\n      handleNegativeClick,\n      mergedTheme,\n      loading,\n      type,\n      mergedClsPrefix\n    } = this;\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    const icon = showIcon ? h(NBaseIcon, {\n      clsPrefix: mergedClsPrefix,\n      class: `${mergedClsPrefix}-dialog__icon`\n    }, {\n      default: () => resolveWrappedSlot(this.$slots.icon, children => children || (this.icon ? render(this.icon) : iconMap[this.type]))\n    }) : null;\n    const actionNode = resolveWrappedSlot(this.$slots.action, children => children || positiveText || negativeText || action ? h(\"div\", {\n      class: `${mergedClsPrefix}-dialog__action`\n    }, children || (action ? [render(action)] : [this.negativeText && h(NButton, Object.assign({\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      ghost: true,\n      size: \"small\",\n      onClick: handleNegativeClick\n    }, negativeButtonProps), {\n      default: () => render(this.negativeText)\n    }), this.positiveText && h(NButton, Object.assign({\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"small\",\n      type: type === 'default' ? 'primary' : type,\n      disabled: loading,\n      loading: loading,\n      onClick: handlePositiveClick\n    }, positiveButtonProps), {\n      default: () => render(this.positiveText)\n    })])) : null);\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-dialog`, this.themeClass, `${mergedClsPrefix}-dialog--icon-${mergedIconPlacement}`, bordered && `${mergedClsPrefix}-dialog--bordered`],\n      style: cssVars,\n      role: \"dialog\"\n    }, closable ? h(NBaseClose, {\n      clsPrefix: mergedClsPrefix,\n      class: `${mergedClsPrefix}-dialog__close`,\n      onClick: this.handleCloseClick\n    }) : null, showIcon && mergedIconPlacement === 'top' ? h(\"div\", {\n      class: `${mergedClsPrefix}-dialog-icon-container`\n    }, icon) : null, h(\"div\", {\n      class: `${mergedClsPrefix}-dialog__title`\n    }, showIcon && mergedIconPlacement === 'left' ? icon : null, resolveSlot(this.$slots.header, () => [render(title)])), h(\"div\", {\n      class: [`${mergedClsPrefix}-dialog__content`, actionNode ? '' : `${mergedClsPrefix}-dialog__content--last`]\n    }, resolveSlot(this.$slots.default, () => [render(content)])), actionNode);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dialog/src/Dialog.js"],"names":["h","defineComponent","computed","InfoIcon","SuccessIcon","WarningIcon","ErrorIcon","useConfig","useTheme","useThemeClass","render","createKey","resolveWrappedSlot","resolveSlot","NBaseIcon","NBaseClose","NButton","dialogLight","dialogProps","style","infoIcon","iconMap","default","info","success","warning","error","NDialog","name","alias","props","Object","assign","setup","mergedComponentPropsRef","mergedClsPrefixRef","inlineThemeDisabled","mergedIconPlacementRef","_a","_b","iconPlacement","value","Dialog","handlePositiveClick","e","onPositiveClick","handleNegativeClick","onNegativeClick","handleCloseClick","onClose","themeRef","cssVarsRef","type","common","cubicBezierEaseInOut","self","fontSize","lineHeight","border","titleTextColor","textColor","color","closeColor","closeColorHover","closeColorPressed","borderRadius","titleFontWeight","titleFontSize","padding","iconSize","actionSpace","contentMargin","closeSize","iconMargin","closeMargin","iconColor","themeClassHandle","undefined","mergedClsPrefix","mergedIconPlacement","mergedTheme","cssVars","themeClass","onRender","bordered","closable","showIcon","title","content","action","negativeText","positiveText","positiveButtonProps","negativeButtonProps","loading","call","icon","clsPrefix","class","$slots","children","actionNode","theme","peers","Button","themeOverrides","peerOverrides","ghost","size","onClick","disabled","role","header"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed } from 'vue';\nimport { InfoIcon, SuccessIcon, WarningIcon, ErrorIcon } from '../../_internal/icons';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { render, createKey, resolveWrappedSlot, resolveSlot } from '../../_utils';\nimport { NBaseIcon, NBaseClose } from '../../_internal';\nimport { NButton } from '../../button';\nimport { dialogLight } from '../styles';\nimport { dialogProps } from './dialogProps';\nimport style from './styles/index.cssr';\nconst infoIcon = h(InfoIcon, null);\nconst iconMap = {\n    default: infoIcon,\n    info: infoIcon,\n    success: h(SuccessIcon, null),\n    warning: h(WarningIcon, null),\n    error: h(ErrorIcon, null)\n};\nexport const NDialog = defineComponent({\n    name: 'Dialog',\n    alias: [\n        'NimbusConfirmCard',\n        'Confirm' // deprecated\n    ],\n    props: Object.assign(Object.assign({}, useTheme.props), dialogProps),\n    setup(props) {\n        const { mergedComponentPropsRef, mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const mergedIconPlacementRef = computed(() => {\n            var _a, _b;\n            const { iconPlacement } = props;\n            return (iconPlacement ||\n                ((_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.Dialog) === null || _b === void 0 ? void 0 : _b.iconPlacement) ||\n                'left');\n        });\n        function handlePositiveClick(e) {\n            const { onPositiveClick } = props;\n            if (onPositiveClick)\n                onPositiveClick(e);\n        }\n        function handleNegativeClick(e) {\n            const { onNegativeClick } = props;\n            if (onNegativeClick)\n                onNegativeClick(e);\n        }\n        function handleCloseClick() {\n            const { onClose } = props;\n            if (onClose)\n                onClose();\n        }\n        const themeRef = useTheme('Dialog', '-dialog', style, dialogLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { type } = props;\n            const iconPlacement = mergedIconPlacementRef.value;\n            const { common: { cubicBezierEaseInOut }, self: { fontSize, lineHeight, border, titleTextColor, textColor, color, closeColor, closeColorHover, closeColorPressed, borderRadius, titleFontWeight, titleFontSize, padding, iconSize, actionSpace, contentMargin, closeSize, [iconPlacement === 'top' ? 'iconMarginIconTop' : 'iconMargin']: iconMargin, [iconPlacement === 'top' ? 'closeMarginIconTop' : 'closeMargin']: closeMargin, [createKey('iconColor', type)]: iconColor } } = themeRef.value;\n            return {\n                '--n-font-size': fontSize,\n                '--n-icon-color': iconColor,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-close-margin': closeMargin,\n                '--n-icon-margin': iconMargin,\n                '--n-icon-size': iconSize,\n                '--n-close-size': closeSize,\n                '--n-close-color': closeColor,\n                '--n-close-color-hover': closeColorHover,\n                '--n-close-color-pressed': closeColorPressed,\n                '--n-color': color,\n                '--n-text-color': textColor,\n                '--n-border-radius': borderRadius,\n                '--n-padding': padding,\n                '--n-line-height': lineHeight,\n                '--n-border': border,\n                '--n-content-margin': contentMargin,\n                '--n-title-font-size': titleFontSize,\n                '--n-title-font-weight': titleFontWeight,\n                '--n-title-text-color': titleTextColor,\n                '--n-action-space': actionSpace\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dialog', computed(() => `${props.type[0]}${mergedIconPlacementRef.value[0]}`), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedIconPlacement: mergedIconPlacementRef,\n            mergedTheme: themeRef,\n            handlePositiveClick,\n            handleNegativeClick,\n            handleCloseClick,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        const { bordered, mergedIconPlacement, cssVars, closable, showIcon, title, content, action, negativeText, positiveText, positiveButtonProps, negativeButtonProps, handlePositiveClick, handleNegativeClick, mergedTheme, loading, type, mergedClsPrefix } = this;\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        const icon = showIcon ? (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-dialog__icon` }, {\n            default: () => resolveWrappedSlot(this.$slots.icon, (children) => children || (this.icon ? render(this.icon) : iconMap[this.type]))\n        })) : null;\n        const actionNode = resolveWrappedSlot(this.$slots.action, (children) => children || positiveText || negativeText || action ? (h(\"div\", { class: `${mergedClsPrefix}-dialog__action` }, children ||\n            (action\n                ? [render(action)]\n                : [\n                    this.negativeText && (h(NButton, Object.assign({ theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, ghost: true, size: \"small\", onClick: handleNegativeClick }, negativeButtonProps), {\n                        default: () => render(this.negativeText)\n                    })),\n                    this.positiveText && (h(NButton, Object.assign({ theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"small\", type: type === 'default' ? 'primary' : type, disabled: loading, loading: loading, onClick: handlePositiveClick }, positiveButtonProps), {\n                        default: () => render(this.positiveText)\n                    }))\n                ]))) : null);\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-dialog`,\n                this.themeClass,\n                `${mergedClsPrefix}-dialog--icon-${mergedIconPlacement}`,\n                bordered && `${mergedClsPrefix}-dialog--bordered`\n            ], style: cssVars, role: \"dialog\" },\n            closable ? (h(NBaseClose, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-dialog__close`, onClick: this.handleCloseClick })) : null,\n            showIcon && mergedIconPlacement === 'top' ? (h(\"div\", { class: `${mergedClsPrefix}-dialog-icon-container` }, icon)) : null,\n            h(\"div\", { class: `${mergedClsPrefix}-dialog__title` },\n                showIcon && mergedIconPlacement === 'left' ? icon : null,\n                resolveSlot(this.$slots.header, () => [render(title)])),\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-dialog__content`,\n                    actionNode ? '' : `${mergedClsPrefix}-dialog__content--last`\n                ] }, resolveSlot(this.$slots.default, () => [render(content)])),\n            actionNode));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}