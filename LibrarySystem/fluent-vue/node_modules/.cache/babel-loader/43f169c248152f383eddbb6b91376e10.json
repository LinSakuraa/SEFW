{"ast":null,"code":"function getRawNodePath(tmNodes) {\n  if (!tmNodes) return null;\n  return tmNodes.map(tmNode => tmNode.rawNode);\n}\n\nfunction traverseWithCallback(options, beforeCallback, afterCallback) {\n  if (Array.isArray(options)) {\n    for (const option of options) {\n      if (beforeCallback) beforeCallback(option);\n\n      if (option.children) {\n        traverseWithCallback(option.children, beforeCallback, afterCallback);\n      }\n\n      if (afterCallback) afterCallback(option);\n    }\n  }\n}\n\nexport { getRawNodePath };\n\nfunction createSelectOptions(tmNodes, checkStrategyIsChild, labelField, separator) {\n  const selectOptions = [];\n  const path = [];\n  traverseWithCallback(tmNodes, tmNode => {\n    if (tmNode.isLeaf || !checkStrategyIsChild) {\n      if (tmNode.disabled) return;\n      const {\n        rawNode\n      } = tmNode;\n      path.push(rawNode);\n      selectOptions.push({\n        label: path.map(rawNodeInPath => rawNodeInPath[labelField]).join(separator),\n        value: tmNode.key,\n        rawNode: tmNode.rawNode,\n        path: Array.from(path)\n      });\n    }\n  }, () => {\n    path.pop();\n  });\n  return selectOptions;\n}\n\nfunction getPathLabel(node, separator, labelField) {\n  const path = [];\n\n  while (node) {\n    path.push(node.rawNode[labelField]);\n    node = node.parent;\n  }\n\n  return path.reverse().join(separator);\n}\n\nexport { traverseWithCallback, createSelectOptions, getPathLabel };","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/cascader/src/utils.js"],"names":["getRawNodePath","tmNodes","map","tmNode","rawNode","traverseWithCallback","options","beforeCallback","afterCallback","Array","isArray","option","children","createSelectOptions","checkStrategyIsChild","labelField","separator","selectOptions","path","isLeaf","disabled","push","label","rawNodeInPath","join","value","key","from","pop","getPathLabel","node","parent","reverse"],"mappings":"AAAA,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AAC7B,MAAI,CAACA,OAAL,EACI,OAAO,IAAP;AACJ,SAAOA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAYA,MAAM,CAACC,OAA/B,CAAP;AACH;;AACD,SAASC,oBAAT,CAA8BC,OAA9B,EAAuCC,cAAvC,EAAuDC,aAAvD,EAAsE;AAClE,MAAIC,KAAK,CAACC,OAAN,CAAcJ,OAAd,CAAJ,EAA4B;AACxB,SAAK,MAAMK,MAAX,IAAqBL,OAArB,EAA8B;AAC1B,UAAIC,cAAJ,EACIA,cAAc,CAACI,MAAD,CAAd;;AACJ,UAAIA,MAAM,CAACC,QAAX,EAAqB;AACjBP,QAAAA,oBAAoB,CAACM,MAAM,CAACC,QAAR,EAAkBL,cAAlB,EAAkCC,aAAlC,CAApB;AACH;;AACD,UAAIA,aAAJ,EACIA,aAAa,CAACG,MAAD,CAAb;AACP;AACJ;AACJ;;AACD,SAASX,cAAT;;AACA,SAASa,mBAAT,CAA6BZ,OAA7B,EAAsCa,oBAAtC,EAA4DC,UAA5D,EAAwEC,SAAxE,EAAmF;AAC/E,QAAMC,aAAa,GAAG,EAAtB;AACA,QAAMC,IAAI,GAAG,EAAb;AACAb,EAAAA,oBAAoB,CAACJ,OAAD,EAAWE,MAAD,IAAY;AACtC,QAAIA,MAAM,CAACgB,MAAP,IAAiB,CAACL,oBAAtB,EAA4C;AACxC,UAAIX,MAAM,CAACiB,QAAX,EACI;AACJ,YAAM;AAAEhB,QAAAA;AAAF,UAAcD,MAApB;AACAe,MAAAA,IAAI,CAACG,IAAL,CAAUjB,OAAV;AACAa,MAAAA,aAAa,CAACI,IAAd,CAAmB;AACfC,QAAAA,KAAK,EAAEJ,IAAI,CACNhB,GADE,CACGqB,aAAD,IAAmBA,aAAa,CAACR,UAAD,CADlC,EAEFS,IAFE,CAEGR,SAFH,CADQ;AAIfS,QAAAA,KAAK,EAAEtB,MAAM,CAACuB,GAJC;AAKftB,QAAAA,OAAO,EAAED,MAAM,CAACC,OALD;AAMfc,QAAAA,IAAI,EAAET,KAAK,CAACkB,IAAN,CAAWT,IAAX;AANS,OAAnB;AAQH;AACJ,GAfmB,EAejB,MAAM;AACLA,IAAAA,IAAI,CAACU,GAAL;AACH,GAjBmB,CAApB;AAkBA,SAAOX,aAAP;AACH;;AACD,SAASY,YAAT,CAAsBC,IAAtB,EAA4Bd,SAA5B,EAAuCD,UAAvC,EAAmD;AAC/C,QAAMG,IAAI,GAAG,EAAb;;AACA,SAAOY,IAAP,EAAa;AACTZ,IAAAA,IAAI,CAACG,IAAL,CAAUS,IAAI,CAAC1B,OAAL,CAAaW,UAAb,CAAV;AACAe,IAAAA,IAAI,GAAGA,IAAI,CAACC,MAAZ;AACH;;AACD,SAAOb,IAAI,CAACc,OAAL,GAAeR,IAAf,CAAoBR,SAApB,CAAP;AACH;;AACD,SAASX,oBAAT,EAA+BQ,mBAA/B,EAAoDgB,YAApD","sourcesContent":["function getRawNodePath(tmNodes) {\n    if (!tmNodes)\n        return null;\n    return tmNodes.map((tmNode) => tmNode.rawNode);\n}\nfunction traverseWithCallback(options, beforeCallback, afterCallback) {\n    if (Array.isArray(options)) {\n        for (const option of options) {\n            if (beforeCallback)\n                beforeCallback(option);\n            if (option.children) {\n                traverseWithCallback(option.children, beforeCallback, afterCallback);\n            }\n            if (afterCallback)\n                afterCallback(option);\n        }\n    }\n}\nexport { getRawNodePath };\nfunction createSelectOptions(tmNodes, checkStrategyIsChild, labelField, separator) {\n    const selectOptions = [];\n    const path = [];\n    traverseWithCallback(tmNodes, (tmNode) => {\n        if (tmNode.isLeaf || !checkStrategyIsChild) {\n            if (tmNode.disabled)\n                return;\n            const { rawNode } = tmNode;\n            path.push(rawNode);\n            selectOptions.push({\n                label: path\n                    .map((rawNodeInPath) => rawNodeInPath[labelField])\n                    .join(separator),\n                value: tmNode.key,\n                rawNode: tmNode.rawNode,\n                path: Array.from(path)\n            });\n        }\n    }, () => {\n        path.pop();\n    });\n    return selectOptions;\n}\nfunction getPathLabel(node, separator, labelField) {\n    const path = [];\n    while (node) {\n        path.push(node.rawNode[labelField]);\n        node = node.parent;\n    }\n    return path.reverse().join(separator);\n}\nexport { traverseWithCallback, createSelectOptions, getPathLabel };\n"]},"metadata":{},"sourceType":"module"}