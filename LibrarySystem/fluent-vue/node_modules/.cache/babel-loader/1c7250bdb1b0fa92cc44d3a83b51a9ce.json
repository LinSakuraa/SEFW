{"ast":null,"code":"import commonVariables from './_common';\nimport { changeColor } from 'seemly';\nimport { commonLight } from '../../_styles/common';\n\nconst self = vars => {\n  const {\n    textColor2,\n    primaryColorHover,\n    primaryColorPressed,\n    primaryColor,\n    infoColor,\n    successColor,\n    warningColor,\n    errorColor,\n    baseColor,\n    borderColor,\n    opacityDisabled,\n    tagColor,\n    closeColor,\n    closeColorHover,\n    closeColorPressed,\n    borderRadiusSmall: borderRadius,\n    fontSizeTiny,\n    fontSizeSmall,\n    fontSizeMedium,\n    heightTiny,\n    heightSmall,\n    heightMedium\n  } = vars;\n  return Object.assign(Object.assign({}, commonVariables), {\n    heightSmall: heightTiny,\n    heightMedium: heightSmall,\n    heightLarge: heightMedium,\n    borderRadius,\n    opacityDisabled,\n    fontSizeSmall: fontSizeTiny,\n    fontSizeMedium: fontSizeSmall,\n    fontSizeLarge: fontSizeMedium,\n    // checked\n    textColorCheckable: textColor2,\n    textColorHoverCheckable: primaryColorHover,\n    textColorPressedCheckable: primaryColorPressed,\n    textColorChecked: baseColor,\n    colorCheckable: '#0000',\n    colorHoverCheckable: '#0000',\n    colorPressedCheckable: '#0000',\n    colorChecked: primaryColor,\n    colorCheckedHover: primaryColorHover,\n    colorCheckedPressed: primaryColorPressed,\n    // default\n    border: `1px solid ${borderColor}`,\n    textColor: textColor2,\n    color: tagColor,\n    closeColor: closeColor,\n    closeColorHover: closeColorHover,\n    closeColorPressed: closeColorPressed,\n    borderPrimary: `1px solid ${changeColor(primaryColor, {\n      alpha: 0.3\n    })}`,\n    textColorPrimary: primaryColor,\n    colorPrimary: changeColor(primaryColor, {\n      alpha: 0.1\n    }),\n    closeColorPrimary: changeColor(primaryColor, {\n      alpha: 0.75\n    }),\n    closeColorHoverPrimary: changeColor(primaryColor, {\n      alpha: 0.6\n    }),\n    closeColorPressedPrimary: changeColor(primaryColor, {\n      alpha: 0.9\n    }),\n    borderInfo: `1px solid ${changeColor(infoColor, {\n      alpha: 0.3\n    })}`,\n    textColorInfo: infoColor,\n    colorInfo: changeColor(infoColor, {\n      alpha: 0.1\n    }),\n    closeColorInfo: changeColor(infoColor, {\n      alpha: 0.75\n    }),\n    closeColorHoverInfo: changeColor(infoColor, {\n      alpha: 0.6\n    }),\n    closeColorPressedInfo: changeColor(infoColor, {\n      alpha: 0.9\n    }),\n    borderSuccess: `1px solid ${changeColor(successColor, {\n      alpha: 0.3\n    })}`,\n    textColorSuccess: successColor,\n    colorSuccess: changeColor(successColor, {\n      alpha: 0.1\n    }),\n    closeColorSuccess: changeColor(successColor, {\n      alpha: 0.75\n    }),\n    closeColorHoverSuccess: changeColor(successColor, {\n      alpha: 0.6\n    }),\n    closeColorPressedSuccess: changeColor(successColor, {\n      alpha: 0.9\n    }),\n    borderWarning: `1px solid ${changeColor(warningColor, {\n      alpha: 0.35\n    })}`,\n    textColorWarning: warningColor,\n    colorWarning: changeColor(warningColor, {\n      alpha: 0.12\n    }),\n    closeColorWarning: changeColor(warningColor, {\n      alpha: 0.75\n    }),\n    closeColorHoverWarning: changeColor(warningColor, {\n      alpha: 0.6\n    }),\n    closeColorPressedWarning: changeColor(warningColor, {\n      alpha: 0.9\n    }),\n    borderError: `1px solid ${changeColor(errorColor, {\n      alpha: 0.23\n    })}`,\n    textColorError: errorColor,\n    colorError: changeColor(errorColor, {\n      alpha: 0.08\n    }),\n    closeColorError: changeColor(errorColor, {\n      alpha: 0.65\n    }),\n    closeColorHoverError: changeColor(errorColor, {\n      alpha: 0.5\n    }),\n    closeColorPressedError: changeColor(errorColor, {\n      alpha: 0.8\n    })\n  });\n};\n\nconst tagLight = {\n  name: 'Tag',\n  common: commonLight,\n  self\n};\nexport default tagLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tag/styles/light.js"],"names":["commonVariables","changeColor","commonLight","self","vars","textColor2","primaryColorHover","primaryColorPressed","primaryColor","infoColor","successColor","warningColor","errorColor","baseColor","borderColor","opacityDisabled","tagColor","closeColor","closeColorHover","closeColorPressed","borderRadiusSmall","borderRadius","fontSizeTiny","fontSizeSmall","fontSizeMedium","heightTiny","heightSmall","heightMedium","Object","assign","heightLarge","fontSizeLarge","textColorCheckable","textColorHoverCheckable","textColorPressedCheckable","textColorChecked","colorCheckable","colorHoverCheckable","colorPressedCheckable","colorChecked","colorCheckedHover","colorCheckedPressed","border","textColor","color","borderPrimary","alpha","textColorPrimary","colorPrimary","closeColorPrimary","closeColorHoverPrimary","closeColorPressedPrimary","borderInfo","textColorInfo","colorInfo","closeColorInfo","closeColorHoverInfo","closeColorPressedInfo","borderSuccess","textColorSuccess","colorSuccess","closeColorSuccess","closeColorHoverSuccess","closeColorPressedSuccess","borderWarning","textColorWarning","colorWarning","closeColorWarning","closeColorHoverWarning","closeColorPressedWarning","borderError","textColorError","colorError","closeColorError","closeColorHoverError","closeColorPressedError","tagLight","name","common"],"mappings":"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","sourcesContent":["import commonVariables from './_common';\nimport { changeColor } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nconst self = (vars) => {\n    const { textColor2, primaryColorHover, primaryColorPressed, primaryColor, infoColor, successColor, warningColor, errorColor, baseColor, borderColor, opacityDisabled, tagColor, closeColor, closeColorHover, closeColorPressed, borderRadiusSmall: borderRadius, fontSizeTiny, fontSizeSmall, fontSizeMedium, heightTiny, heightSmall, heightMedium } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { heightSmall: heightTiny, heightMedium: heightSmall, heightLarge: heightMedium, borderRadius,\n        opacityDisabled, fontSizeSmall: fontSizeTiny, fontSizeMedium: fontSizeSmall, fontSizeLarge: fontSizeMedium, \n        // checked\n        textColorCheckable: textColor2, textColorHoverCheckable: primaryColorHover, textColorPressedCheckable: primaryColorPressed, textColorChecked: baseColor, colorCheckable: '#0000', colorHoverCheckable: '#0000', colorPressedCheckable: '#0000', colorChecked: primaryColor, colorCheckedHover: primaryColorHover, colorCheckedPressed: primaryColorPressed, \n        // default\n        border: `1px solid ${borderColor}`, textColor: textColor2, color: tagColor, closeColor: closeColor, closeColorHover: closeColorHover, closeColorPressed: closeColorPressed, borderPrimary: `1px solid ${changeColor(primaryColor, { alpha: 0.3 })}`, textColorPrimary: primaryColor, colorPrimary: changeColor(primaryColor, { alpha: 0.1 }), closeColorPrimary: changeColor(primaryColor, { alpha: 0.75 }), closeColorHoverPrimary: changeColor(primaryColor, { alpha: 0.6 }), closeColorPressedPrimary: changeColor(primaryColor, { alpha: 0.9 }), borderInfo: `1px solid ${changeColor(infoColor, { alpha: 0.3 })}`, textColorInfo: infoColor, colorInfo: changeColor(infoColor, { alpha: 0.1 }), closeColorInfo: changeColor(infoColor, { alpha: 0.75 }), closeColorHoverInfo: changeColor(infoColor, { alpha: 0.6 }), closeColorPressedInfo: changeColor(infoColor, { alpha: 0.9 }), borderSuccess: `1px solid ${changeColor(successColor, { alpha: 0.3 })}`, textColorSuccess: successColor, colorSuccess: changeColor(successColor, { alpha: 0.1 }), closeColorSuccess: changeColor(successColor, { alpha: 0.75 }), closeColorHoverSuccess: changeColor(successColor, { alpha: 0.6 }), closeColorPressedSuccess: changeColor(successColor, { alpha: 0.9 }), borderWarning: `1px solid ${changeColor(warningColor, { alpha: 0.35 })}`, textColorWarning: warningColor, colorWarning: changeColor(warningColor, { alpha: 0.12 }), closeColorWarning: changeColor(warningColor, { alpha: 0.75 }), closeColorHoverWarning: changeColor(warningColor, { alpha: 0.6 }), closeColorPressedWarning: changeColor(warningColor, { alpha: 0.9 }), borderError: `1px solid ${changeColor(errorColor, { alpha: 0.23 })}`, textColorError: errorColor, colorError: changeColor(errorColor, { alpha: 0.08 }), closeColorError: changeColor(errorColor, { alpha: 0.65 }), closeColorHoverError: changeColor(errorColor, { alpha: 0.5 }), closeColorPressedError: changeColor(errorColor, { alpha: 0.8 }) });\n};\nconst tagLight = {\n    name: 'Tag',\n    common: commonLight,\n    self\n};\nexport default tagLight;\n"]},"metadata":{},"sourceType":"module"}