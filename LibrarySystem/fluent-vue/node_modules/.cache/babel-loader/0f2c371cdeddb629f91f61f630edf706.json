{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { h, Transition, computed, defineComponent, inject, withDirectives, vShow, ref, nextTick } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { loadingBarLight } from '../styles';\nimport { loadingBarProviderInjectionKey } from './context';\nimport style from './styles/index.cssr';\n\nfunction createClassName(status, clsPrefix) {\n  return `${clsPrefix}-loading-bar ${clsPrefix}-loading-bar--${status}`;\n}\n\nexport default defineComponent({\n  name: 'LoadingBar',\n\n  setup(props) {\n    const {\n      inlineThemeDisabled\n    } = useConfig();\n    const {\n      props: providerProps,\n      mergedClsPrefixRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(loadingBarProviderInjectionKey);\n    const loadingBarRef = ref(null);\n    const enteringRef = ref(false);\n    const startedRef = ref(false);\n    const loadingRef = ref(false);\n    const transitionDisabledRef = ref(false);\n    let finishing = false;\n    const erroringRef = ref(false);\n    const mergedLoadingBarStyle = computed(() => {\n      const {\n        loadingBarStyle\n      } = providerProps;\n      if (!loadingBarStyle) return '';\n      return loadingBarStyle[erroringRef.value ? 'error' : 'loading'];\n    });\n\n    function init() {\n      return __awaiter(this, void 0, void 0, function* () {\n        enteringRef.value = false;\n        loadingRef.value = false;\n        finishing = false;\n        erroringRef.value = false;\n        transitionDisabledRef.value = true;\n        yield nextTick();\n        transitionDisabledRef.value = false;\n      });\n    }\n\n    function start(fromProgress = 0, toProgress = 80, status = 'starting') {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield init();\n        loadingRef.value = true;\n        startedRef.value = true;\n        yield nextTick();\n        const el = loadingBarRef.value;\n        if (!el) return;\n        el.style.maxWidth = `${fromProgress}%`;\n        el.style.transition = 'none';\n        void el.offsetWidth;\n        el.className = createClassName(status, mergedClsPrefixRef.value);\n        el.style.transition = '';\n        el.style.maxWidth = `${toProgress}%`;\n      });\n    }\n\n    function finish() {\n      if (finishing || erroringRef.value || !loadingRef.value) return;\n      finishing = true;\n      const el = loadingBarRef.value;\n      if (!el) return;\n      el.className = createClassName('finishing', mergedClsPrefixRef.value);\n      el.style.maxWidth = '100%';\n      void el.offsetWidth;\n      loadingRef.value = false;\n    }\n\n    function error() {\n      if (finishing || erroringRef.value) return;\n\n      if (!loadingRef.value) {\n        void start(100, 100, 'error').then(() => {\n          erroringRef.value = true;\n          const el = loadingBarRef.value;\n          if (!el) return;\n          el.className = createClassName('error', mergedClsPrefixRef.value);\n          void el.offsetWidth;\n          loadingRef.value = false;\n        });\n      } else {\n        erroringRef.value = true;\n        const el = loadingBarRef.value;\n        if (!el) return;\n        el.className = createClassName('error', mergedClsPrefixRef.value);\n        el.style.maxWidth = '100%';\n        void el.offsetWidth;\n        loadingRef.value = false;\n      }\n    }\n\n    function handleEnter() {\n      enteringRef.value = true;\n    }\n\n    function handleAfterEnter() {\n      enteringRef.value = false;\n    }\n\n    function handleAfterLeave() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield init();\n      });\n    }\n\n    const themeRef = useTheme('LoadingBar', '-loading-bar', style, loadingBarLight, providerProps, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          height,\n          colorError,\n          colorLoading\n        }\n      } = themeRef.value;\n      return {\n        '--n-height': height,\n        '--n-color-loading': colorLoading,\n        '--n-color-error': colorError\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('loading-bar', undefined, cssVarsRef, providerProps) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      loadingBarRef,\n      started: startedRef,\n      loading: loadingRef,\n      entering: enteringRef,\n      transitionDisabled: transitionDisabledRef,\n      start,\n      error,\n      finish,\n      handleEnter,\n      handleAfterEnter,\n      handleAfterLeave,\n      mergedLoadingBarStyle,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    if (!this.started) return null;\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(Transition, {\n      name: \"fade-in-transition\",\n      appear: true,\n      onEnter: this.handleEnter,\n      onAfterEnter: this.handleAfterEnter,\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      onAfterLeave: this.handleAfterLeave,\n      css: !this.transitionDisabled\n    }, {\n      default: () => {\n        var _a;\n\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return withDirectives(h(\"div\", {\n          class: [`${mergedClsPrefix}-loading-bar-container`, this.themeClass]\n        }, h(\"div\", {\n          ref: \"loadingBarRef\",\n          class: [`${mergedClsPrefix}-loading-bar`],\n          style: [this.cssVars, this.mergedLoadingBarStyle]\n        })), [[vShow, this.loading || !this.loading && this.entering]]);\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/loading-bar/src/LoadingBar.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","Transition","computed","defineComponent","inject","withDirectives","vShow","ref","nextTick","useConfig","useTheme","useThemeClass","loadingBarLight","loadingBarProviderInjectionKey","style","createClassName","status","clsPrefix","name","setup","props","inlineThemeDisabled","providerProps","mergedClsPrefixRef","loadingBarRef","enteringRef","startedRef","loadingRef","transitionDisabledRef","finishing","erroringRef","mergedLoadingBarStyle","loadingBarStyle","init","start","fromProgress","toProgress","el","maxWidth","transition","offsetWidth","className","finish","error","handleEnter","handleAfterEnter","handleAfterLeave","themeRef","cssVarsRef","self","height","colorError","colorLoading","themeClassHandle","undefined","mergedClsPrefix","started","loading","entering","transitionDisabled","cssVars","themeClass","onRender","render","appear","onEnter","onAfterEnter","onAfterLeave","css","default","_a","call","class"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, Transition, computed, defineComponent, inject, withDirectives, vShow, ref, nextTick } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { loadingBarLight } from '../styles';\nimport { loadingBarProviderInjectionKey } from './context';\nimport style from './styles/index.cssr';\nfunction createClassName(status, clsPrefix) {\n    return `${clsPrefix}-loading-bar ${clsPrefix}-loading-bar--${status}`;\n}\nexport default defineComponent({\n    name: 'LoadingBar',\n    setup(props) {\n        const { inlineThemeDisabled } = useConfig();\n        const { props: providerProps, mergedClsPrefixRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(loadingBarProviderInjectionKey);\n        const loadingBarRef = ref(null);\n        const enteringRef = ref(false);\n        const startedRef = ref(false);\n        const loadingRef = ref(false);\n        const transitionDisabledRef = ref(false);\n        let finishing = false;\n        const erroringRef = ref(false);\n        const mergedLoadingBarStyle = computed(() => {\n            const { loadingBarStyle } = providerProps;\n            if (!loadingBarStyle)\n                return '';\n            return loadingBarStyle[erroringRef.value ? 'error' : 'loading'];\n        });\n        function init() {\n            return __awaiter(this, void 0, void 0, function* () {\n                enteringRef.value = false;\n                loadingRef.value = false;\n                finishing = false;\n                erroringRef.value = false;\n                transitionDisabledRef.value = true;\n                yield nextTick();\n                transitionDisabledRef.value = false;\n            });\n        }\n        function start(fromProgress = 0, toProgress = 80, status = 'starting') {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield init();\n                loadingRef.value = true;\n                startedRef.value = true;\n                yield nextTick();\n                const el = loadingBarRef.value;\n                if (!el)\n                    return;\n                el.style.maxWidth = `${fromProgress}%`;\n                el.style.transition = 'none';\n                void el.offsetWidth;\n                el.className = createClassName(status, mergedClsPrefixRef.value);\n                el.style.transition = '';\n                el.style.maxWidth = `${toProgress}%`;\n            });\n        }\n        function finish() {\n            if (finishing || erroringRef.value || !loadingRef.value)\n                return;\n            finishing = true;\n            const el = loadingBarRef.value;\n            if (!el)\n                return;\n            el.className = createClassName('finishing', mergedClsPrefixRef.value);\n            el.style.maxWidth = '100%';\n            void el.offsetWidth;\n            loadingRef.value = false;\n        }\n        function error() {\n            if (finishing || erroringRef.value)\n                return;\n            if (!loadingRef.value) {\n                void start(100, 100, 'error').then(() => {\n                    erroringRef.value = true;\n                    const el = loadingBarRef.value;\n                    if (!el)\n                        return;\n                    el.className = createClassName('error', mergedClsPrefixRef.value);\n                    void el.offsetWidth;\n                    loadingRef.value = false;\n                });\n            }\n            else {\n                erroringRef.value = true;\n                const el = loadingBarRef.value;\n                if (!el)\n                    return;\n                el.className = createClassName('error', mergedClsPrefixRef.value);\n                el.style.maxWidth = '100%';\n                void el.offsetWidth;\n                loadingRef.value = false;\n            }\n        }\n        function handleEnter() {\n            enteringRef.value = true;\n        }\n        function handleAfterEnter() {\n            enteringRef.value = false;\n        }\n        function handleAfterLeave() {\n            return __awaiter(this, void 0, void 0, function* () {\n                yield init();\n            });\n        }\n        const themeRef = useTheme('LoadingBar', '-loading-bar', style, loadingBarLight, providerProps, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { self: { height, colorError, colorLoading } } = themeRef.value;\n            return {\n                '--n-height': height,\n                '--n-color-loading': colorLoading,\n                '--n-color-error': colorError\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('loading-bar', undefined, cssVarsRef, providerProps)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            loadingBarRef,\n            started: startedRef,\n            loading: loadingRef,\n            entering: enteringRef,\n            transitionDisabled: transitionDisabledRef,\n            start,\n            error,\n            finish,\n            handleEnter,\n            handleAfterEnter,\n            handleAfterLeave,\n            mergedLoadingBarStyle,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        if (!this.started)\n            return null;\n        const { mergedClsPrefix } = this;\n        return (h(Transition, { name: \"fade-in-transition\", appear: true, onEnter: this.handleEnter, onAfterEnter: this.handleAfterEnter, \n            // eslint-disable-next-line @typescript-eslint/no-misused-promises\n            onAfterLeave: this.handleAfterLeave, css: !this.transitionDisabled }, {\n            default: () => {\n                var _a;\n                (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                return withDirectives(h(\"div\", { class: [\n                        `${mergedClsPrefix}-loading-bar-container`,\n                        this.themeClass\n                    ] },\n                    h(\"div\", { ref: \"loadingBarRef\", class: [`${mergedClsPrefix}-loading-bar`], style: [\n                            this.cssVars,\n                            this.mergedLoadingBarStyle\n                        ] })), [[vShow, this.loading || (!this.loading && this.entering)]]);\n            }\n        }));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}