{"ast":null,"code":"import { h, defineComponent, computed } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, resolveWrappedSlot } from '../../_utils';\nimport { radioLight } from '../styles';\nimport useRadio from './use-radio';\nimport style from './styles/radio.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nexport default defineComponent({\n  name: 'Radio',\n  props: Object.assign(Object.assign({}, useTheme.props), useRadio.props),\n\n  setup(props) {\n    const radio = useRadio(props);\n    const themeRef = useTheme('Radio', '-radio', style, radioLight, props, radio.mergedClsPrefix);\n    const cssVarsRef = computed(() => {\n      const {\n        mergedSize: {\n          value: size\n        }\n      } = radio;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          boxShadow,\n          boxShadowActive,\n          boxShadowDisabled,\n          boxShadowFocus,\n          boxShadowHover,\n          color,\n          colorDisabled,\n          textColor,\n          textColorDisabled,\n          dotColorActive,\n          dotColorDisabled,\n          labelPadding,\n          labelLineHeight,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('radioSize', size)]: radioSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-label-line-height': labelLineHeight,\n        '--n-box-shadow': boxShadow,\n        '--n-box-shadow-active': boxShadowActive,\n        '--n-box-shadow-disabled': boxShadowDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-box-shadow-hover': boxShadowHover,\n        '--n-color': color,\n        '--n-color-disabled': colorDisabled,\n        '--n-dot-color-active': dotColorActive,\n        '--n-dot-color-disabled': dotColorDisabled,\n        '--n-font-size': fontSize,\n        '--n-radio-size': radioSize,\n        '--n-text-color': textColor,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-label-padding': labelPadding\n      };\n    });\n    const {\n      inlineThemeDisabled,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const rtlEnabledRef = useRtl('Radio', mergedRtlRef, mergedClsPrefixRef);\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('radio', computed(() => radio.mergedSize.value[0]), cssVarsRef, props) : undefined;\n    return Object.assign(radio, {\n      rtlEnabled: rtlEnabledRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender,\n      label\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"label\", {\n      class: [`${mergedClsPrefix}-radio`, this.themeClass, {\n        [`${mergedClsPrefix}-radio--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-radio--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-radio--checked`]: this.renderSafeChecked,\n        [`${mergedClsPrefix}-radio--focus`]: this.focus\n      }],\n      style: this.cssVars\n    }, h(\"input\", {\n      ref: \"inputRef\",\n      type: \"radio\",\n      class: `${mergedClsPrefix}-radio-input`,\n      value: this.value,\n      name: this.mergedName,\n      checked: this.renderSafeChecked,\n      disabled: this.mergedDisabled,\n      onChange: this.handleRadioInputChange,\n      onFocus: this.handleRadioInputFocus,\n      onBlur: this.handleRadioInputBlur\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-radio__dot-wrapper`\n    }, \"\\u00A0\", h(\"div\", {\n      class: [`${mergedClsPrefix}-radio__dot`, this.renderSafeChecked && `${mergedClsPrefix}-radio__dot--checked`]\n    })), resolveWrappedSlot($slots.default, children => {\n      if (!children && !label) return null;\n      return h(\"div\", {\n        ref: \"labelRef\",\n        class: `${mergedClsPrefix}-radio__label`\n      }, children || label);\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/radio/src/Radio.js"],"names":["h","defineComponent","computed","useConfig","useTheme","useThemeClass","createKey","resolveWrappedSlot","radioLight","useRadio","style","useRtl","name","props","Object","assign","setup","radio","themeRef","mergedClsPrefix","cssVarsRef","mergedSize","value","size","common","cubicBezierEaseInOut","self","boxShadow","boxShadowActive","boxShadowDisabled","boxShadowFocus","boxShadowHover","color","colorDisabled","textColor","textColorDisabled","dotColorActive","dotColorDisabled","labelPadding","labelLineHeight","fontSize","radioSize","inlineThemeDisabled","mergedClsPrefixRef","mergedRtlRef","rtlEnabledRef","themeClassHandle","undefined","rtlEnabled","cssVars","themeClass","onRender","render","$slots","label","class","mergedDisabled","renderSafeChecked","focus","ref","type","mergedName","checked","disabled","onChange","handleRadioInputChange","onFocus","handleRadioInputFocus","onBlur","handleRadioInputBlur","default","children"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, resolveWrappedSlot } from '../../_utils';\nimport { radioLight } from '../styles';\nimport useRadio from './use-radio';\nimport style from './styles/radio.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nexport default defineComponent({\n    name: 'Radio',\n    props: Object.assign(Object.assign({}, useTheme.props), useRadio.props),\n    setup(props) {\n        const radio = useRadio(props);\n        const themeRef = useTheme('Radio', '-radio', style, radioLight, props, radio.mergedClsPrefix);\n        const cssVarsRef = computed(() => {\n            const { mergedSize: { value: size } } = radio;\n            const { common: { cubicBezierEaseInOut }, self: { boxShadow, boxShadowActive, boxShadowDisabled, boxShadowFocus, boxShadowHover, color, colorDisabled, textColor, textColorDisabled, dotColorActive, dotColorDisabled, labelPadding, labelLineHeight, [createKey('fontSize', size)]: fontSize, [createKey('radioSize', size)]: radioSize } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-label-line-height': labelLineHeight,\n                '--n-box-shadow': boxShadow,\n                '--n-box-shadow-active': boxShadowActive,\n                '--n-box-shadow-disabled': boxShadowDisabled,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-box-shadow-hover': boxShadowHover,\n                '--n-color': color,\n                '--n-color-disabled': colorDisabled,\n                '--n-dot-color-active': dotColorActive,\n                '--n-dot-color-disabled': dotColorDisabled,\n                '--n-font-size': fontSize,\n                '--n-radio-size': radioSize,\n                '--n-text-color': textColor,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-label-padding': labelPadding\n            };\n        });\n        const { inlineThemeDisabled, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const rtlEnabledRef = useRtl('Radio', mergedRtlRef, mergedClsPrefixRef);\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('radio', computed(() => radio.mergedSize.value[0]), cssVarsRef, props)\n            : undefined;\n        return Object.assign(radio, {\n            rtlEnabled: rtlEnabledRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        });\n    },\n    render() {\n        const { $slots, mergedClsPrefix, onRender, label } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"label\", { class: [\n                `${mergedClsPrefix}-radio`,\n                this.themeClass,\n                {\n                    [`${mergedClsPrefix}-radio--rtl`]: this.rtlEnabled,\n                    [`${mergedClsPrefix}-radio--disabled`]: this.mergedDisabled,\n                    [`${mergedClsPrefix}-radio--checked`]: this.renderSafeChecked,\n                    [`${mergedClsPrefix}-radio--focus`]: this.focus\n                }\n            ], style: this.cssVars },\n            h(\"input\", { ref: \"inputRef\", type: \"radio\", class: `${mergedClsPrefix}-radio-input`, value: this.value, name: this.mergedName, checked: this.renderSafeChecked, disabled: this.mergedDisabled, onChange: this.handleRadioInputChange, onFocus: this.handleRadioInputFocus, onBlur: this.handleRadioInputBlur }),\n            h(\"div\", { class: `${mergedClsPrefix}-radio__dot-wrapper` },\n                \"\\u00A0\",\n                h(\"div\", { class: [\n                        `${mergedClsPrefix}-radio__dot`,\n                        this.renderSafeChecked && `${mergedClsPrefix}-radio__dot--checked`\n                    ] })),\n            resolveWrappedSlot($slots.default, (children) => {\n                if (!children && !label)\n                    return null;\n                return (h(\"div\", { ref: \"labelRef\", class: `${mergedClsPrefix}-radio__label` }, children || label));\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}