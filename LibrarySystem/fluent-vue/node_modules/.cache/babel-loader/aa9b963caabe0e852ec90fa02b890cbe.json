{"ast":null,"code":"import { defineComponent, Fragment, ref, h, provide, reactive } from 'vue';\nimport { createId } from 'seemly';\nimport { useClicked, useClickPosition } from 'vooks';\nimport { omit } from '../../_utils';\nimport { NDialogEnvironment } from './DialogEnvironment';\nimport { dialogApiInjectionKey, dialogProviderInjectionKey } from './context';\nconst dialogProviderProps = {\n  injectionKey: String,\n  to: [String, Object]\n};\nexport const NDialogProvider = defineComponent({\n  name: 'DialogProvider',\n  props: dialogProviderProps,\n\n  setup() {\n    const dialogListRef = ref([]);\n    const dialogInstRefs = {};\n\n    function create(options = {}) {\n      const key = createId();\n      const dialogReactive = reactive(Object.assign(Object.assign({}, options), {\n        key,\n        destroy: () => {\n          dialogInstRefs[`n-dialog-${key}`].hide();\n        }\n      }));\n      dialogListRef.value.push(dialogReactive);\n      return dialogReactive;\n    }\n\n    const typedApi = ['info', 'success', 'warning', 'error'].map(type => options => {\n      return create(Object.assign(Object.assign({}, options), {\n        type\n      }));\n    });\n\n    function handleAfterLeave(key) {\n      const {\n        value: dialogList\n      } = dialogListRef;\n      dialogList.splice(dialogList.findIndex(dialog => dialog.key === key), 1);\n    }\n\n    function destroyAll() {\n      Object.values(dialogInstRefs).forEach(dialogInstRef => dialogInstRef.hide());\n    }\n\n    const api = {\n      create,\n      destroyAll,\n      info: typedApi[0],\n      success: typedApi[1],\n      warning: typedApi[2],\n      error: typedApi[3]\n    };\n    provide(dialogApiInjectionKey, api);\n    provide(dialogProviderInjectionKey, {\n      clickedRef: useClicked(64),\n      clickPositionRef: useClickPosition()\n    });\n    return Object.assign(Object.assign({}, api), {\n      dialogList: dialogListRef,\n      dialogInstRefs,\n      handleAfterLeave\n    });\n  },\n\n  render() {\n    var _a, _b;\n\n    return h(Fragment, null, [this.dialogList.map(dialog => h(NDialogEnvironment, omit(dialog, ['destroy', 'style'], {\n      internalStyle: dialog.style,\n      to: this.to,\n      ref: inst => {\n        if (inst === null) {\n          // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n          delete this.dialogInstRefs[`n-dialog-${dialog.key}`];\n        } else {\n          this.dialogInstRefs[`n-dialog-${dialog.key}`] = inst;\n        }\n      },\n      internalKey: dialog.key,\n      onInternalAfterLeave: this.handleAfterLeave\n    }))), (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)]);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dialog/src/DialogProvider.js"],"names":["defineComponent","Fragment","ref","h","provide","reactive","createId","useClicked","useClickPosition","omit","NDialogEnvironment","dialogApiInjectionKey","dialogProviderInjectionKey","dialogProviderProps","injectionKey","String","to","Object","NDialogProvider","name","props","setup","dialogListRef","dialogInstRefs","create","options","key","dialogReactive","assign","destroy","hide","value","push","typedApi","map","type","handleAfterLeave","dialogList","splice","findIndex","dialog","destroyAll","values","forEach","dialogInstRef","api","info","success","warning","error","clickedRef","clickPositionRef","render","_a","_b","internalStyle","style","inst","internalKey","onInternalAfterLeave","$slots","default","call"],"mappings":"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","sourcesContent":["import { defineComponent, Fragment, ref, h, provide, reactive } from 'vue';\nimport { createId } from 'seemly';\nimport { useClicked, useClickPosition } from 'vooks';\nimport { omit } from '../../_utils';\nimport { NDialogEnvironment } from './DialogEnvironment';\nimport { dialogApiInjectionKey, dialogProviderInjectionKey } from './context';\nconst dialogProviderProps = {\n    injectionKey: String,\n    to: [String, Object]\n};\nexport const NDialogProvider = defineComponent({\n    name: 'DialogProvider',\n    props: dialogProviderProps,\n    setup() {\n        const dialogListRef = ref([]);\n        const dialogInstRefs = {};\n        function create(options = {}) {\n            const key = createId();\n            const dialogReactive = reactive(Object.assign(Object.assign({}, options), { key, destroy: () => {\n                    dialogInstRefs[`n-dialog-${key}`].hide();\n                } }));\n            dialogListRef.value.push(dialogReactive);\n            return dialogReactive;\n        }\n        const typedApi = ['info', 'success', 'warning', 'error'].map((type) => (options) => {\n            return create(Object.assign(Object.assign({}, options), { type }));\n        });\n        function handleAfterLeave(key) {\n            const { value: dialogList } = dialogListRef;\n            dialogList.splice(dialogList.findIndex((dialog) => dialog.key === key), 1);\n        }\n        function destroyAll() {\n            Object.values(dialogInstRefs).forEach((dialogInstRef) => dialogInstRef.hide());\n        }\n        const api = {\n            create,\n            destroyAll,\n            info: typedApi[0],\n            success: typedApi[1],\n            warning: typedApi[2],\n            error: typedApi[3]\n        };\n        provide(dialogApiInjectionKey, api);\n        provide(dialogProviderInjectionKey, {\n            clickedRef: useClicked(64),\n            clickPositionRef: useClickPosition()\n        });\n        return Object.assign(Object.assign({}, api), { dialogList: dialogListRef, dialogInstRefs,\n            handleAfterLeave });\n    },\n    render() {\n        var _a, _b;\n        return h(Fragment, null, [\n            this.dialogList.map((dialog) => h(NDialogEnvironment, omit(dialog, ['destroy', 'style'], {\n                internalStyle: dialog.style,\n                to: this.to,\n                ref: ((inst) => {\n                    if (inst === null) {\n                        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n                        delete this.dialogInstRefs[`n-dialog-${dialog.key}`];\n                    }\n                    else {\n                        this.dialogInstRefs[`n-dialog-${dialog.key}`] = inst;\n                    }\n                }),\n                internalKey: dialog.key,\n                onInternalAfterLeave: this.handleAfterLeave\n            }))),\n            (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)\n        ]);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}