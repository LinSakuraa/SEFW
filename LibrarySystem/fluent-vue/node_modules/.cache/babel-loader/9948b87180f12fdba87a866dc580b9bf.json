{"ast":null,"code":"import { inject } from 'vue';\nconst ssrContextKey = Symbol('@css-render/vue3-ssr');\n\nfunction createStyleString(id, style) {\n  return `<style cssr-id=\"${id}\">\\n${style}\\n</style>`;\n}\n\nfunction ssrAdapter(id, style) {\n  const ssrContext = inject(ssrContextKey, null);\n\n  if (ssrContext === null) {\n    console.error('[css-render/vue3-ssr]: no ssr context found.');\n    return;\n  }\n\n  const {\n    styles,\n    ids\n  } = ssrContext; // we need to impl other options to make it behaves the same as the client side\n\n  if (ids.has(id)) return;\n\n  if (styles !== null) {\n    ids.add(id);\n    styles.push(createStyleString(id, style));\n  }\n}\n\nexport function useSsrAdapter() {\n  const context = inject(ssrContextKey, null);\n  if (context === null) return undefined;\n  return {\n    adapter: ssrAdapter,\n    context\n  };\n}\nexport function setup(app) {\n  const styles = [];\n  const ssrContext = {\n    styles,\n    ids: new Set()\n  };\n  app.provide(ssrContextKey, ssrContext);\n  return {\n    collect() {\n      const res = styles.join('\\n');\n      styles.length = 0;\n      return res;\n    }\n\n  };\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@css-render/vue3-ssr/esm/index.js"],"names":["inject","ssrContextKey","Symbol","createStyleString","id","style","ssrAdapter","ssrContext","console","error","styles","ids","has","add","push","useSsrAdapter","context","undefined","adapter","setup","app","Set","provide","collect","res","join","length"],"mappings":"AAAA,SAASA,MAAT,QAAuB,KAAvB;AACA,MAAMC,aAAa,GAAGC,MAAM,CAAC,sBAAD,CAA5B;;AACA,SAASC,iBAAT,CAA2BC,EAA3B,EAA+BC,KAA/B,EAAsC;AAClC,SAAQ,mBAAkBD,EAAG,OAAMC,KAAM,YAAzC;AACH;;AACD,SAASC,UAAT,CAAoBF,EAApB,EAAwBC,KAAxB,EAA+B;AAC3B,QAAME,UAAU,GAAGP,MAAM,CAACC,aAAD,EAAgB,IAAhB,CAAzB;;AACA,MAAIM,UAAU,KAAK,IAAnB,EAAyB;AACrBC,IAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACA;AACH;;AACD,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAkBJ,UAAxB,CAN2B,CAO3B;;AACA,MAAII,GAAG,CAACC,GAAJ,CAAQR,EAAR,CAAJ,EACI;;AACJ,MAAIM,MAAM,KAAK,IAAf,EAAqB;AACjBC,IAAAA,GAAG,CAACE,GAAJ,CAAQT,EAAR;AACAM,IAAAA,MAAM,CAACI,IAAP,CAAYX,iBAAiB,CAACC,EAAD,EAAKC,KAAL,CAA7B;AACH;AACJ;;AACD,OAAO,SAASU,aAAT,GAAyB;AAC5B,QAAMC,OAAO,GAAGhB,MAAM,CAACC,aAAD,EAAgB,IAAhB,CAAtB;AACA,MAAIe,OAAO,KAAK,IAAhB,EACI,OAAOC,SAAP;AACJ,SAAO;AACHC,IAAAA,OAAO,EAAEZ,UADN;AAEHU,IAAAA;AAFG,GAAP;AAIH;AACD,OAAO,SAASG,KAAT,CAAeC,GAAf,EAAoB;AACvB,QAAMV,MAAM,GAAG,EAAf;AACA,QAAMH,UAAU,GAAG;AACfG,IAAAA,MADe;AAEfC,IAAAA,GAAG,EAAE,IAAIU,GAAJ;AAFU,GAAnB;AAIAD,EAAAA,GAAG,CAACE,OAAJ,CAAYrB,aAAZ,EAA2BM,UAA3B;AACA,SAAO;AACHgB,IAAAA,OAAO,GAAG;AACN,YAAMC,GAAG,GAAGd,MAAM,CAACe,IAAP,CAAY,IAAZ,CAAZ;AACAf,MAAAA,MAAM,CAACgB,MAAP,GAAgB,CAAhB;AACA,aAAOF,GAAP;AACH;;AALE,GAAP;AAOH","sourcesContent":["import { inject } from 'vue';\nconst ssrContextKey = Symbol('@css-render/vue3-ssr');\nfunction createStyleString(id, style) {\n    return `<style cssr-id=\"${id}\">\\n${style}\\n</style>`;\n}\nfunction ssrAdapter(id, style) {\n    const ssrContext = inject(ssrContextKey, null);\n    if (ssrContext === null) {\n        console.error('[css-render/vue3-ssr]: no ssr context found.');\n        return;\n    }\n    const { styles, ids } = ssrContext;\n    // we need to impl other options to make it behaves the same as the client side\n    if (ids.has(id))\n        return;\n    if (styles !== null) {\n        ids.add(id);\n        styles.push(createStyleString(id, style));\n    }\n}\nexport function useSsrAdapter() {\n    const context = inject(ssrContextKey, null);\n    if (context === null)\n        return undefined;\n    return {\n        adapter: ssrAdapter,\n        context\n    };\n}\nexport function setup(app) {\n    const styles = [];\n    const ssrContext = {\n        styles,\n        ids: new Set()\n    };\n    app.provide(ssrContextKey, ssrContext);\n    return {\n        collect() {\n            const res = styles.join('\\n');\n            styles.length = 0;\n            return res;\n        }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}