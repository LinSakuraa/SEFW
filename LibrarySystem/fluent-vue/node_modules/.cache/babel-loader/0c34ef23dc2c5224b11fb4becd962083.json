{"ast":null,"code":"import { defineComponent, h, inject, ref, toRef, watchEffect } from 'vue';\nimport NImagePreview from './ImagePreview';\nimport { imageGroupInjectionKey } from './ImageGroup';\nimport { useConfig } from '../../_mixins';\nimport { imagePreviewSharedProps } from './interface';\nconst imageProps = Object.assign({\n  alt: String,\n  height: [String, Number],\n  imgProps: Object,\n  objectFit: {\n    type: String,\n    default: 'fill'\n  },\n  previewSrc: String,\n  fallbackSrc: String,\n  width: [String, Number],\n  src: String,\n  previewDisabled: Boolean,\n  loadDescription: String,\n  onError: Function,\n  onLoad: Function\n}, imagePreviewSharedProps);\nexport default defineComponent({\n  name: 'Image',\n  props: imageProps,\n  inheritAttrs: false,\n\n  setup(props) {\n    const imageRef = ref(null);\n    const showErrorRef = ref(false);\n    const imgPropsRef = toRef(props, 'imgProps');\n    const previewInstRef = ref(null);\n    const imageGroupHandle = inject(imageGroupInjectionKey, null);\n    const {\n      mergedClsPrefixRef\n    } = imageGroupHandle || useConfig(props);\n    const exposedMethods = {\n      click: () => {\n        if (props.previewDisabled || showErrorRef.value) return;\n        const mergedPreviewSrc = props.previewSrc || props.src;\n\n        if (imageGroupHandle) {\n          imageGroupHandle.setPreviewSrc(mergedPreviewSrc);\n          imageGroupHandle.setThumbnailEl(imageRef.value);\n          imageGroupHandle.toggleShow();\n          return;\n        }\n\n        const {\n          value: previewInst\n        } = previewInstRef;\n        if (!previewInst) return;\n        previewInst.setPreviewSrc(mergedPreviewSrc);\n        previewInst.setThumbnailEl(imageRef.value);\n        previewInst.toggleShow();\n      }\n    };\n    watchEffect(() => {\n      var _a;\n\n      void props.src;\n      void ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n      showErrorRef.value = false;\n    });\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId,\n      previewInstRef,\n      imageRef,\n      imgProps: imgPropsRef,\n      showError: showErrorRef,\n      mergedOnError: e => {\n        showErrorRef.value = true;\n        const {\n          onError,\n          imgProps: {\n            onError: imgPropsOnError\n          } = {}\n        } = props;\n        onError === null || onError === void 0 ? void 0 : onError(e);\n        imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n      },\n      mergedOnLoad: e => {\n        const {\n          onLoad,\n          imgProps: {\n            onLoad: imgPropsOnLoad\n          } = {}\n        } = props;\n        onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n        imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n      }\n    }, exposedMethods);\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      imgProps = {},\n      $attrs\n    } = this;\n    const imgNode = h(\"img\", Object.assign({}, imgProps, {\n      class: [this.groupId, imgProps.class],\n      ref: \"imageRef\",\n      width: this.width || imgProps.width,\n      height: this.height || imgProps.height,\n      src: this.showError ? this.fallbackSrc : this.src || imgProps.src,\n      alt: this.alt || imgProps.alt,\n      \"aria-label\": this.alt || imgProps.alt,\n      onClick: this.click,\n      onError: this.mergedOnError,\n      onLoad: this.mergedOnLoad,\n      style: [imgProps.style || '', {\n        objectFit: this.objectFit\n      }],\n      \"data-error\": this.showError,\n      \"data-preview-src\": this.previewSrc || this.src\n    }));\n    return h(\"div\", Object.assign({}, $attrs, {\n      role: \"none\",\n      class: [$attrs.class, `${mergedClsPrefix}-image`, (this.previewDisabled || this.showError) && `${mergedClsPrefix}-image--preview-disabled`]\n    }), this.groupId ? imgNode : h(NImagePreview, {\n      theme: this.theme,\n      themeOverrides: this.themeOverrides,\n      clsPrefix: mergedClsPrefix,\n      ref: \"previewInstRef\",\n      showToolbar: this.showToolbar,\n      showToolbarTooltip: this.showToolbarTooltip\n    }, {\n      default: () => imgNode\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/image/src/Image.js"],"names":["defineComponent","h","inject","ref","toRef","watchEffect","NImagePreview","imageGroupInjectionKey","useConfig","imagePreviewSharedProps","imageProps","Object","assign","alt","String","height","Number","imgProps","objectFit","type","default","previewSrc","fallbackSrc","width","src","previewDisabled","Boolean","loadDescription","onError","Function","onLoad","name","props","inheritAttrs","setup","imageRef","showErrorRef","imgPropsRef","previewInstRef","imageGroupHandle","mergedClsPrefixRef","exposedMethods","click","value","mergedPreviewSrc","setPreviewSrc","setThumbnailEl","toggleShow","previewInst","_a","mergedClsPrefix","groupId","showError","mergedOnError","e","imgPropsOnError","mergedOnLoad","imgPropsOnLoad","render","$attrs","imgNode","class","onClick","style","role","theme","themeOverrides","clsPrefix","showToolbar","showToolbarTooltip"],"mappings":"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","sourcesContent":["import { defineComponent, h, inject, ref, toRef, watchEffect } from 'vue';\nimport NImagePreview from './ImagePreview';\nimport { imageGroupInjectionKey } from './ImageGroup';\nimport { useConfig } from '../../_mixins';\nimport { imagePreviewSharedProps } from './interface';\nconst imageProps = Object.assign({ alt: String, height: [String, Number], imgProps: Object, objectFit: {\n        type: String,\n        default: 'fill'\n    }, previewSrc: String, fallbackSrc: String, width: [String, Number], src: String, previewDisabled: Boolean, loadDescription: String, onError: Function, onLoad: Function }, imagePreviewSharedProps);\nexport default defineComponent({\n    name: 'Image',\n    props: imageProps,\n    inheritAttrs: false,\n    setup(props) {\n        const imageRef = ref(null);\n        const showErrorRef = ref(false);\n        const imgPropsRef = toRef(props, 'imgProps');\n        const previewInstRef = ref(null);\n        const imageGroupHandle = inject(imageGroupInjectionKey, null);\n        const { mergedClsPrefixRef } = imageGroupHandle || useConfig(props);\n        const exposedMethods = {\n            click: () => {\n                if (props.previewDisabled || showErrorRef.value)\n                    return;\n                const mergedPreviewSrc = props.previewSrc || props.src;\n                if (imageGroupHandle) {\n                    imageGroupHandle.setPreviewSrc(mergedPreviewSrc);\n                    imageGroupHandle.setThumbnailEl(imageRef.value);\n                    imageGroupHandle.toggleShow();\n                    return;\n                }\n                const { value: previewInst } = previewInstRef;\n                if (!previewInst)\n                    return;\n                previewInst.setPreviewSrc(mergedPreviewSrc);\n                previewInst.setThumbnailEl(imageRef.value);\n                previewInst.toggleShow();\n            }\n        };\n        watchEffect(() => {\n            var _a;\n            void props.src;\n            void ((_a = props.imgProps) === null || _a === void 0 ? void 0 : _a.src);\n            showErrorRef.value = false;\n        });\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, groupId: imageGroupHandle === null || imageGroupHandle === void 0 ? void 0 : imageGroupHandle.groupId, previewInstRef,\n            imageRef, imgProps: imgPropsRef, showError: showErrorRef, mergedOnError: (e) => {\n                showErrorRef.value = true;\n                const { onError, imgProps: { onError: imgPropsOnError } = {} } = props;\n                onError === null || onError === void 0 ? void 0 : onError(e);\n                imgPropsOnError === null || imgPropsOnError === void 0 ? void 0 : imgPropsOnError(e);\n            }, mergedOnLoad: (e) => {\n                const { onLoad, imgProps: { onLoad: imgPropsOnLoad } = {} } = props;\n                onLoad === null || onLoad === void 0 ? void 0 : onLoad(e);\n                imgPropsOnLoad === null || imgPropsOnLoad === void 0 ? void 0 : imgPropsOnLoad(e);\n            } }, exposedMethods);\n    },\n    render() {\n        const { mergedClsPrefix, imgProps = {}, $attrs } = this;\n        const imgNode = (h(\"img\", Object.assign({}, imgProps, { class: [this.groupId, imgProps.class], ref: \"imageRef\", width: this.width || imgProps.width, height: this.height || imgProps.height, src: this.showError ? this.fallbackSrc : this.src || imgProps.src, alt: this.alt || imgProps.alt, \"aria-label\": this.alt || imgProps.alt, onClick: this.click, onError: this.mergedOnError, onLoad: this.mergedOnLoad, style: [imgProps.style || '', { objectFit: this.objectFit }], \"data-error\": this.showError, \"data-preview-src\": this.previewSrc || this.src })));\n        return (h(\"div\", Object.assign({}, $attrs, { role: \"none\", class: [\n                $attrs.class,\n                `${mergedClsPrefix}-image`,\n                (this.previewDisabled || this.showError) &&\n                    `${mergedClsPrefix}-image--preview-disabled`\n            ] }), this.groupId ? (imgNode) : (h(NImagePreview, { theme: this.theme, themeOverrides: this.themeOverrides, clsPrefix: mergedClsPrefix, ref: \"previewInstRef\", showToolbar: this.showToolbar, showToolbarTooltip: this.showToolbarTooltip }, {\n            default: () => imgNode\n        }))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}