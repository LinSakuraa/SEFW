{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { heightNumber } from '../styles';\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, designUnit, disabledOpacity, fillColor, focusStrokeOuter, foregroundOnAccentRest, neutralFillInputAltActive, neutralFillInputAltFocus, neutralFillInputAltHover, neutralFillInputAltRest, neutralForegroundRest, neutralStrokeStrongActive, neutralStrokeStrongHover, neutralStrokeStrongRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight } from '../design-tokens';\nexport const radioStyles = (context, definition) => css`\n    ${display('inline-flex')} :host {\n      --input-size: calc((${heightNumber} / 2) + ${designUnit});\n      align-items: center;\n      outline: none;\n      ${\n/*\n * Chromium likes to select label text or the default slot when\n * the radio button is clicked. Maybe there is a better solution here?\n */\n''} user-select: none;\n      position: relative;\n      flex-direction: row;\n      transition: all 0.2s ease-in-out;\n    }\n\n    .control {\n      position: relative;\n      width: calc(var(--input-size) * 1px);\n      height: calc(var(--input-size) * 1px);\n      box-sizing: border-box;\n      border-radius: 50%;\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeStrongRest};\n      background: ${neutralFillInputAltRest};\n      outline: none;\n      cursor: pointer;\n    }\n\n    .label__hidden {\n      display: none;\n      visibility: hidden;\n    }\n\n    .label {\n      font-family: ${bodyFont};\n      color: ${neutralForegroundRest};\n      ${\n/* Need to discuss with Brian how HorizontalSpacingNumber can work. https://github.com/microsoft/fast/issues/2766 */\n''} padding-inline-start: calc(${designUnit} * 2px + 2px);\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control,\n    slot[name='checked-indicator'] {\n      flex-shrink: 0;\n    }\n\n    slot[name='checked-indicator'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      fill: ${foregroundOnAccentRest};\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    :host(:not(.disabled):hover) .control {\n      background: ${neutralFillInputAltHover};\n      border-color: ${neutralStrokeStrongHover};\n    }\n\n    :host(:not(.disabled):active) .control {\n      background: ${neutralFillInputAltActive};\n      border-color: ${neutralStrokeStrongActive};\n    }\n\n    :host(:not(.disabled):active) slot[name='checked-indicator'] {\n      opacity: 1;\n    }\n\n    :host(:${focusVisible}) .control {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      background: ${neutralFillInputAltFocus};\n      border-color: ${focusStrokeOuter};\n    }\n\n    :host(.checked) .control {\n      background: ${accentFillRest};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):hover) .control {\n      background: ${accentFillHover};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):active) .control {\n      background: ${accentFillActive};\n      border-color: transparent;\n    }\n\n    :host(.disabled) .label,\n    :host(.readonly) .label,\n    :host(.readonly) .control,\n    :host(.disabled) .control {\n      cursor: ${disabledCursor};\n    }\n\n    :host(.checked) slot[name='checked-indicator'] {\n      opacity: 1;\n    }\n\n    :host(.disabled) {\n      opacity: ${disabledOpacity};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        .control {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.FieldText};\n        }\n        :host(:not(.disabled):hover) .control,\n        :host(:not(.disabled):active) .control {\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(:${focusVisible}) .control {\n          forced-color-adjust: none;\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(.checked:not(.disabled):hover) .control,\n        :host(.checked:not(.disabled):active) .control {\n          border-color: ${SystemColors.Highlight};\n          background: ${SystemColors.Highlight};\n        }\n        :host(.checked:${focusVisible}) .control {\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n        }\n        :host(.checked) slot[name='checked-indicator'] {\n          fill: ${SystemColors.Highlight};\n        }\n        :host(.checked:hover) .control slot[name='checked-indicator'] {\n          fill: ${SystemColors.HighlightText};\n        }\n        :host(.disabled) {\n          opacity: 1;\n        }\n        :host(.disabled) .label {\n          color: ${SystemColors.GrayText};\n        }\n        :host(.disabled) .control,\n        :host(.checked.disabled) .control {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.GrayText};\n        }\n        :host(.disabled) slot[name='checked-indicator'],\n        :host(.checked.disabled) slot[name='checked-indicator'] {\n          fill: ${SystemColors.GrayText};\n        }\n      `));","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/radio/radio.styles.js"],"names":["css","SystemColors","disabledCursor","display","focusVisible","forcedColorsStylesheetBehavior","heightNumber","accentFillActive","accentFillHover","accentFillRest","bodyFont","designUnit","disabledOpacity","fillColor","focusStrokeOuter","foregroundOnAccentRest","neutralFillInputAltActive","neutralFillInputAltFocus","neutralFillInputAltHover","neutralFillInputAltRest","neutralForegroundRest","neutralStrokeStrongActive","neutralStrokeStrongHover","neutralStrokeStrongRest","strokeWidth","typeRampBaseFontSize","typeRampBaseLineHeight","radioStyles","context","definition","withBehaviors","Field","FieldText","Highlight","HighlightText","GrayText"],"mappings":"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","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { heightNumber } from '../styles';\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, designUnit, disabledOpacity, fillColor, focusStrokeOuter, foregroundOnAccentRest, neutralFillInputAltActive, neutralFillInputAltFocus, neutralFillInputAltHover, neutralFillInputAltRest, neutralForegroundRest, neutralStrokeStrongActive, neutralStrokeStrongHover, neutralStrokeStrongRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../design-tokens';\nexport const radioStyles = (context, definition) => css `\n    ${display('inline-flex')} :host {\n      --input-size: calc((${heightNumber} / 2) + ${designUnit});\n      align-items: center;\n      outline: none;\n      ${\n/*\n * Chromium likes to select label text or the default slot when\n * the radio button is clicked. Maybe there is a better solution here?\n */ ''} user-select: none;\n      position: relative;\n      flex-direction: row;\n      transition: all 0.2s ease-in-out;\n    }\n\n    .control {\n      position: relative;\n      width: calc(var(--input-size) * 1px);\n      height: calc(var(--input-size) * 1px);\n      box-sizing: border-box;\n      border-radius: 50%;\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeStrongRest};\n      background: ${neutralFillInputAltRest};\n      outline: none;\n      cursor: pointer;\n    }\n\n    .label__hidden {\n      display: none;\n      visibility: hidden;\n    }\n\n    .label {\n      font-family: ${bodyFont};\n      color: ${neutralForegroundRest};\n      ${\n/* Need to discuss with Brian how HorizontalSpacingNumber can work. https://github.com/microsoft/fast/issues/2766 */ ''} padding-inline-start: calc(${designUnit} * 2px + 2px);\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n    }\n\n    .control,\n    slot[name='checked-indicator'] {\n      flex-shrink: 0;\n    }\n\n    slot[name='checked-indicator'] {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      fill: ${foregroundOnAccentRest};\n      opacity: 0;\n      pointer-events: none;\n    }\n\n    :host(:not(.disabled):hover) .control {\n      background: ${neutralFillInputAltHover};\n      border-color: ${neutralStrokeStrongHover};\n    }\n\n    :host(:not(.disabled):active) .control {\n      background: ${neutralFillInputAltActive};\n      border-color: ${neutralStrokeStrongActive};\n    }\n\n    :host(:not(.disabled):active) slot[name='checked-indicator'] {\n      opacity: 1;\n    }\n\n    :host(:${focusVisible}) .control {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      background: ${neutralFillInputAltFocus};\n      border-color: ${focusStrokeOuter};\n    }\n\n    :host(.checked) .control {\n      background: ${accentFillRest};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):hover) .control {\n      background: ${accentFillHover};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):active) .control {\n      background: ${accentFillActive};\n      border-color: transparent;\n    }\n\n    :host(.disabled) .label,\n    :host(.readonly) .label,\n    :host(.readonly) .control,\n    :host(.disabled) .control {\n      cursor: ${disabledCursor};\n    }\n\n    :host(.checked) slot[name='checked-indicator'] {\n      opacity: 1;\n    }\n\n    :host(.disabled) {\n      opacity: ${disabledOpacity};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        .control {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.FieldText};\n        }\n        :host(:not(.disabled):hover) .control,\n        :host(:not(.disabled):active) .control {\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(:${focusVisible}) .control {\n          forced-color-adjust: none;\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(.checked:not(.disabled):hover) .control,\n        :host(.checked:not(.disabled):active) .control {\n          border-color: ${SystemColors.Highlight};\n          background: ${SystemColors.Highlight};\n        }\n        :host(.checked:${focusVisible}) .control {\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n        }\n        :host(.checked) slot[name='checked-indicator'] {\n          fill: ${SystemColors.Highlight};\n        }\n        :host(.checked:hover) .control slot[name='checked-indicator'] {\n          fill: ${SystemColors.HighlightText};\n        }\n        :host(.disabled) {\n          opacity: 1;\n        }\n        :host(.disabled) .label {\n          color: ${SystemColors.GrayText};\n        }\n        :host(.disabled) .control,\n        :host(.checked.disabled) .control {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.GrayText};\n        }\n        :host(.disabled) slot[name='checked-indicator'],\n        :host(.checked.disabled) slot[name='checked-indicator'] {\n          fill: ${SystemColors.GrayText};\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}