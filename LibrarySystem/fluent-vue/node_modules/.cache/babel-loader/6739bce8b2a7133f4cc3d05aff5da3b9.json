{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, keyArrowLeft, keyArrowRight, keyEnter, keySpace } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element\";\nimport { StartEnd } from \"../patterns/start-end\";\nimport { getDirection } from \"../utilities/\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { MenuItemRole, roleForMenuItem } from \"./menu-item.options\";\nexport { MenuItemRole, roleForMenuItem };\n/**\n * A Switch Custom HTML Element.\n * Implements {@link https://www.w3.org/TR/wai-aria-1.1/#menuitem | ARIA menuitem }, {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox | ARIA menuitemcheckbox}, or {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio | ARIA menuitemradio }.\n *\n * @public\n */\n\nexport class MenuItem extends FoundationElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * The role of the element.\n     *\n     * @public\n     * @remarks\n     * HTML Attribute: role\n     */\n\n    this.role = MenuItemRole.menuitem;\n    /**\n     * @internal\n     */\n\n    this.hasSubmenu = false;\n    /**\n     * Track current direction to pass to the anchored region\n     *\n     * @internal\n     */\n\n    this.currentDirection = Direction.ltr;\n    this.focusSubmenuOnLoad = false;\n    /**\n     * @internal\n     */\n\n    this.handleMenuItemKeyDown = e => {\n      if (e.defaultPrevented) {\n        return false;\n      }\n\n      switch (e.key) {\n        case keyEnter:\n        case keySpace:\n          this.invoke();\n          return false;\n\n        case keyArrowRight:\n          //open/focus on submenu\n          this.expandAndFocus();\n          return false;\n\n        case keyArrowLeft:\n          //close submenu\n          if (this.expanded) {\n            this.expanded = false;\n            this.focus();\n            return false;\n          }\n\n      }\n\n      return true;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.handleMenuItemClick = e => {\n      if (e.defaultPrevented || this.disabled) {\n        return false;\n      }\n\n      this.invoke();\n      return false;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.submenuLoaded = () => {\n      if (!this.focusSubmenuOnLoad) {\n        return;\n      }\n\n      this.focusSubmenuOnLoad = false;\n\n      if (this.hasSubmenu) {\n        this.submenu.focus();\n        this.setAttribute(\"tabindex\", \"-1\");\n      }\n    };\n    /**\n     * @internal\n     */\n\n\n    this.handleMouseOver = e => {\n      if (this.disabled || !this.hasSubmenu || this.expanded) {\n        return false;\n      }\n\n      this.expanded = true;\n      return false;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.handleMouseOut = e => {\n      if (!this.expanded || this.contains(document.activeElement)) {\n        return false;\n      }\n\n      this.expanded = false;\n      return false;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.expandAndFocus = () => {\n      if (!this.hasSubmenu) {\n        return;\n      }\n\n      this.focusSubmenuOnLoad = true;\n      this.expanded = true;\n    };\n    /**\n     * @internal\n     */\n\n\n    this.invoke = () => {\n      if (this.disabled) {\n        return;\n      }\n\n      switch (this.role) {\n        case MenuItemRole.menuitemcheckbox:\n          this.checked = !this.checked;\n          break;\n\n        case MenuItemRole.menuitem:\n          // update submenu\n          this.updateSubmenu();\n\n          if (this.hasSubmenu) {\n            this.expandAndFocus();\n          } else {\n            this.$emit(\"change\");\n          }\n\n          break;\n\n        case MenuItemRole.menuitemradio:\n          if (!this.checked) {\n            this.checked = true;\n          }\n\n          break;\n      }\n    };\n    /**\n     * Gets the submenu element if any\n     *\n     * @internal\n     */\n\n\n    this.updateSubmenu = () => {\n      this.submenu = this.domChildren().find(element => {\n        return element.getAttribute(\"role\") === \"menu\";\n      });\n      this.hasSubmenu = this.submenu === undefined ? false : true;\n    };\n  }\n\n  expandedChanged(oldValue) {\n    if (this.$fastController.isConnected) {\n      if (this.submenu === undefined) {\n        return;\n      }\n\n      if (this.expanded === false) {\n        this.submenu.collapseExpandedItem();\n      } else {\n        this.currentDirection = getDirection(this);\n      }\n\n      this.$emit(\"expanded-change\", this, {\n        bubbles: false\n      });\n    }\n  }\n\n  checkedChanged(oldValue, newValue) {\n    if (this.$fastController.isConnected) {\n      this.$emit(\"change\");\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  connectedCallback() {\n    super.connectedCallback();\n    DOM.queueUpdate(() => {\n      this.updateSubmenu();\n    });\n\n    if (!this.startColumnCount) {\n      this.startColumnCount = 1;\n    }\n\n    this.observer = new MutationObserver(this.updateSubmenu);\n  }\n  /**\n   * @internal\n   */\n\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    this.submenu = undefined;\n\n    if (this.observer !== undefined) {\n      this.observer.disconnect();\n      this.observer = undefined;\n    }\n  }\n  /**\n   * get an array of valid DOM children\n   */\n\n\n  domChildren() {\n    return Array.from(this.children);\n  }\n\n}\n\n__decorate([attr({\n  mode: \"boolean\"\n})], MenuItem.prototype, \"disabled\", void 0);\n\n__decorate([attr({\n  mode: \"boolean\"\n})], MenuItem.prototype, \"expanded\", void 0);\n\n__decorate([observable], MenuItem.prototype, \"startColumnCount\", void 0);\n\n__decorate([attr], MenuItem.prototype, \"role\", void 0);\n\n__decorate([attr({\n  mode: \"boolean\"\n})], MenuItem.prototype, \"checked\", void 0);\n\n__decorate([observable], MenuItem.prototype, \"submenuRegion\", void 0);\n\n__decorate([observable], MenuItem.prototype, \"hasSubmenu\", void 0);\n\n__decorate([observable], MenuItem.prototype, \"currentDirection\", void 0);\n\n__decorate([observable], MenuItem.prototype, \"submenu\", void 0);\n\napplyMixins(MenuItem, StartEnd);","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/menu-item/menu-item.js"],"names":["__decorate","attr","DOM","observable","Direction","keyArrowLeft","keyArrowRight","keyEnter","keySpace","FoundationElement","StartEnd","getDirection","applyMixins","MenuItemRole","roleForMenuItem","MenuItem","constructor","arguments","role","menuitem","hasSubmenu","currentDirection","ltr","focusSubmenuOnLoad","handleMenuItemKeyDown","e","defaultPrevented","key","invoke","expandAndFocus","expanded","focus","handleMenuItemClick","disabled","submenuLoaded","submenu","setAttribute","handleMouseOver","handleMouseOut","contains","document","activeElement","menuitemcheckbox","checked","updateSubmenu","$emit","menuitemradio","domChildren","find","element","getAttribute","undefined","expandedChanged","oldValue","$fastController","isConnected","collapseExpandedItem","bubbles","checkedChanged","newValue","connectedCallback","queueUpdate","startColumnCount","observer","MutationObserver","disconnectedCallback","disconnect","Array","from","children","mode","prototype"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { attr, DOM, observable } from \"@microsoft/fast-element\";\nimport { Direction, keyArrowLeft, keyArrowRight, keyEnter, keySpace, } from \"@microsoft/fast-web-utilities\";\nimport { FoundationElement } from \"../foundation-element\";\nimport { StartEnd } from \"../patterns/start-end\";\nimport { getDirection } from \"../utilities/\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { MenuItemRole, roleForMenuItem } from \"./menu-item.options\";\nexport { MenuItemRole, roleForMenuItem };\n/**\n * A Switch Custom HTML Element.\n * Implements {@link https://www.w3.org/TR/wai-aria-1.1/#menuitem | ARIA menuitem }, {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemcheckbox | ARIA menuitemcheckbox}, or {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio | ARIA menuitemradio }.\n *\n * @public\n */\nexport class MenuItem extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The role of the element.\n         *\n         * @public\n         * @remarks\n         * HTML Attribute: role\n         */\n        this.role = MenuItemRole.menuitem;\n        /**\n         * @internal\n         */\n        this.hasSubmenu = false;\n        /**\n         * Track current direction to pass to the anchored region\n         *\n         * @internal\n         */\n        this.currentDirection = Direction.ltr;\n        this.focusSubmenuOnLoad = false;\n        /**\n         * @internal\n         */\n        this.handleMenuItemKeyDown = (e) => {\n            if (e.defaultPrevented) {\n                return false;\n            }\n            switch (e.key) {\n                case keyEnter:\n                case keySpace:\n                    this.invoke();\n                    return false;\n                case keyArrowRight:\n                    //open/focus on submenu\n                    this.expandAndFocus();\n                    return false;\n                case keyArrowLeft:\n                    //close submenu\n                    if (this.expanded) {\n                        this.expanded = false;\n                        this.focus();\n                        return false;\n                    }\n            }\n            return true;\n        };\n        /**\n         * @internal\n         */\n        this.handleMenuItemClick = (e) => {\n            if (e.defaultPrevented || this.disabled) {\n                return false;\n            }\n            this.invoke();\n            return false;\n        };\n        /**\n         * @internal\n         */\n        this.submenuLoaded = () => {\n            if (!this.focusSubmenuOnLoad) {\n                return;\n            }\n            this.focusSubmenuOnLoad = false;\n            if (this.hasSubmenu) {\n                this.submenu.focus();\n                this.setAttribute(\"tabindex\", \"-1\");\n            }\n        };\n        /**\n         * @internal\n         */\n        this.handleMouseOver = (e) => {\n            if (this.disabled || !this.hasSubmenu || this.expanded) {\n                return false;\n            }\n            this.expanded = true;\n            return false;\n        };\n        /**\n         * @internal\n         */\n        this.handleMouseOut = (e) => {\n            if (!this.expanded || this.contains(document.activeElement)) {\n                return false;\n            }\n            this.expanded = false;\n            return false;\n        };\n        /**\n         * @internal\n         */\n        this.expandAndFocus = () => {\n            if (!this.hasSubmenu) {\n                return;\n            }\n            this.focusSubmenuOnLoad = true;\n            this.expanded = true;\n        };\n        /**\n         * @internal\n         */\n        this.invoke = () => {\n            if (this.disabled) {\n                return;\n            }\n            switch (this.role) {\n                case MenuItemRole.menuitemcheckbox:\n                    this.checked = !this.checked;\n                    break;\n                case MenuItemRole.menuitem:\n                    // update submenu\n                    this.updateSubmenu();\n                    if (this.hasSubmenu) {\n                        this.expandAndFocus();\n                    }\n                    else {\n                        this.$emit(\"change\");\n                    }\n                    break;\n                case MenuItemRole.menuitemradio:\n                    if (!this.checked) {\n                        this.checked = true;\n                    }\n                    break;\n            }\n        };\n        /**\n         * Gets the submenu element if any\n         *\n         * @internal\n         */\n        this.updateSubmenu = () => {\n            this.submenu = this.domChildren().find((element) => {\n                return element.getAttribute(\"role\") === \"menu\";\n            });\n            this.hasSubmenu = this.submenu === undefined ? false : true;\n        };\n    }\n    expandedChanged(oldValue) {\n        if (this.$fastController.isConnected) {\n            if (this.submenu === undefined) {\n                return;\n            }\n            if (this.expanded === false) {\n                this.submenu.collapseExpandedItem();\n            }\n            else {\n                this.currentDirection = getDirection(this);\n            }\n            this.$emit(\"expanded-change\", this, { bubbles: false });\n        }\n    }\n    checkedChanged(oldValue, newValue) {\n        if (this.$fastController.isConnected) {\n            this.$emit(\"change\");\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        DOM.queueUpdate(() => {\n            this.updateSubmenu();\n        });\n        if (!this.startColumnCount) {\n            this.startColumnCount = 1;\n        }\n        this.observer = new MutationObserver(this.updateSubmenu);\n    }\n    /**\n     * @internal\n     */\n    disconnectedCallback() {\n        super.disconnectedCallback();\n        this.submenu = undefined;\n        if (this.observer !== undefined) {\n            this.observer.disconnect();\n            this.observer = undefined;\n        }\n    }\n    /**\n     * get an array of valid DOM children\n     */\n    domChildren() {\n        return Array.from(this.children);\n    }\n}\n__decorate([\n    attr({ mode: \"boolean\" })\n], MenuItem.prototype, \"disabled\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], MenuItem.prototype, \"expanded\", void 0);\n__decorate([\n    observable\n], MenuItem.prototype, \"startColumnCount\", void 0);\n__decorate([\n    attr\n], MenuItem.prototype, \"role\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], MenuItem.prototype, \"checked\", void 0);\n__decorate([\n    observable\n], MenuItem.prototype, \"submenuRegion\", void 0);\n__decorate([\n    observable\n], MenuItem.prototype, \"hasSubmenu\", void 0);\n__decorate([\n    observable\n], MenuItem.prototype, \"currentDirection\", void 0);\n__decorate([\n    observable\n], MenuItem.prototype, \"submenu\", void 0);\napplyMixins(MenuItem, StartEnd);\n"]},"metadata":{},"sourceType":"module"}