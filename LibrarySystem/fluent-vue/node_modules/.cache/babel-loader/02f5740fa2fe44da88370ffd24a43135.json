{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { warn } from '../../_utils';\nimport { useBrowserLocation } from '../../_utils/composable/use-browser-location';\nimport { breadcrumbInjectionKey } from './Breadcrumb';\nconst breadcrumbItemProps = {\n  separator: String,\n  href: String\n};\nexport default defineComponent({\n  name: 'BreadcrumbItem',\n  props: breadcrumbItemProps,\n\n  setup(props, {\n    slots\n  }) {\n    const NBreadcrumb = inject(breadcrumbInjectionKey, null);\n\n    if (!NBreadcrumb) {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('breadcrumb', '`n-breadcrumb-item` must be placed inside `n-breadcrumb`.');\n      }\n\n      return () => null;\n    }\n\n    const {\n      separatorRef,\n      mergedClsPrefixRef\n    } = NBreadcrumb;\n    const browserLocationRef = useBrowserLocation();\n    const htmlTagRef = computed(() => props.href ? 'a' : 'span');\n    const ariaCurrentRef = computed(() => browserLocationRef.value.href === props.href ? 'location' : null);\n    return () => {\n      var _a;\n\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"li\", {\n        class: `${mergedClsPrefix}-breadcrumb-item`\n      }, h(htmlTagRef.value, {\n        class: `${mergedClsPrefix}-breadcrumb-item__link`,\n        'aria-current': ariaCurrentRef.value,\n        href: props.href\n      }, slots), h(\"span\", {\n        class: `${mergedClsPrefix}-breadcrumb-item__separator`,\n        \"aria-hidden\": \"true\"\n      }, slots.separator ? slots.separator() : (_a = props.separator) !== null && _a !== void 0 ? _a : separatorRef.value));\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/breadcrumb/src/BreadcrumbItem.js"],"names":["h","defineComponent","inject","computed","warn","useBrowserLocation","breadcrumbInjectionKey","breadcrumbItemProps","separator","String","href","name","props","setup","slots","NBreadcrumb","process","env","NODE_ENV","separatorRef","mergedClsPrefixRef","browserLocationRef","htmlTagRef","ariaCurrentRef","value","_a","mergedClsPrefix","class"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,KAArD;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,kBAAT,QAAmC,8CAAnC;AACA,SAASC,sBAAT,QAAuC,cAAvC;AACA,MAAMC,mBAAmB,GAAG;AACxBC,EAAAA,SAAS,EAAEC,MADa;AAExBC,EAAAA,IAAI,EAAED;AAFkB,CAA5B;AAIA,eAAeR,eAAe,CAAC;AAC3BU,EAAAA,IAAI,EAAE,gBADqB;AAE3BC,EAAAA,KAAK,EAAEL,mBAFoB;;AAG3BM,EAAAA,KAAK,CAACD,KAAD,EAAQ;AAAEE,IAAAA;AAAF,GAAR,EAAmB;AACpB,UAAMC,WAAW,GAAGb,MAAM,CAACI,sBAAD,EAAyB,IAAzB,CAA1B;;AACA,QAAI,CAACS,WAAL,EAAkB;AACd,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCd,QAAAA,IAAI,CAAC,YAAD,EAAe,2DAAf,CAAJ;AACH;;AACD,aAAO,MAAM,IAAb;AACH;;AACD,UAAM;AAAEe,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAuCL,WAA7C;AACA,UAAMM,kBAAkB,GAAGhB,kBAAkB,EAA7C;AACA,UAAMiB,UAAU,GAAGnB,QAAQ,CAAC,MAAOS,KAAK,CAACF,IAAN,GAAa,GAAb,GAAmB,MAA3B,CAA3B;AACA,UAAMa,cAAc,GAAGpB,QAAQ,CAAC,MAAMkB,kBAAkB,CAACG,KAAnB,CAAyBd,IAAzB,KAAkCE,KAAK,CAACF,IAAxC,GAA+C,UAA/C,GAA4D,IAAnE,CAA/B;AACA,WAAO,MAAM;AACT,UAAIe,EAAJ;;AACA,YAAM;AAAED,QAAAA,KAAK,EAAEE;AAAT,UAA6BN,kBAAnC;AACA,aAAQpB,CAAC,CAAC,IAAD,EAAO;AAAE2B,QAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,OAAP,EACL1B,CAAC,CAACsB,UAAU,CAACE,KAAZ,EAAmB;AAChBG,QAAAA,KAAK,EAAG,GAAED,eAAgB,wBADV;AAEhB,wBAAgBH,cAAc,CAACC,KAFf;AAGhBd,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAHI,OAAnB,EAIEI,KAJF,CADI,EAMLd,CAAC,CAAC,MAAD,EAAS;AAAE2B,QAAAA,KAAK,EAAG,GAAED,eAAgB,6BAA5B;AAA0D,uBAAe;AAAzE,OAAT,EAA4FZ,KAAK,CAACN,SAAN,GACvFM,KAAK,CAACN,SAAN,EADuF,GAEvF,CAACiB,EAAE,GAAGb,KAAK,CAACJ,SAAZ,MAA2B,IAA3B,IAAmCiB,EAAE,KAAK,KAAK,CAA/C,GAAmDA,EAAnD,GAAwDN,YAAY,CAACK,KAF1E,CANI,CAAT;AASH,KAZD;AAaH;;AA5B0B,CAAD,CAA9B","sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { warn } from '../../_utils';\nimport { useBrowserLocation } from '../../_utils/composable/use-browser-location';\nimport { breadcrumbInjectionKey } from './Breadcrumb';\nconst breadcrumbItemProps = {\n    separator: String,\n    href: String\n};\nexport default defineComponent({\n    name: 'BreadcrumbItem',\n    props: breadcrumbItemProps,\n    setup(props, { slots }) {\n        const NBreadcrumb = inject(breadcrumbInjectionKey, null);\n        if (!NBreadcrumb) {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('breadcrumb', '`n-breadcrumb-item` must be placed inside `n-breadcrumb`.');\n            }\n            return () => null;\n        }\n        const { separatorRef, mergedClsPrefixRef } = NBreadcrumb;\n        const browserLocationRef = useBrowserLocation();\n        const htmlTagRef = computed(() => (props.href ? 'a' : 'span'));\n        const ariaCurrentRef = computed(() => browserLocationRef.value.href === props.href ? 'location' : null);\n        return () => {\n            var _a;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"li\", { class: `${mergedClsPrefix}-breadcrumb-item` },\n                h(htmlTagRef.value, {\n                    class: `${mergedClsPrefix}-breadcrumb-item__link`,\n                    'aria-current': ariaCurrentRef.value,\n                    href: props.href\n                }, slots),\n                h(\"span\", { class: `${mergedClsPrefix}-breadcrumb-item__separator`, \"aria-hidden\": \"true\" }, slots.separator\n                    ? slots.separator()\n                    : (_a = props.separator) !== null && _a !== void 0 ? _a : separatorRef.value)));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}