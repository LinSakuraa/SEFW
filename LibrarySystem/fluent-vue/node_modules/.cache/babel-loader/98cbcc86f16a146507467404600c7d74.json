{"ast":null,"code":"import { h, defineComponent, provide } from 'vue';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { stepsLight } from '../styles';\nimport style from './styles/index.cssr';\nimport { createInjectionKey, flatten, getSlot } from '../../_utils';\n\nfunction stepWithIndex(step, i) {\n  if (typeof step !== 'object' || step === null || Array.isArray(step)) {\n    return null;\n  }\n\n  if (!step.props) step.props = {};\n  step.props.internalIndex = i + 1;\n  return step;\n}\n\nfunction stepsWithIndex(steps) {\n  return steps.map((step, i) => stepWithIndex(step, i));\n}\n\nconst stepsProps = Object.assign(Object.assign({}, useTheme.props), {\n  current: Number,\n  status: {\n    type: String,\n    default: 'process'\n  },\n  size: {\n    type: String,\n    default: 'medium'\n  },\n  vertical: Boolean\n});\nexport const stepsInjectionKey = createInjectionKey('n-steps');\nexport default defineComponent({\n  name: 'Steps',\n  props: stepsProps,\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const themeRef = useTheme('Steps', '-steps', style, stepsLight, props, mergedClsPrefixRef);\n    provide(stepsInjectionKey, {\n      props,\n      mergedThemeRef: themeRef,\n      mergedClsPrefixRef,\n      stepsSlots: slots\n    });\n    return {\n      mergedClsPrefix: mergedClsPrefixRef\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-steps`, this.vertical && `${mergedClsPrefix}-steps--vertical`]\n    }, stepsWithIndex(flatten(getSlot(this))));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/steps/src/Steps.js"],"names":["h","defineComponent","provide","useConfig","useTheme","stepsLight","style","createInjectionKey","flatten","getSlot","stepWithIndex","step","i","Array","isArray","props","internalIndex","stepsWithIndex","steps","map","stepsProps","Object","assign","current","Number","status","type","String","default","size","vertical","Boolean","stepsInjectionKey","name","setup","slots","mergedClsPrefixRef","themeRef","mergedThemeRef","stepsSlots","mergedClsPrefix","render","class"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,OAA7B,QAA4C,KAA5C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,eAApC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,kBAAT,EAA6BC,OAA7B,EAAsCC,OAAtC,QAAqD,cAArD;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,CAA7B,EAAgC;AAC5B,MAAI,OAAOD,IAAP,KAAgB,QAAhB,IAA4BA,IAAI,KAAK,IAArC,IAA6CE,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAjD,EAAsE;AAClE,WAAO,IAAP;AACH;;AACD,MAAI,CAACA,IAAI,CAACI,KAAV,EACIJ,IAAI,CAACI,KAAL,GAAa,EAAb;AACJJ,EAAAA,IAAI,CAACI,KAAL,CAAWC,aAAX,GAA2BJ,CAAC,GAAG,CAA/B;AACA,SAAOD,IAAP;AACH;;AACD,SAASM,cAAT,CAAwBC,KAAxB,EAA+B;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAU,CAACR,IAAD,EAAOC,CAAP,KAAaF,aAAa,CAACC,IAAD,EAAOC,CAAP,CAApC,CAAP;AACH;;AACD,MAAMQ,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBlB,QAAQ,CAACW,KAA3B,CAAd,EAAiD;AAAEQ,EAAAA,OAAO,EAAEC,MAAX;AAAmBC,EAAAA,MAAM,EAAE;AACvFC,IAAAA,IAAI,EAAEC,MADiF;AAEvFC,IAAAA,OAAO,EAAE;AAF8E,GAA3B;AAG7DC,EAAAA,IAAI,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAHuD;AAM7DE,EAAAA,QAAQ,EAAEC;AANmD,CAAjD,CAAnB;AAOA,OAAO,MAAMC,iBAAiB,GAAGzB,kBAAkB,CAAC,SAAD,CAA5C;AACP,eAAeN,eAAe,CAAC;AAC3BgC,EAAAA,IAAI,EAAE,OADqB;AAE3BlB,EAAAA,KAAK,EAAEK,UAFoB;;AAG3Bc,EAAAA,KAAK,CAACnB,KAAD,EAAQ;AAAEoB,IAAAA;AAAF,GAAR,EAAmB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAyBjC,SAAS,CAACY,KAAD,CAAxC;AACA,UAAMsB,QAAQ,GAAGjC,QAAQ,CAAC,OAAD,EAAU,QAAV,EAAoBE,KAApB,EAA2BD,UAA3B,EAAuCU,KAAvC,EAA8CqB,kBAA9C,CAAzB;AACAlC,IAAAA,OAAO,CAAC8B,iBAAD,EAAoB;AACvBjB,MAAAA,KADuB;AAEvBuB,MAAAA,cAAc,EAAED,QAFO;AAGvBD,MAAAA,kBAHuB;AAIvBG,MAAAA,UAAU,EAAEJ;AAJW,KAApB,CAAP;AAMA,WAAO;AACHK,MAAAA,eAAe,EAAEJ;AADd,KAAP;AAGH,GAf0B;;AAgB3BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA;AAAF,QAAsB,IAA5B;AACA,WAAQxC,CAAC,CAAC,KAAD,EAAQ;AAAE0C,MAAAA,KAAK,EAAE,CACjB,GAAEF,eAAgB,QADD,EAElB,KAAKV,QAAL,IAAkB,GAAEU,eAAgB,kBAFlB;AAAT,KAAR,EAGAvB,cAAc,CAACT,OAAO,CAACC,OAAO,CAAC,IAAD,CAAR,CAAR,CAHd,CAAT;AAIH;;AAtB0B,CAAD,CAA9B","sourcesContent":["import { h, defineComponent, provide } from 'vue';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { stepsLight } from '../styles';\nimport style from './styles/index.cssr';\nimport { createInjectionKey, flatten, getSlot } from '../../_utils';\nfunction stepWithIndex(step, i) {\n    if (typeof step !== 'object' || step === null || Array.isArray(step)) {\n        return null;\n    }\n    if (!step.props)\n        step.props = {};\n    step.props.internalIndex = i + 1;\n    return step;\n}\nfunction stepsWithIndex(steps) {\n    return steps.map((step, i) => stepWithIndex(step, i));\n}\nconst stepsProps = Object.assign(Object.assign({}, useTheme.props), { current: Number, status: {\n        type: String,\n        default: 'process'\n    }, size: {\n        type: String,\n        default: 'medium'\n    }, vertical: Boolean });\nexport const stepsInjectionKey = createInjectionKey('n-steps');\nexport default defineComponent({\n    name: 'Steps',\n    props: stepsProps,\n    setup(props, { slots }) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const themeRef = useTheme('Steps', '-steps', style, stepsLight, props, mergedClsPrefixRef);\n        provide(stepsInjectionKey, {\n            props,\n            mergedThemeRef: themeRef,\n            mergedClsPrefixRef,\n            stepsSlots: slots\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef\n        };\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-steps`,\n                this.vertical && `${mergedClsPrefix}-steps--vertical`\n            ] }, stepsWithIndex(flatten(getSlot(this)))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}