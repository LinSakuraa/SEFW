{"ast":null,"code":"import { h, defineComponent, ref, toRef, watch, computed, watchEffect } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nconst inputNumberProps = Object.assign(Object.assign({}, useTheme.props), {\n  autofocus: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  placeholder: String,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  value: Number,\n  step: {\n    type: [Number, String],\n    default: 1\n  },\n  min: [Number, String],\n  max: [Number, String],\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  validator: Function,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  showButton: {\n    type: Boolean,\n    default: true\n  },\n  readonly: Boolean,\n  clearable: Boolean,\n  keyboard: {\n    type: Object,\n    default: {}\n  },\n  updateValueOnInput: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'InputNumber',\n  props: inputNumberProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('InputNumber');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem; // dom ref\n\n    const inputInstRef = ref(null);\n    const minusButtonInstRef = ref(null);\n    const addButtonInstRef = ref(null); // value\n\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const displayedValueRef = ref('');\n\n    const getMaxPrecision = currentValue => {\n      const precisions = [props.min, props.max, props.step, currentValue].map(item => {\n        const fraction = String(item).split('.')[1];\n        return fraction ? fraction.length : 0;\n      });\n      return Math.max(...precisions);\n    };\n\n    const mergedPlaceholderRef = useMemo(() => {\n      const {\n        placeholder\n      } = props;\n      if (placeholder !== undefined) return placeholder;\n      return localeRef.value.placeholder;\n    });\n    const mergedStepRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.step);\n\n      if (parsedNumber !== null) {\n        return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n      }\n\n      return 1;\n    });\n    const mergedMinRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.min);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n    const mergedMaxRef = useMemo(() => {\n      const parsedNumber = parseNumber(props.max);\n      if (parsedNumber !== null) return parsedNumber;else return null;\n    });\n\n    const doUpdateValue = value => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (value === mergedValue) {\n        deriveDisplayedValueFromValue();\n        return;\n      }\n\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    };\n\n    const deriveValueFromDisplayedValue = (offset = 0, doUpdateIfValid = true, isInputing = false) => {\n      const {\n        value: displayedValue\n      } = displayedValueRef;\n\n      if (isInputing && isWipValue(displayedValue)) {\n        return false;\n      }\n\n      const parsedValue = parse(displayedValue);\n\n      if (parsedValue === null) {\n        if (doUpdateIfValid) doUpdateValue(null);\n        return null;\n      }\n\n      if (validator(parsedValue)) {\n        const precision = getMaxPrecision(parsedValue);\n        let nextValue = parseFloat((parsedValue + offset).toFixed(precision));\n\n        if (validator(nextValue)) {\n          const {\n            value: mergedMax\n          } = mergedMaxRef;\n          const {\n            value: mergedMin\n          } = mergedMinRef;\n\n          if (mergedMax !== null && nextValue > mergedMax) {\n            if (!doUpdateIfValid || isInputing) return false; // if doUpdateIfValid=true, we try to make it a valid value\n\n            nextValue = mergedMax;\n          }\n\n          if (mergedMin !== null && nextValue < mergedMin) {\n            if (!doUpdateIfValid || isInputing) return false; // if doUpdateIfValid=true, we try to make it a valid value\n\n            nextValue = mergedMin;\n          }\n\n          if (props.validator && !props.validator(nextValue)) return false;\n          if (doUpdateIfValid) doUpdateValue(nextValue);\n          return nextValue;\n        }\n      }\n\n      return false;\n    };\n\n    const deriveDisplayedValueFromValue = () => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (validator(mergedValue)) {\n        displayedValueRef.value = format(mergedValue);\n      } else {\n        // null can pass the validator check\n        // so mergedValue is a number\n        displayedValueRef.value = String(mergedValue);\n      }\n    };\n\n    deriveDisplayedValueFromValue();\n    const displayedValueInvalidRef = useMemo(() => {\n      const derivedValue = deriveValueFromDisplayedValue(0, false);\n      return derivedValue === false;\n    });\n    const minusableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue(-mergedStep, false);\n      return derivedNextValue !== false;\n    });\n    const addableRef = useMemo(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (props.validator && mergedValue === null) {\n        return false;\n      }\n\n      const {\n        value: mergedStep\n      } = mergedStepRef;\n      const derivedNextValue = deriveValueFromDisplayedValue(+mergedStep, false);\n      return derivedNextValue !== false;\n    });\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doBlur(e) {\n      var _a, _b;\n\n      if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n        // hit input wrapper\n        // which means not activated\n        return;\n      }\n\n      const value = deriveValueFromDisplayedValue(); // If valid, update event has been emitted\n      // make sure e.target.value is correct in blur callback\n\n      if (value !== false) {\n        const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n\n        if (inputElRef) {\n          inputElRef.value = String(value || '');\n        } // If value is not changed, the displayed value may be greater than or\n        // less than the current value. The derived value is reformatted so the\n        // value is not changed. We can simply derive a new displayed value\n\n\n        if (mergedValueRef.value === value) {\n          deriveDisplayedValueFromValue();\n        }\n      } else {\n        // If not valid, nothing will be emitted, so derive displayed value from\n        // origin value\n        deriveDisplayedValueFromValue();\n      }\n\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n\n    function doAdd() {\n      const {\n        value: addable\n      } = addableRef;\n\n      if (!addable) {\n        clearAddHoldTimeout();\n        return;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue(mergedStep);\n      }\n    }\n\n    function doMinus() {\n      const {\n        value: minusable\n      } = minusableRef;\n\n      if (!minusable) {\n        clearMinusHoldTimeout();\n        return;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        if (!props.validator) {\n          doUpdateValue(createValidValue());\n        }\n      } else {\n        const {\n          value: mergedStep\n        } = mergedStepRef;\n        deriveValueFromDisplayedValue(-mergedStep);\n      }\n    }\n\n    const handleFocus = doFocus;\n    const handleBlur = doBlur;\n\n    function createValidValue() {\n      if (props.validator) return null;\n      const {\n        value: mergedMin\n      } = mergedMinRef;\n      const {\n        value: mergedMax\n      } = mergedMaxRef;\n\n      if (mergedMin !== null) {\n        return Math.max(0, mergedMin);\n      } else if (mergedMax !== null) {\n        return Math.min(0, mergedMax);\n      } else {\n        return 0;\n      }\n    }\n\n    function handleClear(e) {\n      doClear(e);\n      doUpdateValue(null);\n    }\n\n    function handleMouseDown(e) {\n      var _a, _b, _c;\n\n      if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n\n      if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n        e.preventDefault();\n      }\n\n      (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n    }\n\n    let minusHoldStateIntervalId = null;\n    let addHoldStateIntervalId = null;\n    let firstMinusMousedownId = null;\n\n    function clearMinusHoldTimeout() {\n      if (firstMinusMousedownId) {\n        window.clearTimeout(firstMinusMousedownId);\n        firstMinusMousedownId = null;\n      }\n\n      if (minusHoldStateIntervalId) {\n        window.clearInterval(minusHoldStateIntervalId);\n        minusHoldStateIntervalId = null;\n      }\n    }\n\n    function clearAddHoldTimeout() {\n      if (firstAddMousedownId) {\n        window.clearTimeout(firstAddMousedownId);\n        firstAddMousedownId = null;\n      }\n\n      if (addHoldStateIntervalId) {\n        window.clearInterval(addHoldStateIntervalId);\n        addHoldStateIntervalId = null;\n      }\n    }\n\n    function handleMinusMousedown() {\n      firstMinusMousedownId = window.setTimeout(() => {\n        minusHoldStateIntervalId = window.setInterval(() => {\n          doMinus();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, () => {\n        window.setTimeout(clearMinusHoldTimeout, 0);\n      });\n    }\n\n    let firstAddMousedownId = null;\n\n    function handleAddMousedown() {\n      firstAddMousedownId = window.setTimeout(() => {\n        addHoldStateIntervalId = window.setInterval(() => {\n          doAdd();\n        }, HOLDING_CHANGE_INTERVAL);\n      }, HOLDING_CHANGE_THRESHOLD);\n      on('mouseup', document, () => {\n        window.setTimeout(clearAddHoldTimeout, 0);\n      });\n    }\n\n    const handleAddClick = () => {\n      if (addHoldStateIntervalId) return;\n      doAdd();\n    };\n\n    const handleMinusClick = () => {\n      if (minusHoldStateIntervalId) return;\n      doMinus();\n    };\n\n    function handleKeyDown(e) {\n      var _a, _b;\n\n      if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n        if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n          // hit input wrapper\n          // which means not activated\n          return;\n        }\n\n        const value = deriveValueFromDisplayedValue();\n\n        if (value !== false) {\n          (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n        }\n      } else if (e.code === 'ArrowUp') {\n        if (props.keyboard.ArrowUp === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue();\n\n        if (value !== false) {\n          doAdd();\n        }\n      } else if (e.code === 'ArrowDown') {\n        if (props.keyboard.ArrowDown === false) return;\n        e.preventDefault();\n        const value = deriveValueFromDisplayedValue();\n\n        if (value !== false) {\n          doMinus();\n        }\n      }\n    }\n\n    function handleUpdateDisplayedValue(value) {\n      displayedValueRef.value = value;\n\n      if (props.updateValueOnInput) {\n        deriveValueFromDisplayedValue(0, true, true);\n      }\n    }\n\n    watch(mergedValueRef, () => {\n      deriveDisplayedValueFromValue();\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n    return Object.assign(Object.assign({}, exposedMethods), {\n      rtlEnabled: rtlEnabledRef,\n      inputInstRef,\n      minusButtonInstRef,\n      addButtonInstRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      displayedValueInvalid: displayedValueInvalidRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      displayedValue: displayedValueRef,\n      addable: addableRef,\n      minusable: minusableRef,\n      mergedStatus: mergedStatusRef,\n      handleFocus,\n      handleBlur,\n      handleClear,\n      handleMouseDown,\n      handleAddClick,\n      handleMinusClick,\n      handleAddMousedown,\n      handleMinusMousedown,\n      handleKeyDown,\n      handleUpdateDisplayedValue,\n      // theme\n      mergedTheme: themeRef,\n      inputThemeOverrides: {\n        paddingSmall: '0 8px 0 10px',\n        paddingMedium: '0 8px 0 12px',\n        paddingLarge: '0 8px 0 14px'\n      },\n      buttonThemeOverrides: computed(() => {\n        const {\n          self: {\n            iconColorDisabled\n          }\n        } = themeRef.value;\n        const [r, g, b, a] = rgba(iconColorDisabled);\n        return {\n          textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n          opacityDisabled: `${a}`\n        };\n      })\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-input-number`, this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`]\n    }, h(NInput, {\n      ref: \"inputInstRef\",\n      autofocus: this.autofocus,\n      status: this.mergedStatus,\n      bordered: this.mergedBordered,\n      loading: this.loading,\n      value: this.displayedValue,\n      onUpdateValue: this.handleUpdateDisplayedValue,\n      theme: this.mergedTheme.peers.Input,\n      themeOverrides: this.mergedTheme.peerOverrides.Input,\n      builtinThemeOverrides: this.inputThemeOverrides,\n      size: this.mergedSize,\n      placeholder: this.mergedPlaceholder,\n      disabled: this.mergedDisabled,\n      readonly: this.readonly,\n      textDecoration: this.displayedValueInvalid ? 'line-through' : undefined,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeydown: this.handleKeyDown,\n      onMousedown: this.handleMouseDown,\n      onClear: this.handleClear,\n      clearable: this.clearable,\n      internalLoadingBeforeSuffix: true\n    }, {\n      prefix: () => {\n        var _a, _b;\n\n        return (_b = (_a = this.$slots).prefix) === null || _b === void 0 ? void 0 : _b.call(_a);\n      },\n      suffix: () => {\n        var _a, _b;\n\n        return this.showButton ? [this.$slots.suffix && h(\"span\", {\n          class: `${mergedClsPrefix}-input-number-suffix`\n        }, {\n          default: this.$slots.suffix\n        }), h(NxButton, {\n          text: true,\n          disabled: !this.minusable || this.mergedDisabled || this.readonly,\n          focusable: false,\n          builtinThemeOverrides: this.buttonThemeOverrides,\n          onClick: this.handleMinusClick,\n          onMousedown: this.handleMinusMousedown,\n          ref: \"minusButtonInstRef\"\n        }, {\n          default: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            \"aria-disabled\": true\n          }, {\n            default: () => h(RemoveIcon, null)\n          })\n        }), h(NxButton, {\n          text: true,\n          disabled: !this.addable || this.mergedDisabled || this.readonly,\n          focusable: false,\n          builtinThemeOverrides: this.buttonThemeOverrides,\n          onClick: this.handleAddClick,\n          onMousedown: this.handleAddMousedown,\n          ref: \"addButtonInstRef\"\n        }, {\n          default: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix\n          }, {\n            default: () => h(AddIcon, null)\n          })\n        })] : (_b = (_a = this.$slots).suffix) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/input-number/src/InputNumber.js"],"names":["h","defineComponent","ref","toRef","watch","computed","watchEffect","rgba","useMemo","useMergedState","on","RemoveIcon","AddIcon","NInput","NBaseIcon","NxButton","useTheme","useFormItem","useLocale","useConfig","warnOnce","call","inputNumberLight","parse","validator","format","parseNumber","isWipValue","style","useRtl","HOLDING_CHANGE_THRESHOLD","HOLDING_CHANGE_INTERVAL","inputNumberProps","Object","assign","props","autofocus","Boolean","loading","type","default","undefined","placeholder","String","defaultValue","Number","value","step","min","max","size","disabled","Function","bordered","showButton","readonly","clearable","keyboard","updateValueOnInput","status","Array","onUpdateValue","onFocus","onBlur","onClear","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","mergedRtlRef","themeRef","localeRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","inputInstRef","minusButtonInstRef","addButtonInstRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","displayedValueRef","getMaxPrecision","currentValue","precisions","map","item","fraction","split","length","Math","mergedPlaceholderRef","mergedStepRef","parsedNumber","abs","mergedMinRef","mergedMaxRef","doUpdateValue","mergedValue","deriveDisplayedValueFromValue","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","deriveValueFromDisplayedValue","offset","doUpdateIfValid","isInputing","displayedValue","parsedValue","precision","nextValue","parseFloat","toFixed","mergedMax","mergedMin","displayedValueInvalidRef","derivedValue","minusableRef","mergedStep","derivedNextValue","addableRef","doFocus","e","nTriggerFormFocus","doBlur","_a","_b","target","wrapperElRef","inputElRef","nTriggerFormBlur","doClear","doAdd","addable","clearAddHoldTimeout","createValidValue","doMinus","minusable","clearMinusHoldTimeout","handleFocus","handleBlur","handleClear","handleMouseDown","_c","$el","contains","preventDefault","activate","minusHoldStateIntervalId","addHoldStateIntervalId","firstMinusMousedownId","window","clearTimeout","clearInterval","firstAddMousedownId","handleMinusMousedown","setTimeout","setInterval","document","handleAddMousedown","handleAddClick","handleMinusClick","handleKeyDown","code","deactivate","ArrowUp","ArrowDown","handleUpdateDisplayedValue","exposedMethods","focus","blur","rtlEnabledRef","rtlEnabled","mergedClsPrefix","mergedBordered","uncontrolledValue","mergedPlaceholder","displayedValueInvalid","mergedSize","mergedDisabled","mergedStatus","mergedTheme","inputThemeOverrides","paddingSmall","paddingMedium","paddingLarge","buttonThemeOverrides","self","iconColorDisabled","r","g","b","a","textColorTextDisabled","opacityDisabled","render","class","theme","peers","Input","themeOverrides","peerOverrides","builtinThemeOverrides","textDecoration","onKeydown","onMousedown","internalLoadingBeforeSuffix","prefix","$slots","suffix","text","focusable","onClick","clsPrefix"],"mappings":"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","sourcesContent":["import { h, defineComponent, ref, toRef, watch, computed, watchEffect } from 'vue';\nimport { rgba } from 'seemly';\nimport { useMemo, useMergedState } from 'vooks';\nimport { on } from 'evtd';\nimport { RemoveIcon, AddIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { NxButton } from '../../button';\nimport { useTheme, useFormItem, useLocale, useConfig } from '../../_mixins';\nimport { warnOnce, call } from '../../_utils';\nimport { inputNumberLight } from '../styles';\nimport { parse, validator, format, parseNumber, isWipValue } from './utils';\nimport style from './styles/input-number.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst HOLDING_CHANGE_THRESHOLD = 800;\nconst HOLDING_CHANGE_INTERVAL = 100;\nconst inputNumberProps = Object.assign(Object.assign({}, useTheme.props), { autofocus: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, placeholder: String, defaultValue: {\n        type: Number,\n        default: null\n    }, value: Number, step: {\n        type: [Number, String],\n        default: 1\n    }, min: [Number, String], max: [Number, String], size: String, disabled: {\n        type: Boolean,\n        default: undefined\n    }, validator: Function, bordered: {\n        type: Boolean,\n        default: undefined\n    }, showButton: {\n        type: Boolean,\n        default: true\n    }, readonly: Boolean, clearable: Boolean, keyboard: {\n        type: Object,\n        default: {}\n    }, updateValueOnInput: {\n        type: Boolean,\n        default: true\n    }, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'InputNumber',\n    props: inputNumberProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('input-number', '`on-change` is deprecated, please use `on-update:value` instead');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('InputNumber', '-input-number', style, inputNumberLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('InputNumber');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // dom ref\n        const inputInstRef = ref(null);\n        const minusButtonInstRef = ref(null);\n        const addButtonInstRef = ref(null);\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const displayedValueRef = ref('');\n        const getMaxPrecision = (currentValue) => {\n            const precisions = [props.min, props.max, props.step, currentValue].map((item) => {\n                const fraction = String(item).split('.')[1];\n                return fraction ? fraction.length : 0;\n            });\n            return Math.max(...precisions);\n        };\n        const mergedPlaceholderRef = useMemo(() => {\n            const { placeholder } = props;\n            if (placeholder !== undefined)\n                return placeholder;\n            return localeRef.value.placeholder;\n        });\n        const mergedStepRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.step);\n            if (parsedNumber !== null) {\n                return parsedNumber === 0 ? 1 : Math.abs(parsedNumber);\n            }\n            return 1;\n        });\n        const mergedMinRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.min);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const mergedMaxRef = useMemo(() => {\n            const parsedNumber = parseNumber(props.max);\n            if (parsedNumber !== null)\n                return parsedNumber;\n            else\n                return null;\n        });\n        const doUpdateValue = (value) => {\n            const { value: mergedValue } = mergedValueRef;\n            if (value === mergedValue) {\n                deriveDisplayedValueFromValue();\n                return;\n            }\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue, onChange } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        };\n        const deriveValueFromDisplayedValue = (offset = 0, doUpdateIfValid = true, isInputing = false) => {\n            const { value: displayedValue } = displayedValueRef;\n            if (isInputing && isWipValue(displayedValue)) {\n                return false;\n            }\n            const parsedValue = parse(displayedValue);\n            if (parsedValue === null) {\n                if (doUpdateIfValid)\n                    doUpdateValue(null);\n                return null;\n            }\n            if (validator(parsedValue)) {\n                const precision = getMaxPrecision(parsedValue);\n                let nextValue = parseFloat((parsedValue + offset).toFixed(precision));\n                if (validator(nextValue)) {\n                    const { value: mergedMax } = mergedMaxRef;\n                    const { value: mergedMin } = mergedMinRef;\n                    if (mergedMax !== null && nextValue > mergedMax) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMax;\n                    }\n                    if (mergedMin !== null && nextValue < mergedMin) {\n                        if (!doUpdateIfValid || isInputing)\n                            return false;\n                        // if doUpdateIfValid=true, we try to make it a valid value\n                        nextValue = mergedMin;\n                    }\n                    if (props.validator && !props.validator(nextValue))\n                        return false;\n                    if (doUpdateIfValid)\n                        doUpdateValue(nextValue);\n                    return nextValue;\n                }\n            }\n            return false;\n        };\n        const deriveDisplayedValueFromValue = () => {\n            const { value: mergedValue } = mergedValueRef;\n            if (validator(mergedValue)) {\n                displayedValueRef.value = format(mergedValue);\n            }\n            else {\n                // null can pass the validator check\n                // so mergedValue is a number\n                displayedValueRef.value = String(mergedValue);\n            }\n        };\n        deriveDisplayedValueFromValue();\n        const displayedValueInvalidRef = useMemo(() => {\n            const derivedValue = deriveValueFromDisplayedValue(0, false);\n            return derivedValue === false;\n        });\n        const minusableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue(-mergedStep, false);\n            return derivedNextValue !== false;\n        });\n        const addableRef = useMemo(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (props.validator && mergedValue === null) {\n                return false;\n            }\n            const { value: mergedStep } = mergedStepRef;\n            const derivedNextValue = deriveValueFromDisplayedValue(+mergedStep, false);\n            return derivedNextValue !== false;\n        });\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            var _a, _b;\n            if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                // hit input wrapper\n                // which means not activated\n                return;\n            }\n            const value = deriveValueFromDisplayedValue();\n            // If valid, update event has been emitted\n            // make sure e.target.value is correct in blur callback\n            if (value !== false) {\n                const inputElRef = (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.inputElRef;\n                if (inputElRef) {\n                    inputElRef.value = String(value || '');\n                }\n                // If value is not changed, the displayed value may be greater than or\n                // less than the current value. The derived value is reformatted so the\n                // value is not changed. We can simply derive a new displayed value\n                if (mergedValueRef.value === value) {\n                    deriveDisplayedValueFromValue();\n                }\n            }\n            else {\n                // If not valid, nothing will be emitted, so derive displayed value from\n                // origin value\n                deriveDisplayedValueFromValue();\n            }\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doAdd() {\n            const { value: addable } = addableRef;\n            if (!addable) {\n                clearAddHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue(mergedStep);\n            }\n        }\n        function doMinus() {\n            const { value: minusable } = minusableRef;\n            if (!minusable) {\n                clearMinusHoldTimeout();\n                return;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                if (!props.validator) {\n                    doUpdateValue(createValidValue());\n                }\n            }\n            else {\n                const { value: mergedStep } = mergedStepRef;\n                deriveValueFromDisplayedValue(-mergedStep);\n            }\n        }\n        const handleFocus = doFocus;\n        const handleBlur = doBlur;\n        function createValidValue() {\n            if (props.validator)\n                return null;\n            const { value: mergedMin } = mergedMinRef;\n            const { value: mergedMax } = mergedMaxRef;\n            if (mergedMin !== null) {\n                return Math.max(0, mergedMin);\n            }\n            else if (mergedMax !== null) {\n                return Math.min(0, mergedMax);\n            }\n            else {\n                return 0;\n            }\n        }\n        function handleClear(e) {\n            doClear(e);\n            doUpdateValue(null);\n        }\n        function handleMouseDown(e) {\n            var _a, _b, _c;\n            if ((_a = addButtonInstRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            if ((_b = minusButtonInstRef.value) === null || _b === void 0 ? void 0 : _b.$el.contains(e.target)) {\n                e.preventDefault();\n            }\n            (_c = inputInstRef.value) === null || _c === void 0 ? void 0 : _c.activate();\n        }\n        let minusHoldStateIntervalId = null;\n        let addHoldStateIntervalId = null;\n        let firstMinusMousedownId = null;\n        function clearMinusHoldTimeout() {\n            if (firstMinusMousedownId) {\n                window.clearTimeout(firstMinusMousedownId);\n                firstMinusMousedownId = null;\n            }\n            if (minusHoldStateIntervalId) {\n                window.clearInterval(minusHoldStateIntervalId);\n                minusHoldStateIntervalId = null;\n            }\n        }\n        function clearAddHoldTimeout() {\n            if (firstAddMousedownId) {\n                window.clearTimeout(firstAddMousedownId);\n                firstAddMousedownId = null;\n            }\n            if (addHoldStateIntervalId) {\n                window.clearInterval(addHoldStateIntervalId);\n                addHoldStateIntervalId = null;\n            }\n        }\n        function handleMinusMousedown() {\n            firstMinusMousedownId = window.setTimeout(() => {\n                minusHoldStateIntervalId = window.setInterval(() => {\n                    doMinus();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, () => {\n                window.setTimeout(clearMinusHoldTimeout, 0);\n            });\n        }\n        let firstAddMousedownId = null;\n        function handleAddMousedown() {\n            firstAddMousedownId = window.setTimeout(() => {\n                addHoldStateIntervalId = window.setInterval(() => {\n                    doAdd();\n                }, HOLDING_CHANGE_INTERVAL);\n            }, HOLDING_CHANGE_THRESHOLD);\n            on('mouseup', document, () => {\n                window.setTimeout(clearAddHoldTimeout, 0);\n            });\n        }\n        const handleAddClick = () => {\n            if (addHoldStateIntervalId)\n                return;\n            doAdd();\n        };\n        const handleMinusClick = () => {\n            if (minusHoldStateIntervalId)\n                return;\n            doMinus();\n        };\n        function handleKeyDown(e) {\n            var _a, _b;\n            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                if (e.target === ((_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef)) {\n                    // hit input wrapper\n                    // which means not activated\n                    return;\n                }\n                const value = deriveValueFromDisplayedValue();\n                if (value !== false) {\n                    (_b = inputInstRef.value) === null || _b === void 0 ? void 0 : _b.deactivate();\n                }\n            }\n            else if (e.code === 'ArrowUp') {\n                if (props.keyboard.ArrowUp === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue();\n                if (value !== false) {\n                    doAdd();\n                }\n            }\n            else if (e.code === 'ArrowDown') {\n                if (props.keyboard.ArrowDown === false)\n                    return;\n                e.preventDefault();\n                const value = deriveValueFromDisplayedValue();\n                if (value !== false) {\n                    doMinus();\n                }\n            }\n        }\n        function handleUpdateDisplayedValue(value) {\n            displayedValueRef.value = value;\n            if (props.updateValueOnInput) {\n                deriveValueFromDisplayedValue(0, true, true);\n            }\n        }\n        watch(mergedValueRef, () => {\n            deriveDisplayedValueFromValue();\n        });\n        const exposedMethods = {\n            focus: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus(); },\n            blur: () => { var _a; return (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur(); }\n        };\n        const rtlEnabledRef = useRtl('InputNumber', mergedRtlRef, mergedClsPrefixRef);\n        return Object.assign(Object.assign({}, exposedMethods), { rtlEnabled: rtlEnabledRef, inputInstRef,\n            minusButtonInstRef,\n            addButtonInstRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, mergedPlaceholder: mergedPlaceholderRef, displayedValueInvalid: displayedValueInvalidRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, displayedValue: displayedValueRef, addable: addableRef, minusable: minusableRef, mergedStatus: mergedStatusRef, handleFocus,\n            handleBlur,\n            handleClear,\n            handleMouseDown,\n            handleAddClick,\n            handleMinusClick,\n            handleAddMousedown,\n            handleMinusMousedown,\n            handleKeyDown,\n            handleUpdateDisplayedValue, \n            // theme\n            mergedTheme: themeRef, inputThemeOverrides: {\n                paddingSmall: '0 8px 0 10px',\n                paddingMedium: '0 8px 0 12px',\n                paddingLarge: '0 8px 0 14px'\n            }, buttonThemeOverrides: computed(() => {\n                const { self: { iconColorDisabled } } = themeRef.value;\n                const [r, g, b, a] = rgba(iconColorDisabled);\n                return {\n                    textColorTextDisabled: `rgb(${r}, ${g}, ${b})`,\n                    opacityDisabled: `${a}`\n                };\n            }) });\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-input-number`,\n                this.rtlEnabled && `${mergedClsPrefix}-input-number--rtl`\n            ] },\n            h(NInput, { ref: \"inputInstRef\", autofocus: this.autofocus, status: this.mergedStatus, bordered: this.mergedBordered, loading: this.loading, value: this.displayedValue, onUpdateValue: this.handleUpdateDisplayedValue, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, builtinThemeOverrides: this.inputThemeOverrides, size: this.mergedSize, placeholder: this.mergedPlaceholder, disabled: this.mergedDisabled, readonly: this.readonly, textDecoration: this.displayedValueInvalid ? 'line-through' : undefined, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeydown: this.handleKeyDown, onMousedown: this.handleMouseDown, onClear: this.handleClear, clearable: this.clearable, internalLoadingBeforeSuffix: true }, {\n                prefix: () => { var _a, _b; return (_b = (_a = this.$slots).prefix) === null || _b === void 0 ? void 0 : _b.call(_a); },\n                suffix: () => {\n                    var _a, _b;\n                    return this.showButton\n                        ? [\n                            this.$slots.suffix && (h(\"span\", { class: `${mergedClsPrefix}-input-number-suffix` }, { default: this.$slots.suffix })),\n                            h(NxButton, { text: true, disabled: !this.minusable || this.mergedDisabled || this.readonly, focusable: false, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleMinusClick, onMousedown: this.handleMinusMousedown, ref: \"minusButtonInstRef\" }, {\n                                default: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, \"aria-disabled\": true }, {\n                                    default: () => h(RemoveIcon, null)\n                                }))\n                            }),\n                            h(NxButton, { text: true, disabled: !this.addable || this.mergedDisabled || this.readonly, focusable: false, builtinThemeOverrides: this.buttonThemeOverrides, onClick: this.handleAddClick, onMousedown: this.handleAddMousedown, ref: \"addButtonInstRef\" }, {\n                                default: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                                    default: () => h(AddIcon, null)\n                                }))\n                            })\n                        ]\n                        : (_b = (_a = this.$slots).suffix) === null || _b === void 0 ? void 0 : _b.call(_a);\n                }\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}