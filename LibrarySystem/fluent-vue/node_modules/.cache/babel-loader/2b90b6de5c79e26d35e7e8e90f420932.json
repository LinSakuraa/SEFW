{"ast":null,"code":"import { Fragment as _Fragment, withDirectives as _withDirectives, mergeProps as _mergeProps, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, Teleport, nextTick, computed, onMounted, Transition, onActivated, onDeactivated, defineComponent } from \"vue\";\nimport { popupSharedProps } from \"./shared\";\nimport { isDef, extend, makeStringProp, callInterceptor, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { useEventListener } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { useLockScroll } from \"../composables/use-lock-scroll\";\nimport { useLazyRender } from \"../composables/use-lazy-render\";\nimport { POPUP_TOGGLE_KEY } from \"../composables/on-popup-reopen\";\nimport { Icon } from \"../icon\";\nimport { Overlay } from \"../overlay\";\nconst popupProps = extend({}, popupSharedProps, {\n  round: Boolean,\n  position: makeStringProp(\"center\"),\n  closeIcon: makeStringProp(\"cross\"),\n  closeable: Boolean,\n  transition: String,\n  iconPrefix: String,\n  closeOnPopstate: Boolean,\n  closeIconPosition: makeStringProp(\"top-right\"),\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: Boolean\n});\nconst [name, bem] = createNamespace(\"popup\");\nlet globalZIndex = 2e3;\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: popupProps,\n  emits: [\"open\", \"close\", \"opened\", \"closed\", \"keydown\", \"update:show\", \"click-overlay\", \"click-close-icon\"],\n\n  setup(props, {\n    emit,\n    attrs,\n    slots\n  }) {\n    let opened;\n    let shouldReopen;\n    const zIndex = ref();\n    const popupRef = ref();\n    const lazyRender = useLazyRender(() => props.show || !props.lazyRender);\n    const style = computed(() => {\n      const style2 = {\n        zIndex: zIndex.value\n      };\n\n      if (isDef(props.duration)) {\n        const key = props.position === \"center\" ? \"animationDuration\" : \"transitionDuration\";\n        style2[key] = `${props.duration}s`;\n      }\n\n      return style2;\n    });\n\n    const open = () => {\n      if (!opened) {\n        if (props.zIndex !== void 0) {\n          globalZIndex = +props.zIndex;\n        }\n\n        opened = true;\n        zIndex.value = ++globalZIndex;\n        emit(\"open\");\n      }\n    };\n\n    const close = () => {\n      if (opened) {\n        callInterceptor(props.beforeClose, {\n          done() {\n            opened = false;\n            emit(\"close\");\n            emit(\"update:show\", false);\n          }\n\n        });\n      }\n    };\n\n    const onClickOverlay = event => {\n      emit(\"click-overlay\", event);\n\n      if (props.closeOnClickOverlay) {\n        close();\n      }\n    };\n\n    const renderOverlay = () => {\n      if (props.overlay) {\n        return _createVNode(Overlay, {\n          \"show\": props.show,\n          \"class\": props.overlayClass,\n          \"zIndex\": zIndex.value,\n          \"duration\": props.duration,\n          \"customStyle\": props.overlayStyle,\n          \"onClick\": onClickOverlay\n        }, {\n          default: slots[\"overlay-content\"]\n        });\n      }\n    };\n\n    const onClickCloseIcon = event => {\n      emit(\"click-close-icon\", event);\n      close();\n    };\n\n    const renderCloseIcon = () => {\n      if (props.closeable) {\n        return _createVNode(Icon, {\n          \"role\": \"button\",\n          \"tabindex\": 0,\n          \"name\": props.closeIcon,\n          \"class\": [bem(\"close-icon\", props.closeIconPosition), HAPTICS_FEEDBACK],\n          \"classPrefix\": props.iconPrefix,\n          \"onClick\": onClickCloseIcon\n        }, null);\n      }\n    };\n\n    const onOpened = () => emit(\"opened\");\n\n    const onClosed = () => emit(\"closed\");\n\n    const onKeydown = event => emit(\"keydown\", event);\n\n    const renderPopup = lazyRender(() => {\n      var _a;\n\n      const {\n        round,\n        position,\n        safeAreaInsetTop,\n        safeAreaInsetBottom\n      } = props;\n      return _withDirectives(_createVNode(\"div\", _mergeProps({\n        \"ref\": popupRef,\n        \"style\": style.value,\n        \"class\": [bem({\n          round,\n          [position]: position\n        }), {\n          \"van-safe-area-top\": safeAreaInsetTop,\n          \"van-safe-area-bottom\": safeAreaInsetBottom\n        }],\n        \"onKeydown\": onKeydown\n      }, attrs), [(_a = slots.default) == null ? void 0 : _a.call(slots), renderCloseIcon()]), [[_vShow, props.show]]);\n    });\n\n    const renderTransition = () => {\n      const {\n        position,\n        transition,\n        transitionAppear\n      } = props;\n      const name2 = position === \"center\" ? \"van-fade\" : `van-popup-slide-${position}`;\n      return _createVNode(Transition, {\n        \"name\": transition || name2,\n        \"appear\": transitionAppear,\n        \"onAfterEnter\": onOpened,\n        \"onAfterLeave\": onClosed\n      }, {\n        default: renderPopup\n      });\n    };\n\n    watch(() => props.show, show => {\n      if (show && !opened) {\n        open();\n\n        if (attrs.tabindex === 0) {\n          nextTick(() => {\n            var _a;\n\n            (_a = popupRef.value) == null ? void 0 : _a.focus();\n          });\n        }\n      }\n\n      if (!show && opened) {\n        opened = false;\n        emit(\"close\");\n      }\n    });\n    useExpose({\n      popupRef\n    });\n    useLockScroll(popupRef, () => props.show && props.lockScroll);\n    useEventListener(\"popstate\", () => {\n      if (props.closeOnPopstate) {\n        close();\n        shouldReopen = false;\n      }\n    });\n    onMounted(() => {\n      if (props.show) {\n        open();\n      }\n    });\n    onActivated(() => {\n      if (shouldReopen) {\n        emit(\"update:show\", true);\n        shouldReopen = false;\n      }\n    });\n    onDeactivated(() => {\n      if (props.show) {\n        close();\n        shouldReopen = true;\n      }\n    });\n    provide(POPUP_TOGGLE_KEY, () => props.show);\n    return () => {\n      if (props.teleport) {\n        return _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [renderOverlay(), renderTransition()]\n        });\n      }\n\n      return _createVNode(_Fragment, null, [renderOverlay(), renderTransition()]);\n    };\n  }\n\n});\nexport { stdin_default as default };","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/vant/es/popup/Popup.js"],"names":["Fragment","_Fragment","withDirectives","_withDirectives","mergeProps","_mergeProps","vShow","_vShow","createVNode","_createVNode","ref","watch","provide","Teleport","nextTick","computed","onMounted","Transition","onActivated","onDeactivated","defineComponent","popupSharedProps","isDef","extend","makeStringProp","callInterceptor","createNamespace","HAPTICS_FEEDBACK","useEventListener","useExpose","useLockScroll","useLazyRender","POPUP_TOGGLE_KEY","Icon","Overlay","popupProps","round","Boolean","position","closeIcon","closeable","transition","String","iconPrefix","closeOnPopstate","closeIconPosition","safeAreaInsetTop","safeAreaInsetBottom","name","bem","globalZIndex","stdin_default","inheritAttrs","props","emits","setup","emit","attrs","slots","opened","shouldReopen","zIndex","popupRef","lazyRender","show","style","style2","value","duration","key","open","close","beforeClose","done","onClickOverlay","event","closeOnClickOverlay","renderOverlay","overlay","overlayClass","overlayStyle","default","onClickCloseIcon","renderCloseIcon","onOpened","onClosed","onKeydown","renderPopup","_a","call","renderTransition","transitionAppear","name2","tabindex","focus","lockScroll","teleport"],"mappings":"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","sourcesContent":["import { Fragment as _Fragment, withDirectives as _withDirectives, mergeProps as _mergeProps, vShow as _vShow, createVNode as _createVNode } from \"vue\";\nimport { ref, watch, provide, Teleport, nextTick, computed, onMounted, Transition, onActivated, onDeactivated, defineComponent } from \"vue\";\nimport { popupSharedProps } from \"./shared\";\nimport { isDef, extend, makeStringProp, callInterceptor, createNamespace, HAPTICS_FEEDBACK } from \"../utils\";\nimport { useEventListener } from \"@vant/use\";\nimport { useExpose } from \"../composables/use-expose\";\nimport { useLockScroll } from \"../composables/use-lock-scroll\";\nimport { useLazyRender } from \"../composables/use-lazy-render\";\nimport { POPUP_TOGGLE_KEY } from \"../composables/on-popup-reopen\";\nimport { Icon } from \"../icon\";\nimport { Overlay } from \"../overlay\";\nconst popupProps = extend({}, popupSharedProps, {\n  round: Boolean,\n  position: makeStringProp(\"center\"),\n  closeIcon: makeStringProp(\"cross\"),\n  closeable: Boolean,\n  transition: String,\n  iconPrefix: String,\n  closeOnPopstate: Boolean,\n  closeIconPosition: makeStringProp(\"top-right\"),\n  safeAreaInsetTop: Boolean,\n  safeAreaInsetBottom: Boolean\n});\nconst [name, bem] = createNamespace(\"popup\");\nlet globalZIndex = 2e3;\nvar stdin_default = defineComponent({\n  name,\n  inheritAttrs: false,\n  props: popupProps,\n  emits: [\"open\", \"close\", \"opened\", \"closed\", \"keydown\", \"update:show\", \"click-overlay\", \"click-close-icon\"],\n  setup(props, {\n    emit,\n    attrs,\n    slots\n  }) {\n    let opened;\n    let shouldReopen;\n    const zIndex = ref();\n    const popupRef = ref();\n    const lazyRender = useLazyRender(() => props.show || !props.lazyRender);\n    const style = computed(() => {\n      const style2 = {\n        zIndex: zIndex.value\n      };\n      if (isDef(props.duration)) {\n        const key = props.position === \"center\" ? \"animationDuration\" : \"transitionDuration\";\n        style2[key] = `${props.duration}s`;\n      }\n      return style2;\n    });\n    const open = () => {\n      if (!opened) {\n        if (props.zIndex !== void 0) {\n          globalZIndex = +props.zIndex;\n        }\n        opened = true;\n        zIndex.value = ++globalZIndex;\n        emit(\"open\");\n      }\n    };\n    const close = () => {\n      if (opened) {\n        callInterceptor(props.beforeClose, {\n          done() {\n            opened = false;\n            emit(\"close\");\n            emit(\"update:show\", false);\n          }\n        });\n      }\n    };\n    const onClickOverlay = (event) => {\n      emit(\"click-overlay\", event);\n      if (props.closeOnClickOverlay) {\n        close();\n      }\n    };\n    const renderOverlay = () => {\n      if (props.overlay) {\n        return _createVNode(Overlay, {\n          \"show\": props.show,\n          \"class\": props.overlayClass,\n          \"zIndex\": zIndex.value,\n          \"duration\": props.duration,\n          \"customStyle\": props.overlayStyle,\n          \"onClick\": onClickOverlay\n        }, {\n          default: slots[\"overlay-content\"]\n        });\n      }\n    };\n    const onClickCloseIcon = (event) => {\n      emit(\"click-close-icon\", event);\n      close();\n    };\n    const renderCloseIcon = () => {\n      if (props.closeable) {\n        return _createVNode(Icon, {\n          \"role\": \"button\",\n          \"tabindex\": 0,\n          \"name\": props.closeIcon,\n          \"class\": [bem(\"close-icon\", props.closeIconPosition), HAPTICS_FEEDBACK],\n          \"classPrefix\": props.iconPrefix,\n          \"onClick\": onClickCloseIcon\n        }, null);\n      }\n    };\n    const onOpened = () => emit(\"opened\");\n    const onClosed = () => emit(\"closed\");\n    const onKeydown = (event) => emit(\"keydown\", event);\n    const renderPopup = lazyRender(() => {\n      var _a;\n      const {\n        round,\n        position,\n        safeAreaInsetTop,\n        safeAreaInsetBottom\n      } = props;\n      return _withDirectives(_createVNode(\"div\", _mergeProps({\n        \"ref\": popupRef,\n        \"style\": style.value,\n        \"class\": [bem({\n          round,\n          [position]: position\n        }), {\n          \"van-safe-area-top\": safeAreaInsetTop,\n          \"van-safe-area-bottom\": safeAreaInsetBottom\n        }],\n        \"onKeydown\": onKeydown\n      }, attrs), [(_a = slots.default) == null ? void 0 : _a.call(slots), renderCloseIcon()]), [[_vShow, props.show]]);\n    });\n    const renderTransition = () => {\n      const {\n        position,\n        transition,\n        transitionAppear\n      } = props;\n      const name2 = position === \"center\" ? \"van-fade\" : `van-popup-slide-${position}`;\n      return _createVNode(Transition, {\n        \"name\": transition || name2,\n        \"appear\": transitionAppear,\n        \"onAfterEnter\": onOpened,\n        \"onAfterLeave\": onClosed\n      }, {\n        default: renderPopup\n      });\n    };\n    watch(() => props.show, (show) => {\n      if (show && !opened) {\n        open();\n        if (attrs.tabindex === 0) {\n          nextTick(() => {\n            var _a;\n            (_a = popupRef.value) == null ? void 0 : _a.focus();\n          });\n        }\n      }\n      if (!show && opened) {\n        opened = false;\n        emit(\"close\");\n      }\n    });\n    useExpose({\n      popupRef\n    });\n    useLockScroll(popupRef, () => props.show && props.lockScroll);\n    useEventListener(\"popstate\", () => {\n      if (props.closeOnPopstate) {\n        close();\n        shouldReopen = false;\n      }\n    });\n    onMounted(() => {\n      if (props.show) {\n        open();\n      }\n    });\n    onActivated(() => {\n      if (shouldReopen) {\n        emit(\"update:show\", true);\n        shouldReopen = false;\n      }\n    });\n    onDeactivated(() => {\n      if (props.show) {\n        close();\n        shouldReopen = true;\n      }\n    });\n    provide(POPUP_TOGGLE_KEY, () => props.show);\n    return () => {\n      if (props.teleport) {\n        return _createVNode(Teleport, {\n          \"to\": props.teleport\n        }, {\n          default: () => [renderOverlay(), renderTransition()]\n        });\n      }\n      return _createVNode(_Fragment, null, [renderOverlay(), renderTransition()]);\n    };\n  }\n});\nexport {\n  stdin_default as default\n};\n"]},"metadata":{},"sourceType":"module"}