{"ast":null,"code":"import { h, computed, defineComponent } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey } from '../../_utils';\nimport { progressLight } from '../styles';\nimport style from './styles/index.cssr';\nimport Line from './Line';\nimport Circle from './Circle';\nimport MultipleCircle from './MultipleCircle';\nconst progressProps = Object.assign(Object.assign({}, useTheme.props), {\n  processing: Boolean,\n  type: {\n    type: String,\n    default: 'line'\n  },\n  gapDegree: Number,\n  gapOffsetDegree: Number,\n  status: {\n    type: String,\n    default: 'default'\n  },\n  railColor: [String, Array],\n  railStyle: [String, Array],\n  color: [String, Array],\n  viewBoxWidth: {\n    type: Number,\n    default: 100\n  },\n  strokeWidth: {\n    type: Number,\n    default: 7\n  },\n  percentage: [Number, Array],\n  unit: {\n    type: String,\n    default: '%'\n  },\n  showIndicator: {\n    type: Boolean,\n    default: true\n  },\n  indicatorPosition: {\n    type: String,\n    default: 'outside'\n  },\n  indicatorPlacement: {\n    type: String,\n    default: 'outside'\n  },\n  indicatorTextColor: String,\n  circleGap: {\n    type: Number,\n    default: 1\n  },\n  height: Number,\n  borderRadius: [String, Number],\n  fillBorderRadius: [String, Number],\n  offsetDegree: Number\n});\nexport default defineComponent({\n  name: 'Progress',\n  props: progressProps,\n\n  setup(props) {\n    const mergedIndicatorPlacementRef = computed(() => {\n      return props.indicatorPlacement || props.indicatorPosition;\n    });\n    const gapDeg = computed(() => {\n      if (props.gapDegree || props.gapDegree === 0) {\n        return props.gapDegree;\n      }\n\n      if (props.type === 'dashboard') {\n        return 75;\n      }\n\n      return undefined;\n    });\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Progress', '-progress', style, progressLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        status\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          fontSize,\n          fontSizeCircle,\n          railColor,\n          railHeight,\n          iconSizeCircle,\n          iconSizeLine,\n          textColorCircle,\n          textColorLineInner,\n          textColorLineOuter,\n          lineBgProcessing,\n          fontWeightCircle,\n          [createKey('iconColor', status)]: iconColor,\n          [createKey('fillColor', status)]: fillColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-fill-color': fillColor,\n        '--n-font-size': fontSize,\n        '--n-font-size-circle': fontSizeCircle,\n        '--n-font-weight-circle': fontWeightCircle,\n        '--n-icon-color': iconColor,\n        '--n-icon-size-circle': iconSizeCircle,\n        '--n-icon-size-line': iconSizeLine,\n        '--n-line-bg-processing': lineBgProcessing,\n        '--n-rail-color': railColor,\n        '--n-rail-height': railHeight,\n        '--n-text-color-circle': textColorCircle,\n        '--n-text-color-line-inner': textColorLineInner,\n        '--n-text-color-line-outer': textColorLineOuter\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('progress', computed(() => props.status[0]), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedIndicatorPlacement: mergedIndicatorPlacementRef,\n      gapDeg,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    // it's ok to expand all prop here since no slots' deps\n    const {\n      type,\n      cssVars,\n      indicatorTextColor,\n      showIndicator,\n      status,\n      railColor,\n      railStyle,\n      color,\n      percentage,\n      viewBoxWidth,\n      strokeWidth,\n      mergedIndicatorPlacement,\n      unit,\n      borderRadius,\n      fillBorderRadius,\n      height,\n      processing,\n      circleGap,\n      mergedClsPrefix,\n      gapDeg,\n      gapOffsetDegree,\n      themeClass,\n      $slots,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [themeClass, `${mergedClsPrefix}-progress`, `${mergedClsPrefix}-progress--${type}`, `${mergedClsPrefix}-progress--${status}`],\n      style: cssVars,\n      \"aria-valuemax\": 100,\n      \"aria-valuemin\": 0,\n      \"aria-valuenow\": percentage,\n      role: type === 'circle' || type === 'line' || type === 'dashboard' ? 'progressbar' : 'none'\n    }, type === 'circle' || type === 'dashboard' ? h(Circle, {\n      clsPrefix: mergedClsPrefix,\n      status: status,\n      showIndicator: showIndicator,\n      indicatorTextColor: indicatorTextColor,\n      railColor: railColor,\n      fillColor: color,\n      railStyle: railStyle,\n      offsetDegree: this.offsetDegree,\n      percentage: percentage,\n      viewBoxWidth: viewBoxWidth,\n      strokeWidth: strokeWidth,\n      gapDegree: gapDeg === undefined ? type === 'dashboard' ? 75 : 0 : gapDeg,\n      gapOffsetDegree: gapOffsetDegree,\n      unit: unit\n    }, $slots) : type === 'line' ? h(Line, {\n      clsPrefix: mergedClsPrefix,\n      status: status,\n      showIndicator: showIndicator,\n      indicatorTextColor: indicatorTextColor,\n      railColor: railColor,\n      fillColor: color,\n      railStyle: railStyle,\n      percentage: percentage,\n      processing: processing,\n      indicatorPlacement: mergedIndicatorPlacement,\n      unit: unit,\n      fillBorderRadius: fillBorderRadius,\n      railBorderRadius: borderRadius,\n      height: height\n    }, $slots) : type === 'multiple-circle' ? h(MultipleCircle, {\n      clsPrefix: mergedClsPrefix,\n      strokeWidth: strokeWidth,\n      railColor: railColor,\n      fillColor: color,\n      railStyle: railStyle,\n      viewBoxWidth: viewBoxWidth,\n      percentage: percentage,\n      showIndicator: showIndicator,\n      circleGap: circleGap\n    }, $slots) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/progress/src/Progress.js"],"names":["h","computed","defineComponent","useConfig","useTheme","useThemeClass","createKey","progressLight","style","Line","Circle","MultipleCircle","progressProps","Object","assign","props","processing","Boolean","type","String","default","gapDegree","Number","gapOffsetDegree","status","railColor","Array","railStyle","color","viewBoxWidth","strokeWidth","percentage","unit","showIndicator","indicatorPosition","indicatorPlacement","indicatorTextColor","circleGap","height","borderRadius","fillBorderRadius","offsetDegree","name","setup","mergedIndicatorPlacementRef","gapDeg","undefined","mergedClsPrefixRef","inlineThemeDisabled","themeRef","cssVarsRef","common","cubicBezierEaseInOut","self","fontSize","fontSizeCircle","railHeight","iconSizeCircle","iconSizeLine","textColorCircle","textColorLineInner","textColorLineOuter","lineBgProcessing","fontWeightCircle","iconColor","fillColor","value","themeClassHandle","mergedClsPrefix","mergedIndicatorPlacement","cssVars","themeClass","onRender","render","$slots","class","role","clsPrefix","railBorderRadius"],"mappings":"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","sourcesContent":["import { h, computed, defineComponent } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey } from '../../_utils';\nimport { progressLight } from '../styles';\nimport style from './styles/index.cssr';\nimport Line from './Line';\nimport Circle from './Circle';\nimport MultipleCircle from './MultipleCircle';\nconst progressProps = Object.assign(Object.assign({}, useTheme.props), { processing: Boolean, type: {\n        type: String,\n        default: 'line'\n    }, gapDegree: Number, gapOffsetDegree: Number, status: {\n        type: String,\n        default: 'default'\n    }, railColor: [String, Array], railStyle: [String, Array], color: [String, Array], viewBoxWidth: {\n        type: Number,\n        default: 100\n    }, strokeWidth: {\n        type: Number,\n        default: 7\n    }, percentage: [Number, Array], unit: {\n        type: String,\n        default: '%'\n    }, showIndicator: {\n        type: Boolean,\n        default: true\n    }, indicatorPosition: {\n        type: String,\n        default: 'outside'\n    }, indicatorPlacement: {\n        type: String,\n        default: 'outside'\n    }, indicatorTextColor: String, circleGap: {\n        type: Number,\n        default: 1\n    }, height: Number, borderRadius: [String, Number], fillBorderRadius: [String, Number], offsetDegree: Number });\nexport default defineComponent({\n    name: 'Progress',\n    props: progressProps,\n    setup(props) {\n        const mergedIndicatorPlacementRef = computed(() => {\n            return props.indicatorPlacement || props.indicatorPosition;\n        });\n        const gapDeg = computed(() => {\n            if (props.gapDegree || props.gapDegree === 0) {\n                return props.gapDegree;\n            }\n            if (props.type === 'dashboard') {\n                return 75;\n            }\n            return undefined;\n        });\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Progress', '-progress', style, progressLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { status } = props;\n            const { common: { cubicBezierEaseInOut }, self: { fontSize, fontSizeCircle, railColor, railHeight, iconSizeCircle, iconSizeLine, textColorCircle, textColorLineInner, textColorLineOuter, lineBgProcessing, fontWeightCircle, [createKey('iconColor', status)]: iconColor, [createKey('fillColor', status)]: fillColor } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-fill-color': fillColor,\n                '--n-font-size': fontSize,\n                '--n-font-size-circle': fontSizeCircle,\n                '--n-font-weight-circle': fontWeightCircle,\n                '--n-icon-color': iconColor,\n                '--n-icon-size-circle': iconSizeCircle,\n                '--n-icon-size-line': iconSizeLine,\n                '--n-line-bg-processing': lineBgProcessing,\n                '--n-rail-color': railColor,\n                '--n-rail-height': railHeight,\n                '--n-text-color-circle': textColorCircle,\n                '--n-text-color-line-inner': textColorLineInner,\n                '--n-text-color-line-outer': textColorLineOuter\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('progress', computed(() => props.status[0]), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedIndicatorPlacement: mergedIndicatorPlacementRef,\n            gapDeg,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        // it's ok to expand all prop here since no slots' deps\n        const { type, cssVars, indicatorTextColor, showIndicator, status, railColor, railStyle, color, percentage, viewBoxWidth, strokeWidth, mergedIndicatorPlacement, unit, borderRadius, fillBorderRadius, height, processing, circleGap, mergedClsPrefix, gapDeg, gapOffsetDegree, themeClass, $slots, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                themeClass,\n                `${mergedClsPrefix}-progress`,\n                `${mergedClsPrefix}-progress--${type}`,\n                `${mergedClsPrefix}-progress--${status}`\n            ], style: cssVars, \"aria-valuemax\": 100, \"aria-valuemin\": 0, \"aria-valuenow\": percentage, role: type === 'circle' || type === 'line' || type === 'dashboard'\n                ? 'progressbar'\n                : 'none' }, type === 'circle' || type === 'dashboard' ? (h(Circle, { clsPrefix: mergedClsPrefix, status: status, showIndicator: showIndicator, indicatorTextColor: indicatorTextColor, railColor: railColor, fillColor: color, railStyle: railStyle, offsetDegree: this.offsetDegree, percentage: percentage, viewBoxWidth: viewBoxWidth, strokeWidth: strokeWidth, gapDegree: gapDeg === undefined ? (type === 'dashboard' ? 75 : 0) : gapDeg, gapOffsetDegree: gapOffsetDegree, unit: unit }, $slots)) : type === 'line' ? (h(Line, { clsPrefix: mergedClsPrefix, status: status, showIndicator: showIndicator, indicatorTextColor: indicatorTextColor, railColor: railColor, fillColor: color, railStyle: railStyle, percentage: percentage, processing: processing, indicatorPlacement: mergedIndicatorPlacement, unit: unit, fillBorderRadius: fillBorderRadius, railBorderRadius: borderRadius, height: height }, $slots)) : type === 'multiple-circle' ? (h(MultipleCircle, { clsPrefix: mergedClsPrefix, strokeWidth: strokeWidth, railColor: railColor, fillColor: color, railStyle: railStyle, viewBoxWidth: viewBoxWidth, percentage: percentage, showIndicator: showIndicator, circleGap: circleGap }, $slots)) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}