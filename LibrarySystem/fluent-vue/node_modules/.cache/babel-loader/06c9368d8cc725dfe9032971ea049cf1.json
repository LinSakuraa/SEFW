{"ast":null,"code":"import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  actions: {\n    type: Array,\n    default: () => ['now', 'clear', 'confirm']\n  }\n}); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction useCalendar(props, type) {\n  const panelCommon = usePanelCommon(props);\n  const {\n    isValueInvalidRef,\n    isDateDisabledRef,\n    isDateInvalidRef,\n    isTimeInvalidRef,\n    isDateTimeInvalidRef,\n    isHourDisabledRef,\n    isMinuteDisabledRef,\n    isSecondDisabledRef,\n    localeRef,\n    firstDayOfWeekRef,\n    datePickerSlots // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isValueInvalid: isValueInvalidRef,\n    isDateDisabled: isDateDisabledRef,\n    isDateInvalid: isDateInvalidRef,\n    isTimeInvalid: isTimeInvalidRef,\n    isDateTimeInvalid: isDateTimeInvalidRef,\n    isHourDisabled: isHourDisabledRef,\n    isMinuteDisabled: isMinuteDisabledRef,\n    isSecondDisabled: isSecondDisabledRef\n  };\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const dateInputValueRef = ref(props.value === null || Array.isArray(props.value) ? '' : format(props.value, mergedDateFormatRef.value));\n  const calendarValueRef = ref(props.value === null || Array.isArray(props.value) ? Date.now() : props.value);\n  const yearScrollRef = ref(null);\n  const monthScrollRef = ref(null);\n  const scrollbarInstRef = ref(null);\n  const nowRef = ref(Date.now());\n  const dateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const monthArrayRef = computed(() => {\n    return monthArray(calendarValueRef.value, props.value, nowRef.value);\n  });\n  const yearArrayRef = computed(() => {\n    return yearArray(calendarValueRef.value, props.value, nowRef.value);\n  });\n  const quarterArrayRef = computed(() => {\n    return quarterArray(calendarValueRef.value, props.value, nowRef.value);\n  });\n  const weekdaysRef = computed(() => {\n    return dateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const calendarMonthRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const calendarYearRef = computed(() => {\n    return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  watch(calendarValueRef, (value, oldValue) => {\n    if (!isSameMonth(value, oldValue)) {\n      panelCommon.disableTransitionOneTick();\n    }\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && !Array.isArray(value)) {\n      dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      calendarValueRef.value = value;\n    } else {\n      dateInputValueRef.value = '';\n    }\n  });\n\n  function sanitizeValue(value) {\n    if (type === 'datetime') return getTime(startOfSecond(value));\n    if (type === 'month') return getTime(startOfMonth(value));\n    if (type === 'year') return getTime(startOfYear(value));\n    if (type === 'quarter') return getTime(startOfQuarter(value));\n    return getTime(startOfDay(value));\n  }\n\n  function mergedIsDateDisabled(ts) {\n    const {\n      isDateDisabled: {\n        value: isDateDisabled\n      }\n    } = validation;\n    if (!isDateDisabled) return false;\n    return isDateDisabled(ts);\n  }\n\n  function handleDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n      }\n    } else {\n      dateInputValueRef.value = value;\n    }\n  }\n\n  function handleDateInputBlur() {\n    const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n      } else if (!Array.isArray(props.value)) {\n        const newDateTime = set(props.value, {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n      }\n    } else {\n      deriveDateInputValue();\n    }\n  }\n\n  function clearSelectedDateTime() {\n    panelCommon.doUpdateValue(null, true);\n    dateInputValueRef.value = '';\n    panelCommon.doClose(true);\n  }\n\n  function handleNowClick() {\n    panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n    calendarValueRef.value = Date.now();\n    panelCommon.doClose(true);\n  }\n\n  function handleDateClick(dateItem) {\n    if (mergedIsDateDisabled(dateItem.ts)) {\n      return;\n    }\n\n    let newValue;\n\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n\n    if (type === 'datetime' && props.defaultTime !== null && !Array.isArray(props.defaultTime)) {\n      const time = getDefaultTime(props.defaultTime);\n\n      if (time) {\n        newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n      }\n    }\n\n    newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter) : set(newValue, dateItem.dateObject));\n    panelCommon.doUpdateValue(sanitizeValue(newValue), type === 'date' || type === 'year');\n\n    switch (type) {\n      case 'date':\n      case 'year':\n        panelCommon.doClose();\n        break;\n\n      case 'month':\n        panelCommon.disableTransitionOneTick();\n        scrollPickerColumns(newValue);\n        break;\n\n      case 'quarter':\n        scrollPickerColumns(newValue);\n        break;\n    }\n  }\n\n  function handleQuickMonthClick(dateItem, updatePanelValue) {\n    let newValue;\n\n    if (props.value !== null && !Array.isArray(props.value)) {\n      newValue = props.value;\n    } else {\n      newValue = Date.now();\n    }\n\n    newValue = getTime(dateItem.type === 'month' ? setMonth(newValue, dateItem.dateObject.month) : setYear(newValue, dateItem.dateObject.year));\n    updatePanelValue(newValue);\n    scrollPickerColumns(newValue);\n  }\n\n  function onUpdateCalendarValue(value) {\n    calendarValueRef.value = value;\n  }\n\n  function deriveDateInputValue(time) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    if (props.value === null || Array.isArray(props.value)) {\n      dateInputValueRef.value = '';\n      return;\n    }\n\n    if (time === undefined) {\n      time = props.value;\n    }\n\n    dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n\n  function handleConfirmClick() {\n    if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n      return;\n    }\n\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n\n  function closeCalendar() {\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n\n  function nextYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n  }\n\n  function prevYear() {\n    calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n  }\n\n  function nextMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n  }\n\n  function prevMonth() {\n    calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n  } // For month type\n\n\n  function virtualListContainer() {\n    const {\n      value\n    } = yearScrollRef;\n    return value === null || value === void 0 ? void 0 : value.listElRef;\n  } // For month type\n\n\n  function virtualListContent() {\n    const {\n      value\n    } = yearScrollRef;\n    return value === null || value === void 0 ? void 0 : value.itemsElRef;\n  } // For month type\n\n\n  function handleVirtualListScroll(e) {\n    var _a;\n\n    (_a = scrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n  }\n\n  function handleTimePickerChange(value) {\n    if (value === null) return;\n    panelCommon.doUpdateValue(value, false);\n  }\n\n  function handleSingleShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, false);\n  }\n\n  function handleSingleShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (typeof shortcutValue !== 'number') return;\n    panelCommon.doUpdateValue(shortcutValue, false);\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n\n  function scrollPickerColumns(value) {\n    const {\n      value: mergedValue\n    } = props;\n\n    if (monthScrollRef.value) {\n      const monthIndex = value === undefined ? mergedValue === null ? getMonth(Date.now()) : getMonth(mergedValue) : getMonth(value);\n      monthScrollRef.value.scrollTo({\n        top: monthIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n\n    if (yearScrollRef.value) {\n      const yearIndex = (value === undefined ? mergedValue === null ? getYear(Date.now()) : getYear(mergedValue) : getYear(value)) - START_YEAR;\n      yearScrollRef.value.scrollTo({\n        top: yearIndex * MONTH_ITEM_HEIGHT\n      });\n    }\n  }\n\n  return Object.assign(Object.assign(Object.assign({\n    dateArray: dateArrayRef,\n    monthArray: monthArrayRef,\n    yearArray: yearArrayRef,\n    quarterArray: quarterArrayRef,\n    calendarYear: calendarYearRef,\n    calendarMonth: calendarMonthRef,\n    weekdays: weekdaysRef,\n    mergedIsDateDisabled,\n    nextYear,\n    prevYear,\n    nextMonth,\n    prevMonth,\n    handleNowClick,\n    handleConfirmClick,\n    handleSingleShortcutMouseenter,\n    handleSingleShortcutClick\n  }, validation), panelCommon), {\n    // datetime only\n    handleDateClick,\n    handleDateInputBlur,\n    handleDateInput,\n    handleTimePickerChange,\n    clearSelectedDateTime,\n    virtualListContainer,\n    virtualListContent,\n    handleVirtualListScroll,\n    timePickerSize: panelCommon.timePickerSize,\n    dateInputValue: dateInputValueRef,\n    datePickerSlots,\n    monthScrollRef,\n    yearScrollRef,\n    scrollbarInstRef,\n    handleQuickMonthClick,\n    scrollPickerColumns,\n    calendarValue: calendarValueRef,\n    onUpdateCalendarValue\n  });\n}\n\nexport { useCalendar, useCalendarProps };","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/panel/use-calendar.js"],"names":["ref","computed","inject","watch","addMonths","addYears","isSameMonth","getTime","format","set","getYear","getMonth","getDate","isValid","startOfDay","startOfSecond","startOfMonth","startOfYear","startOfQuarter","setQuarter","setYear","setMonth","getDefaultTime","dateArray","monthArray","strictParse","yearArray","quarterArray","datePickerInjectionKey","usePanelCommon","usePanelCommonProps","MONTH_ITEM_HEIGHT","START_YEAR","useCalendarProps","Object","assign","actions","type","Array","default","useCalendar","props","panelCommon","isValueInvalidRef","isDateDisabledRef","isDateInvalidRef","isTimeInvalidRef","isDateTimeInvalidRef","isHourDisabledRef","isMinuteDisabledRef","isSecondDisabledRef","localeRef","firstDayOfWeekRef","datePickerSlots","validation","isValueInvalid","isDateDisabled","isDateInvalid","isTimeInvalid","isDateTimeInvalid","isHourDisabled","isMinuteDisabled","isSecondDisabled","mergedDateFormatRef","dateFormat","value","dateInputValueRef","isArray","calendarValueRef","Date","now","yearScrollRef","monthScrollRef","scrollbarInstRef","nowRef","dateArrayRef","_a","firstDayOfWeek","monthArrayRef","yearArrayRef","quarterArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","dateFnsOptions","calendarMonthRef","monthFormat","calendarYearRef","yearFormat","oldValue","disableTransitionOneTick","sanitizeValue","mergedIsDateDisabled","handleDateInput","date","doUpdateValue","newDateTime","year","month","handleDateInputBlur","deriveDateInputValue","clearSelectedDateTime","doClose","handleNowClick","handleDateClick","newValue","defaultTime","time","dateObject","quarter","scrollPickerColumns","handleQuickMonthClick","updatePanelValue","onUpdateCalendarValue","undefined","handleConfirmClick","doConfirm","closeCalendar","active","nextYear","prevYear","nextMonth","prevMonth","virtualListContainer","listElRef","virtualListContent","itemsElRef","handleVirtualListScroll","e","sync","handleTimePickerChange","handleSingleShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleSingleShortcutClick","clearPendingValue","mergedValue","monthIndex","scrollTo","top","yearIndex","calendarYear","calendarMonth","weekdays","timePickerSize","dateInputValue","calendarValue"],"mappings":"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","sourcesContent":["import { ref, computed, inject, watch } from 'vue';\nimport { addMonths, addYears, isSameMonth, getTime, format, set, getYear, getMonth, getDate, isValid, startOfDay, startOfSecond, startOfMonth, startOfYear, startOfQuarter, setQuarter, setYear, setMonth } from 'date-fns';\nimport { getDefaultTime, dateArray, monthArray, strictParse, yearArray, quarterArray } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nimport { MONTH_ITEM_HEIGHT, START_YEAR } from '../config';\nconst useCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { actions: {\n        type: Array,\n        default: () => ['now', 'clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useCalendar(props, type) {\n    const panelCommon = usePanelCommon(props);\n    const { isValueInvalidRef, isDateDisabledRef, isDateInvalidRef, isTimeInvalidRef, isDateTimeInvalidRef, isHourDisabledRef, isMinuteDisabledRef, isSecondDisabledRef, localeRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isValueInvalid: isValueInvalidRef,\n        isDateDisabled: isDateDisabledRef,\n        isDateInvalid: isDateInvalidRef,\n        isTimeInvalid: isTimeInvalidRef,\n        isDateTimeInvalid: isDateTimeInvalidRef,\n        isHourDisabled: isHourDisabledRef,\n        isMinuteDisabled: isMinuteDisabledRef,\n        isSecondDisabled: isSecondDisabledRef\n    };\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const dateInputValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? ''\n        : format(props.value, mergedDateFormatRef.value));\n    const calendarValueRef = ref(props.value === null || Array.isArray(props.value)\n        ? Date.now()\n        : props.value);\n    const yearScrollRef = ref(null);\n    const monthScrollRef = ref(null);\n    const scrollbarInstRef = ref(null);\n    const nowRef = ref(Date.now());\n    const dateArrayRef = computed(() => {\n        var _a;\n        return dateArray(calendarValueRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const monthArrayRef = computed(() => {\n        return monthArray(calendarValueRef.value, props.value, nowRef.value);\n    });\n    const yearArrayRef = computed(() => {\n        return yearArray(calendarValueRef.value, props.value, nowRef.value);\n    });\n    const quarterArrayRef = computed(() => {\n        return quarterArray(calendarValueRef.value, props.value, nowRef.value);\n    });\n    const weekdaysRef = computed(() => {\n        return dateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const calendarMonthRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const calendarYearRef = computed(() => {\n        return format(calendarValueRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    watch(calendarValueRef, (value, oldValue) => {\n        if (!isSameMonth(value, oldValue)) {\n            panelCommon.disableTransitionOneTick();\n        }\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && !Array.isArray(value)) {\n            dateInputValueRef.value = format(value, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            calendarValueRef.value = value;\n        }\n        else {\n            dateInputValueRef.value = '';\n        }\n    });\n    function sanitizeValue(value) {\n        if (type === 'datetime')\n            return getTime(startOfSecond(value));\n        if (type === 'month')\n            return getTime(startOfMonth(value));\n        if (type === 'year')\n            return getTime(startOfYear(value));\n        if (type === 'quarter')\n            return getTime(startOfQuarter(value));\n        return getTime(startOfDay(value));\n    }\n    function mergedIsDateDisabled(ts) {\n        const { isDateDisabled: { value: isDateDisabled } } = validation;\n        if (!isDateDisabled)\n            return false;\n        return isDateDisabled(ts);\n    }\n    function handleDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n            }\n        }\n        else {\n            dateInputValueRef.value = value;\n        }\n    }\n    function handleDateInputBlur() {\n        const date = strictParse(dateInputValueRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), false);\n            }\n            else if (!Array.isArray(props.value)) {\n                const newDateTime = set(props.value, {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                panelCommon.doUpdateValue(getTime(sanitizeValue(getTime(newDateTime))), false);\n            }\n        }\n        else {\n            deriveDateInputValue();\n        }\n    }\n    function clearSelectedDateTime() {\n        panelCommon.doUpdateValue(null, true);\n        dateInputValueRef.value = '';\n        panelCommon.doClose(true);\n    }\n    function handleNowClick() {\n        panelCommon.doUpdateValue(getTime(sanitizeValue(Date.now())), true);\n        calendarValueRef.value = Date.now();\n        panelCommon.doClose(true);\n    }\n    function handleDateClick(dateItem) {\n        if (mergedIsDateDisabled(dateItem.ts)) {\n            return;\n        }\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        if (type === 'datetime' &&\n            props.defaultTime !== null &&\n            !Array.isArray(props.defaultTime)) {\n            const time = getDefaultTime(props.defaultTime);\n            if (time) {\n                newValue = getTime(set(newValue, time)); // setDate getTime(addMilliseconds(startOfDay(newValue), time))\n            }\n        }\n        newValue = getTime(dateItem.type === 'quarter' && dateItem.dateObject.quarter\n            ? setQuarter(setYear(newValue, dateItem.dateObject.year), dateItem.dateObject.quarter)\n            : set(newValue, dateItem.dateObject));\n        panelCommon.doUpdateValue(sanitizeValue(newValue), type === 'date' || type === 'year');\n        switch (type) {\n            case 'date':\n            case 'year':\n                panelCommon.doClose();\n                break;\n            case 'month':\n                panelCommon.disableTransitionOneTick();\n                scrollPickerColumns(newValue);\n                break;\n            case 'quarter':\n                scrollPickerColumns(newValue);\n                break;\n        }\n    }\n    function handleQuickMonthClick(dateItem, updatePanelValue) {\n        let newValue;\n        if (props.value !== null && !Array.isArray(props.value)) {\n            newValue = props.value;\n        }\n        else {\n            newValue = Date.now();\n        }\n        newValue = getTime(dateItem.type === 'month'\n            ? setMonth(newValue, dateItem.dateObject.month)\n            : setYear(newValue, dateItem.dateObject.year));\n        updatePanelValue(newValue);\n        scrollPickerColumns(newValue);\n    }\n    function onUpdateCalendarValue(value) {\n        calendarValueRef.value = value;\n    }\n    function deriveDateInputValue(time) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        if (props.value === null || Array.isArray(props.value)) {\n            dateInputValueRef.value = '';\n            return;\n        }\n        if (time === undefined) {\n            time = props.value;\n        }\n        dateInputValueRef.value = format(time, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleConfirmClick() {\n        if (validation.isDateInvalid.value || validation.isTimeInvalid.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function nextYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, 1));\n    }\n    function prevYear() {\n        calendarValueRef.value = getTime(addYears(calendarValueRef.value, -1));\n    }\n    function nextMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, 1));\n    }\n    function prevMonth() {\n        calendarValueRef.value = getTime(addMonths(calendarValueRef.value, -1));\n    }\n    // For month type\n    function virtualListContainer() {\n        const { value } = yearScrollRef;\n        return value === null || value === void 0 ? void 0 : value.listElRef;\n    }\n    // For month type\n    function virtualListContent() {\n        const { value } = yearScrollRef;\n        return value === null || value === void 0 ? void 0 : value.itemsElRef;\n    }\n    // For month type\n    function handleVirtualListScroll(e) {\n        var _a;\n        (_a = scrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n    }\n    function handleTimePickerChange(value) {\n        if (value === null)\n            return;\n        panelCommon.doUpdateValue(value, false);\n    }\n    function handleSingleShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, false);\n    }\n    function handleSingleShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (typeof shortcutValue !== 'number')\n            return;\n        panelCommon.doUpdateValue(shortcutValue, false);\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    function scrollPickerColumns(value) {\n        const { value: mergedValue } = props;\n        if (monthScrollRef.value) {\n            const monthIndex = value === undefined\n                ? mergedValue === null\n                    ? getMonth(Date.now())\n                    : getMonth(mergedValue)\n                : getMonth(value);\n            monthScrollRef.value.scrollTo({ top: monthIndex * MONTH_ITEM_HEIGHT });\n        }\n        if (yearScrollRef.value) {\n            const yearIndex = (value === undefined\n                ? mergedValue === null\n                    ? getYear(Date.now())\n                    : getYear(mergedValue)\n                : getYear(value)) - START_YEAR;\n            yearScrollRef.value.scrollTo({ top: yearIndex * MONTH_ITEM_HEIGHT });\n        }\n    }\n    return Object.assign(Object.assign(Object.assign({ dateArray: dateArrayRef, monthArray: monthArrayRef, yearArray: yearArrayRef, quarterArray: quarterArrayRef, calendarYear: calendarYearRef, calendarMonth: calendarMonthRef, weekdays: weekdaysRef, mergedIsDateDisabled,\n        nextYear,\n        prevYear,\n        nextMonth,\n        prevMonth,\n        handleNowClick,\n        handleConfirmClick,\n        handleSingleShortcutMouseenter,\n        handleSingleShortcutClick }, validation), panelCommon), { \n        // datetime only\n        handleDateClick,\n        handleDateInputBlur,\n        handleDateInput,\n        handleTimePickerChange,\n        clearSelectedDateTime,\n        virtualListContainer,\n        virtualListContent,\n        handleVirtualListScroll, timePickerSize: panelCommon.timePickerSize, dateInputValue: dateInputValueRef, datePickerSlots,\n        monthScrollRef,\n        yearScrollRef,\n        scrollbarInstRef,\n        handleQuickMonthClick,\n        scrollPickerColumns, calendarValue: calendarValueRef, onUpdateCalendarValue });\n}\nexport { useCalendar, useCalendarProps };\n"]},"metadata":{},"sourceType":"module"}