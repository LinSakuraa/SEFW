{"ast":null,"code":"import { DOM } from \"../dom\";\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\n\nexport class HTMLDirective {\n  constructor() {\n    /**\n     * The index of the DOM node to which the created behavior will apply.\n     */\n    this.targetIndex = 0;\n  }\n\n}\n/**\n * A {@link HTMLDirective} that targets a named attribute or property on a node.\n * @public\n */\n\nexport class TargetedHTMLDirective extends HTMLDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     */\n\n    this.createPlaceholder = DOM.createInterpolationPlaceholder;\n  }\n\n}\n/**\n * A directive that attaches special behavior to an element via a custom attribute.\n * @public\n */\n\nexport class AttachedBehaviorHTMLDirective extends HTMLDirective {\n  /**\n   *\n   * @param name - The name of the behavior; used as a custom attribute on the element.\n   * @param behavior - The behavior to instantiate and attach to the element.\n   * @param options - Options to pass to the behavior during creation.\n   */\n  constructor(name, behavior, options) {\n    super();\n    this.name = name;\n    this.behavior = behavior;\n    this.options = options;\n  }\n  /**\n   * Creates a placeholder string based on the directive's index within the template.\n   * @param index - The index of the directive within the template.\n   * @remarks\n   * Creates a custom attribute placeholder.\n   */\n\n\n  createPlaceholder(index) {\n    return DOM.createCustomAttributePlaceholder(this.name, index);\n  }\n  /**\n   * Creates a behavior for the provided target node.\n   * @param target - The node instance to create the behavior for.\n   * @remarks\n   * Creates an instance of the `behavior` type this directive was constructed with\n   * and passes the target and options to that `behavior`'s constructor.\n   */\n\n\n  createBehavior(target) {\n    return new this.behavior(target, this.options);\n  }\n\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-element/dist/esm/templating/html-directive.js"],"names":["DOM","HTMLDirective","constructor","targetIndex","TargetedHTMLDirective","arguments","createPlaceholder","createInterpolationPlaceholder","AttachedBehaviorHTMLDirective","name","behavior","options","index","createCustomAttributePlaceholder","createBehavior","target"],"mappings":"AAAA,SAASA,GAAT,QAAoB,QAApB;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,aAAN,CAAoB;AACvBC,EAAAA,WAAW,GAAG;AACV;AACR;AACA;AACQ,SAAKC,WAAL,GAAmB,CAAnB;AACH;;AANsB;AAQ3B;AACA;AACA;AACA;;AACA,OAAO,MAAMC,qBAAN,SAAoCH,aAApC,CAAkD;AACrDC,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGG,SAAT;AACA;AACR;AACA;AACA;;AACQ,SAAKC,iBAAL,GAAyBN,GAAG,CAACO,8BAA7B;AACH;;AARoD;AAUzD;AACA;AACA;AACA;;AACA,OAAO,MAAMC,6BAAN,SAA4CP,aAA5C,CAA0D;AAC7D;AACJ;AACA;AACA;AACA;AACA;AACIC,EAAAA,WAAW,CAACO,IAAD,EAAOC,QAAP,EAAiBC,OAAjB,EAA0B;AACjC;AACA,SAAKF,IAAL,GAAYA,IAAZ;AACA,SAAKC,QAAL,GAAgBA,QAAhB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;AACIL,EAAAA,iBAAiB,CAACM,KAAD,EAAQ;AACrB,WAAOZ,GAAG,CAACa,gCAAJ,CAAqC,KAAKJ,IAA1C,EAAgDG,KAAhD,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACIE,EAAAA,cAAc,CAACC,MAAD,EAAS;AACnB,WAAO,IAAI,KAAKL,QAAT,CAAkBK,MAAlB,EAA0B,KAAKJ,OAA/B,CAAP;AACH;;AA/B4D","sourcesContent":["import { DOM } from \"../dom\";\n/**\n * Instructs the template engine to apply behavior to a node.\n * @public\n */\nexport class HTMLDirective {\n    constructor() {\n        /**\n         * The index of the DOM node to which the created behavior will apply.\n         */\n        this.targetIndex = 0;\n    }\n}\n/**\n * A {@link HTMLDirective} that targets a named attribute or property on a node.\n * @public\n */\nexport class TargetedHTMLDirective extends HTMLDirective {\n    constructor() {\n        super(...arguments);\n        /**\n         * Creates a placeholder string based on the directive's index within the template.\n         * @param index - The index of the directive within the template.\n         */\n        this.createPlaceholder = DOM.createInterpolationPlaceholder;\n    }\n}\n/**\n * A directive that attaches special behavior to an element via a custom attribute.\n * @public\n */\nexport class AttachedBehaviorHTMLDirective extends HTMLDirective {\n    /**\n     *\n     * @param name - The name of the behavior; used as a custom attribute on the element.\n     * @param behavior - The behavior to instantiate and attach to the element.\n     * @param options - Options to pass to the behavior during creation.\n     */\n    constructor(name, behavior, options) {\n        super();\n        this.name = name;\n        this.behavior = behavior;\n        this.options = options;\n    }\n    /**\n     * Creates a placeholder string based on the directive's index within the template.\n     * @param index - The index of the directive within the template.\n     * @remarks\n     * Creates a custom attribute placeholder.\n     */\n    createPlaceholder(index) {\n        return DOM.createCustomAttributePlaceholder(this.name, index);\n    }\n    /**\n     * Creates a behavior for the provided target node.\n     * @param target - The node instance to create the behavior for.\n     * @remarks\n     * Creates an instance of the `behavior` type this directive was constructed with\n     * and passes the target and options to that `behavior`'s constructor.\n     */\n    createBehavior(target) {\n        return new this.behavior(target, this.options);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}