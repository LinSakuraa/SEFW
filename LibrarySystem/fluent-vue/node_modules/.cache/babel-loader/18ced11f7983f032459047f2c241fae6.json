{"ast":null,"code":"import { ref, computed, toRef } from 'vue';\nimport { useMemo, useMergedState } from 'vooks'; // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nexport function useTransferData(props, mergedDisabledRef) {\n  const uncontrolledValueRef = ref(props.defaultValue);\n  const controlledValueRef = toRef(props, 'value');\n  const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n  const optMapRef = computed(() => {\n    const map = new Map();\n    (props.options || []).forEach(opt => map.set(opt.value, opt));\n    return map;\n  });\n  const tgtValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n  const srcOptsRef = computed(() => props.options.filter(option => !tgtValueSetRef.value.has(option.value)));\n  const tgtOptsRef = computed(() => {\n    const optMap = optMapRef.value;\n    return (mergedValueRef.value || []).map(v => optMap.get(v));\n  });\n  const srcPatternRef = ref('');\n  const tgtPatternRef = ref('');\n  const filteredSrcOptsRef = computed(() => {\n    if (!props.filterable) return srcOptsRef.value;\n    const {\n      filter\n    } = props;\n    return srcOptsRef.value.filter(opt => filter(srcPatternRef.value, opt, 'source'));\n  });\n  const filteredTgtOptsRef = computed(() => {\n    if (!props.filterable) return tgtOptsRef.value;\n    const {\n      filter\n    } = props;\n    return tgtOptsRef.value.filter(opt => filter(tgtPatternRef.value, opt, 'target'));\n  });\n  const avlSrcValueSetRef = computed(() => new Set(filteredSrcOptsRef.value.filter(opt => !opt.disabled).map(opt => opt.value)));\n  const avlTgtValueSetRef = computed(() => new Set(filteredTgtOptsRef.value.filter(opt => !opt.disabled).map(opt => opt.value)));\n  const srcCheckedValuesRef = ref([]);\n  const tgtCheckedValuesRef = ref([]);\n  const srcCheckedStatusRef = computed(() => {\n    const srcCheckedLength = srcCheckedValuesRef.value.filter(v => avlSrcValueSetRef.value.has(v)).length;\n    const avlValueCount = avlSrcValueSetRef.value.size;\n\n    if (avlValueCount === 0) {\n      return {\n        checked: false,\n        indeterminate: false,\n        disabled: true\n      };\n    } else if (srcCheckedLength === 0) {\n      return {\n        checked: false,\n        indeterminate: false\n      };\n    } else if (srcCheckedLength === avlValueCount) {\n      return {\n        checked: true,\n        indeterminate: false\n      };\n    } else {\n      return {\n        checked: false,\n        indeterminate: true\n      };\n    }\n  });\n  const tgtCheckedStatusRef = computed(() => {\n    const tgtCheckedLength = tgtCheckedValuesRef.value.filter(v => avlTgtValueSetRef.value.has(v)).length;\n    const avlValueCount = avlTgtValueSetRef.value.size;\n\n    if (avlValueCount === 0) {\n      return {\n        checked: false,\n        indeterminate: false,\n        disabled: true\n      };\n    } else if (tgtCheckedLength === 0) {\n      return {\n        checked: false,\n        indeterminate: false\n      };\n    } else if (tgtCheckedLength === avlValueCount) {\n      return {\n        checked: true,\n        indeterminate: false\n      };\n    } else {\n      return {\n        checked: false,\n        indeterminate: true\n      };\n    }\n  });\n  const fromButtonDisabledRef = useMemo(() => {\n    if (mergedDisabledRef.value) return true;\n    return tgtCheckedValuesRef.value.length === 0;\n  });\n  const toButtonDisabledRef = useMemo(() => {\n    if (mergedDisabledRef.value) return true;\n    return srcCheckedValuesRef.value.length === 0;\n  });\n  const isInputingRef = ref(false);\n\n  function handleInputFocus() {\n    isInputingRef.value = true;\n  }\n\n  function handleInputBlur() {\n    isInputingRef.value = false;\n  }\n\n  function handleSrcFilterUpdateValue(value) {\n    srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n\n  function handleTgtFilterUpdateValue(value) {\n    tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n  }\n\n  return {\n    uncontrolledValue: uncontrolledValueRef,\n    mergedValue: mergedValueRef,\n    avlSrcValueSet: avlSrcValueSetRef,\n    avlTgtValueSet: avlTgtValueSetRef,\n    tgtOpts: tgtOptsRef,\n    srcOpts: srcOptsRef,\n    filteredSrcOpts: filteredSrcOptsRef,\n    filteredTgtOpts: filteredTgtOptsRef,\n    srcCheckedValues: srcCheckedValuesRef,\n    tgtCheckedValues: tgtCheckedValuesRef,\n    srcCheckedStatus: srcCheckedStatusRef,\n    tgtCheckedStatus: tgtCheckedStatusRef,\n    srcPattern: srcPatternRef,\n    tgtPattern: tgtPatternRef,\n    isInputing: isInputingRef,\n    fromButtonDisabled: fromButtonDisabledRef,\n    toButtonDisabled: toButtonDisabledRef,\n    handleInputFocus,\n    handleInputBlur,\n    handleTgtFilterUpdateValue,\n    handleSrcFilterUpdateValue\n  };\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/transfer/src/use-transfer-data.js"],"names":["ref","computed","toRef","useMemo","useMergedState","useTransferData","props","mergedDisabledRef","uncontrolledValueRef","defaultValue","controlledValueRef","mergedValueRef","optMapRef","map","Map","options","forEach","opt","set","value","tgtValueSetRef","Set","srcOptsRef","filter","option","has","tgtOptsRef","optMap","v","get","srcPatternRef","tgtPatternRef","filteredSrcOptsRef","filterable","filteredTgtOptsRef","avlSrcValueSetRef","disabled","avlTgtValueSetRef","srcCheckedValuesRef","tgtCheckedValuesRef","srcCheckedStatusRef","srcCheckedLength","length","avlValueCount","size","checked","indeterminate","tgtCheckedStatusRef","tgtCheckedLength","fromButtonDisabledRef","toButtonDisabledRef","isInputingRef","handleInputFocus","handleInputBlur","handleSrcFilterUpdateValue","handleTgtFilterUpdateValue","uncontrolledValue","mergedValue","avlSrcValueSet","avlTgtValueSet","tgtOpts","srcOpts","filteredSrcOpts","filteredTgtOpts","srcCheckedValues","tgtCheckedValues","srcCheckedStatus","tgtCheckedStatus","srcPattern","tgtPattern","isInputing","fromButtonDisabled","toButtonDisabled"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,KAAxB,QAAqC,KAArC;AACA,SAASC,OAAT,EAAkBC,cAAlB,QAAwC,OAAxC,C,CACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,KAAzB,EAAgCC,iBAAhC,EAAmD;AACtD,QAAMC,oBAAoB,GAAGR,GAAG,CAACM,KAAK,CAACG,YAAP,CAAhC;AACA,QAAMC,kBAAkB,GAAGR,KAAK,CAACI,KAAD,EAAQ,OAAR,CAAhC;AACA,QAAMK,cAAc,GAAGP,cAAc,CAACM,kBAAD,EAAqBF,oBAArB,CAArC;AACA,QAAMI,SAAS,GAAGX,QAAQ,CAAC,MAAM;AAC7B,UAAMY,GAAG,GAAG,IAAIC,GAAJ,EAAZ;AACA,KAACR,KAAK,CAACS,OAAN,IAAiB,EAAlB,EAAsBC,OAAtB,CAA+BC,GAAD,IAASJ,GAAG,CAACK,GAAJ,CAAQD,GAAG,CAACE,KAAZ,EAAmBF,GAAnB,CAAvC;AACA,WAAOJ,GAAP;AACH,GAJyB,CAA1B;AAKA,QAAMO,cAAc,GAAGnB,QAAQ,CAAC,MAAM,IAAIoB,GAAJ,CAAQV,cAAc,CAACQ,KAAf,IAAwB,EAAhC,CAAP,CAA/B;AACA,QAAMG,UAAU,GAAGrB,QAAQ,CAAC,MAAMK,KAAK,CAACS,OAAN,CAAcQ,MAAd,CAAsBC,MAAD,IAAY,CAACJ,cAAc,CAACD,KAAf,CAAqBM,GAArB,CAAyBD,MAAM,CAACL,KAAhC,CAAlC,CAAP,CAA3B;AACA,QAAMO,UAAU,GAAGzB,QAAQ,CAAC,MAAM;AAC9B,UAAM0B,MAAM,GAAGf,SAAS,CAACO,KAAzB;AACA,WAAO,CAACR,cAAc,CAACQ,KAAf,IAAwB,EAAzB,EAA6BN,GAA7B,CAAkCe,CAAD,IAAOD,MAAM,CAACE,GAAP,CAAWD,CAAX,CAAxC,CAAP;AACH,GAH0B,CAA3B;AAIA,QAAME,aAAa,GAAG9B,GAAG,CAAC,EAAD,CAAzB;AACA,QAAM+B,aAAa,GAAG/B,GAAG,CAAC,EAAD,CAAzB;AACA,QAAMgC,kBAAkB,GAAG/B,QAAQ,CAAC,MAAM;AACtC,QAAI,CAACK,KAAK,CAAC2B,UAAX,EACI,OAAOX,UAAU,CAACH,KAAlB;AACJ,UAAM;AAAEI,MAAAA;AAAF,QAAajB,KAAnB;AACA,WAAOgB,UAAU,CAACH,KAAX,CAAiBI,MAAjB,CAAyBN,GAAD,IAASM,MAAM,CAACO,aAAa,CAACX,KAAf,EAAsBF,GAAtB,EAA2B,QAA3B,CAAvC,CAAP;AACH,GALkC,CAAnC;AAMA,QAAMiB,kBAAkB,GAAGjC,QAAQ,CAAC,MAAM;AACtC,QAAI,CAACK,KAAK,CAAC2B,UAAX,EACI,OAAOP,UAAU,CAACP,KAAlB;AACJ,UAAM;AAAEI,MAAAA;AAAF,QAAajB,KAAnB;AACA,WAAOoB,UAAU,CAACP,KAAX,CAAiBI,MAAjB,CAAyBN,GAAD,IAASM,MAAM,CAACQ,aAAa,CAACZ,KAAf,EAAsBF,GAAtB,EAA2B,QAA3B,CAAvC,CAAP;AACH,GALkC,CAAnC;AAMA,QAAMkB,iBAAiB,GAAGlC,QAAQ,CAAC,MAAM,IAAIoB,GAAJ,CAAQW,kBAAkB,CAACb,KAAnB,CAC5CI,MAD4C,CACpCN,GAAD,IAAS,CAACA,GAAG,CAACmB,QADuB,EAE5CvB,GAF4C,CAEvCI,GAAD,IAASA,GAAG,CAACE,KAF2B,CAAR,CAAP,CAAlC;AAGA,QAAMkB,iBAAiB,GAAGpC,QAAQ,CAAC,MAAM,IAAIoB,GAAJ,CAAQa,kBAAkB,CAACf,KAAnB,CAC5CI,MAD4C,CACpCN,GAAD,IAAS,CAACA,GAAG,CAACmB,QADuB,EAE5CvB,GAF4C,CAEvCI,GAAD,IAASA,GAAG,CAACE,KAF2B,CAAR,CAAP,CAAlC;AAGA,QAAMmB,mBAAmB,GAAGtC,GAAG,CAAC,EAAD,CAA/B;AACA,QAAMuC,mBAAmB,GAAGvC,GAAG,CAAC,EAAD,CAA/B;AACA,QAAMwC,mBAAmB,GAAGvC,QAAQ,CAAC,MAAM;AACvC,UAAMwC,gBAAgB,GAAGH,mBAAmB,CAACnB,KAApB,CAA0BI,MAA1B,CAAkCK,CAAD,IAAOO,iBAAiB,CAAChB,KAAlB,CAAwBM,GAAxB,CAA4BG,CAA5B,CAAxC,EAAwEc,MAAjG;AACA,UAAMC,aAAa,GAAGR,iBAAiB,CAAChB,KAAlB,CAAwByB,IAA9C;;AACA,QAAID,aAAa,KAAK,CAAtB,EAAyB;AACrB,aAAO;AACHE,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE,KAFZ;AAGHV,QAAAA,QAAQ,EAAE;AAHP,OAAP;AAKH,KAND,MAOK,IAAIK,gBAAgB,KAAK,CAAzB,EAA4B;AAC7B,aAAO;AACHI,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH,KALI,MAMA,IAAIL,gBAAgB,KAAKE,aAAzB,EAAwC;AACzC,aAAO;AACHE,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH,KALI,MAMA;AACD,aAAO;AACHD,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH;AACJ,GA5BmC,CAApC;AA6BA,QAAMC,mBAAmB,GAAG9C,QAAQ,CAAC,MAAM;AACvC,UAAM+C,gBAAgB,GAAGT,mBAAmB,CAACpB,KAApB,CAA0BI,MAA1B,CAAkCK,CAAD,IAAOS,iBAAiB,CAAClB,KAAlB,CAAwBM,GAAxB,CAA4BG,CAA5B,CAAxC,EAAwEc,MAAjG;AACA,UAAMC,aAAa,GAAGN,iBAAiB,CAAClB,KAAlB,CAAwByB,IAA9C;;AACA,QAAID,aAAa,KAAK,CAAtB,EAAyB;AACrB,aAAO;AACHE,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE,KAFZ;AAGHV,QAAAA,QAAQ,EAAE;AAHP,OAAP;AAKH,KAND,MAOK,IAAIY,gBAAgB,KAAK,CAAzB,EAA4B;AAC7B,aAAO;AACHH,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH,KALI,MAMA,IAAIE,gBAAgB,KAAKL,aAAzB,EAAwC;AACzC,aAAO;AACHE,QAAAA,OAAO,EAAE,IADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH,KALI,MAMA;AACD,aAAO;AACHD,QAAAA,OAAO,EAAE,KADN;AAEHC,QAAAA,aAAa,EAAE;AAFZ,OAAP;AAIH;AACJ,GA5BmC,CAApC;AA6BA,QAAMG,qBAAqB,GAAG9C,OAAO,CAAC,MAAM;AACxC,QAAII,iBAAiB,CAACY,KAAtB,EACI,OAAO,IAAP;AACJ,WAAOoB,mBAAmB,CAACpB,KAApB,CAA0BuB,MAA1B,KAAqC,CAA5C;AACH,GAJoC,CAArC;AAKA,QAAMQ,mBAAmB,GAAG/C,OAAO,CAAC,MAAM;AACtC,QAAII,iBAAiB,CAACY,KAAtB,EACI,OAAO,IAAP;AACJ,WAAOmB,mBAAmB,CAACnB,KAApB,CAA0BuB,MAA1B,KAAqC,CAA5C;AACH,GAJkC,CAAnC;AAKA,QAAMS,aAAa,GAAGnD,GAAG,CAAC,KAAD,CAAzB;;AACA,WAASoD,gBAAT,GAA4B;AACxBD,IAAAA,aAAa,CAAChC,KAAd,GAAsB,IAAtB;AACH;;AACD,WAASkC,eAAT,GAA2B;AACvBF,IAAAA,aAAa,CAAChC,KAAd,GAAsB,KAAtB;AACH;;AACD,WAASmC,0BAAT,CAAoCnC,KAApC,EAA2C;AACvCW,IAAAA,aAAa,CAACX,KAAd,GAAsBA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6C,EAAnE;AACH;;AACD,WAASoC,0BAAT,CAAoCpC,KAApC,EAA2C;AACvCY,IAAAA,aAAa,CAACZ,KAAd,GAAsBA,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK,KAAK,CAAjC,GAAqCA,KAArC,GAA6C,EAAnE;AACH;;AACD,SAAO;AACHqC,IAAAA,iBAAiB,EAAEhD,oBADhB;AAEHiD,IAAAA,WAAW,EAAE9C,cAFV;AAGH+C,IAAAA,cAAc,EAAEvB,iBAHb;AAIHwB,IAAAA,cAAc,EAAEtB,iBAJb;AAKHuB,IAAAA,OAAO,EAAElC,UALN;AAMHmC,IAAAA,OAAO,EAAEvC,UANN;AAOHwC,IAAAA,eAAe,EAAE9B,kBAPd;AAQH+B,IAAAA,eAAe,EAAE7B,kBARd;AASH8B,IAAAA,gBAAgB,EAAE1B,mBATf;AAUH2B,IAAAA,gBAAgB,EAAE1B,mBAVf;AAWH2B,IAAAA,gBAAgB,EAAE1B,mBAXf;AAYH2B,IAAAA,gBAAgB,EAAEpB,mBAZf;AAaHqB,IAAAA,UAAU,EAAEtC,aAbT;AAcHuC,IAAAA,UAAU,EAAEtC,aAdT;AAeHuC,IAAAA,UAAU,EAAEnB,aAfT;AAgBHoB,IAAAA,kBAAkB,EAAEtB,qBAhBjB;AAiBHuB,IAAAA,gBAAgB,EAAEtB,mBAjBf;AAkBHE,IAAAA,gBAlBG;AAmBHC,IAAAA,eAnBG;AAoBHE,IAAAA,0BApBG;AAqBHD,IAAAA;AArBG,GAAP;AAuBH","sourcesContent":["import { ref, computed, toRef } from 'vue';\nimport { useMemo, useMergedState } from 'vooks';\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function useTransferData(props, mergedDisabledRef) {\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const optMapRef = computed(() => {\n        const map = new Map();\n        (props.options || []).forEach((opt) => map.set(opt.value, opt));\n        return map;\n    });\n    const tgtValueSetRef = computed(() => new Set(mergedValueRef.value || []));\n    const srcOptsRef = computed(() => props.options.filter((option) => !tgtValueSetRef.value.has(option.value)));\n    const tgtOptsRef = computed(() => {\n        const optMap = optMapRef.value;\n        return (mergedValueRef.value || []).map((v) => optMap.get(v));\n    });\n    const srcPatternRef = ref('');\n    const tgtPatternRef = ref('');\n    const filteredSrcOptsRef = computed(() => {\n        if (!props.filterable)\n            return srcOptsRef.value;\n        const { filter } = props;\n        return srcOptsRef.value.filter((opt) => filter(srcPatternRef.value, opt, 'source'));\n    });\n    const filteredTgtOptsRef = computed(() => {\n        if (!props.filterable)\n            return tgtOptsRef.value;\n        const { filter } = props;\n        return tgtOptsRef.value.filter((opt) => filter(tgtPatternRef.value, opt, 'target'));\n    });\n    const avlSrcValueSetRef = computed(() => new Set(filteredSrcOptsRef.value\n        .filter((opt) => !opt.disabled)\n        .map((opt) => opt.value)));\n    const avlTgtValueSetRef = computed(() => new Set(filteredTgtOptsRef.value\n        .filter((opt) => !opt.disabled)\n        .map((opt) => opt.value)));\n    const srcCheckedValuesRef = ref([]);\n    const tgtCheckedValuesRef = ref([]);\n    const srcCheckedStatusRef = computed(() => {\n        const srcCheckedLength = srcCheckedValuesRef.value.filter((v) => avlSrcValueSetRef.value.has(v)).length;\n        const avlValueCount = avlSrcValueSetRef.value.size;\n        if (avlValueCount === 0) {\n            return {\n                checked: false,\n                indeterminate: false,\n                disabled: true\n            };\n        }\n        else if (srcCheckedLength === 0) {\n            return {\n                checked: false,\n                indeterminate: false\n            };\n        }\n        else if (srcCheckedLength === avlValueCount) {\n            return {\n                checked: true,\n                indeterminate: false\n            };\n        }\n        else {\n            return {\n                checked: false,\n                indeterminate: true\n            };\n        }\n    });\n    const tgtCheckedStatusRef = computed(() => {\n        const tgtCheckedLength = tgtCheckedValuesRef.value.filter((v) => avlTgtValueSetRef.value.has(v)).length;\n        const avlValueCount = avlTgtValueSetRef.value.size;\n        if (avlValueCount === 0) {\n            return {\n                checked: false,\n                indeterminate: false,\n                disabled: true\n            };\n        }\n        else if (tgtCheckedLength === 0) {\n            return {\n                checked: false,\n                indeterminate: false\n            };\n        }\n        else if (tgtCheckedLength === avlValueCount) {\n            return {\n                checked: true,\n                indeterminate: false\n            };\n        }\n        else {\n            return {\n                checked: false,\n                indeterminate: true\n            };\n        }\n    });\n    const fromButtonDisabledRef = useMemo(() => {\n        if (mergedDisabledRef.value)\n            return true;\n        return tgtCheckedValuesRef.value.length === 0;\n    });\n    const toButtonDisabledRef = useMemo(() => {\n        if (mergedDisabledRef.value)\n            return true;\n        return srcCheckedValuesRef.value.length === 0;\n    });\n    const isInputingRef = ref(false);\n    function handleInputFocus() {\n        isInputingRef.value = true;\n    }\n    function handleInputBlur() {\n        isInputingRef.value = false;\n    }\n    function handleSrcFilterUpdateValue(value) {\n        srcPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    function handleTgtFilterUpdateValue(value) {\n        tgtPatternRef.value = value !== null && value !== void 0 ? value : '';\n    }\n    return {\n        uncontrolledValue: uncontrolledValueRef,\n        mergedValue: mergedValueRef,\n        avlSrcValueSet: avlSrcValueSetRef,\n        avlTgtValueSet: avlTgtValueSetRef,\n        tgtOpts: tgtOptsRef,\n        srcOpts: srcOptsRef,\n        filteredSrcOpts: filteredSrcOptsRef,\n        filteredTgtOpts: filteredTgtOptsRef,\n        srcCheckedValues: srcCheckedValuesRef,\n        tgtCheckedValues: tgtCheckedValuesRef,\n        srcCheckedStatus: srcCheckedStatusRef,\n        tgtCheckedStatus: tgtCheckedStatusRef,\n        srcPattern: srcPatternRef,\n        tgtPattern: tgtPatternRef,\n        isInputing: isInputingRef,\n        fromButtonDisabled: fromButtonDisabledRef,\n        toButtonDisabled: toButtonDisabledRef,\n        handleInputFocus,\n        handleInputBlur,\n        handleTgtFilterUpdateValue,\n        handleSrcFilterUpdateValue\n    };\n}\n"]},"metadata":{},"sourceType":"module"}