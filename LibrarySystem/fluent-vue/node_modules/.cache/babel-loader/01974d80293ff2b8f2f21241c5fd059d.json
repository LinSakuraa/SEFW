{"ast":null,"code":"import { computed, defineComponent, h, ref, Fragment, toRef } from 'vue';\nimport { format, getYear, addMonths, startOfDay, startOfMonth, getMonth } from 'date-fns';\nimport { useMergedState } from 'vooks';\nimport { dateArray } from '../../date-picker/src/utils';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { call } from '../../_utils';\nimport { NButton, NButtonGroup } from '../../button';\nimport { useConfig, useLocale, useTheme, useThemeClass } from '../../_mixins';\nimport { calendarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst calendarProps = Object.assign(Object.assign({}, useTheme.props), {\n  isDateDisabled: Function,\n  value: Number,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  onPanelChange: Function,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Calendar',\n  props: calendarProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Calendar', '-calendar', style, calendarLight, props, mergedClsPrefixRef);\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('DatePicker');\n    const now = Date.now(); // ts => timestamp\n\n    const monthTsRef = ref(startOfMonth(now).valueOf());\n    const uncontrolledValueRef = ref(props.defaultValue || null);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n\n    function doUpdateValue(value, time) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, time);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, time);\n      }\n\n      uncontrolledValueRef.value = value;\n    }\n\n    function handlePrevClick() {\n      var _a;\n\n      const monthTs = addMonths(monthTsRef.value, -1).valueOf();\n      monthTsRef.value = monthTs;\n      (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n        year: getYear(monthTs),\n        month: getMonth(monthTs) + 1\n      });\n    }\n\n    function handleNextClick() {\n      var _a;\n\n      const monthTs = addMonths(monthTsRef.value, 1).valueOf();\n      monthTsRef.value = monthTs;\n      (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n        year: getYear(monthTs),\n        month: getMonth(monthTs) + 1\n      });\n    }\n\n    function handleTodayClick() {\n      var _a;\n\n      const {\n        value: monthTs\n      } = monthTsRef;\n      const oldYear = getYear(monthTs);\n      const oldMonth = getMonth(monthTs);\n      const newMonthTs = startOfMonth(now).valueOf();\n      const newYear = getYear(newMonthTs);\n      const newMonth = getMonth(newMonthTs);\n\n      if (oldYear !== newYear || oldMonth !== newMonth) {\n        (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n          year: newYear,\n          month: newMonthTs\n        });\n      }\n\n      monthTsRef.value = newMonthTs;\n    }\n\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          borderColor,\n          borderColorModal,\n          borderColorPopover,\n          borderRadius,\n          titleFontSize,\n          textColor,\n          titleFontWeight,\n          titleTextColor,\n          dayTextColor,\n          fontSize,\n          lineHeight,\n          dateColorCurrent,\n          dateTextColorCurrent,\n          cellColorHover,\n          cellColor,\n          cellColorModal,\n          barColor,\n          cellColorPopover,\n          cellColorHoverModal,\n          cellColorHoverPopover\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-color': borderColor,\n        '--n-border-color-modal': borderColorModal,\n        '--n-border-color-popover': borderColorPopover,\n        '--n-border-radius': borderRadius,\n        '--n-text-color': textColor,\n        '--n-title-font-weight': titleFontWeight,\n        '--n-title-font-size': titleFontSize,\n        '--n-title-text-color': titleTextColor,\n        '--n-day-text-color': dayTextColor,\n        '--n-font-size': fontSize,\n        '--n-line-height': lineHeight,\n        '--n-date-color-current': dateColorCurrent,\n        '--n-date-text-color-current': dateTextColorCurrent,\n        '--n-cell-color': cellColor,\n        '--n-cell-color-modal': cellColorModal,\n        '--n-cell-color-popover': cellColorPopover,\n        '--n-cell-color-hover': cellColorHover,\n        '--n-cell-color-hover-modal': cellColorHoverModal,\n        '--n-cell-color-hover-popover': cellColorHoverPopover,\n        '--n-bar-color': barColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('calendar', undefined, cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      locale: localeRef,\n      dateLocale: dateLocaleRef,\n      now,\n      mergedValue: mergedValueRef,\n      monthTs: monthTsRef,\n      dateItems: computed(() => {\n        return dateArray(monthTsRef.value, mergedValueRef.value, now, localeRef.value.firstDayOfWeek, true);\n      }),\n      doUpdateValue,\n      handleTodayClick,\n      handlePrevClick,\n      handleNextClick,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      isDateDisabled,\n      mergedClsPrefix,\n      monthTs,\n      cssVars,\n      mergedValue,\n      mergedTheme,\n      $slots,\n      locale: {\n        monthBeforeYear,\n        today\n      },\n      dateLocale: {\n        locale\n      },\n      handleTodayClick,\n      handlePrevClick,\n      handleNextClick,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    const normalizedValue = mergedValue && startOfDay(mergedValue).valueOf();\n    const localeMonth = format(monthTs, 'MMMM', {\n      locale\n    });\n    const year = getYear(monthTs);\n    const title = monthBeforeYear ? `${localeMonth} ${year}` : `${year} ${localeMonth}`;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-calendar`, this.themeClass],\n      style: cssVars\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-calendar-header`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-calendar-header__title`\n    }, title), h(\"div\", {\n      class: `${mergedClsPrefix}-calendar-header__extra`\n    }, h(NButtonGroup, null, {\n      default: () => h(Fragment, null, h(NButton, {\n        size: \"small\",\n        onClick: handlePrevClick,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix,\n          class: `${mergedClsPrefix}-calendar-prev-btn`\n        }, {\n          default: () => h(ChevronLeftIcon, null)\n        })\n      }), h(NButton, {\n        size: \"small\",\n        onClick: handleTodayClick,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => today\n      }), h(NButton, {\n        size: \"small\",\n        onClick: handleNextClick,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix,\n          class: `${mergedClsPrefix}-calendar-next-btn`\n        }, {\n          default: () => h(ChevronRightIcon, null)\n        })\n      }))\n    }))), h(\"div\", {\n      class: `${mergedClsPrefix}-calendar-dates`\n    }, this.dateItems.map(({\n      dateObject,\n      ts,\n      inCurrentMonth,\n      isCurrentDate\n    }, index) => {\n      var _a;\n\n      const {\n        year,\n        month,\n        date\n      } = dateObject;\n      const fullDate = format(ts, 'yyyy-MM-dd'); // 'notInCurrentMonth' and 'disabled' are both disabled styles, but 'disabled''s cursor are not-allowed\n\n      const notInCurrentMonth = !inCurrentMonth;\n      const disabled = (isDateDisabled === null || isDateDisabled === void 0 ? void 0 : isDateDisabled(ts)) === true;\n      const selected = normalizedValue === startOfDay(ts).valueOf();\n      return h(\"div\", {\n        key: isCurrentDate ? 'current' : index,\n        class: [`${mergedClsPrefix}-calendar-cell`, disabled && `${mergedClsPrefix}-calendar-cell--disabled`, notInCurrentMonth && `${mergedClsPrefix}-calendar-cell--other-month`, disabled && `${mergedClsPrefix}-calendar-cell--not-allowed`, isCurrentDate && `${mergedClsPrefix}-calendar-cell--current`, selected && `${mergedClsPrefix}-calendar-cell--selected`],\n        onClick: () => {\n          if (disabled) return;\n          this.doUpdateValue(ts, {\n            year,\n            month: month + 1,\n            date\n          });\n          this.monthTs = startOfMonth(ts).valueOf();\n        }\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-calendar-date`\n      }, disabled ? h(\"div\", {\n        class: `${mergedClsPrefix}-calendar-date__date`,\n        title: fullDate,\n        key: \"disabled\"\n      }, date) : h(\"div\", {\n        class: `${mergedClsPrefix}-calendar-date__date`,\n        title: fullDate,\n        key: \"available\"\n      }, date), index < 7 && h(\"div\", {\n        class: `${mergedClsPrefix}-calendar-date__day`,\n        title: fullDate\n      }, format(ts, 'EEE', {\n        locale\n      }))), (_a = $slots.default) === null || _a === void 0 ? void 0 : _a.call($slots, {\n        year,\n        month: month + 1,\n        date\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-calendar-cell__bar`,\n        key: month\n      }));\n    })));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/calendar/src/Calendar.js"],"names":["computed","defineComponent","h","ref","Fragment","toRef","format","getYear","addMonths","startOfDay","startOfMonth","getMonth","useMergedState","dateArray","ChevronLeftIcon","ChevronRightIcon","NBaseIcon","call","NButton","NButtonGroup","useConfig","useLocale","useTheme","useThemeClass","calendarLight","style","calendarProps","Object","assign","props","isDateDisabled","Function","value","Number","defaultValue","type","default","onPanelChange","Array","onUpdateValue","name","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","localeRef","dateLocaleRef","now","Date","monthTsRef","valueOf","uncontrolledValueRef","mergedValueRef","doUpdateValue","time","_onUpdateValue","handlePrevClick","_a","monthTs","year","month","handleNextClick","handleTodayClick","oldYear","oldMonth","newMonthTs","newYear","newMonth","cssVarsRef","common","cubicBezierEaseInOut","self","borderColor","borderColorModal","borderColorPopover","borderRadius","titleFontSize","textColor","titleFontWeight","titleTextColor","dayTextColor","fontSize","lineHeight","dateColorCurrent","dateTextColorCurrent","cellColorHover","cellColor","cellColorModal","barColor","cellColorPopover","cellColorHoverModal","cellColorHoverPopover","themeClassHandle","undefined","mergedClsPrefix","locale","dateLocale","mergedValue","dateItems","firstDayOfWeek","mergedTheme","cssVars","themeClass","onRender","render","$slots","monthBeforeYear","today","normalizedValue","localeMonth","title","class","size","onClick","theme","peers","Button","themeOverrides","peerOverrides","icon","clsPrefix","map","dateObject","ts","inCurrentMonth","isCurrentDate","index","date","fullDate","notInCurrentMonth","disabled","selected","key"],"mappings":"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","sourcesContent":["import { computed, defineComponent, h, ref, Fragment, toRef } from 'vue';\nimport { format, getYear, addMonths, startOfDay, startOfMonth, getMonth } from 'date-fns';\nimport { useMergedState } from 'vooks';\nimport { dateArray } from '../../date-picker/src/utils';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../_internal/icons';\nimport { NBaseIcon } from '../../_internal';\nimport { call } from '../../_utils';\nimport { NButton, NButtonGroup } from '../../button';\nimport { useConfig, useLocale, useTheme, useThemeClass } from '../../_mixins';\nimport { calendarLight } from '../styles';\nimport style from './styles/index.cssr';\nconst calendarProps = Object.assign(Object.assign({}, useTheme.props), { isDateDisabled: Function, value: Number, defaultValue: {\n        type: Number,\n        default: null\n    }, onPanelChange: Function, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'Calendar',\n    props: calendarProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Calendar', '-calendar', style, calendarLight, props, mergedClsPrefixRef);\n        const { localeRef, dateLocaleRef } = useLocale('DatePicker');\n        const now = Date.now();\n        // ts => timestamp\n        const monthTsRef = ref(startOfMonth(now).valueOf());\n        const uncontrolledValueRef = ref(props.defaultValue || null);\n        const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n        function doUpdateValue(value, time) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onUpdateValue) {\n                call(onUpdateValue, value, time);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, time);\n            }\n            uncontrolledValueRef.value = value;\n        }\n        function handlePrevClick() {\n            var _a;\n            const monthTs = addMonths(monthTsRef.value, -1).valueOf();\n            monthTsRef.value = monthTs;\n            (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n                year: getYear(monthTs),\n                month: getMonth(monthTs) + 1\n            });\n        }\n        function handleNextClick() {\n            var _a;\n            const monthTs = addMonths(monthTsRef.value, 1).valueOf();\n            monthTsRef.value = monthTs;\n            (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n                year: getYear(monthTs),\n                month: getMonth(monthTs) + 1\n            });\n        }\n        function handleTodayClick() {\n            var _a;\n            const { value: monthTs } = monthTsRef;\n            const oldYear = getYear(monthTs);\n            const oldMonth = getMonth(monthTs);\n            const newMonthTs = startOfMonth(now).valueOf();\n            const newYear = getYear(newMonthTs);\n            const newMonth = getMonth(newMonthTs);\n            if (oldYear !== newYear || oldMonth !== newMonth) {\n                (_a = props.onPanelChange) === null || _a === void 0 ? void 0 : _a.call(props, {\n                    year: newYear,\n                    month: newMonthTs\n                });\n            }\n            monthTsRef.value = newMonthTs;\n        }\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { borderColor, borderColorModal, borderColorPopover, borderRadius, titleFontSize, textColor, titleFontWeight, titleTextColor, dayTextColor, fontSize, lineHeight, dateColorCurrent, dateTextColorCurrent, cellColorHover, cellColor, cellColorModal, barColor, cellColorPopover, cellColorHoverModal, cellColorHoverPopover } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-color': borderColor,\n                '--n-border-color-modal': borderColorModal,\n                '--n-border-color-popover': borderColorPopover,\n                '--n-border-radius': borderRadius,\n                '--n-text-color': textColor,\n                '--n-title-font-weight': titleFontWeight,\n                '--n-title-font-size': titleFontSize,\n                '--n-title-text-color': titleTextColor,\n                '--n-day-text-color': dayTextColor,\n                '--n-font-size': fontSize,\n                '--n-line-height': lineHeight,\n                '--n-date-color-current': dateColorCurrent,\n                '--n-date-text-color-current': dateTextColorCurrent,\n                '--n-cell-color': cellColor,\n                '--n-cell-color-modal': cellColorModal,\n                '--n-cell-color-popover': cellColorPopover,\n                '--n-cell-color-hover': cellColorHover,\n                '--n-cell-color-hover-modal': cellColorHoverModal,\n                '--n-cell-color-hover-popover': cellColorHoverPopover,\n                '--n-bar-color': barColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('calendar', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            locale: localeRef,\n            dateLocale: dateLocaleRef,\n            now,\n            mergedValue: mergedValueRef,\n            monthTs: monthTsRef,\n            dateItems: computed(() => {\n                return dateArray(monthTsRef.value, mergedValueRef.value, now, localeRef.value.firstDayOfWeek, true);\n            }),\n            doUpdateValue,\n            handleTodayClick,\n            handlePrevClick,\n            handleNextClick,\n            mergedTheme: themeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { isDateDisabled, mergedClsPrefix, monthTs, cssVars, mergedValue, mergedTheme, $slots, locale: { monthBeforeYear, today }, dateLocale: { locale }, handleTodayClick, handlePrevClick, handleNextClick, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const normalizedValue = mergedValue && startOfDay(mergedValue).valueOf();\n        const localeMonth = format(monthTs, 'MMMM', { locale });\n        const year = getYear(monthTs);\n        const title = monthBeforeYear\n            ? `${localeMonth} ${year}`\n            : `${year} ${localeMonth}`;\n        return (h(\"div\", { class: [`${mergedClsPrefix}-calendar`, this.themeClass], style: cssVars },\n            h(\"div\", { class: `${mergedClsPrefix}-calendar-header` },\n                h(\"div\", { class: `${mergedClsPrefix}-calendar-header__title` }, title),\n                h(\"div\", { class: `${mergedClsPrefix}-calendar-header__extra` },\n                    h(NButtonGroup, null, {\n                        default: () => (h(Fragment, null,\n                            h(NButton, { size: \"small\", onClick: handlePrevClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, {\n                                icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-calendar-prev-btn` }, { default: () => h(ChevronLeftIcon, null) }))\n                            }),\n                            h(NButton, { size: \"small\", onClick: handleTodayClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => today }),\n                            h(NButton, { size: \"small\", onClick: handleNextClick, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, {\n                                icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-calendar-next-btn` }, { default: () => h(ChevronRightIcon, null) }))\n                            })))\n                    }))),\n            h(\"div\", { class: `${mergedClsPrefix}-calendar-dates` }, this.dateItems.map(({ dateObject, ts, inCurrentMonth, isCurrentDate }, index) => {\n                var _a;\n                const { year, month, date } = dateObject;\n                const fullDate = format(ts, 'yyyy-MM-dd');\n                // 'notInCurrentMonth' and 'disabled' are both disabled styles, but 'disabled''s cursor are not-allowed\n                const notInCurrentMonth = !inCurrentMonth;\n                const disabled = (isDateDisabled === null || isDateDisabled === void 0 ? void 0 : isDateDisabled(ts)) === true;\n                const selected = normalizedValue === startOfDay(ts).valueOf();\n                return (h(\"div\", { key: isCurrentDate ? 'current' : index, class: [\n                        `${mergedClsPrefix}-calendar-cell`,\n                        disabled && `${mergedClsPrefix}-calendar-cell--disabled`,\n                        notInCurrentMonth &&\n                            `${mergedClsPrefix}-calendar-cell--other-month`,\n                        disabled && `${mergedClsPrefix}-calendar-cell--not-allowed`,\n                        isCurrentDate &&\n                            `${mergedClsPrefix}-calendar-cell--current`,\n                        selected && `${mergedClsPrefix}-calendar-cell--selected`\n                    ], onClick: () => {\n                        if (disabled)\n                            return;\n                        this.doUpdateValue(ts, {\n                            year,\n                            month: month + 1,\n                            date\n                        });\n                        this.monthTs = startOfMonth(ts).valueOf();\n                    } },\n                    h(\"div\", { class: `${mergedClsPrefix}-calendar-date` },\n                        disabled ? (h(\"div\", { class: `${mergedClsPrefix}-calendar-date__date`, title: fullDate, key: \"disabled\" }, date)) : (h(\"div\", { class: `${mergedClsPrefix}-calendar-date__date`, title: fullDate, key: \"available\" }, date)),\n                        index < 7 && (h(\"div\", { class: `${mergedClsPrefix}-calendar-date__day`, title: fullDate }, format(ts, 'EEE', {\n                            locale\n                        })))), (_a = $slots.default) === null || _a === void 0 ? void 0 :\n                    _a.call($slots, {\n                        year,\n                        month: month + 1,\n                        date\n                    }),\n                    h(\"div\", { class: `${mergedClsPrefix}-calendar-cell__bar`, key: month })));\n            }))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}