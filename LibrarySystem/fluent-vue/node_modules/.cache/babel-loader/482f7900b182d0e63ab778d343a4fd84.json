{"ast":null,"code":"import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\nimport { MenuItemRole } from \"./menu-item\";\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#(MenuItem:class)} component using\n * the provided prefix.\n *\n * @public\n */\n\nexport const menuItemTemplate = (context, definition) => html`\n    <template\n        role=\"${x => x.role}\"\n        aria-haspopup=\"${x => x.hasSubmenu ? \"menu\" : void 0}\"\n        aria-checked=\"${x => x.role !== MenuItemRole.menuitem ? x.checked : void 0}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-expanded=\"${x => x.expanded}\"\n        @keydown=\"${(x, c) => x.handleMenuItemKeyDown(c.event)}\"\n        @click=\"${(x, c) => x.handleMenuItemClick(c.event)}\"\n        @mouseover=\"${(x, c) => x.handleMouseOver(c.event)}\"\n        @mouseout=\"${(x, c) => x.handleMouseOut(c.event)}\"\n        class=\"${x => x.disabled ? \"disabled\" : \"\"} ${x => x.expanded ? \"expanded\" : \"\"} ${x => `indent-${x.startColumnCount}`}\"\n    >\n            ${when(x => x.role === MenuItemRole.menuitemcheckbox, html`\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"checkbox\" class=\"checkbox\">\n                            <slot name=\"checkbox-indicator\">\n                                ${definition.checkboxIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n            ${when(x => x.role === MenuItemRole.menuitemradio, html`\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"radio\" class=\"radio\">\n                            <slot name=\"radio-indicator\">\n                                ${definition.radioIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n        </div>\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n        ${when(x => x.hasSubmenu, html`\n                <div\n                    part=\"expand-collapse-glyph-container\"\n                    class=\"expand-collapse-glyph-container\"\n                >\n                    <span part=\"expand-collapse\" class=\"expand-collapse\">\n                        <slot name=\"expand-collapse-indicator\">\n                            ${definition.expandCollapseGlyph || \"\"}\n                        </slot>\n                    </span>\n                </div>\n            `)}\n        ${when(x => x.expanded, html`\n                <${context.tagFor(AnchoredRegion)}\n                    :anchorElement=\"${x => x}\"\n                    vertical-positioning-mode=\"dynamic\"\n                    vertical-default-position=\"bottom\"\n                    vertical-inset=\"true\"\n                    horizontal-positioning-mode=\"dynamic\"\n                    horizontal-default-position=\"end\"\n                    class=\"submenu-region\"\n                    dir=\"${x => x.currentDirection}\"\n                    @loaded=\"${x => x.submenuLoaded()}\"\n                    ${ref(\"submenuRegion\")}\n                    part=\"submenu-region\"\n                >\n                    <slot name=\"submenu\"></slot>\n                </${context.tagFor(AnchoredRegion)}>\n            `)}\n    </template>\n`;","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/menu-item/menu-item.template.js"],"names":["html","ref","when","AnchoredRegion","endSlotTemplate","startSlotTemplate","MenuItemRole","menuItemTemplate","context","definition","x","role","hasSubmenu","menuitem","checked","disabled","expanded","c","handleMenuItemKeyDown","event","handleMenuItemClick","handleMouseOver","handleMouseOut","startColumnCount","menuitemcheckbox","checkboxIndicator","menuitemradio","radioIndicator","expandCollapseGlyph","tagFor","currentDirection","submenuLoaded"],"mappings":"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","sourcesContent":["import { html, ref, when } from \"@microsoft/fast-element\";\nimport { AnchoredRegion } from \"../anchored-region\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\nimport { MenuItemRole } from \"./menu-item\";\n/**\n * Generates a template for the {@link @microsoft/fast-foundation#(MenuItem:class)} component using\n * the provided prefix.\n *\n * @public\n */\nexport const menuItemTemplate = (context, definition) => html `\n    <template\n        role=\"${x => x.role}\"\n        aria-haspopup=\"${x => (x.hasSubmenu ? \"menu\" : void 0)}\"\n        aria-checked=\"${x => (x.role !== MenuItemRole.menuitem ? x.checked : void 0)}\"\n        aria-disabled=\"${x => x.disabled}\"\n        aria-expanded=\"${x => x.expanded}\"\n        @keydown=\"${(x, c) => x.handleMenuItemKeyDown(c.event)}\"\n        @click=\"${(x, c) => x.handleMenuItemClick(c.event)}\"\n        @mouseover=\"${(x, c) => x.handleMouseOver(c.event)}\"\n        @mouseout=\"${(x, c) => x.handleMouseOut(c.event)}\"\n        class=\"${x => (x.disabled ? \"disabled\" : \"\")} ${x => x.expanded ? \"expanded\" : \"\"} ${x => `indent-${x.startColumnCount}`}\"\n    >\n            ${when(x => x.role === MenuItemRole.menuitemcheckbox, html `\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"checkbox\" class=\"checkbox\">\n                            <slot name=\"checkbox-indicator\">\n                                ${definition.checkboxIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n            ${when(x => x.role === MenuItemRole.menuitemradio, html `\n                    <div part=\"input-container\" class=\"input-container\">\n                        <span part=\"radio\" class=\"radio\">\n                            <slot name=\"radio-indicator\">\n                                ${definition.radioIndicator || \"\"}\n                            </slot>\n                        </span>\n                    </div>\n                `)}\n        </div>\n        ${startSlotTemplate(context, definition)}\n        <span class=\"content\" part=\"content\">\n            <slot></slot>\n        </span>\n        ${endSlotTemplate(context, definition)}\n        ${when(x => x.hasSubmenu, html `\n                <div\n                    part=\"expand-collapse-glyph-container\"\n                    class=\"expand-collapse-glyph-container\"\n                >\n                    <span part=\"expand-collapse\" class=\"expand-collapse\">\n                        <slot name=\"expand-collapse-indicator\">\n                            ${definition.expandCollapseGlyph || \"\"}\n                        </slot>\n                    </span>\n                </div>\n            `)}\n        ${when(x => x.expanded, html `\n                <${context.tagFor(AnchoredRegion)}\n                    :anchorElement=\"${x => x}\"\n                    vertical-positioning-mode=\"dynamic\"\n                    vertical-default-position=\"bottom\"\n                    vertical-inset=\"true\"\n                    horizontal-positioning-mode=\"dynamic\"\n                    horizontal-default-position=\"end\"\n                    class=\"submenu-region\"\n                    dir=\"${x => x.currentDirection}\"\n                    @loaded=\"${x => x.submenuLoaded()}\"\n                    ${ref(\"submenuRegion\")}\n                    part=\"submenu-region\"\n                >\n                    <slot name=\"submenu\"></slot>\n                </${context.tagFor(AnchoredRegion)}>\n            `)}\n    </template>\n`;\n"]},"metadata":{},"sourceType":"module"}