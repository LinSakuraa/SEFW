{"ast":null,"code":"import commonVars from './_common';\nimport { commonLight } from '../../_styles/common';\nexport const self = vars => {\n  const {\n    primaryColor,\n    textColor2,\n    borderColor,\n    lineHeight,\n    fontSize,\n    borderRadiusSmall,\n    dividerColor,\n    fontWeightStrong,\n    textColor1,\n    textColor3,\n    infoColor,\n    warningColor,\n    errorColor,\n    successColor,\n    codeColor\n  } = vars;\n  return Object.assign(Object.assign({}, commonVars), {\n    aTextColor: primaryColor,\n    blockquoteTextColor: textColor2,\n    blockquotePrefixColor: borderColor,\n    blockquoteLineHeight: lineHeight,\n    blockquoteFontSize: fontSize,\n    codeBorderRadius: borderRadiusSmall,\n    liTextColor: textColor2,\n    liLineHeight: lineHeight,\n    liFontSize: fontSize,\n    hrColor: dividerColor,\n    headerFontWeight: fontWeightStrong,\n    headerTextColor: textColor1,\n    pTextColor: textColor2,\n    pTextColor1Depth: textColor1,\n    pTextColor2Depth: textColor2,\n    pTextColor3Depth: textColor3,\n    pLineHeight: lineHeight,\n    pFontSize: fontSize,\n    headerBarColor: primaryColor,\n    headerBarColorPrimary: primaryColor,\n    headerBarColorInfo: infoColor,\n    headerBarColorError: errorColor,\n    headerBarColorWarning: warningColor,\n    headerBarColorSuccess: successColor,\n    textColor: textColor2,\n    textColor1Depth: textColor1,\n    textColor2Depth: textColor2,\n    textColor3Depth: textColor3,\n    textColorPrimary: primaryColor,\n    textColorInfo: infoColor,\n    textColorSuccess: successColor,\n    textColorWarning: warningColor,\n    textColorError: errorColor,\n    codeTextColor: textColor2,\n    codeColor: codeColor,\n    codeBorder: '1px solid #0000'\n  });\n};\nconst typographyLight = {\n  name: 'Typography',\n  common: commonLight,\n  self\n};\nexport default typographyLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/typography/styles/light.js"],"names":["commonVars","commonLight","self","vars","primaryColor","textColor2","borderColor","lineHeight","fontSize","borderRadiusSmall","dividerColor","fontWeightStrong","textColor1","textColor3","infoColor","warningColor","errorColor","successColor","codeColor","Object","assign","aTextColor","blockquoteTextColor","blockquotePrefixColor","blockquoteLineHeight","blockquoteFontSize","codeBorderRadius","liTextColor","liLineHeight","liFontSize","hrColor","headerFontWeight","headerTextColor","pTextColor","pTextColor1Depth","pTextColor2Depth","pTextColor3Depth","pLineHeight","pFontSize","headerBarColor","headerBarColorPrimary","headerBarColorInfo","headerBarColorError","headerBarColorWarning","headerBarColorSuccess","textColor","textColor1Depth","textColor2Depth","textColor3Depth","textColorPrimary","textColorInfo","textColorSuccess","textColorWarning","textColorError","codeTextColor","codeBorder","typographyLight","name","common"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAC1B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,UAAhB;AAA4BC,IAAAA,WAA5B;AAAyCC,IAAAA,UAAzC;AAAqDC,IAAAA,QAArD;AAA+DC,IAAAA,iBAA/D;AAAkFC,IAAAA,YAAlF;AAAgGC,IAAAA,gBAAhG;AAAkHC,IAAAA,UAAlH;AAA8HC,IAAAA,UAA9H;AAA0IC,IAAAA,SAA1I;AAAqJC,IAAAA,YAArJ;AAAmKC,IAAAA,UAAnK;AAA+KC,IAAAA,YAA/K;AAA6LC,IAAAA;AAA7L,MAA2Mf,IAAjN;AACA,SAAOgB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBpB,UAAlB,CAAd,EAA6C;AAAEqB,IAAAA,UAAU,EAAEjB,YAAd;AAA4BkB,IAAAA,mBAAmB,EAAEjB,UAAjD;AAA6DkB,IAAAA,qBAAqB,EAAEjB,WAApF;AAAiGkB,IAAAA,oBAAoB,EAAEjB,UAAvH;AAAmIkB,IAAAA,kBAAkB,EAAEjB,QAAvJ;AAAiKkB,IAAAA,gBAAgB,EAAEjB,iBAAnL;AAAsMkB,IAAAA,WAAW,EAAEtB,UAAnN;AAA+NuB,IAAAA,YAAY,EAAErB,UAA7O;AAAyPsB,IAAAA,UAAU,EAAErB,QAArQ;AAA+QsB,IAAAA,OAAO,EAAEpB,YAAxR;AAAsSqB,IAAAA,gBAAgB,EAAEpB,gBAAxT;AAA0UqB,IAAAA,eAAe,EAAEpB,UAA3V;AAAuWqB,IAAAA,UAAU,EAAE5B,UAAnX;AAA+X6B,IAAAA,gBAAgB,EAAEtB,UAAjZ;AAA6ZuB,IAAAA,gBAAgB,EAAE9B,UAA/a;AAA2b+B,IAAAA,gBAAgB,EAAEvB,UAA7c;AAAydwB,IAAAA,WAAW,EAAE9B,UAAte;AAAkf+B,IAAAA,SAAS,EAAE9B,QAA7f;AAAugB+B,IAAAA,cAAc,EAAEnC,YAAvhB;AAAqiBoC,IAAAA,qBAAqB,EAAEpC,YAA5jB;AAA0kBqC,IAAAA,kBAAkB,EAAE3B,SAA9lB;AAAymB4B,IAAAA,mBAAmB,EAAE1B,UAA9nB;AAA0oB2B,IAAAA,qBAAqB,EAAE5B,YAAjqB;AAA+qB6B,IAAAA,qBAAqB,EAAE3B,YAAtsB;AAAotB4B,IAAAA,SAAS,EAAExC,UAA/tB;AAA2uByC,IAAAA,eAAe,EAAElC,UAA5vB;AAAwwBmC,IAAAA,eAAe,EAAE1C,UAAzxB;AAAqyB2C,IAAAA,eAAe,EAAEnC,UAAtzB;AAAk0BoC,IAAAA,gBAAgB,EAAE7C,YAAp1B;AAAk2B8C,IAAAA,aAAa,EAAEpC,SAAj3B;AAA43BqC,IAAAA,gBAAgB,EAAElC,YAA94B;AAA45BmC,IAAAA,gBAAgB,EAAErC,YAA96B;AAA47BsC,IAAAA,cAAc,EAAErC,UAA58B;AAAw9BsC,IAAAA,aAAa,EAAEjD,UAAv+B;AAAm/Ba,IAAAA,SAAS,EAAEA,SAA9/B;AAAygCqC,IAAAA,UAAU,EAAE;AAArhC,GAA7C,CAAP;AACH,CAHM;AAIP,MAAMC,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAE,YADc;AAEpBC,EAAAA,MAAM,EAAEzD,WAFY;AAGpBC,EAAAA;AAHoB,CAAxB;AAKA,eAAesD,eAAf","sourcesContent":["import commonVars from './_common';\nimport { commonLight } from '../../_styles/common';\nexport const self = (vars) => {\n    const { primaryColor, textColor2, borderColor, lineHeight, fontSize, borderRadiusSmall, dividerColor, fontWeightStrong, textColor1, textColor3, infoColor, warningColor, errorColor, successColor, codeColor } = vars;\n    return Object.assign(Object.assign({}, commonVars), { aTextColor: primaryColor, blockquoteTextColor: textColor2, blockquotePrefixColor: borderColor, blockquoteLineHeight: lineHeight, blockquoteFontSize: fontSize, codeBorderRadius: borderRadiusSmall, liTextColor: textColor2, liLineHeight: lineHeight, liFontSize: fontSize, hrColor: dividerColor, headerFontWeight: fontWeightStrong, headerTextColor: textColor1, pTextColor: textColor2, pTextColor1Depth: textColor1, pTextColor2Depth: textColor2, pTextColor3Depth: textColor3, pLineHeight: lineHeight, pFontSize: fontSize, headerBarColor: primaryColor, headerBarColorPrimary: primaryColor, headerBarColorInfo: infoColor, headerBarColorError: errorColor, headerBarColorWarning: warningColor, headerBarColorSuccess: successColor, textColor: textColor2, textColor1Depth: textColor1, textColor2Depth: textColor2, textColor3Depth: textColor3, textColorPrimary: primaryColor, textColorInfo: infoColor, textColorSuccess: successColor, textColorWarning: warningColor, textColorError: errorColor, codeTextColor: textColor2, codeColor: codeColor, codeBorder: '1px solid #0000' });\n};\nconst typographyLight = {\n    name: 'Typography',\n    common: commonLight,\n    self\n};\nexport default typographyLight;\n"]},"metadata":{},"sourceType":"module"}