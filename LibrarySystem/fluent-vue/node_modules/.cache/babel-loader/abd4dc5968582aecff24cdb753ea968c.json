{"ast":null,"code":"import { h, ref, computed, toRef, defineComponent, nextTick, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { tmOptions, createValOptMap, filterOptions, defaultFilter } from './utils';\nimport style from './styles/index.cssr';\nconst selectProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  clearable: Boolean,\n  clearFilterAfterSelect: {\n    type: Boolean,\n    default: true\n  },\n  options: {\n    type: Array,\n    default: () => []\n  },\n  defaultValue: {\n    type: [String, Number, Array],\n    default: null\n  },\n  value: [String, Number, Array],\n  placeholder: String,\n  menuProps: Object,\n  multiple: Boolean,\n  size: String,\n  filterable: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  remote: Boolean,\n  loading: Boolean,\n  filter: {\n    type: Function,\n    default: defaultFilter\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  widthMode: {\n    type: String,\n    default: 'trigger'\n  },\n  tag: Boolean,\n  onCreate: {\n    type: Function,\n    default: label => ({\n      label: label,\n      value: label\n    })\n  },\n  fallbackOption: {\n    type: [Function, Boolean],\n    default: () => value => ({\n      label: String(value),\n      value\n    })\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  maxTagCount: [Number, String],\n  consistentMenuWidth: {\n    type: Boolean,\n    default: true\n  },\n  virtualScroll: {\n    type: Boolean,\n    default: true\n  },\n  renderLabel: Function,\n  renderOption: Function,\n  renderTag: Function,\n  'onUpdate:value': [Function, Array],\n  inputProps: Object,\n  // for jsx\n  onUpdateValue: [Function, Array],\n  onBlur: [Function, Array],\n  onClear: [Function, Array],\n  onFocus: [Function, Array],\n  onScroll: [Function, Array],\n  onSearch: [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:show': [Function, Array],\n  displayDirective: {\n    type: String,\n    default: 'show'\n  },\n  resetMenuOnOptionsChange: {\n    type: Boolean,\n    default: true\n  },\n  status: String,\n\n  /** deprecated */\n  onChange: [Function, Array],\n  items: Array\n});\nexport default defineComponent({\n  name: 'Select',\n  props: selectProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.items !== undefined) {\n          warnOnce('select', '`items` is deprecated, please use `options` instead.');\n        }\n\n        if (props.onChange !== undefined) {\n          warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const focusedRef = ref(false);\n    const patternRef = ref('');\n    const treeMateRef = computed(() => createTreeMate(filteredOptionsRef.value, tmOptions));\n    const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value));\n    const uncontrolledShowRef = ref(false);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n    const triggerRef = ref(null);\n    const followerRef = ref(null);\n    const menuRef = ref(null);\n    const {\n      localeRef\n    } = useLocale('Select');\n    const localizedPlaceholderRef = computed(() => {\n      var _a;\n\n      return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n    });\n    const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n    const createdOptionsRef = ref([]);\n    const beingCreatedOptionsRef = ref([]);\n    const memoValOptMapRef = ref(new Map());\n    const wrappedFallbackOptionRef = computed(() => {\n      const {\n        fallbackOption\n      } = props;\n      if (!fallbackOption) return false;\n      return value => {\n        return Object.assign(fallbackOption(value), {\n          value\n        });\n      };\n    });\n    const localOptionsRef = computed(() => {\n      return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n    });\n    const filteredOptionsRef = computed(() => {\n      if (props.remote) {\n        return compitableOptionsRef.value;\n      } else {\n        const {\n          value: localOptions\n        } = localOptionsRef;\n        const {\n          value: pattern\n        } = patternRef;\n\n        if (!pattern.length || !props.filterable) {\n          return localOptions;\n        } else {\n          const {\n            filter\n          } = props;\n          return filterOptions(localOptions, filter, pattern);\n        }\n      }\n    });\n\n    function getMergedOptions(values) {\n      const remote = props.remote;\n      const {\n        value: memoValOptMap\n      } = memoValOptMapRef;\n      const {\n        value: valOptMap\n      } = valOptMapRef;\n      const {\n        value: wrappedFallbackOption\n      } = wrappedFallbackOptionRef;\n      const options = [];\n      values.forEach(value => {\n        if (valOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(valOptMap.get(value));\n        } else if (remote && memoValOptMap.has(value)) {\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          options.push(memoValOptMap.get(value));\n        } else if (wrappedFallbackOption) {\n          const option = wrappedFallbackOption(value);\n\n          if (option) {\n            options.push(option);\n          }\n        }\n      });\n      return options;\n    }\n\n    const selectedOptionsRef = computed(() => {\n      if (props.multiple) {\n        const {\n          value: values\n        } = mergedValueRef;\n        if (!Array.isArray(values)) return [];\n        return getMergedOptions(values);\n      }\n\n      return null;\n    });\n    const selectedOptionRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (!props.multiple && !Array.isArray(mergedValue)) {\n        if (mergedValue === null) return null;\n        return getMergedOptions([mergedValue])[0] || null;\n      }\n\n      return null;\n    });\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n\n    function doUpdateValue(value, option) {\n      const {\n        onChange,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      if (onChange) call(onChange, value, option);\n      if (onUpdateValue) call(onUpdateValue, value, option);\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, option);\n      }\n\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doClear() {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear);\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doSearch(value) {\n      const {\n        onSearch\n      } = props;\n      if (onSearch) call(onSearch, value);\n    }\n\n    function doScroll(e) {\n      const {\n        onScroll\n      } = props;\n      if (onScroll) call(onScroll, e);\n    } // remote related methods\n\n\n    function updateMemorizedOptions() {\n      var _a;\n\n      const {\n        remote,\n        multiple\n      } = props;\n\n      if (remote) {\n        const {\n          value: memoValOptMap\n        } = memoValOptMapRef;\n\n        if (multiple) {\n          (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach(option => {\n            memoValOptMap.set(option.value, option);\n          });\n        } else {\n          const option = selectedOptionRef.value;\n\n          if (option) {\n            memoValOptMap.set(option.value, option);\n          }\n        }\n      }\n    } // menu related methods\n\n\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n\n    function openMenu() {\n      if (!mergedDisabledRef.value) {\n        doUpdateShow(true);\n        uncontrolledShowRef.value = true;\n\n        if (props.filterable) {\n          focusSelectionInput();\n        }\n      }\n    }\n\n    function closeMenu() {\n      doUpdateShow(false);\n    }\n\n    function handleMenuAfterLeave() {\n      patternRef.value = '';\n      beingCreatedOptionsRef.value = [];\n    }\n\n    const activeWithoutMenuOpenRef = ref(false);\n\n    function onTriggerInputFocus() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = true;\n      }\n    }\n\n    function onTriggerInputBlur() {\n      if (props.filterable) {\n        activeWithoutMenuOpenRef.value = false;\n\n        if (!mergedShowRef.value) {\n          handleMenuAfterLeave();\n        }\n      }\n    }\n\n    function handleTriggerClick() {\n      if (mergedDisabledRef.value) return;\n\n      if (!mergedShowRef.value) {\n        openMenu();\n      } else {\n        if (!props.filterable) {\n          // already focused, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n\n    function handleTriggerBlur(e) {\n      var _a, _b;\n\n      if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n        return;\n      }\n\n      focusedRef.value = false;\n      doBlur(e); // outside select, don't need to return focus\n\n      closeMenu();\n    }\n\n    function handleTriggerFocus(e) {\n      doFocus(e);\n      focusedRef.value = true;\n    }\n\n    function handleMenuFocus(e) {\n      focusedRef.value = true;\n    }\n\n    function handleMenuBlur(e) {\n      var _a;\n\n      if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget)) return;\n      focusedRef.value = false;\n      doBlur(e); // outside select, don't need to return focus\n\n      closeMenu();\n    }\n\n    function handleMenuTabOut() {\n      var _a;\n\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      closeMenu();\n    }\n\n    function handleMenuClickOutside(e) {\n      var _a;\n\n      if (mergedShowRef.value) {\n        if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target))) {\n          // outside select, don't need to return focus\n          closeMenu();\n        }\n      }\n    }\n\n    function createClearedMultipleSelectValue(value) {\n      if (!Array.isArray(value)) return [];\n\n      if (wrappedFallbackOptionRef.value) {\n        // if option has a fallback, I can't help user to clear some unknown value\n        return Array.from(value);\n      } else {\n        // if there's no option fallback, unappeared options are treated as invalid\n        const {\n          remote\n        } = props;\n        const {\n          value: valOptMap\n        } = valOptMapRef;\n\n        if (remote) {\n          const {\n            value: memoValOptMap\n          } = memoValOptMapRef;\n          return value.filter(v => valOptMap.has(v) || memoValOptMap.has(v));\n        } else {\n          return value.filter(v => valOptMap.has(v));\n        }\n      }\n    }\n\n    function handleToggleByTmNode(tmNode) {\n      handleToggleByOption(tmNode.rawNode);\n    }\n\n    function handleToggleByOption(option) {\n      if (mergedDisabledRef.value) return;\n      const {\n        tag,\n        remote,\n        clearFilterAfterSelect\n      } = props;\n\n      if (tag && !remote) {\n        const {\n          value: beingCreatedOptions\n        } = beingCreatedOptionsRef;\n        const beingCreatedOption = beingCreatedOptions[0] || null;\n\n        if (beingCreatedOption) {\n          createdOptionsRef.value.push(beingCreatedOption);\n          beingCreatedOptionsRef.value = [];\n        }\n      }\n\n      if (remote) {\n        memoValOptMapRef.value.set(option.value, option);\n      }\n\n      if (props.multiple) {\n        const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n        const index = changedValue.findIndex(value => value === option.value);\n\n        if (~index) {\n          changedValue.splice(index, 1);\n\n          if (tag && !remote) {\n            const createdOptionIndex = getCreatedOptionIndex(option.value);\n\n            if (~createdOptionIndex) {\n              createdOptionsRef.value.splice(createdOptionIndex, 1);\n              if (clearFilterAfterSelect) patternRef.value = '';\n            }\n          }\n        } else {\n          changedValue.push(option.value);\n          if (clearFilterAfterSelect) patternRef.value = '';\n        }\n\n        doUpdateValue(changedValue, getMergedOptions(changedValue));\n      } else {\n        if (tag && !remote) {\n          const createdOptionIndex = getCreatedOptionIndex(option.value);\n\n          if (~createdOptionIndex) {\n            createdOptionsRef.value = [createdOptionsRef.value[createdOptionIndex]];\n          } else {\n            createdOptionsRef.value = [];\n          }\n        }\n\n        focusSelection();\n        closeMenu();\n        doUpdateValue(option.value, option);\n      }\n    }\n\n    function getCreatedOptionIndex(optionValue) {\n      const createdOptions = createdOptionsRef.value;\n      return createdOptions.findIndex(createdOption => createdOption.value === optionValue);\n    }\n\n    function handlePatternInput(e) {\n      if (!mergedShowRef.value) {\n        openMenu();\n      }\n\n      const {\n        value\n      } = e.target;\n      patternRef.value = value;\n      const {\n        tag,\n        remote\n      } = props;\n      doSearch(value);\n\n      if (tag && !remote) {\n        if (!value) {\n          beingCreatedOptionsRef.value = [];\n          return;\n        }\n\n        const optionBeingCreated = props.onCreate(value);\n\n        if (compitableOptionsRef.value.some(option => option.value === optionBeingCreated.value) || createdOptionsRef.value.some(option => option.value === optionBeingCreated.value)) {\n          beingCreatedOptionsRef.value = [];\n        } else {\n          beingCreatedOptionsRef.value = [optionBeingCreated];\n        }\n      }\n    }\n\n    function handleClear(e) {\n      e.stopPropagation();\n      const {\n        multiple\n      } = props;\n\n      if (!multiple && props.filterable) {\n        closeMenu();\n      }\n\n      doClear();\n\n      if (multiple) {\n        doUpdateValue([], []);\n      } else {\n        doUpdateValue(null, null);\n      }\n    }\n\n    function handleMenuMousedown(e) {\n      if (!happensIn(e, 'action')) e.preventDefault();\n    } // scroll events on menu\n\n\n    function handleMenuScroll(e) {\n      doScroll(e);\n    } // keyboard events\n    // also for menu keydown\n\n\n    function handleKeydown(e) {\n      var _a, _b, _c, _d, _e;\n\n      switch (e.code) {\n        case 'Space':\n          if (props.filterable) break;else {\n            e.preventDefault();\n          }\n        // eslint-disable-next-line no-fallthrough\n\n        case 'Enter':\n        case 'NumpadEnter':\n          if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isCompositing)) {\n            if (mergedShowRef.value) {\n              const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n\n              if (pendingTmNode) {\n                handleToggleByTmNode(pendingTmNode);\n              } else if (!props.filterable) {\n                closeMenu();\n                focusSelection();\n              }\n            } else {\n              openMenu();\n\n              if (props.tag && activeWithoutMenuOpenRef.value) {\n                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n\n                if (beingCreatedOption) {\n                  const optionValue = beingCreatedOption.value;\n                  const {\n                    value: mergedValue\n                  } = mergedValueRef;\n\n                  if (props.multiple) {\n                    if (Array.isArray(mergedValue) && mergedValue.some(value => value === optionValue)) {// do nothing\n                    } else {\n                      handleToggleByOption(beingCreatedOption);\n                    }\n                  } else {\n                    handleToggleByOption(beingCreatedOption);\n                  }\n                }\n              }\n            }\n          }\n\n          e.preventDefault();\n          break;\n\n        case 'ArrowUp':\n          e.preventDefault();\n          if (props.loading) return;\n\n          if (mergedShowRef.value) {\n            (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n          }\n\n          break;\n\n        case 'ArrowDown':\n          e.preventDefault();\n          if (props.loading) return;\n\n          if (mergedShowRef.value) {\n            (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n          } else {\n            openMenu();\n          }\n\n          break;\n\n        case 'Escape':\n          closeMenu();\n          (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n          break;\n      }\n    }\n\n    function focusSelection() {\n      var _a;\n\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n\n    function focusSelectionInput() {\n      var _a;\n\n      (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n    }\n\n    function syncPosition() {\n      var _a;\n\n      (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n    }\n\n    updateMemorizedOptions();\n    watch(toRef(props, 'options'), updateMemorizedOptions);\n    watch(filteredOptionsRef, () => {\n      if (!mergedShowRef.value) return;\n      void nextTick(syncPosition);\n    });\n    watch(mergedValueRef, () => {\n      if (!mergedShowRef.value) return;\n      void nextTick(syncPosition);\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          menuBoxShadow\n        }\n      } = themeRef.value;\n      return {\n        '--n-menu-box-shadow': menuBoxShadow\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('select', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedMethods), {\n      mergedStatus: mergedStatusRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      namespace: namespaceRef,\n      treeMate: treeMateRef,\n      isMounted: useIsMounted(),\n      triggerRef,\n      menuRef,\n      pattern: patternRef,\n      uncontrolledShow: uncontrolledShowRef,\n      mergedShow: mergedShowRef,\n      adjustedTo: useAdjustedTo(props),\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      followerRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      selectedOption: selectedOptionRef,\n      selectedOptions: selectedOptionsRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      focused: focusedRef,\n      activeWithoutMenuOpen: activeWithoutMenuOpenRef,\n      inlineThemeDisabled,\n      onTriggerInputFocus,\n      onTriggerInputBlur,\n      handleMenuFocus,\n      handleMenuBlur,\n      handleMenuTabOut,\n      handleTriggerClick,\n      handleToggle: handleToggleByTmNode,\n      handleDeleteOption: handleToggleByOption,\n      handlePatternInput,\n      handleClear,\n      handleTriggerBlur,\n      handleTriggerFocus,\n      handleKeydown,\n      syncPosition,\n      handleMenuAfterLeave,\n      handleMenuClickOutside,\n      handleMenuScroll,\n      handleMenuKeydown: handleKeydown,\n      handleMenuMousedown,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    return h(\"div\", {\n      class: `${this.mergedClsPrefix}-select`\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInternalSelection, {\n          ref: \"triggerRef\",\n          inlineThemeDisabled: this.inlineThemeDisabled,\n          status: this.mergedStatus,\n          inputProps: this.inputProps,\n          clsPrefix: this.mergedClsPrefix,\n          showArrow: this.showArrow,\n          maxTagCount: this.maxTagCount,\n          bordered: this.mergedBordered,\n          active: this.activeWithoutMenuOpen || this.mergedShow,\n          pattern: this.pattern,\n          placeholder: this.localizedPlaceholder,\n          selectedOption: this.selectedOption,\n          selectedOptions: this.selectedOptions,\n          multiple: this.multiple,\n          renderTag: this.renderTag,\n          renderLabel: this.renderLabel,\n          filterable: this.filterable,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          size: this.mergedSize,\n          theme: this.mergedTheme.peers.InternalSelection,\n          themeOverrides: this.mergedTheme.peerOverrides.InternalSelection,\n          loading: this.loading,\n          focused: this.focused,\n          onClick: this.handleTriggerClick,\n          onDeleteOption: this.handleDeleteOption,\n          onPatternInput: this.handlePatternInput,\n          onClear: this.handleClear,\n          onBlur: this.handleTriggerBlur,\n          onFocus: this.handleTriggerFocus,\n          onKeydown: this.handleKeydown,\n          onPatternBlur: this.onTriggerInputBlur,\n          onPatternFocus: this.onTriggerInputFocus\n        }, {\n          arrow: () => {\n            var _a, _b;\n\n            return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)];\n          }\n        })\n      }), h(VFollower, {\n        ref: \"followerRef\",\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        containerClass: this.namespace,\n        width: this.consistentMenuWidth ? 'target' : undefined,\n        minWidth: \"target\",\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted,\n          onAfterLeave: this.handleMenuAfterLeave\n        }, {\n          default: () => {\n            var _a, _b, _c;\n\n            if (!(this.mergedShow || this.displayDirective === 'show')) {\n              return null;\n            }\n\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, {\n              ref: \"menuRef\",\n              inlineThemeDisabled: this.inlineThemeDisabled,\n              virtualScroll: this.consistentMenuWidth && this.virtualScroll,\n              class: [`${this.mergedClsPrefix}-select-menu`, this.themeClass, (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class],\n              clsPrefix: this.mergedClsPrefix,\n              focusable: true,\n              autoPending: true,\n              theme: this.mergedTheme.peers.InternalSelectMenu,\n              themeOverrides: this.mergedTheme.peerOverrides.InternalSelectMenu,\n              treeMate: this.treeMate,\n              multiple: this.multiple,\n              size: 'medium',\n              renderOption: this.renderOption,\n              renderLabel: this.renderLabel,\n              value: this.mergedValue,\n              style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars],\n              onToggle: this.handleToggle,\n              onScroll: this.handleMenuScroll,\n              onFocus: this.handleMenuFocus,\n              onBlur: this.handleMenuBlur,\n              onKeydown: this.handleMenuKeydown,\n              onTabOut: this.handleMenuTabOut,\n              onMousedown: this.handleMenuMousedown,\n              show: this.mergedShow,\n              resetMenuOnOptionsChange: this.resetMenuOnOptionsChange\n            }), {\n              empty: () => {\n                var _a, _b;\n\n                return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              },\n              action: () => {\n                var _a, _b;\n\n                return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)];\n              }\n            }), this.displayDirective === 'show' ? [[vShow, this.mergedShow], [clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]] : [[clickoutside, this.handleMenuClickOutside, undefined, {\n              capture: true\n            }]]);\n          }\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/select/src/Select.js"],"names":["h","ref","computed","toRef","defineComponent","nextTick","watch","Transition","withDirectives","vShow","watchEffect","happensIn","createTreeMate","VBinder","VFollower","VTarget","useIsMounted","useMergedState","useCompitable","clickoutside","useTheme","useConfig","useLocale","useFormItem","useThemeClass","call","useAdjustedTo","warnOnce","NInternalSelectMenu","NInternalSelection","selectLight","tmOptions","createValOptMap","filterOptions","defaultFilter","style","selectProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","undefined","clearable","clearFilterAfterSelect","options","Array","defaultValue","String","Number","value","placeholder","menuProps","multiple","size","filterable","disabled","remote","loading","filter","Function","placement","widthMode","tag","onCreate","label","fallbackOption","show","showArrow","maxTagCount","consistentMenuWidth","virtualScroll","renderLabel","renderOption","renderTag","inputProps","onUpdateValue","onBlur","onClear","onFocus","onScroll","onSearch","onUpdateShow","displayDirective","resetMenuOnOptionsChange","status","onChange","items","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","namespaceRef","inlineThemeDisabled","themeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","focusedRef","patternRef","treeMateRef","filteredOptionsRef","valOptMapRef","localOptionsRef","uncontrolledShowRef","mergedShowRef","triggerRef","followerRef","menuRef","localeRef","localizedPlaceholderRef","_a","compitableOptionsRef","createdOptionsRef","beingCreatedOptionsRef","memoValOptMapRef","Map","wrappedFallbackOptionRef","concat","localOptions","pattern","length","getMergedOptions","values","memoValOptMap","valOptMap","wrappedFallbackOption","forEach","has","push","get","option","selectedOptionsRef","isArray","selectedOptionRef","mergedValue","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doBlur","e","nTriggerFormBlur","doClear","doFocus","nTriggerFormFocus","doSearch","doScroll","updateMemorizedOptions","set","doUpdateShow","_onUpdateShow","openMenu","focusSelectionInput","closeMenu","handleMenuAfterLeave","activeWithoutMenuOpenRef","onTriggerInputFocus","onTriggerInputBlur","handleTriggerClick","handleTriggerBlur","_b","selfRef","contains","relatedTarget","handleTriggerFocus","handleMenuFocus","handleMenuBlur","$el","handleMenuTabOut","focus","handleMenuClickOutside","target","createClearedMultipleSelectValue","from","v","handleToggleByTmNode","tmNode","handleToggleByOption","rawNode","beingCreatedOptions","beingCreatedOption","changedValue","index","findIndex","splice","createdOptionIndex","getCreatedOptionIndex","focusSelection","optionValue","createdOptions","createdOption","handlePatternInput","optionBeingCreated","some","handleClear","stopPropagation","handleMenuMousedown","preventDefault","handleMenuScroll","handleKeydown","_c","_d","_e","code","isCompositing","pendingTmNode","getPendingTmNode","prev","next","focusInput","syncPosition","exposedMethods","blur","cssVarsRef","self","menuBoxShadow","themeClassHandle","mergedStatus","mergedClsPrefix","mergedBordered","namespace","treeMate","isMounted","uncontrolledShow","mergedShow","adjustedTo","uncontrolledValue","localizedPlaceholder","selectedOption","selectedOptions","mergedSize","mergedDisabled","focused","activeWithoutMenuOpen","handleToggle","handleDeleteOption","handleMenuKeydown","mergedTheme","cssVars","themeClass","onRender","render","class","clsPrefix","active","theme","peers","InternalSelection","themeOverrides","peerOverrides","onClick","onDeleteOption","onPatternInput","onKeydown","onPatternBlur","onPatternFocus","arrow","$slots","teleportDisabled","tdkey","containerClass","width","minWidth","appear","onAfterLeave","focusable","autoPending","InternalSelectMenu","onToggle","onTabOut","onMousedown","empty","action","capture"],"mappings":"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","sourcesContent":["import { h, ref, computed, toRef, defineComponent, nextTick, watch, Transition, withDirectives, vShow, watchEffect } from 'vue';\nimport { happensIn } from 'seemly';\nimport { createTreeMate } from 'treemate';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { useIsMounted, useMergedState, useCompitable } from 'vooks';\nimport { clickoutside } from 'vdirs';\nimport { useTheme, useConfig, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { NInternalSelectMenu, NInternalSelection } from '../../_internal';\nimport { selectLight } from '../styles';\nimport { tmOptions, createValOptMap, filterOptions, defaultFilter } from './utils';\nimport style from './styles/index.cssr';\nconst selectProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, clearable: Boolean, clearFilterAfterSelect: {\n        type: Boolean,\n        default: true\n    }, options: {\n        type: Array,\n        default: () => []\n    }, defaultValue: {\n        type: [String, Number, Array],\n        default: null\n    }, value: [String, Number, Array], placeholder: String, menuProps: Object, multiple: Boolean, size: String, filterable: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, remote: Boolean, loading: Boolean, filter: {\n        type: Function,\n        default: defaultFilter\n    }, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, widthMode: {\n        type: String,\n        default: 'trigger'\n    }, tag: Boolean, onCreate: {\n        type: Function,\n        default: (label) => ({\n            label: label,\n            value: label\n        })\n    }, fallbackOption: {\n        type: [Function, Boolean],\n        default: () => (value) => ({\n            label: String(value),\n            value\n        })\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, showArrow: {\n        type: Boolean,\n        default: true\n    }, maxTagCount: [Number, String], consistentMenuWidth: {\n        type: Boolean,\n        default: true\n    }, virtualScroll: {\n        type: Boolean,\n        default: true\n    }, renderLabel: Function, renderOption: Function, renderTag: Function, 'onUpdate:value': [Function, Array], inputProps: Object, \n    // for jsx\n    onUpdateValue: [Function, Array], onBlur: [Function, Array], onClear: [Function, Array], onFocus: [Function, Array], onScroll: [Function, Array], onSearch: [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:show': [Function, Array], displayDirective: {\n        type: String,\n        default: 'show'\n    }, resetMenuOnOptionsChange: {\n        type: Boolean,\n        default: true\n    }, status: String, \n    /** deprecated */\n    onChange: [Function, Array], items: Array });\nexport default defineComponent({\n    name: 'Select',\n    props: selectProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.items !== undefined) {\n                    warnOnce('select', '`items` is deprecated, please use `options` instead.');\n                }\n                if (props.onChange !== undefined) {\n                    warnOnce('select', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Select', '-select', style, selectLight, props, mergedClsPrefixRef);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const focusedRef = ref(false);\n        const patternRef = ref('');\n        const treeMateRef = computed(() => createTreeMate(filteredOptionsRef.value, tmOptions));\n        const valOptMapRef = computed(() => createValOptMap(localOptionsRef.value));\n        const uncontrolledShowRef = ref(false);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        const triggerRef = ref(null);\n        const followerRef = ref(null);\n        const menuRef = ref(null);\n        const { localeRef } = useLocale('Select');\n        const localizedPlaceholderRef = computed(() => {\n            var _a;\n            return (_a = props.placeholder) !== null && _a !== void 0 ? _a : localeRef.value.placeholder;\n        });\n        const compitableOptionsRef = useCompitable(props, ['items', 'options']);\n        const createdOptionsRef = ref([]);\n        const beingCreatedOptionsRef = ref([]);\n        const memoValOptMapRef = ref(new Map());\n        const wrappedFallbackOptionRef = computed(() => {\n            const { fallbackOption } = props;\n            if (!fallbackOption)\n                return false;\n            return (value) => {\n                return Object.assign(fallbackOption(value), {\n                    value\n                });\n            };\n        });\n        const localOptionsRef = computed(() => {\n            return beingCreatedOptionsRef.value.concat(createdOptionsRef.value).concat(compitableOptionsRef.value);\n        });\n        const filteredOptionsRef = computed(() => {\n            if (props.remote) {\n                return compitableOptionsRef.value;\n            }\n            else {\n                const { value: localOptions } = localOptionsRef;\n                const { value: pattern } = patternRef;\n                if (!pattern.length || !props.filterable) {\n                    return localOptions;\n                }\n                else {\n                    const { filter } = props;\n                    return filterOptions(localOptions, filter, pattern);\n                }\n            }\n        });\n        function getMergedOptions(values) {\n            const remote = props.remote;\n            const { value: memoValOptMap } = memoValOptMapRef;\n            const { value: valOptMap } = valOptMapRef;\n            const { value: wrappedFallbackOption } = wrappedFallbackOptionRef;\n            const options = [];\n            values.forEach((value) => {\n                if (valOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(valOptMap.get(value));\n                }\n                else if (remote && memoValOptMap.has(value)) {\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    options.push(memoValOptMap.get(value));\n                }\n                else if (wrappedFallbackOption) {\n                    const option = wrappedFallbackOption(value);\n                    if (option) {\n                        options.push(option);\n                    }\n                }\n            });\n            return options;\n        }\n        const selectedOptionsRef = computed(() => {\n            if (props.multiple) {\n                const { value: values } = mergedValueRef;\n                if (!Array.isArray(values))\n                    return [];\n                return getMergedOptions(values);\n            }\n            return null;\n        });\n        const selectedOptionRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!props.multiple && !Array.isArray(mergedValue)) {\n                if (mergedValue === null)\n                    return null;\n                return getMergedOptions([mergedValue])[0] || null;\n            }\n            return null;\n        });\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        function doUpdateValue(value, option) {\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            if (onChange)\n                call(onChange, value, option);\n            if (onUpdateValue)\n                call(onUpdateValue, value, option);\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, option);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doClear() {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear);\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doSearch(value) {\n            const { onSearch } = props;\n            if (onSearch)\n                call(onSearch, value);\n        }\n        function doScroll(e) {\n            const { onScroll } = props;\n            if (onScroll)\n                call(onScroll, e);\n        }\n        // remote related methods\n        function updateMemorizedOptions() {\n            var _a;\n            const { remote, multiple } = props;\n            if (remote) {\n                const { value: memoValOptMap } = memoValOptMapRef;\n                if (multiple) {\n                    (_a = selectedOptionsRef.value) === null || _a === void 0 ? void 0 : _a.forEach((option) => {\n                        memoValOptMap.set(option.value, option);\n                    });\n                }\n                else {\n                    const option = selectedOptionRef.value;\n                    if (option) {\n                        memoValOptMap.set(option.value, option);\n                    }\n                }\n            }\n        }\n        // menu related methods\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        function openMenu() {\n            if (!mergedDisabledRef.value) {\n                doUpdateShow(true);\n                uncontrolledShowRef.value = true;\n                if (props.filterable) {\n                    focusSelectionInput();\n                }\n            }\n        }\n        function closeMenu() {\n            doUpdateShow(false);\n        }\n        function handleMenuAfterLeave() {\n            patternRef.value = '';\n            beingCreatedOptionsRef.value = [];\n        }\n        const activeWithoutMenuOpenRef = ref(false);\n        function onTriggerInputFocus() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = true;\n            }\n        }\n        function onTriggerInputBlur() {\n            if (props.filterable) {\n                activeWithoutMenuOpenRef.value = false;\n                if (!mergedShowRef.value) {\n                    handleMenuAfterLeave();\n                }\n            }\n        }\n        function handleTriggerClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            else {\n                if (!props.filterable) {\n                    // already focused, don't need to return focus\n                    closeMenu();\n                }\n            }\n        }\n        function handleTriggerBlur(e) {\n            var _a, _b;\n            if ((_b = (_a = menuRef.value) === null || _a === void 0 ? void 0 : _a.selfRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) {\n                return;\n            }\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleTriggerFocus(e) {\n            doFocus(e);\n            focusedRef.value = true;\n        }\n        function handleMenuFocus(e) {\n            focusedRef.value = true;\n        }\n        function handleMenuBlur(e) {\n            var _a;\n            if ((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.relatedTarget))\n                return;\n            focusedRef.value = false;\n            doBlur(e);\n            // outside select, don't need to return focus\n            closeMenu();\n        }\n        function handleMenuTabOut() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            closeMenu();\n        }\n        function handleMenuClickOutside(e) {\n            var _a;\n            if (mergedShowRef.value) {\n                if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.$el.contains(e.target))) {\n                    // outside select, don't need to return focus\n                    closeMenu();\n                }\n            }\n        }\n        function createClearedMultipleSelectValue(value) {\n            if (!Array.isArray(value))\n                return [];\n            if (wrappedFallbackOptionRef.value) {\n                // if option has a fallback, I can't help user to clear some unknown value\n                return Array.from(value);\n            }\n            else {\n                // if there's no option fallback, unappeared options are treated as invalid\n                const { remote } = props;\n                const { value: valOptMap } = valOptMapRef;\n                if (remote) {\n                    const { value: memoValOptMap } = memoValOptMapRef;\n                    return value.filter((v) => valOptMap.has(v) || memoValOptMap.has(v));\n                }\n                else {\n                    return value.filter((v) => valOptMap.has(v));\n                }\n            }\n        }\n        function handleToggleByTmNode(tmNode) {\n            handleToggleByOption(tmNode.rawNode);\n        }\n        function handleToggleByOption(option) {\n            if (mergedDisabledRef.value)\n                return;\n            const { tag, remote, clearFilterAfterSelect } = props;\n            if (tag && !remote) {\n                const { value: beingCreatedOptions } = beingCreatedOptionsRef;\n                const beingCreatedOption = beingCreatedOptions[0] || null;\n                if (beingCreatedOption) {\n                    createdOptionsRef.value.push(beingCreatedOption);\n                    beingCreatedOptionsRef.value = [];\n                }\n            }\n            if (remote) {\n                memoValOptMapRef.value.set(option.value, option);\n            }\n            if (props.multiple) {\n                const changedValue = createClearedMultipleSelectValue(mergedValueRef.value);\n                const index = changedValue.findIndex((value) => value === option.value);\n                if (~index) {\n                    changedValue.splice(index, 1);\n                    if (tag && !remote) {\n                        const createdOptionIndex = getCreatedOptionIndex(option.value);\n                        if (~createdOptionIndex) {\n                            createdOptionsRef.value.splice(createdOptionIndex, 1);\n                            if (clearFilterAfterSelect)\n                                patternRef.value = '';\n                        }\n                    }\n                }\n                else {\n                    changedValue.push(option.value);\n                    if (clearFilterAfterSelect)\n                        patternRef.value = '';\n                }\n                doUpdateValue(changedValue, getMergedOptions(changedValue));\n            }\n            else {\n                if (tag && !remote) {\n                    const createdOptionIndex = getCreatedOptionIndex(option.value);\n                    if (~createdOptionIndex) {\n                        createdOptionsRef.value = [\n                            createdOptionsRef.value[createdOptionIndex]\n                        ];\n                    }\n                    else {\n                        createdOptionsRef.value = [];\n                    }\n                }\n                focusSelection();\n                closeMenu();\n                doUpdateValue(option.value, option);\n            }\n        }\n        function getCreatedOptionIndex(optionValue) {\n            const createdOptions = createdOptionsRef.value;\n            return createdOptions.findIndex((createdOption) => createdOption.value === optionValue);\n        }\n        function handlePatternInput(e) {\n            if (!mergedShowRef.value) {\n                openMenu();\n            }\n            const { value } = e.target;\n            patternRef.value = value;\n            const { tag, remote } = props;\n            doSearch(value);\n            if (tag && !remote) {\n                if (!value) {\n                    beingCreatedOptionsRef.value = [];\n                    return;\n                }\n                const optionBeingCreated = props.onCreate(value);\n                if (compitableOptionsRef.value.some((option) => option.value === optionBeingCreated.value) ||\n                    createdOptionsRef.value.some((option) => option.value === optionBeingCreated.value)) {\n                    beingCreatedOptionsRef.value = [];\n                }\n                else {\n                    beingCreatedOptionsRef.value = [optionBeingCreated];\n                }\n            }\n        }\n        function handleClear(e) {\n            e.stopPropagation();\n            const { multiple } = props;\n            if (!multiple && props.filterable) {\n                closeMenu();\n            }\n            doClear();\n            if (multiple) {\n                doUpdateValue([], []);\n            }\n            else {\n                doUpdateValue(null, null);\n            }\n        }\n        function handleMenuMousedown(e) {\n            if (!happensIn(e, 'action'))\n                e.preventDefault();\n        }\n        // scroll events on menu\n        function handleMenuScroll(e) {\n            doScroll(e);\n        }\n        // keyboard events\n        // also for menu keydown\n        function handleKeydown(e) {\n            var _a, _b, _c, _d, _e;\n            switch (e.code) {\n                case 'Space':\n                    if (props.filterable)\n                        break;\n                    else {\n                        e.preventDefault();\n                    }\n                // eslint-disable-next-line no-fallthrough\n                case 'Enter':\n                case 'NumpadEnter':\n                    if (!((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.isCompositing)) {\n                        if (mergedShowRef.value) {\n                            const pendingTmNode = (_b = menuRef.value) === null || _b === void 0 ? void 0 : _b.getPendingTmNode();\n                            if (pendingTmNode) {\n                                handleToggleByTmNode(pendingTmNode);\n                            }\n                            else if (!props.filterable) {\n                                closeMenu();\n                                focusSelection();\n                            }\n                        }\n                        else {\n                            openMenu();\n                            if (props.tag && activeWithoutMenuOpenRef.value) {\n                                const beingCreatedOption = beingCreatedOptionsRef.value[0];\n                                if (beingCreatedOption) {\n                                    const optionValue = beingCreatedOption.value;\n                                    const { value: mergedValue } = mergedValueRef;\n                                    if (props.multiple) {\n                                        if (Array.isArray(mergedValue) &&\n                                            mergedValue.some((value) => value === optionValue)) {\n                                            // do nothing\n                                        }\n                                        else {\n                                            handleToggleByOption(beingCreatedOption);\n                                        }\n                                    }\n                                    else {\n                                        handleToggleByOption(beingCreatedOption);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    e.preventDefault();\n                    break;\n                case 'ArrowUp':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_c = menuRef.value) === null || _c === void 0 ? void 0 : _c.prev();\n                    }\n                    break;\n                case 'ArrowDown':\n                    e.preventDefault();\n                    if (props.loading)\n                        return;\n                    if (mergedShowRef.value) {\n                        (_d = menuRef.value) === null || _d === void 0 ? void 0 : _d.next();\n                    }\n                    else {\n                        openMenu();\n                    }\n                    break;\n                case 'Escape':\n                    closeMenu();\n                    (_e = triggerRef.value) === null || _e === void 0 ? void 0 : _e.focus();\n                    break;\n            }\n        }\n        function focusSelection() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        function focusSelectionInput() {\n            var _a;\n            (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focusInput();\n        }\n        function syncPosition() {\n            var _a;\n            (_a = followerRef.value) === null || _a === void 0 ? void 0 : _a.syncPosition();\n        }\n        updateMemorizedOptions();\n        watch(toRef(props, 'options'), updateMemorizedOptions);\n        watch(filteredOptionsRef, () => {\n            if (!mergedShowRef.value)\n                return;\n            void nextTick(syncPosition);\n        });\n        watch(mergedValueRef, () => {\n            if (!mergedShowRef.value)\n                return;\n            void nextTick(syncPosition);\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { menuBoxShadow } } = themeRef.value;\n            return {\n                '--n-menu-box-shadow': menuBoxShadow\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('select', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedMethods), { mergedStatus: mergedStatusRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, namespace: namespaceRef, treeMate: treeMateRef, isMounted: useIsMounted(), triggerRef,\n            menuRef, pattern: patternRef, uncontrolledShow: uncontrolledShowRef, mergedShow: mergedShowRef, adjustedTo: useAdjustedTo(props), uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, followerRef, localizedPlaceholder: localizedPlaceholderRef, selectedOption: selectedOptionRef, selectedOptions: selectedOptionsRef, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, focused: focusedRef, activeWithoutMenuOpen: activeWithoutMenuOpenRef, inlineThemeDisabled,\n            onTriggerInputFocus,\n            onTriggerInputBlur,\n            handleMenuFocus,\n            handleMenuBlur,\n            handleMenuTabOut,\n            handleTriggerClick, handleToggle: handleToggleByTmNode, handleDeleteOption: handleToggleByOption, handlePatternInput,\n            handleClear,\n            handleTriggerBlur,\n            handleTriggerFocus,\n            handleKeydown,\n            syncPosition,\n            handleMenuAfterLeave,\n            handleMenuClickOutside,\n            handleMenuScroll, handleMenuKeydown: handleKeydown, handleMenuMousedown, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-select` },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInternalSelection, { ref: \"triggerRef\", inlineThemeDisabled: this.inlineThemeDisabled, status: this.mergedStatus, inputProps: this.inputProps, clsPrefix: this.mergedClsPrefix, showArrow: this.showArrow, maxTagCount: this.maxTagCount, bordered: this.mergedBordered, active: this.activeWithoutMenuOpen || this.mergedShow, pattern: this.pattern, placeholder: this.localizedPlaceholder, selectedOption: this.selectedOption, selectedOptions: this.selectedOptions, multiple: this.multiple, renderTag: this.renderTag, renderLabel: this.renderLabel, filterable: this.filterable, clearable: this.clearable, disabled: this.mergedDisabled, size: this.mergedSize, theme: this.mergedTheme.peers.InternalSelection, themeOverrides: this.mergedTheme.peerOverrides.InternalSelection, loading: this.loading, focused: this.focused, onClick: this.handleTriggerClick, onDeleteOption: this.handleDeleteOption, onPatternInput: this.handlePatternInput, onClear: this.handleClear, onBlur: this.handleTriggerBlur, onFocus: this.handleTriggerFocus, onKeydown: this.handleKeydown, onPatternBlur: this.onTriggerInputBlur, onPatternFocus: this.onTriggerInputFocus }, {\n                            arrow: () => { var _a, _b; return [(_b = (_a = this.$slots).arrow) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                        }))\n                    }),\n                    h(VFollower, { ref: \"followerRef\", show: this.mergedShow, to: this.adjustedTo, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, containerClass: this.namespace, width: this.consistentMenuWidth ? 'target' : undefined, minWidth: \"target\", placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted, onAfterLeave: this.handleMenuAfterLeave }, {\n                            default: () => {\n                                var _a, _b, _c;\n                                if (!(this.mergedShow ||\n                                    this.displayDirective === 'show')) {\n                                    return null;\n                                }\n                                (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                return withDirectives(h(NInternalSelectMenu, Object.assign({}, this.menuProps, { ref: \"menuRef\", inlineThemeDisabled: this.inlineThemeDisabled, virtualScroll: this.consistentMenuWidth && this.virtualScroll, class: [\n                                        `${this.mergedClsPrefix}-select-menu`,\n                                        this.themeClass,\n                                        (_b = this.menuProps) === null || _b === void 0 ? void 0 : _b.class\n                                    ], clsPrefix: this.mergedClsPrefix, focusable: true, autoPending: true, theme: this.mergedTheme.peers.InternalSelectMenu, themeOverrides: this.mergedTheme.peerOverrides\n                                        .InternalSelectMenu, treeMate: this.treeMate, multiple: this.multiple, size: 'medium', renderOption: this.renderOption, renderLabel: this.renderLabel, value: this.mergedValue, style: [(_c = this.menuProps) === null || _c === void 0 ? void 0 : _c.style, this.cssVars], onToggle: this.handleToggle, onScroll: this.handleMenuScroll, onFocus: this.handleMenuFocus, onBlur: this.handleMenuBlur, onKeydown: this.handleMenuKeydown, onTabOut: this.handleMenuTabOut, onMousedown: this.handleMenuMousedown, show: this.mergedShow, resetMenuOnOptionsChange: this.resetMenuOnOptionsChange }), {\n                                    empty: () => { var _a, _b; return [(_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)]; },\n                                    action: () => { var _a, _b; return [(_b = (_a = this.$slots).action) === null || _b === void 0 ? void 0 : _b.call(_a)]; }\n                                }), this.displayDirective === 'show'\n                                    ? [\n                                        [vShow, this.mergedShow],\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]\n                                    : [\n                                        [\n                                            clickoutside,\n                                            this.handleMenuClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}