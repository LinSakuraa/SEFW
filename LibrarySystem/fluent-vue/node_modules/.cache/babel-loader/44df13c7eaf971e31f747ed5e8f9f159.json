{"ast":null,"code":"import { h, defineComponent, Transition, withDirectives, ref } from 'vue';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport MonthPanel from './month';\nexport default defineComponent({\n  props: {\n    mergedClsPrefix: {\n      type: String,\n      required: true\n    },\n    value: Number,\n    monthBeforeYear: {\n      type: Boolean,\n      required: true\n    },\n    calendarMonth: {\n      type: String,\n      required: true\n    },\n    calendarYear: {\n      type: String,\n      required: true\n    },\n    onUpdateValue: {\n      type: Function,\n      required: true\n    }\n  },\n\n  setup() {\n    const triggerRef = ref(null);\n    const monthPanelRef = ref(null);\n    const showRef = ref(false);\n\n    function handleClickOutside(e) {\n      var _a;\n\n      if (showRef.value && !((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target))) {\n        showRef.value = false;\n      }\n    }\n\n    function handleHeaderClick() {\n      showRef.value = !showRef.value;\n    }\n\n    return {\n      show: showRef,\n      triggerRef,\n      monthPanelRef,\n      handleHeaderClick,\n      handleClickOutside\n    };\n  },\n\n  render() {\n    const {\n      handleClickOutside,\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__month-year`,\n      ref: \"triggerRef\"\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(\"div\", {\n          class: [`${mergedClsPrefix}-date-panel-month__text`, this.show && `${mergedClsPrefix}-date-panel-month__text--active`],\n          onClick: this.handleHeaderClick\n        }, this.monthBeforeYear ? [this.calendarMonth, ' ', this.calendarYear] : [this.calendarYear, ' ', this.calendarMonth])\n      }), h(VFollower, {\n        show: this.show,\n        teleportDisabled: true\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: true\n        }, {\n          default: () => this.show ? withDirectives(h(MonthPanel, {\n            ref: \"monthPanelRef\",\n            onUpdateValue: this.onUpdateValue,\n            actions: [],\n            // month and year click show month type\n            type: \"month\",\n            key: \"month\",\n            useAsQuickJump: true,\n            value: this.value\n          }), [[clickoutside, handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/panel/panelHeader.js"],"names":["h","defineComponent","Transition","withDirectives","ref","VBinder","VTarget","VFollower","clickoutside","MonthPanel","props","mergedClsPrefix","type","String","required","value","Number","monthBeforeYear","Boolean","calendarMonth","calendarYear","onUpdateValue","Function","setup","triggerRef","monthPanelRef","showRef","handleClickOutside","e","_a","contains","target","handleHeaderClick","show","render","class","default","onClick","teleportDisabled","name","appear","actions","key","useAsQuickJump","undefined","capture"],"mappings":"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","sourcesContent":["import { h, defineComponent, Transition, withDirectives, ref } from 'vue';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport MonthPanel from './month';\nexport default defineComponent({\n    props: {\n        mergedClsPrefix: {\n            type: String,\n            required: true\n        },\n        value: Number,\n        monthBeforeYear: {\n            type: Boolean,\n            required: true\n        },\n        calendarMonth: {\n            type: String,\n            required: true\n        },\n        calendarYear: {\n            type: String,\n            required: true\n        },\n        onUpdateValue: {\n            type: Function,\n            required: true\n        }\n    },\n    setup() {\n        const triggerRef = ref(null);\n        const monthPanelRef = ref(null);\n        const showRef = ref(false);\n        function handleClickOutside(e) {\n            var _a;\n            if (showRef.value && !((_a = triggerRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target))) {\n                showRef.value = false;\n            }\n        }\n        function handleHeaderClick() {\n            showRef.value = !showRef.value;\n        }\n        return {\n            show: showRef,\n            triggerRef,\n            monthPanelRef,\n            handleHeaderClick,\n            handleClickOutside\n        };\n    },\n    render() {\n        const { handleClickOutside, mergedClsPrefix } = this;\n        return (h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__month-year`, ref: \"triggerRef\" },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(\"div\", { class: [\n                                `${mergedClsPrefix}-date-panel-month__text`,\n                                this.show &&\n                                    `${mergedClsPrefix}-date-panel-month__text--active`\n                            ], onClick: this.handleHeaderClick }, this.monthBeforeYear\n                            ? [this.calendarMonth, ' ', this.calendarYear]\n                            : [this.calendarYear, ' ', this.calendarMonth]))\n                    }),\n                    h(VFollower, { show: this.show, teleportDisabled: true }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: true }, {\n                            default: () => this.show\n                                ? withDirectives(h(MonthPanel, { ref: \"monthPanelRef\", onUpdateValue: this.onUpdateValue, actions: [], \n                                    // month and year click show month type\n                                    type: \"month\", key: \"month\", useAsQuickJump: true, value: this.value }), [\n                                    [\n                                        clickoutside,\n                                        handleClickOutside,\n                                        undefined,\n                                        { capture: true }\n                                    ]\n                                ])\n                                : null\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}