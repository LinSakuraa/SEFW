{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { keyArrowDown, keyArrowLeft, keyArrowRight, keyArrowUp, keyEnd, keyHome, wrapInBounds } from \"@microsoft/fast-web-utilities\";\nimport { StartEnd } from \"../patterns/start-end\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * The orientation of the {@link @microsoft/fast-foundation#(Tabs:class)} component\n * @public\n */\n\nexport var TabsOrientation;\n\n(function (TabsOrientation) {\n  TabsOrientation[\"vertical\"] = \"vertical\";\n  TabsOrientation[\"horizontal\"] = \"horizontal\";\n})(TabsOrientation || (TabsOrientation = {}));\n/**\n * A Tabs Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#tablist | ARIA tablist }.\n *\n * @public\n */\n\n\nexport class Tabs extends FoundationElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * The orientation\n     * @public\n     * @remarks\n     * HTML Attribute: orientation\n     */\n\n    this.orientation = TabsOrientation.horizontal;\n    /**\n     * Whether or not to show the active indicator\n     * @public\n     * @remarks\n     * HTML Attribute: activeindicator\n     */\n\n    this.activeindicator = true;\n    /**\n     * @internal\n     */\n\n    this.showActiveIndicator = true;\n    this.prevActiveTabIndex = 0;\n    this.activeTabIndex = 0;\n    this.ticking = false;\n\n    this.change = () => {\n      this.$emit(\"change\", this.activetab);\n    };\n\n    this.isDisabledElement = el => {\n      return el.getAttribute(\"aria-disabled\") === \"true\";\n    };\n\n    this.isFocusableElement = el => {\n      return !this.isDisabledElement(el);\n    };\n\n    this.setTabs = () => {\n      const gridHorizontalProperty = \"gridColumn\";\n      const gridVerticalProperty = \"gridRow\";\n      const gridProperty = this.isHorizontal() ? gridHorizontalProperty : gridVerticalProperty;\n      this.tabIds = this.getTabIds();\n      this.tabpanelIds = this.getTabPanelIds();\n      this.activeTabIndex = this.getActiveIndex();\n      this.showActiveIndicator = false;\n      this.tabs.forEach((tab, index) => {\n        if (tab.slot === \"tab\") {\n          const isActiveTab = this.activeTabIndex === index && this.isFocusableElement(tab);\n\n          if (this.activeindicator && this.isFocusableElement(tab)) {\n            this.showActiveIndicator = true;\n          }\n\n          const tabId = this.tabIds[index];\n          const tabpanelId = this.tabpanelIds[index];\n          tab.setAttribute(\"id\", typeof tabId !== \"string\" ? `tab-${index + 1}` : tabId);\n          tab.setAttribute(\"aria-selected\", isActiveTab ? \"true\" : \"false\");\n          tab.setAttribute(\"aria-controls\", typeof tabpanelId !== \"string\" ? `panel-${index + 1}` : tabpanelId);\n          tab.addEventListener(\"click\", this.handleTabClick);\n          tab.addEventListener(\"keydown\", this.handleTabKeyDown);\n          tab.setAttribute(\"tabindex\", isActiveTab ? \"0\" : \"-1\");\n\n          if (isActiveTab) {\n            this.activetab = tab;\n          }\n        } // If the original property isn't emptied out,\n        // the next set will morph into a grid-area style setting that is not what we want\n\n\n        tab.style[gridHorizontalProperty] = \"\";\n        tab.style[gridVerticalProperty] = \"\";\n        tab.style[gridProperty] = `${index + 1}`;\n        !this.isHorizontal() ? tab.classList.add(\"vertical\") : tab.classList.remove(\"vertical\");\n      });\n    };\n\n    this.setTabPanels = () => {\n      this.tabIds = this.getTabIds();\n      this.tabpanelIds = this.getTabPanelIds();\n      this.tabpanels.forEach((tabpanel, index) => {\n        const tabId = this.tabIds[index];\n        const tabpanelId = this.tabpanelIds[index];\n        tabpanel.setAttribute(\"id\", typeof tabpanelId !== \"string\" ? `panel-${index + 1}` : tabpanelId);\n        tabpanel.setAttribute(\"aria-labelledby\", typeof tabId !== \"string\" ? `tab-${index + 1}` : tabId);\n        this.activeTabIndex !== index ? tabpanel.setAttribute(\"hidden\", \"\") : tabpanel.removeAttribute(\"hidden\");\n      });\n    };\n\n    this.handleTabClick = event => {\n      const selectedTab = event.currentTarget;\n\n      if (selectedTab.nodeType === 1 && this.isFocusableElement(selectedTab)) {\n        this.prevActiveTabIndex = this.activeTabIndex;\n        this.activeTabIndex = this.tabs.indexOf(selectedTab);\n        this.setComponent();\n      }\n    };\n\n    this.handleTabKeyDown = event => {\n      if (this.isHorizontal()) {\n        switch (event.key) {\n          case keyArrowLeft:\n            event.preventDefault();\n            this.adjustBackward(event);\n            break;\n\n          case keyArrowRight:\n            event.preventDefault();\n            this.adjustForward(event);\n            break;\n        }\n      } else {\n        switch (event.key) {\n          case keyArrowUp:\n            event.preventDefault();\n            this.adjustBackward(event);\n            break;\n\n          case keyArrowDown:\n            event.preventDefault();\n            this.adjustForward(event);\n            break;\n        }\n      }\n\n      switch (event.key) {\n        case keyHome:\n          event.preventDefault();\n          this.adjust(-this.activeTabIndex);\n          break;\n\n        case keyEnd:\n          event.preventDefault();\n          this.adjust(this.tabs.length - this.activeTabIndex - 1);\n          break;\n      }\n    };\n\n    this.adjustForward = e => {\n      const group = this.tabs;\n      let index = 0;\n      index = this.activetab ? group.indexOf(this.activetab) + 1 : 1;\n\n      if (index === group.length) {\n        index = 0;\n      }\n\n      while (index < group.length && group.length > 1) {\n        if (this.isFocusableElement(group[index])) {\n          this.moveToTabByIndex(group, index);\n          break;\n        } else if (this.activetab && index === group.indexOf(this.activetab)) {\n          break;\n        } else if (index + 1 >= group.length) {\n          index = 0;\n        } else {\n          index += 1;\n        }\n      }\n    };\n\n    this.adjustBackward = e => {\n      const group = this.tabs;\n      let index = 0;\n      index = this.activetab ? group.indexOf(this.activetab) - 1 : 0;\n      index = index < 0 ? group.length - 1 : index;\n\n      while (index >= 0 && group.length > 1) {\n        if (this.isFocusableElement(group[index])) {\n          this.moveToTabByIndex(group, index);\n          break;\n        } else if (index - 1 < 0) {\n          index = group.length - 1;\n        } else {\n          index -= 1;\n        }\n      }\n    };\n\n    this.moveToTabByIndex = (group, index) => {\n      const tab = group[index];\n      this.activetab = tab;\n      this.prevActiveTabIndex = this.activeTabIndex;\n      this.activeTabIndex = index;\n      tab.focus();\n      this.setComponent();\n    };\n  }\n  /**\n   * @internal\n   */\n\n\n  orientationChanged() {\n    if (this.$fastController.isConnected) {\n      this.setTabs();\n      this.setTabPanels();\n      this.handleActiveIndicatorPosition();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  activeidChanged(oldValue, newValue) {\n    if (this.$fastController.isConnected && this.tabs.length <= this.tabpanels.length) {\n      this.prevActiveTabIndex = this.tabs.findIndex(item => item.id === oldValue);\n      this.setTabs();\n      this.setTabPanels();\n      this.handleActiveIndicatorPosition();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  tabsChanged() {\n    if (this.$fastController.isConnected && this.tabs.length <= this.tabpanels.length) {\n      this.setTabs();\n      this.setTabPanels();\n      this.handleActiveIndicatorPosition();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  tabpanelsChanged() {\n    if (this.$fastController.isConnected && this.tabpanels.length <= this.tabs.length) {\n      this.setTabs();\n      this.setTabPanels();\n      this.handleActiveIndicatorPosition();\n    }\n  }\n\n  getActiveIndex() {\n    const id = this.activeid;\n\n    if (id !== undefined) {\n      return this.tabIds.indexOf(this.activeid) === -1 ? 0 : this.tabIds.indexOf(this.activeid);\n    } else {\n      return 0;\n    }\n  }\n\n  getTabIds() {\n    return this.tabs.map(tab => {\n      return tab.getAttribute(\"id\");\n    });\n  }\n\n  getTabPanelIds() {\n    return this.tabpanels.map(tabPanel => {\n      return tabPanel.getAttribute(\"id\");\n    });\n  }\n\n  setComponent() {\n    if (this.activeTabIndex !== this.prevActiveTabIndex) {\n      this.activeid = this.tabIds[this.activeTabIndex];\n      this.focusTab();\n      this.change();\n    }\n  }\n\n  isHorizontal() {\n    return this.orientation === TabsOrientation.horizontal;\n  }\n\n  handleActiveIndicatorPosition() {\n    // Ignore if we click twice on the same tab\n    if (this.showActiveIndicator && this.activeindicator && this.activeTabIndex !== this.prevActiveTabIndex) {\n      if (this.ticking) {\n        this.ticking = false;\n      } else {\n        this.ticking = true;\n        this.animateActiveIndicator();\n      }\n    }\n  }\n\n  animateActiveIndicator() {\n    this.ticking = true;\n    const gridProperty = this.isHorizontal() ? \"gridColumn\" : \"gridRow\";\n    const translateProperty = this.isHorizontal() ? \"translateX\" : \"translateY\";\n    const offsetProperty = this.isHorizontal() ? \"offsetLeft\" : \"offsetTop\";\n    const prev = this.activeIndicatorRef[offsetProperty];\n    this.activeIndicatorRef.style[gridProperty] = `${this.activeTabIndex + 1}`;\n    const next = this.activeIndicatorRef[offsetProperty];\n    this.activeIndicatorRef.style[gridProperty] = `${this.prevActiveTabIndex + 1}`;\n    const dif = next - prev;\n    this.activeIndicatorRef.style.transform = `${translateProperty}(${dif}px)`;\n    this.activeIndicatorRef.classList.add(\"activeIndicatorTransition\");\n    this.activeIndicatorRef.addEventListener(\"transitionend\", () => {\n      this.ticking = false;\n      this.activeIndicatorRef.style[gridProperty] = `${this.activeTabIndex + 1}`;\n      this.activeIndicatorRef.style.transform = `${translateProperty}(0px)`;\n      this.activeIndicatorRef.classList.remove(\"activeIndicatorTransition\");\n    });\n  }\n  /**\n   * The adjust method for FASTTabs\n   * @public\n   * @remarks\n   * This method allows the active index to be adjusted by numerical increments\n   */\n\n\n  adjust(adjustment) {\n    this.prevActiveTabIndex = this.activeTabIndex;\n    this.activeTabIndex = wrapInBounds(0, this.tabs.length - 1, this.activeTabIndex + adjustment);\n    this.setComponent();\n  }\n\n  focusTab() {\n    this.tabs[this.activeTabIndex].focus();\n  }\n  /**\n   * @internal\n   */\n\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.tabIds = this.getTabIds();\n    this.tabpanelIds = this.getTabPanelIds();\n    this.activeTabIndex = this.getActiveIndex();\n  }\n\n}\n\n__decorate([attr], Tabs.prototype, \"orientation\", void 0);\n\n__decorate([attr], Tabs.prototype, \"activeid\", void 0);\n\n__decorate([observable], Tabs.prototype, \"tabs\", void 0);\n\n__decorate([observable], Tabs.prototype, \"tabpanels\", void 0);\n\n__decorate([attr({\n  mode: \"boolean\"\n})], Tabs.prototype, \"activeindicator\", void 0);\n\n__decorate([observable], Tabs.prototype, \"activeIndicatorRef\", void 0);\n\n__decorate([observable], Tabs.prototype, \"showActiveIndicator\", void 0);\n\napplyMixins(Tabs, StartEnd);","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/tabs/tabs.js"],"names":["__decorate","attr","observable","keyArrowDown","keyArrowLeft","keyArrowRight","keyArrowUp","keyEnd","keyHome","wrapInBounds","StartEnd","applyMixins","FoundationElement","TabsOrientation","Tabs","constructor","arguments","orientation","horizontal","activeindicator","showActiveIndicator","prevActiveTabIndex","activeTabIndex","ticking","change","$emit","activetab","isDisabledElement","el","getAttribute","isFocusableElement","setTabs","gridHorizontalProperty","gridVerticalProperty","gridProperty","isHorizontal","tabIds","getTabIds","tabpanelIds","getTabPanelIds","getActiveIndex","tabs","forEach","tab","index","slot","isActiveTab","tabId","tabpanelId","setAttribute","addEventListener","handleTabClick","handleTabKeyDown","style","classList","add","remove","setTabPanels","tabpanels","tabpanel","removeAttribute","event","selectedTab","currentTarget","nodeType","indexOf","setComponent","key","preventDefault","adjustBackward","adjustForward","adjust","length","e","group","moveToTabByIndex","focus","orientationChanged","$fastController","isConnected","handleActiveIndicatorPosition","activeidChanged","oldValue","newValue","findIndex","item","id","tabsChanged","tabpanelsChanged","activeid","undefined","map","tabPanel","focusTab","animateActiveIndicator","translateProperty","offsetProperty","prev","activeIndicatorRef","next","dif","transform","adjustment","connectedCallback","prototype","mode"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { attr, observable } from \"@microsoft/fast-element\";\nimport { keyArrowDown, keyArrowLeft, keyArrowRight, keyArrowUp, keyEnd, keyHome, wrapInBounds, } from \"@microsoft/fast-web-utilities\";\nimport { StartEnd } from \"../patterns/start-end\";\nimport { applyMixins } from \"../utilities/apply-mixins\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * The orientation of the {@link @microsoft/fast-foundation#(Tabs:class)} component\n * @public\n */\nexport var TabsOrientation;\n(function (TabsOrientation) {\n    TabsOrientation[\"vertical\"] = \"vertical\";\n    TabsOrientation[\"horizontal\"] = \"horizontal\";\n})(TabsOrientation || (TabsOrientation = {}));\n/**\n * A Tabs Custom HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#tablist | ARIA tablist }.\n *\n * @public\n */\nexport class Tabs extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * The orientation\n         * @public\n         * @remarks\n         * HTML Attribute: orientation\n         */\n        this.orientation = TabsOrientation.horizontal;\n        /**\n         * Whether or not to show the active indicator\n         * @public\n         * @remarks\n         * HTML Attribute: activeindicator\n         */\n        this.activeindicator = true;\n        /**\n         * @internal\n         */\n        this.showActiveIndicator = true;\n        this.prevActiveTabIndex = 0;\n        this.activeTabIndex = 0;\n        this.ticking = false;\n        this.change = () => {\n            this.$emit(\"change\", this.activetab);\n        };\n        this.isDisabledElement = (el) => {\n            return el.getAttribute(\"aria-disabled\") === \"true\";\n        };\n        this.isFocusableElement = (el) => {\n            return !this.isDisabledElement(el);\n        };\n        this.setTabs = () => {\n            const gridHorizontalProperty = \"gridColumn\";\n            const gridVerticalProperty = \"gridRow\";\n            const gridProperty = this.isHorizontal()\n                ? gridHorizontalProperty\n                : gridVerticalProperty;\n            this.tabIds = this.getTabIds();\n            this.tabpanelIds = this.getTabPanelIds();\n            this.activeTabIndex = this.getActiveIndex();\n            this.showActiveIndicator = false;\n            this.tabs.forEach((tab, index) => {\n                if (tab.slot === \"tab\") {\n                    const isActiveTab = this.activeTabIndex === index && this.isFocusableElement(tab);\n                    if (this.activeindicator && this.isFocusableElement(tab)) {\n                        this.showActiveIndicator = true;\n                    }\n                    const tabId = this.tabIds[index];\n                    const tabpanelId = this.tabpanelIds[index];\n                    tab.setAttribute(\"id\", typeof tabId !== \"string\" ? `tab-${index + 1}` : tabId);\n                    tab.setAttribute(\"aria-selected\", isActiveTab ? \"true\" : \"false\");\n                    tab.setAttribute(\"aria-controls\", typeof tabpanelId !== \"string\" ? `panel-${index + 1}` : tabpanelId);\n                    tab.addEventListener(\"click\", this.handleTabClick);\n                    tab.addEventListener(\"keydown\", this.handleTabKeyDown);\n                    tab.setAttribute(\"tabindex\", isActiveTab ? \"0\" : \"-1\");\n                    if (isActiveTab) {\n                        this.activetab = tab;\n                    }\n                }\n                // If the original property isn't emptied out,\n                // the next set will morph into a grid-area style setting that is not what we want\n                tab.style[gridHorizontalProperty] = \"\";\n                tab.style[gridVerticalProperty] = \"\";\n                tab.style[gridProperty] = `${index + 1}`;\n                !this.isHorizontal()\n                    ? tab.classList.add(\"vertical\")\n                    : tab.classList.remove(\"vertical\");\n            });\n        };\n        this.setTabPanels = () => {\n            this.tabIds = this.getTabIds();\n            this.tabpanelIds = this.getTabPanelIds();\n            this.tabpanels.forEach((tabpanel, index) => {\n                const tabId = this.tabIds[index];\n                const tabpanelId = this.tabpanelIds[index];\n                tabpanel.setAttribute(\"id\", typeof tabpanelId !== \"string\" ? `panel-${index + 1}` : tabpanelId);\n                tabpanel.setAttribute(\"aria-labelledby\", typeof tabId !== \"string\" ? `tab-${index + 1}` : tabId);\n                this.activeTabIndex !== index\n                    ? tabpanel.setAttribute(\"hidden\", \"\")\n                    : tabpanel.removeAttribute(\"hidden\");\n            });\n        };\n        this.handleTabClick = (event) => {\n            const selectedTab = event.currentTarget;\n            if (selectedTab.nodeType === 1 && this.isFocusableElement(selectedTab)) {\n                this.prevActiveTabIndex = this.activeTabIndex;\n                this.activeTabIndex = this.tabs.indexOf(selectedTab);\n                this.setComponent();\n            }\n        };\n        this.handleTabKeyDown = (event) => {\n            if (this.isHorizontal()) {\n                switch (event.key) {\n                    case keyArrowLeft:\n                        event.preventDefault();\n                        this.adjustBackward(event);\n                        break;\n                    case keyArrowRight:\n                        event.preventDefault();\n                        this.adjustForward(event);\n                        break;\n                }\n            }\n            else {\n                switch (event.key) {\n                    case keyArrowUp:\n                        event.preventDefault();\n                        this.adjustBackward(event);\n                        break;\n                    case keyArrowDown:\n                        event.preventDefault();\n                        this.adjustForward(event);\n                        break;\n                }\n            }\n            switch (event.key) {\n                case keyHome:\n                    event.preventDefault();\n                    this.adjust(-this.activeTabIndex);\n                    break;\n                case keyEnd:\n                    event.preventDefault();\n                    this.adjust(this.tabs.length - this.activeTabIndex - 1);\n                    break;\n            }\n        };\n        this.adjustForward = (e) => {\n            const group = this.tabs;\n            let index = 0;\n            index = this.activetab ? group.indexOf(this.activetab) + 1 : 1;\n            if (index === group.length) {\n                index = 0;\n            }\n            while (index < group.length && group.length > 1) {\n                if (this.isFocusableElement(group[index])) {\n                    this.moveToTabByIndex(group, index);\n                    break;\n                }\n                else if (this.activetab && index === group.indexOf(this.activetab)) {\n                    break;\n                }\n                else if (index + 1 >= group.length) {\n                    index = 0;\n                }\n                else {\n                    index += 1;\n                }\n            }\n        };\n        this.adjustBackward = (e) => {\n            const group = this.tabs;\n            let index = 0;\n            index = this.activetab ? group.indexOf(this.activetab) - 1 : 0;\n            index = index < 0 ? group.length - 1 : index;\n            while (index >= 0 && group.length > 1) {\n                if (this.isFocusableElement(group[index])) {\n                    this.moveToTabByIndex(group, index);\n                    break;\n                }\n                else if (index - 1 < 0) {\n                    index = group.length - 1;\n                }\n                else {\n                    index -= 1;\n                }\n            }\n        };\n        this.moveToTabByIndex = (group, index) => {\n            const tab = group[index];\n            this.activetab = tab;\n            this.prevActiveTabIndex = this.activeTabIndex;\n            this.activeTabIndex = index;\n            tab.focus();\n            this.setComponent();\n        };\n    }\n    /**\n     * @internal\n     */\n    orientationChanged() {\n        if (this.$fastController.isConnected) {\n            this.setTabs();\n            this.setTabPanels();\n            this.handleActiveIndicatorPosition();\n        }\n    }\n    /**\n     * @internal\n     */\n    activeidChanged(oldValue, newValue) {\n        if (this.$fastController.isConnected &&\n            this.tabs.length <= this.tabpanels.length) {\n            this.prevActiveTabIndex = this.tabs.findIndex((item) => item.id === oldValue);\n            this.setTabs();\n            this.setTabPanels();\n            this.handleActiveIndicatorPosition();\n        }\n    }\n    /**\n     * @internal\n     */\n    tabsChanged() {\n        if (this.$fastController.isConnected &&\n            this.tabs.length <= this.tabpanels.length) {\n            this.setTabs();\n            this.setTabPanels();\n            this.handleActiveIndicatorPosition();\n        }\n    }\n    /**\n     * @internal\n     */\n    tabpanelsChanged() {\n        if (this.$fastController.isConnected &&\n            this.tabpanels.length <= this.tabs.length) {\n            this.setTabs();\n            this.setTabPanels();\n            this.handleActiveIndicatorPosition();\n        }\n    }\n    getActiveIndex() {\n        const id = this.activeid;\n        if (id !== undefined) {\n            return this.tabIds.indexOf(this.activeid) === -1\n                ? 0\n                : this.tabIds.indexOf(this.activeid);\n        }\n        else {\n            return 0;\n        }\n    }\n    getTabIds() {\n        return this.tabs.map((tab) => {\n            return tab.getAttribute(\"id\");\n        });\n    }\n    getTabPanelIds() {\n        return this.tabpanels.map((tabPanel) => {\n            return tabPanel.getAttribute(\"id\");\n        });\n    }\n    setComponent() {\n        if (this.activeTabIndex !== this.prevActiveTabIndex) {\n            this.activeid = this.tabIds[this.activeTabIndex];\n            this.focusTab();\n            this.change();\n        }\n    }\n    isHorizontal() {\n        return this.orientation === TabsOrientation.horizontal;\n    }\n    handleActiveIndicatorPosition() {\n        // Ignore if we click twice on the same tab\n        if (this.showActiveIndicator &&\n            this.activeindicator &&\n            this.activeTabIndex !== this.prevActiveTabIndex) {\n            if (this.ticking) {\n                this.ticking = false;\n            }\n            else {\n                this.ticking = true;\n                this.animateActiveIndicator();\n            }\n        }\n    }\n    animateActiveIndicator() {\n        this.ticking = true;\n        const gridProperty = this.isHorizontal() ? \"gridColumn\" : \"gridRow\";\n        const translateProperty = this.isHorizontal()\n            ? \"translateX\"\n            : \"translateY\";\n        const offsetProperty = this.isHorizontal() ? \"offsetLeft\" : \"offsetTop\";\n        const prev = this.activeIndicatorRef[offsetProperty];\n        this.activeIndicatorRef.style[gridProperty] = `${this.activeTabIndex + 1}`;\n        const next = this.activeIndicatorRef[offsetProperty];\n        this.activeIndicatorRef.style[gridProperty] = `${this.prevActiveTabIndex + 1}`;\n        const dif = next - prev;\n        this.activeIndicatorRef.style.transform = `${translateProperty}(${dif}px)`;\n        this.activeIndicatorRef.classList.add(\"activeIndicatorTransition\");\n        this.activeIndicatorRef.addEventListener(\"transitionend\", () => {\n            this.ticking = false;\n            this.activeIndicatorRef.style[gridProperty] = `${this.activeTabIndex + 1}`;\n            this.activeIndicatorRef.style.transform = `${translateProperty}(0px)`;\n            this.activeIndicatorRef.classList.remove(\"activeIndicatorTransition\");\n        });\n    }\n    /**\n     * The adjust method for FASTTabs\n     * @public\n     * @remarks\n     * This method allows the active index to be adjusted by numerical increments\n     */\n    adjust(adjustment) {\n        this.prevActiveTabIndex = this.activeTabIndex;\n        this.activeTabIndex = wrapInBounds(0, this.tabs.length - 1, this.activeTabIndex + adjustment);\n        this.setComponent();\n    }\n    focusTab() {\n        this.tabs[this.activeTabIndex].focus();\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.tabIds = this.getTabIds();\n        this.tabpanelIds = this.getTabPanelIds();\n        this.activeTabIndex = this.getActiveIndex();\n    }\n}\n__decorate([\n    attr\n], Tabs.prototype, \"orientation\", void 0);\n__decorate([\n    attr\n], Tabs.prototype, \"activeid\", void 0);\n__decorate([\n    observable\n], Tabs.prototype, \"tabs\", void 0);\n__decorate([\n    observable\n], Tabs.prototype, \"tabpanels\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], Tabs.prototype, \"activeindicator\", void 0);\n__decorate([\n    observable\n], Tabs.prototype, \"activeIndicatorRef\", void 0);\n__decorate([\n    observable\n], Tabs.prototype, \"showActiveIndicator\", void 0);\napplyMixins(Tabs, StartEnd);\n"]},"metadata":{},"sourceType":"module"}