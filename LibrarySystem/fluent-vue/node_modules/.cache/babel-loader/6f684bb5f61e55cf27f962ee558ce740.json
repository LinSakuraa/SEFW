{"ast":null,"code":"import { h, ref, toRef, defineComponent, computed, watchEffect } from 'vue';\nimport { depx, pxfy } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NBaseLoading, NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce, isSlotEmpty, resolveWrappedSlot } from '../../_utils';\nimport { switchLight } from '../styles';\nimport style from './styles/index.cssr';\nconst switchProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: String,\n    default: 'medium'\n  },\n  value: {\n    type: [String, Number, Boolean],\n    default: undefined\n  },\n  loading: Boolean,\n  defaultValue: {\n    type: [String, Number, Boolean],\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  round: {\n    type: Boolean,\n    default: true\n  },\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  checkedValue: {\n    type: [String, Number, Boolean],\n    default: true\n  },\n  uncheckedValue: {\n    type: [String, Number, Boolean],\n    default: false\n  },\n  railStyle: Function,\n\n  /** @deprecated */\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Switch',\n  props: switchProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange) {\n          warnOnce('switch', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Switch', '-switch', style, switchLight, props, mergedClsPrefixRef);\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const checkedRef = computed(() => {\n      return mergedValueRef.value === props.checkedValue;\n    });\n    const pressedRef = ref(false);\n    const focusedRef = ref(false);\n    const mergedRailStyleRef = computed(() => {\n      const {\n        railStyle\n      } = props;\n      if (!railStyle) return undefined;\n      return railStyle({\n        focused: focusedRef.value,\n        checked: checkedRef.value\n      });\n    });\n\n    function doUpdateValue(value) {\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onChange,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (onChange) call(onChange, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n\n    function doFocus() {\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      nTriggerFormFocus();\n    }\n\n    function doBlur() {\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      nTriggerFormBlur();\n    }\n\n    function handleClick() {\n      if (props.loading || mergedDisabledRef.value) return;\n\n      if (mergedValueRef.value !== props.checkedValue) {\n        doUpdateValue(props.checkedValue);\n      } else {\n        doUpdateValue(props.uncheckedValue);\n      }\n    }\n\n    function handleFocus() {\n      focusedRef.value = true;\n      doFocus();\n    }\n\n    function handleBlur() {\n      focusedRef.value = false;\n      doBlur();\n      pressedRef.value = false;\n    }\n\n    function handleKeyup(e) {\n      if (props.loading || mergedDisabledRef.value) return;\n\n      if (e.code === 'Space') {\n        if (mergedValueRef.value !== props.checkedValue) {\n          doUpdateValue(props.checkedValue);\n        } else {\n          doUpdateValue(props.uncheckedValue);\n        }\n\n        pressedRef.value = false;\n      }\n    }\n\n    function handleKeydown(e) {\n      if (props.loading || mergedDisabledRef.value) return;\n\n      if (e.code === 'Space') {\n        e.preventDefault();\n        pressedRef.value = true;\n      }\n    }\n\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        self: {\n          opacityDisabled,\n          railColor,\n          railColorActive,\n          buttonBoxShadow,\n          buttonColor,\n          boxShadowFocus,\n          loadingColor,\n          textColor,\n          iconColor,\n          [createKey('buttonHeight', size)]: buttonHeight,\n          [createKey('buttonWidth', size)]: buttonWidth,\n          [createKey('buttonWidthPressed', size)]: buttonWidthPressed,\n          [createKey('railHeight', size)]: railHeight,\n          [createKey('railWidth', size)]: railWidth,\n          [createKey('railBorderRadius', size)]: railBorderRadius,\n          [createKey('buttonBorderRadius', size)]: buttonBorderRadius\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      const offset = pxfy((depx(railHeight) - depx(buttonHeight)) / 2);\n      const height = pxfy(Math.max(depx(railHeight), depx(buttonHeight)));\n      const width = depx(railHeight) > depx(buttonHeight) ? railWidth : pxfy(depx(railWidth) + depx(buttonHeight) - depx(railHeight));\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-button-border-radius': buttonBorderRadius,\n        '--n-button-box-shadow': buttonBoxShadow,\n        '--n-button-color': buttonColor,\n        '--n-button-width': buttonWidth,\n        '--n-button-width-pressed': buttonWidthPressed,\n        '--n-button-height': buttonHeight,\n        '--n-height': height,\n        '--n-offset': offset,\n        '--n-opacity-disabled': opacityDisabled,\n        '--n-rail-border-radius': railBorderRadius,\n        '--n-rail-color': railColor,\n        '--n-rail-color-active': railColorActive,\n        '--n-rail-height': railHeight,\n        '--n-rail-width': railWidth,\n        '--n-width': width,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        '--n-text-color': textColor,\n        '--n-icon-color': iconColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('switch', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n    return {\n      handleClick,\n      handleBlur,\n      handleFocus,\n      handleKeyup,\n      handleKeydown,\n      mergedRailStyle: mergedRailStyleRef,\n      pressed: pressedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: mergedValueRef,\n      checked: checkedRef,\n      mergedDisabled: mergedDisabledRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedDisabled,\n      checked,\n      mergedRailStyle,\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    const {\n      checked: checkedSlot,\n      unchecked: uncheckedSlot,\n      icon: iconSlot,\n      'checked-icon': checkedIconSlot,\n      'unchecked-icon': uncheckedIconSlot\n    } = $slots;\n    const hasIcon = !(isSlotEmpty(iconSlot) && isSlotEmpty(checkedIconSlot) && isSlotEmpty(uncheckedIconSlot));\n    return h(\"div\", {\n      role: \"switch\",\n      \"aria-checked\": checked,\n      class: [`${mergedClsPrefix}-switch`, this.themeClass, hasIcon && `${mergedClsPrefix}-switch--icon`, checked && `${mergedClsPrefix}-switch--active`, mergedDisabled && `${mergedClsPrefix}-switch--disabled`, this.round && `${mergedClsPrefix}-switch--round`, this.loading && `${mergedClsPrefix}-switch--loading`, this.pressed && `${mergedClsPrefix}-switch--pressed`],\n      tabindex: !this.mergedDisabled ? 0 : undefined,\n      style: this.cssVars,\n      onClick: this.handleClick,\n      onFocus: this.handleFocus,\n      onBlur: this.handleBlur,\n      onKeyup: this.handleKeyup,\n      onKeydown: this.handleKeydown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-switch__rail`,\n      \"aria-hidden\": \"true\",\n      style: mergedRailStyle\n    }, resolveWrappedSlot(checkedSlot, checkedSlotChildren => resolveWrappedSlot(uncheckedSlot, uncheckedSlotChildren => {\n      if (checkedSlotChildren || uncheckedSlotChildren) {\n        return h(\"div\", {\n          \"aria-hidden\": true,\n          class: `${mergedClsPrefix}-switch__children-placeholder`\n        }, h(\"div\", {\n          class: `${mergedClsPrefix}-switch__rail-placeholder`\n        }, h(\"div\", {\n          class: `${mergedClsPrefix}-switch__button-placeholder`\n        }), checkedSlotChildren), h(\"div\", {\n          class: `${mergedClsPrefix}-switch__rail-placeholder`\n        }, h(\"div\", {\n          class: `${mergedClsPrefix}-switch__button-placeholder`\n        }), uncheckedSlotChildren));\n      }\n\n      return null;\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-switch__button`\n    }, resolveWrappedSlot(iconSlot, icon => resolveWrappedSlot(checkedIconSlot, checkedIcon => resolveWrappedSlot(uncheckedIconSlot, uncheckedIcon => {\n      return h(NIconSwitchTransition, null, {\n        default: () => this.loading ? h(NBaseLoading, {\n          key: \"loading\",\n          clsPrefix: mergedClsPrefix,\n          strokeWidth: 20\n        }) : this.checked && (checkedIcon || icon) ? h(\"div\", {\n          class: `${mergedClsPrefix}-switch__button-icon`,\n          key: checkedIcon ? 'checked-icon' : 'icon'\n        }, checkedIcon || icon) : !this.checked && (uncheckedIcon || icon) ? h(\"div\", {\n          class: `${mergedClsPrefix}-switch__button-icon`,\n          key: uncheckedIcon ? 'unchecked-icon' : 'icon'\n        }, uncheckedIcon || icon) : null\n      });\n    }))), resolveWrappedSlot(checkedSlot, children => children && h(\"div\", {\n      key: \"checked\",\n      class: `${mergedClsPrefix}-switch__checked`\n    }, children)), resolveWrappedSlot(uncheckedSlot, children => children && h(\"div\", {\n      key: \"unchecked\",\n      class: `${mergedClsPrefix}-switch__unchecked`\n    }, children)))));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/switch/src/Switch.js"],"names":["h","ref","toRef","defineComponent","computed","watchEffect","depx","pxfy","useMergedState","useConfig","useFormItem","useTheme","useThemeClass","NBaseLoading","NIconSwitchTransition","call","createKey","warnOnce","isSlotEmpty","resolveWrappedSlot","switchLight","style","switchProps","Object","assign","props","size","type","String","default","value","Number","Boolean","undefined","loading","defaultValue","disabled","round","Function","Array","onUpdateValue","checkedValue","uncheckedValue","railStyle","onChange","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","inlineThemeDisabled","themeRef","formItem","mergedSizeRef","mergedDisabledRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","checkedRef","pressedRef","focusedRef","mergedRailStyleRef","focused","checked","doUpdateValue","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","doFocus","nTriggerFormFocus","doBlur","nTriggerFormBlur","handleClick","handleFocus","handleBlur","handleKeyup","e","code","handleKeydown","preventDefault","cssVarsRef","self","opacityDisabled","railColor","railColorActive","buttonBoxShadow","buttonColor","boxShadowFocus","loadingColor","textColor","iconColor","buttonHeight","buttonWidth","buttonWidthPressed","railHeight","railWidth","railBorderRadius","buttonBorderRadius","common","cubicBezierEaseInOut","offset","height","Math","max","width","themeClassHandle","mergedRailStyle","pressed","mergedClsPrefix","mergedValue","mergedDisabled","cssVars","themeClass","onRender","render","$slots","checkedSlot","unchecked","uncheckedSlot","icon","iconSlot","checkedIconSlot","uncheckedIconSlot","hasIcon","role","class","tabindex","onClick","onFocus","onBlur","onKeyup","onKeydown","checkedSlotChildren","uncheckedSlotChildren","checkedIcon","uncheckedIcon","key","clsPrefix","strokeWidth","children"],"mappings":"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","sourcesContent":["import { h, ref, toRef, defineComponent, computed, watchEffect } from 'vue';\nimport { depx, pxfy } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useFormItem, useTheme, useThemeClass } from '../../_mixins';\nimport { NBaseLoading, NIconSwitchTransition } from '../../_internal';\nimport { call, createKey, warnOnce, isSlotEmpty, resolveWrappedSlot } from '../../_utils';\nimport { switchLight } from '../styles';\nimport style from './styles/index.cssr';\nconst switchProps = Object.assign(Object.assign({}, useTheme.props), { size: {\n        type: String,\n        default: 'medium'\n    }, value: {\n        type: [String, Number, Boolean],\n        default: undefined\n    }, loading: Boolean, defaultValue: {\n        type: [String, Number, Boolean],\n        default: false\n    }, disabled: {\n        type: Boolean,\n        default: undefined\n    }, round: {\n        type: Boolean,\n        default: true\n    }, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], checkedValue: {\n        type: [String, Number, Boolean],\n        default: true\n    }, uncheckedValue: {\n        type: [String, Number, Boolean],\n        default: false\n    }, railStyle: Function, \n    /** @deprecated */\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Switch',\n    props: switchProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange) {\n                    warnOnce('switch', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Switch', '-switch', style, switchLight, props, mergedClsPrefixRef);\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const checkedRef = computed(() => {\n            return mergedValueRef.value === props.checkedValue;\n        });\n        const pressedRef = ref(false);\n        const focusedRef = ref(false);\n        const mergedRailStyleRef = computed(() => {\n            const { railStyle } = props;\n            if (!railStyle)\n                return undefined;\n            return railStyle({ focused: focusedRef.value, checked: checkedRef.value });\n        });\n        function doUpdateValue(value) {\n            const { 'onUpdate:value': _onUpdateValue, onChange, onUpdateValue } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (onChange)\n                call(onChange, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        }\n        function doFocus() {\n            const { nTriggerFormFocus } = formItem;\n            nTriggerFormFocus();\n        }\n        function doBlur() {\n            const { nTriggerFormBlur } = formItem;\n            nTriggerFormBlur();\n        }\n        function handleClick() {\n            if (props.loading || mergedDisabledRef.value)\n                return;\n            if (mergedValueRef.value !== props.checkedValue) {\n                doUpdateValue(props.checkedValue);\n            }\n            else {\n                doUpdateValue(props.uncheckedValue);\n            }\n        }\n        function handleFocus() {\n            focusedRef.value = true;\n            doFocus();\n        }\n        function handleBlur() {\n            focusedRef.value = false;\n            doBlur();\n            pressedRef.value = false;\n        }\n        function handleKeyup(e) {\n            if (props.loading || mergedDisabledRef.value)\n                return;\n            if (e.code === 'Space') {\n                if (mergedValueRef.value !== props.checkedValue) {\n                    doUpdateValue(props.checkedValue);\n                }\n                else {\n                    doUpdateValue(props.uncheckedValue);\n                }\n                pressedRef.value = false;\n            }\n        }\n        function handleKeydown(e) {\n            if (props.loading || mergedDisabledRef.value)\n                return;\n            if (e.code === 'Space') {\n                e.preventDefault();\n                pressedRef.value = true;\n            }\n        }\n        const cssVarsRef = computed(() => {\n            const { value: size } = mergedSizeRef;\n            const { self: { opacityDisabled, railColor, railColorActive, buttonBoxShadow, buttonColor, boxShadowFocus, loadingColor, textColor, iconColor, [createKey('buttonHeight', size)]: buttonHeight, [createKey('buttonWidth', size)]: buttonWidth, [createKey('buttonWidthPressed', size)]: buttonWidthPressed, [createKey('railHeight', size)]: railHeight, [createKey('railWidth', size)]: railWidth, [createKey('railBorderRadius', size)]: railBorderRadius, [createKey('buttonBorderRadius', size)]: buttonBorderRadius }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            const offset = pxfy((depx(railHeight) - depx(buttonHeight)) / 2);\n            const height = pxfy(Math.max(depx(railHeight), depx(buttonHeight)));\n            const width = depx(railHeight) > depx(buttonHeight)\n                ? railWidth\n                : pxfy(depx(railWidth) + depx(buttonHeight) - depx(railHeight));\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-button-border-radius': buttonBorderRadius,\n                '--n-button-box-shadow': buttonBoxShadow,\n                '--n-button-color': buttonColor,\n                '--n-button-width': buttonWidth,\n                '--n-button-width-pressed': buttonWidthPressed,\n                '--n-button-height': buttonHeight,\n                '--n-height': height,\n                '--n-offset': offset,\n                '--n-opacity-disabled': opacityDisabled,\n                '--n-rail-border-radius': railBorderRadius,\n                '--n-rail-color': railColor,\n                '--n-rail-color-active': railColorActive,\n                '--n-rail-height': railHeight,\n                '--n-rail-width': railWidth,\n                '--n-width': width,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-loading-color': loadingColor,\n                '--n-text-color': textColor,\n                '--n-icon-color': iconColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('switch', computed(() => {\n                return mergedSizeRef.value[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            handleClick,\n            handleBlur,\n            handleFocus,\n            handleKeyup,\n            handleKeydown,\n            mergedRailStyle: mergedRailStyleRef,\n            pressed: pressedRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedValue: mergedValueRef,\n            checked: checkedRef,\n            mergedDisabled: mergedDisabledRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, mergedDisabled, checked, mergedRailStyle, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const { checked: checkedSlot, unchecked: uncheckedSlot, icon: iconSlot, 'checked-icon': checkedIconSlot, 'unchecked-icon': uncheckedIconSlot } = $slots;\n        const hasIcon = !(isSlotEmpty(iconSlot) &&\n            isSlotEmpty(checkedIconSlot) &&\n            isSlotEmpty(uncheckedIconSlot));\n        return (h(\"div\", { role: \"switch\", \"aria-checked\": checked, class: [\n                `${mergedClsPrefix}-switch`,\n                this.themeClass,\n                hasIcon && `${mergedClsPrefix}-switch--icon`,\n                checked && `${mergedClsPrefix}-switch--active`,\n                mergedDisabled && `${mergedClsPrefix}-switch--disabled`,\n                this.round && `${mergedClsPrefix}-switch--round`,\n                this.loading && `${mergedClsPrefix}-switch--loading`,\n                this.pressed && `${mergedClsPrefix}-switch--pressed`\n            ], tabindex: !this.mergedDisabled ? 0 : undefined, style: this.cssVars, onClick: this.handleClick, onFocus: this.handleFocus, onBlur: this.handleBlur, onKeyup: this.handleKeyup, onKeydown: this.handleKeydown },\n            h(\"div\", { class: `${mergedClsPrefix}-switch__rail`, \"aria-hidden\": \"true\", style: mergedRailStyle },\n                resolveWrappedSlot(checkedSlot, (checkedSlotChildren) => resolveWrappedSlot(uncheckedSlot, (uncheckedSlotChildren) => {\n                    if (checkedSlotChildren || uncheckedSlotChildren) {\n                        return (h(\"div\", { \"aria-hidden\": true, class: `${mergedClsPrefix}-switch__children-placeholder` },\n                            h(\"div\", { class: `${mergedClsPrefix}-switch__rail-placeholder` },\n                                h(\"div\", { class: `${mergedClsPrefix}-switch__button-placeholder` }),\n                                checkedSlotChildren),\n                            h(\"div\", { class: `${mergedClsPrefix}-switch__rail-placeholder` },\n                                h(\"div\", { class: `${mergedClsPrefix}-switch__button-placeholder` }),\n                                uncheckedSlotChildren)));\n                    }\n                    return null;\n                })),\n                h(\"div\", { class: `${mergedClsPrefix}-switch__button` },\n                    resolveWrappedSlot(iconSlot, (icon) => resolveWrappedSlot(checkedIconSlot, (checkedIcon) => resolveWrappedSlot(uncheckedIconSlot, (uncheckedIcon) => {\n                        return (h(NIconSwitchTransition, null, {\n                            default: () => this.loading ? (h(NBaseLoading, { key: \"loading\", clsPrefix: mergedClsPrefix, strokeWidth: 20 })) : this.checked && (checkedIcon || icon) ? (h(\"div\", { class: `${mergedClsPrefix}-switch__button-icon`, key: checkedIcon ? 'checked-icon' : 'icon' }, checkedIcon || icon)) : !this.checked && (uncheckedIcon || icon) ? (h(\"div\", { class: `${mergedClsPrefix}-switch__button-icon`, key: uncheckedIcon ? 'unchecked-icon' : 'icon' }, uncheckedIcon || icon)) : null\n                        }));\n                    }))),\n                    resolveWrappedSlot(checkedSlot, (children) => children && (h(\"div\", { key: \"checked\", class: `${mergedClsPrefix}-switch__checked` }, children))),\n                    resolveWrappedSlot(uncheckedSlot, (children) => children && (h(\"div\", { key: \"unchecked\", class: `${mergedClsPrefix}-switch__unchecked` }, children)))))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}