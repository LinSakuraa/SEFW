{"ast":null,"code":"import { h, computed, defineComponent, inject } from 'vue';\nimport { formatLength, keysOf, throwError } from '../../_utils';\nimport { rowInjectionKey } from './Row';\nexport const colProps = {\n  span: {\n    type: [String, Number],\n    default: 1\n  },\n  push: {\n    type: [String, Number],\n    default: 0\n  },\n  pull: {\n    type: [String, Number],\n    default: 0\n  },\n  offset: {\n    type: [String, Number],\n    default: 0\n  }\n};\nexport const colPropKeys = keysOf(colProps);\nexport default defineComponent({\n  name: 'Col',\n  props: colProps,\n\n  setup(props) {\n    const NRow = inject(rowInjectionKey, null);\n    if (!NRow) throwError('col', '`n-col` must be placed inside `n-row`.');\n    return {\n      mergedClsPrefix: NRow.mergedClsPrefixRef,\n      gutter: NRow.gutterRef,\n      stylePadding: computed(() => `${formatLength(NRow.verticalGutterRef.value, {\n        c: 0.5\n      })} ${formatLength(NRow.horizontalGutterRef.value, {\n        c: 0.5\n      })}`),\n      mergedPush: computed(() => Number(props.push) - Number(props.pull))\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      span,\n      mergedPush,\n      offset,\n      stylePadding,\n      gutter,\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-col`, {\n        [`${mergedClsPrefix}-col--${span}-span`]: true,\n        [`${mergedClsPrefix}-col--${mergedPush}-push`]: mergedPush > 0,\n        [`${mergedClsPrefix}-col--${-mergedPush}-pull`]: mergedPush < 0,\n        [`${mergedClsPrefix}-col--${offset}-offset`]: offset\n      }],\n      style: {\n        padding: stylePadding\n      }\n    }, gutter ? h(\"div\", null, $slots) : $slots);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/legacy-grid/src/Col.js"],"names":["h","computed","defineComponent","inject","formatLength","keysOf","throwError","rowInjectionKey","colProps","span","type","String","Number","default","push","pull","offset","colPropKeys","name","props","setup","NRow","mergedClsPrefix","mergedClsPrefixRef","gutter","gutterRef","stylePadding","verticalGutterRef","value","c","horizontalGutterRef","mergedPush","render","$slots","class","style","padding"],"mappings":"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","sourcesContent":["import { h, computed, defineComponent, inject } from 'vue';\nimport { formatLength, keysOf, throwError } from '../../_utils';\nimport { rowInjectionKey } from './Row';\nexport const colProps = {\n    span: {\n        type: [String, Number],\n        default: 1\n    },\n    push: {\n        type: [String, Number],\n        default: 0\n    },\n    pull: {\n        type: [String, Number],\n        default: 0\n    },\n    offset: {\n        type: [String, Number],\n        default: 0\n    }\n};\nexport const colPropKeys = keysOf(colProps);\nexport default defineComponent({\n    name: 'Col',\n    props: colProps,\n    setup(props) {\n        const NRow = inject(rowInjectionKey, null);\n        if (!NRow)\n            throwError('col', '`n-col` must be placed inside `n-row`.');\n        return {\n            mergedClsPrefix: NRow.mergedClsPrefixRef,\n            gutter: NRow.gutterRef,\n            stylePadding: computed(() => `${formatLength(NRow.verticalGutterRef.value, {\n                c: 0.5\n            })} ${formatLength(NRow.horizontalGutterRef.value, { c: 0.5 })}`),\n            mergedPush: computed(() => Number(props.push) - Number(props.pull))\n        };\n    },\n    render() {\n        const { $slots, span, mergedPush, offset, stylePadding, gutter, mergedClsPrefix } = this;\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-col`,\n                {\n                    [`${mergedClsPrefix}-col--${span}-span`]: true,\n                    [`${mergedClsPrefix}-col--${mergedPush}-push`]: mergedPush > 0,\n                    [`${mergedClsPrefix}-col--${-mergedPush}-pull`]: mergedPush < 0,\n                    [`${mergedClsPrefix}-col--${offset}-offset`]: offset\n                }\n            ], style: {\n                padding: stylePadding\n            } }, gutter ? h(\"div\", null, $slots) : $slots));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}