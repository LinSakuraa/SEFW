{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { h, defineComponent, computed, provide, toRef, ref, Fragment, Teleport, nextTick } from 'vue';\nimport { createId } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useTheme, useFormItem, useThemeClass } from '../../_mixins';\nimport { warn, call, throwError } from '../../_utils';\nimport { uploadLight } from '../styles';\nimport { uploadDraggerKey } from './UploadDragger';\nimport { uploadInjectionKey } from './interface';\nimport { createImageDataUrl } from './utils';\nimport NUploadTrigger from './UploadTrigger';\nimport NUploadFileList from './UploadFileList';\nimport style from './styles/index.cssr';\n/**\n * fils status ['pending', 'uploading', 'finished', 'removed', 'error']\n */\n\nfunction createXhrHandlers(inst, file, XHR) {\n  const {\n    doChange,\n    XhrMap\n  } = inst;\n  let percentage = 0;\n\n  function handleXHRError(e) {\n    var _a;\n\n    let fileAfterChange = Object.assign({}, file, {\n      status: 'error',\n      percentage\n    });\n    XhrMap.delete(file.id);\n    fileAfterChange = ((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, {\n      file: fileAfterChange,\n      event: e\n    })) || fileAfterChange;\n    doChange(fileAfterChange, e);\n  }\n\n  function handleXHRLoad(e) {\n    var _a;\n\n    if (XHR.status < 200 || XHR.status >= 300) {\n      handleXHRError(e);\n      return;\n    }\n\n    let fileAfterChange = Object.assign({}, file, {\n      status: 'finished',\n      percentage,\n      file: null\n    });\n    XhrMap.delete(file.id);\n    fileAfterChange = ((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, {\n      file: fileAfterChange,\n      event: e\n    })) || fileAfterChange;\n    doChange(fileAfterChange, e);\n  }\n\n  return {\n    handleXHRLoad,\n    handleXHRError,\n\n    handleXHRAbort(e) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'removed',\n        file: null,\n        percentage\n      });\n      XhrMap.delete(file.id);\n      doChange(fileAfterChange, e);\n    },\n\n    handleXHRProgress(e) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'uploading'\n      });\n\n      if (e.lengthComputable) {\n        const progress = Math.ceil(e.loaded / e.total * 100);\n        fileAfterChange.percentage = progress;\n        percentage = progress;\n      }\n\n      doChange(fileAfterChange, e);\n    }\n\n  };\n}\n\nfunction customSubmitImpl(options) {\n  const {\n    inst,\n    file,\n    data,\n    headers,\n    withCredentials,\n    action,\n    customRequest\n  } = options;\n  const {\n    doChange\n  } = options.inst;\n  let percentage = 0;\n  customRequest({\n    file,\n    data,\n    headers,\n    withCredentials,\n    action,\n\n    onProgress(event) {\n      const fileAfterChange = Object.assign({}, file, {\n        status: 'uploading'\n      });\n      const progress = event.percent;\n      fileAfterChange.percentage = progress;\n      percentage = progress;\n      doChange(fileAfterChange);\n    },\n\n    onFinish() {\n      var _a;\n\n      let fileAfterChange = Object.assign({}, file, {\n        status: 'finished',\n        percentage,\n        file: null\n      });\n      fileAfterChange = ((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, {\n        file: fileAfterChange\n      })) || fileAfterChange;\n      doChange(fileAfterChange);\n    },\n\n    onError() {\n      var _a;\n\n      let fileAfterChange = Object.assign({}, file, {\n        status: 'error',\n        percentage\n      });\n      fileAfterChange = ((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, {\n        file: fileAfterChange\n      })) || fileAfterChange;\n      doChange(fileAfterChange);\n    }\n\n  });\n}\n\nfunction registerHandler(inst, file, request) {\n  const handlers = createXhrHandlers(inst, file, request);\n  request.onabort = handlers.handleXHRAbort;\n  request.onerror = handlers.handleXHRError;\n  request.onload = handlers.handleXHRLoad;\n\n  if (request.upload) {\n    request.upload.onprogress = handlers.handleXHRProgress;\n  }\n}\n\nfunction unwrapFunctionValue(data, file) {\n  if (typeof data === 'function') {\n    return data({\n      file\n    });\n  }\n\n  if (data) return data;\n  return {};\n}\n\nfunction setHeaders(request, headers, file) {\n  const headersObject = unwrapFunctionValue(headers, file);\n  if (!headersObject) return;\n  Object.keys(headersObject).forEach(key => {\n    request.setRequestHeader(key, headersObject[key]);\n  });\n}\n\nfunction appendData(formData, data, file) {\n  const dataObject = unwrapFunctionValue(data, file);\n  if (!dataObject) return;\n  Object.keys(dataObject).forEach(key => {\n    formData.append(key, dataObject[key]);\n  });\n}\n\nfunction submitImpl(inst, fieldName, file, {\n  method,\n  action,\n  withCredentials,\n  headers,\n  data\n}) {\n  const request = new XMLHttpRequest();\n  inst.XhrMap.set(file.id, request);\n  request.withCredentials = withCredentials;\n  const formData = new FormData();\n  appendData(formData, data, file);\n  formData.append(fieldName, file.file);\n  registerHandler(inst, file, request);\n\n  if (action !== undefined) {\n    request.open(method.toUpperCase(), action);\n    setHeaders(request, headers, file);\n    request.send(formData);\n    const fileAfterChange = Object.assign({}, file, {\n      status: 'uploading'\n    });\n    inst.doChange(fileAfterChange);\n  }\n}\n\nconst uploadProps = Object.assign(Object.assign({}, useTheme.props), {\n  name: {\n    type: String,\n    default: 'file'\n  },\n  accept: String,\n  action: String,\n  customRequest: Function,\n  // to be impl\n  // directory: {\n  //   type: Boolean,\n  //   default: false\n  // },\n  method: {\n    type: String,\n    default: 'POST'\n  },\n  multiple: Boolean,\n  showFileList: {\n    type: Boolean,\n    default: true\n  },\n  data: [Object, Function],\n  headers: [Object, Function],\n  withCredentials: Boolean,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  onChange: Function,\n  onRemove: Function,\n  onFinish: Function,\n  onError: Function,\n  onBeforeUpload: Function,\n\n  /** currently of no usage */\n  onDownload: Function,\n  defaultUpload: {\n    type: Boolean,\n    default: true\n  },\n  fileList: Array,\n  'onUpdate:fileList': [Function, Array],\n  onUpdateFileList: [Function, Array],\n  fileListStyle: [String, Object],\n  defaultFileList: {\n    type: Array,\n    default: () => []\n  },\n  showCancelButton: {\n    type: Boolean,\n    default: true\n  },\n  showRemoveButton: {\n    type: Boolean,\n    default: true\n  },\n  showDownloadButton: Boolean,\n  showRetryButton: {\n    type: Boolean,\n    default: true\n  },\n  showPreviewButton: {\n    type: Boolean,\n    default: true\n  },\n  listType: {\n    type: String,\n    default: 'text'\n  },\n  onPreview: Function,\n  createThumbnailUrl: Function,\n  abstract: Boolean,\n  max: Number,\n  showTrigger: {\n    type: Boolean,\n    default: true\n  },\n  imageGroupProps: Object,\n  inputProps: Object\n});\nexport default defineComponent({\n  name: 'Upload',\n  props: uploadProps,\n\n  setup(props) {\n    if (props.abstract && props.listType === 'image-card') {\n      throwError('upload', 'when the list-type is image-card, abstract is not supported.');\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Upload', '-upload', style, uploadLight, props, mergedClsPrefixRef);\n    const formItem = useFormItem(props);\n    const maxReachedRef = computed(() => {\n      const {\n        max\n      } = props;\n\n      if (max !== undefined) {\n        return mergedFileListRef.value.length >= max;\n      }\n\n      return false;\n    });\n    const uncontrolledFileListRef = ref(props.defaultFileList);\n    const controlledFileListRef = toRef(props, 'fileList');\n    const inputElRef = ref(null);\n    const draggerInsideRef = {\n      value: false\n    };\n    const dragOverRef = ref(false);\n    const XhrMap = new Map();\n    const mergedFileListRef = useMergedState(controlledFileListRef, uncontrolledFileListRef);\n\n    function openOpenFileDialog() {\n      var _a;\n\n      (_a = inputElRef.value) === null || _a === void 0 ? void 0 : _a.click();\n    }\n\n    function handleFileInputChange(e) {\n      const target = e.target;\n      handleFileAddition(target.files, e); // May have bug! set to null?\n\n      target.value = '';\n    }\n\n    function doUpdateFileList(files) {\n      const {\n        'onUpdate:fileList': _onUpdateFileList,\n        onUpdateFileList\n      } = props;\n      if (_onUpdateFileList) call(_onUpdateFileList, files);\n      if (onUpdateFileList) call(onUpdateFileList, files);\n      uncontrolledFileListRef.value = files;\n    }\n\n    function handleFileAddition(files, e) {\n      if (!files || files.length === 0) return;\n      const {\n        onBeforeUpload\n      } = props;\n      let filesAsArray = props.multiple ? Array.from(files) : [files[0]];\n      const {\n        max\n      } = props;\n\n      if (max) {\n        filesAsArray = filesAsArray.slice(0, max - mergedFileListRef.value.length);\n      }\n\n      void Promise.all(filesAsArray.map(file => __awaiter(this, void 0, void 0, function* () {\n        const fileInfo = {\n          id: createId(),\n          name: file.name,\n          status: 'pending',\n          percentage: 0,\n          file: file,\n          url: null,\n          type: file.type,\n          thumbnailUrl: null\n        };\n\n        if (!onBeforeUpload || (yield onBeforeUpload({\n          file: fileInfo,\n          fileList: mergedFileListRef.value\n        })) !== false) {\n          return fileInfo;\n        }\n\n        return null;\n      }))).then(fileInfos => __awaiter(this, void 0, void 0, function* () {\n        let nextTickChain = Promise.resolve();\n        fileInfos.forEach(fileInfo => {\n          nextTickChain = nextTickChain.then(nextTick).then(() => {\n            fileInfo && doChange(fileInfo, e, {\n              append: true\n            });\n          });\n        });\n        return yield nextTickChain;\n      })).then(() => {\n        if (props.defaultUpload) {\n          submit();\n        }\n      });\n    }\n\n    function submit(fileId) {\n      const {\n        method,\n        action,\n        withCredentials,\n        headers,\n        data,\n        name: fieldName\n      } = props;\n      const filesToUpload = fileId !== undefined ? mergedFileListRef.value.filter(file => file.id === fileId) : mergedFileListRef.value;\n      const shouldReupload = fileId !== undefined;\n      filesToUpload.forEach(file => {\n        const {\n          status\n        } = file;\n\n        if (status === 'pending' || status === 'error' && shouldReupload) {\n          if (props.customRequest) {\n            customSubmitImpl({\n              inst: {\n                doChange,\n                XhrMap,\n                onFinish: props.onFinish,\n                onError: props.onError\n              },\n              file,\n              action,\n              withCredentials,\n              headers,\n              data,\n              customRequest: props.customRequest\n            });\n          } else {\n            submitImpl({\n              doChange,\n              XhrMap,\n              onFinish: props.onFinish,\n              onError: props.onError\n            }, fieldName, file, {\n              method,\n              action,\n              withCredentials,\n              headers,\n              data\n            });\n          }\n        }\n      });\n    }\n\n    const doChange = (fileAfterChange, event, options = {\n      append: false,\n      remove: false\n    }) => {\n      const {\n        append,\n        remove\n      } = options;\n      const fileListAfterChange = Array.from(mergedFileListRef.value);\n      const fileIndex = fileListAfterChange.findIndex(file => file.id === fileAfterChange.id);\n\n      if (append || remove || ~fileIndex) {\n        if (append) {\n          fileListAfterChange.push(fileAfterChange);\n        } else if (remove) {\n          fileListAfterChange.splice(fileIndex, 1);\n        } else {\n          fileListAfterChange.splice(fileIndex, 1, fileAfterChange);\n        }\n\n        const {\n          onChange\n        } = props;\n\n        if (onChange) {\n          onChange({\n            file: fileAfterChange,\n            fileList: fileListAfterChange,\n            event\n          });\n        }\n\n        doUpdateFileList(fileListAfterChange);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('upload', 'File has no corresponding id in current file list.');\n      }\n    };\n\n    function getFileThumbnailUrl(file) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          createThumbnailUrl\n        } = props;\n        return createThumbnailUrl ? yield createThumbnailUrl(file.file) : yield createImageDataUrl(file.file);\n      });\n    }\n\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          draggerColor,\n          draggerBorder,\n          draggerBorderHover,\n          itemColorHover,\n          itemColorHoverError,\n          itemTextColorError,\n          itemTextColorSuccess,\n          itemTextColor,\n          itemIconColor,\n          itemDisabledOpacity,\n          lineHeight,\n          borderRadius,\n          fontSize,\n          itemBorderImageCardError,\n          itemBorderImageCard\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-dragger-border': draggerBorder,\n        '--n-dragger-border-hover': draggerBorderHover,\n        '--n-dragger-color': draggerColor,\n        '--n-font-size': fontSize,\n        '--n-item-color-hover': itemColorHover,\n        '--n-item-color-hover-error': itemColorHoverError,\n        '--n-item-disabled-opacity': itemDisabledOpacity,\n        '--n-item-icon-color': itemIconColor,\n        '--n-item-text-color': itemTextColor,\n        '--n-item-text-color-error': itemTextColorError,\n        '--n-item-text-color-success': itemTextColorSuccess,\n        '--n-line-height': lineHeight,\n        '--n-item-border-image-card-error': itemBorderImageCardError,\n        '--n-item-border-image-card': itemBorderImageCard\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('upload', undefined, cssVarsRef, props) : undefined;\n    provide(uploadInjectionKey, {\n      mergedClsPrefixRef,\n      mergedThemeRef: themeRef,\n      showCancelButtonRef: toRef(props, 'showCancelButton'),\n      showDownloadButtonRef: toRef(props, 'showDownloadButton'),\n      showRemoveButtonRef: toRef(props, 'showRemoveButton'),\n      showRetryButtonRef: toRef(props, 'showRetryButton'),\n      onRemoveRef: toRef(props, 'onRemove'),\n      onDownloadRef: toRef(props, 'onDownload'),\n      mergedFileListRef: mergedFileListRef,\n      XhrMap,\n      submit,\n      doChange,\n      showPreviewButtonRef: toRef(props, 'showPreviewButton'),\n      onPreviewRef: toRef(props, 'onPreview'),\n      getFileThumbnailUrl,\n      listTypeRef: toRef(props, 'listType'),\n      dragOverRef,\n      openOpenFileDialog,\n      draggerInsideRef,\n      handleFileAddition,\n      mergedDisabledRef: formItem.mergedDisabledRef,\n      maxReachedRef,\n      fileListStyleRef: toRef(props, 'fileListStyle'),\n      abstractRef: toRef(props, 'abstract'),\n      cssVarsRef: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClassRef: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      showTriggerRef: toRef(props, 'showTrigger'),\n      imageGroupPropsRef: toRef(props, 'imageGroupProps')\n    });\n    const exposedMethods = {\n      clear: () => {\n        uncontrolledFileListRef.value = [];\n      },\n      submit,\n      openOpenFileDialog\n    };\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      draggerInsideRef,\n      inputElRef,\n      mergedTheme: themeRef,\n      dragOver: dragOverRef,\n      handleFileInputChange,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    }, exposedMethods);\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      draggerInsideRef,\n      mergedClsPrefix,\n      $slots,\n      onRender\n    } = this;\n\n    if ($slots.default && !this.abstract) {\n      const firstChild = $slots.default()[0];\n\n      if ((_a = firstChild === null || firstChild === void 0 ? void 0 : firstChild.type) === null || _a === void 0 ? void 0 : _a[uploadDraggerKey]) {\n        draggerInsideRef.value = true;\n      }\n    }\n\n    const inputNode = h(\"input\", Object.assign({}, this.inputProps, {\n      ref: \"inputElRef\",\n      type: \"file\",\n      class: `${mergedClsPrefix}-upload-file-input`,\n      accept: this.accept,\n      multiple: this.multiple,\n      onChange: this.handleFileInputChange\n    }));\n\n    if (this.abstract) {\n      return h(Fragment, null, (_b = $slots.default) === null || _b === void 0 ? void 0 : _b.call($slots), h(Teleport, {\n        to: \"body\"\n      }, inputNode));\n    }\n\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-upload`, draggerInsideRef.value && `${mergedClsPrefix}-upload--dragger-inside`, this.dragOver && `${mergedClsPrefix}-upload--drag-over`, this.themeClass],\n      style: this.cssVars\n    }, inputNode, this.showTrigger && this.listType !== 'image-card' && h(NUploadTrigger, null, $slots), this.showFileList && h(NUploadFileList, null, $slots));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/upload/src/Upload.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","h","defineComponent","computed","provide","toRef","ref","Fragment","Teleport","nextTick","createId","useMergedState","useConfig","useTheme","useFormItem","useThemeClass","warn","call","throwError","uploadLight","uploadDraggerKey","uploadInjectionKey","createImageDataUrl","NUploadTrigger","NUploadFileList","style","createXhrHandlers","inst","file","XHR","doChange","XhrMap","percentage","handleXHRError","_a","fileAfterChange","Object","assign","status","delete","id","onError","event","handleXHRLoad","onFinish","handleXHRAbort","handleXHRProgress","lengthComputable","progress","Math","ceil","loaded","total","customSubmitImpl","options","data","headers","withCredentials","action","customRequest","onProgress","percent","registerHandler","request","handlers","onabort","onerror","onload","upload","onprogress","unwrapFunctionValue","setHeaders","headersObject","keys","forEach","key","setRequestHeader","appendData","formData","dataObject","append","submitImpl","fieldName","method","XMLHttpRequest","set","FormData","undefined","open","toUpperCase","send","uploadProps","props","name","type","String","default","accept","Function","multiple","Boolean","showFileList","disabled","onChange","onRemove","onBeforeUpload","onDownload","defaultUpload","fileList","Array","onUpdateFileList","fileListStyle","defaultFileList","showCancelButton","showRemoveButton","showDownloadButton","showRetryButton","showPreviewButton","listType","onPreview","createThumbnailUrl","abstract","max","Number","showTrigger","imageGroupProps","inputProps","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","formItem","maxReachedRef","mergedFileListRef","length","uncontrolledFileListRef","controlledFileListRef","inputElRef","draggerInsideRef","dragOverRef","Map","openOpenFileDialog","click","handleFileInputChange","target","handleFileAddition","files","doUpdateFileList","_onUpdateFileList","filesAsArray","from","slice","all","map","fileInfo","url","thumbnailUrl","fileInfos","nextTickChain","submit","fileId","filesToUpload","filter","shouldReupload","remove","fileListAfterChange","fileIndex","findIndex","push","splice","process","env","NODE_ENV","getFileThumbnailUrl","cssVarsRef","common","cubicBezierEaseInOut","self","draggerColor","draggerBorder","draggerBorderHover","itemColorHover","itemColorHoverError","itemTextColorError","itemTextColorSuccess","itemTextColor","itemIconColor","itemDisabledOpacity","lineHeight","borderRadius","fontSize","itemBorderImageCardError","itemBorderImageCard","themeClassHandle","mergedThemeRef","showCancelButtonRef","showDownloadButtonRef","showRemoveButtonRef","showRetryButtonRef","onRemoveRef","onDownloadRef","showPreviewButtonRef","onPreviewRef","listTypeRef","mergedDisabledRef","fileListStyleRef","abstractRef","themeClassRef","themeClass","onRender","showTriggerRef","imageGroupPropsRef","exposedMethods","clear","mergedClsPrefix","mergedTheme","dragOver","cssVars","render","_b","$slots","firstChild","inputNode","class","to"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { h, defineComponent, computed, provide, toRef, ref, Fragment, Teleport, nextTick } from 'vue';\nimport { createId } from 'seemly';\nimport { useMergedState } from 'vooks';\nimport { useConfig, useTheme, useFormItem, useThemeClass } from '../../_mixins';\nimport { warn, call, throwError } from '../../_utils';\nimport { uploadLight } from '../styles';\nimport { uploadDraggerKey } from './UploadDragger';\nimport { uploadInjectionKey } from './interface';\nimport { createImageDataUrl } from './utils';\nimport NUploadTrigger from './UploadTrigger';\nimport NUploadFileList from './UploadFileList';\nimport style from './styles/index.cssr';\n/**\n * fils status ['pending', 'uploading', 'finished', 'removed', 'error']\n */\nfunction createXhrHandlers(inst, file, XHR) {\n    const { doChange, XhrMap } = inst;\n    let percentage = 0;\n    function handleXHRError(e) {\n        var _a;\n        let fileAfterChange = Object.assign({}, file, {\n            status: 'error',\n            percentage\n        });\n        XhrMap.delete(file.id);\n        fileAfterChange =\n            ((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange, event: e })) || fileAfterChange;\n        doChange(fileAfterChange, e);\n    }\n    function handleXHRLoad(e) {\n        var _a;\n        if (XHR.status < 200 || XHR.status >= 300) {\n            handleXHRError(e);\n            return;\n        }\n        let fileAfterChange = Object.assign({}, file, {\n            status: 'finished',\n            percentage,\n            file: null\n        });\n        XhrMap.delete(file.id);\n        fileAfterChange =\n            ((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange, event: e })) || fileAfterChange;\n        doChange(fileAfterChange, e);\n    }\n    return {\n        handleXHRLoad,\n        handleXHRError,\n        handleXHRAbort(e) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'removed',\n                file: null,\n                percentage\n            });\n            XhrMap.delete(file.id);\n            doChange(fileAfterChange, e);\n        },\n        handleXHRProgress(e) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'uploading'\n            });\n            if (e.lengthComputable) {\n                const progress = Math.ceil((e.loaded / e.total) * 100);\n                fileAfterChange.percentage = progress;\n                percentage = progress;\n            }\n            doChange(fileAfterChange, e);\n        }\n    };\n}\nfunction customSubmitImpl(options) {\n    const { inst, file, data, headers, withCredentials, action, customRequest } = options;\n    const { doChange } = options.inst;\n    let percentage = 0;\n    customRequest({\n        file,\n        data,\n        headers,\n        withCredentials,\n        action,\n        onProgress(event) {\n            const fileAfterChange = Object.assign({}, file, {\n                status: 'uploading'\n            });\n            const progress = event.percent;\n            fileAfterChange.percentage = progress;\n            percentage = progress;\n            doChange(fileAfterChange);\n        },\n        onFinish() {\n            var _a;\n            let fileAfterChange = Object.assign({}, file, {\n                status: 'finished',\n                percentage,\n                file: null\n            });\n            fileAfterChange =\n                ((_a = inst.onFinish) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange })) || fileAfterChange;\n            doChange(fileAfterChange);\n        },\n        onError() {\n            var _a;\n            let fileAfterChange = Object.assign({}, file, {\n                status: 'error',\n                percentage\n            });\n            fileAfterChange =\n                ((_a = inst.onError) === null || _a === void 0 ? void 0 : _a.call(inst, { file: fileAfterChange })) || fileAfterChange;\n            doChange(fileAfterChange);\n        }\n    });\n}\nfunction registerHandler(inst, file, request) {\n    const handlers = createXhrHandlers(inst, file, request);\n    request.onabort = handlers.handleXHRAbort;\n    request.onerror = handlers.handleXHRError;\n    request.onload = handlers.handleXHRLoad;\n    if (request.upload) {\n        request.upload.onprogress = handlers.handleXHRProgress;\n    }\n}\nfunction unwrapFunctionValue(data, file) {\n    if (typeof data === 'function') {\n        return data({ file });\n    }\n    if (data)\n        return data;\n    return {};\n}\nfunction setHeaders(request, headers, file) {\n    const headersObject = unwrapFunctionValue(headers, file);\n    if (!headersObject)\n        return;\n    Object.keys(headersObject).forEach((key) => {\n        request.setRequestHeader(key, headersObject[key]);\n    });\n}\nfunction appendData(formData, data, file) {\n    const dataObject = unwrapFunctionValue(data, file);\n    if (!dataObject)\n        return;\n    Object.keys(dataObject).forEach((key) => {\n        formData.append(key, dataObject[key]);\n    });\n}\nfunction submitImpl(inst, fieldName, file, { method, action, withCredentials, headers, data }) {\n    const request = new XMLHttpRequest();\n    inst.XhrMap.set(file.id, request);\n    request.withCredentials = withCredentials;\n    const formData = new FormData();\n    appendData(formData, data, file);\n    formData.append(fieldName, file.file);\n    registerHandler(inst, file, request);\n    if (action !== undefined) {\n        request.open(method.toUpperCase(), action);\n        setHeaders(request, headers, file);\n        request.send(formData);\n        const fileAfterChange = Object.assign({}, file, {\n            status: 'uploading'\n        });\n        inst.doChange(fileAfterChange);\n    }\n}\nconst uploadProps = Object.assign(Object.assign({}, useTheme.props), { name: {\n        type: String,\n        default: 'file'\n    }, accept: String, action: String, customRequest: Function, \n    // to be impl\n    // directory: {\n    //   type: Boolean,\n    //   default: false\n    // },\n    method: {\n        type: String,\n        default: 'POST'\n    }, multiple: Boolean, showFileList: {\n        type: Boolean,\n        default: true\n    }, data: [Object, Function], headers: [Object, Function], withCredentials: Boolean, disabled: {\n        type: Boolean,\n        default: undefined\n    }, onChange: Function, onRemove: Function, onFinish: Function, onError: Function, onBeforeUpload: Function, \n    /** currently of no usage */\n    onDownload: Function, defaultUpload: {\n        type: Boolean,\n        default: true\n    }, fileList: Array, 'onUpdate:fileList': [Function, Array], onUpdateFileList: [Function, Array], fileListStyle: [String, Object], defaultFileList: {\n        type: Array,\n        default: () => []\n    }, showCancelButton: {\n        type: Boolean,\n        default: true\n    }, showRemoveButton: {\n        type: Boolean,\n        default: true\n    }, showDownloadButton: Boolean, showRetryButton: {\n        type: Boolean,\n        default: true\n    }, showPreviewButton: {\n        type: Boolean,\n        default: true\n    }, listType: {\n        type: String,\n        default: 'text'\n    }, onPreview: Function, createThumbnailUrl: Function, abstract: Boolean, max: Number, showTrigger: {\n        type: Boolean,\n        default: true\n    }, imageGroupProps: Object, inputProps: Object });\nexport default defineComponent({\n    name: 'Upload',\n    props: uploadProps,\n    setup(props) {\n        if (props.abstract && props.listType === 'image-card') {\n            throwError('upload', 'when the list-type is image-card, abstract is not supported.');\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Upload', '-upload', style, uploadLight, props, mergedClsPrefixRef);\n        const formItem = useFormItem(props);\n        const maxReachedRef = computed(() => {\n            const { max } = props;\n            if (max !== undefined) {\n                return mergedFileListRef.value.length >= max;\n            }\n            return false;\n        });\n        const uncontrolledFileListRef = ref(props.defaultFileList);\n        const controlledFileListRef = toRef(props, 'fileList');\n        const inputElRef = ref(null);\n        const draggerInsideRef = {\n            value: false\n        };\n        const dragOverRef = ref(false);\n        const XhrMap = new Map();\n        const mergedFileListRef = useMergedState(controlledFileListRef, uncontrolledFileListRef);\n        function openOpenFileDialog() {\n            var _a;\n            (_a = inputElRef.value) === null || _a === void 0 ? void 0 : _a.click();\n        }\n        function handleFileInputChange(e) {\n            const target = e.target;\n            handleFileAddition(target.files, e);\n            // May have bug! set to null?\n            target.value = '';\n        }\n        function doUpdateFileList(files) {\n            const { 'onUpdate:fileList': _onUpdateFileList, onUpdateFileList } = props;\n            if (_onUpdateFileList)\n                call(_onUpdateFileList, files);\n            if (onUpdateFileList)\n                call(onUpdateFileList, files);\n            uncontrolledFileListRef.value = files;\n        }\n        function handleFileAddition(files, e) {\n            if (!files || files.length === 0)\n                return;\n            const { onBeforeUpload } = props;\n            let filesAsArray = props.multiple ? Array.from(files) : [files[0]];\n            const { max } = props;\n            if (max) {\n                filesAsArray = filesAsArray.slice(0, max - mergedFileListRef.value.length);\n            }\n            void Promise.all(filesAsArray.map((file) => __awaiter(this, void 0, void 0, function* () {\n                const fileInfo = {\n                    id: createId(),\n                    name: file.name,\n                    status: 'pending',\n                    percentage: 0,\n                    file: file,\n                    url: null,\n                    type: file.type,\n                    thumbnailUrl: null\n                };\n                if (!onBeforeUpload ||\n                    (yield onBeforeUpload({\n                        file: fileInfo,\n                        fileList: mergedFileListRef.value\n                    })) !== false) {\n                    return fileInfo;\n                }\n                return null;\n            })))\n                .then((fileInfos) => __awaiter(this, void 0, void 0, function* () {\n                let nextTickChain = Promise.resolve();\n                fileInfos.forEach((fileInfo) => {\n                    nextTickChain = nextTickChain.then(nextTick).then(() => {\n                        fileInfo &&\n                            doChange(fileInfo, e, {\n                                append: true\n                            });\n                    });\n                });\n                return yield nextTickChain;\n            }))\n                .then(() => {\n                if (props.defaultUpload) {\n                    submit();\n                }\n            });\n        }\n        function submit(fileId) {\n            const { method, action, withCredentials, headers, data, name: fieldName } = props;\n            const filesToUpload = fileId !== undefined\n                ? mergedFileListRef.value.filter((file) => file.id === fileId)\n                : mergedFileListRef.value;\n            const shouldReupload = fileId !== undefined;\n            filesToUpload.forEach((file) => {\n                const { status } = file;\n                if (status === 'pending' || (status === 'error' && shouldReupload)) {\n                    if (props.customRequest) {\n                        customSubmitImpl({\n                            inst: {\n                                doChange,\n                                XhrMap,\n                                onFinish: props.onFinish,\n                                onError: props.onError\n                            },\n                            file,\n                            action,\n                            withCredentials,\n                            headers,\n                            data,\n                            customRequest: props.customRequest\n                        });\n                    }\n                    else {\n                        submitImpl({\n                            doChange,\n                            XhrMap,\n                            onFinish: props.onFinish,\n                            onError: props.onError\n                        }, fieldName, file, {\n                            method,\n                            action,\n                            withCredentials,\n                            headers,\n                            data\n                        });\n                    }\n                }\n            });\n        }\n        const doChange = (fileAfterChange, event, options = {\n            append: false,\n            remove: false\n        }) => {\n            const { append, remove } = options;\n            const fileListAfterChange = Array.from(mergedFileListRef.value);\n            const fileIndex = fileListAfterChange.findIndex((file) => file.id === fileAfterChange.id);\n            if (append || remove || ~fileIndex) {\n                if (append) {\n                    fileListAfterChange.push(fileAfterChange);\n                }\n                else if (remove) {\n                    fileListAfterChange.splice(fileIndex, 1);\n                }\n                else {\n                    fileListAfterChange.splice(fileIndex, 1, fileAfterChange);\n                }\n                const { onChange } = props;\n                if (onChange) {\n                    onChange({\n                        file: fileAfterChange,\n                        fileList: fileListAfterChange,\n                        event\n                    });\n                }\n                doUpdateFileList(fileListAfterChange);\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                warn('upload', 'File has no corresponding id in current file list.');\n            }\n        };\n        function getFileThumbnailUrl(file) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const { createThumbnailUrl } = props;\n                return createThumbnailUrl\n                    ? yield createThumbnailUrl(file.file)\n                    : yield createImageDataUrl(file.file);\n            });\n        }\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { draggerColor, draggerBorder, draggerBorderHover, itemColorHover, itemColorHoverError, itemTextColorError, itemTextColorSuccess, itemTextColor, itemIconColor, itemDisabledOpacity, lineHeight, borderRadius, fontSize, itemBorderImageCardError, itemBorderImageCard } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-dragger-border': draggerBorder,\n                '--n-dragger-border-hover': draggerBorderHover,\n                '--n-dragger-color': draggerColor,\n                '--n-font-size': fontSize,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-color-hover-error': itemColorHoverError,\n                '--n-item-disabled-opacity': itemDisabledOpacity,\n                '--n-item-icon-color': itemIconColor,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-error': itemTextColorError,\n                '--n-item-text-color-success': itemTextColorSuccess,\n                '--n-line-height': lineHeight,\n                '--n-item-border-image-card-error': itemBorderImageCardError,\n                '--n-item-border-image-card': itemBorderImageCard\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('upload', undefined, cssVarsRef, props)\n            : undefined;\n        provide(uploadInjectionKey, {\n            mergedClsPrefixRef,\n            mergedThemeRef: themeRef,\n            showCancelButtonRef: toRef(props, 'showCancelButton'),\n            showDownloadButtonRef: toRef(props, 'showDownloadButton'),\n            showRemoveButtonRef: toRef(props, 'showRemoveButton'),\n            showRetryButtonRef: toRef(props, 'showRetryButton'),\n            onRemoveRef: toRef(props, 'onRemove'),\n            onDownloadRef: toRef(props, 'onDownload'),\n            mergedFileListRef: mergedFileListRef,\n            XhrMap,\n            submit,\n            doChange,\n            showPreviewButtonRef: toRef(props, 'showPreviewButton'),\n            onPreviewRef: toRef(props, 'onPreview'),\n            getFileThumbnailUrl,\n            listTypeRef: toRef(props, 'listType'),\n            dragOverRef,\n            openOpenFileDialog,\n            draggerInsideRef,\n            handleFileAddition,\n            mergedDisabledRef: formItem.mergedDisabledRef,\n            maxReachedRef,\n            fileListStyleRef: toRef(props, 'fileListStyle'),\n            abstractRef: toRef(props, 'abstract'),\n            cssVarsRef: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClassRef: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            showTriggerRef: toRef(props, 'showTrigger'),\n            imageGroupPropsRef: toRef(props, 'imageGroupProps')\n        });\n        const exposedMethods = {\n            clear: () => {\n                uncontrolledFileListRef.value = [];\n            },\n            submit,\n            openOpenFileDialog\n        };\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, draggerInsideRef,\n            inputElRef, mergedTheme: themeRef, dragOver: dragOverRef, handleFileInputChange, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender }, exposedMethods);\n    },\n    render() {\n        var _a, _b;\n        const { draggerInsideRef, mergedClsPrefix, $slots, onRender } = this;\n        if ($slots.default && !this.abstract) {\n            const firstChild = $slots.default()[0];\n            if ((_a = firstChild === null || firstChild === void 0 ? void 0 : firstChild.type) === null || _a === void 0 ? void 0 : _a[uploadDraggerKey]) {\n                draggerInsideRef.value = true;\n            }\n        }\n        const inputNode = (h(\"input\", Object.assign({}, this.inputProps, { ref: \"inputElRef\", type: \"file\", class: `${mergedClsPrefix}-upload-file-input`, accept: this.accept, multiple: this.multiple, onChange: this.handleFileInputChange })));\n        if (this.abstract) {\n            return (h(Fragment, null, (_b = $slots.default) === null || _b === void 0 ? void 0 :\n                _b.call($slots),\n                h(Teleport, { to: \"body\" }, inputNode)));\n        }\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-upload`,\n                draggerInsideRef.value && `${mergedClsPrefix}-upload--dragger-inside`,\n                this.dragOver && `${mergedClsPrefix}-upload--drag-over`,\n                this.themeClass\n            ], style: this.cssVars },\n            inputNode,\n            this.showTrigger && this.listType !== 'image-card' && (h(NUploadTrigger, null, $slots)),\n            this.showFileList && h(NUploadFileList, null, $slots)));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}