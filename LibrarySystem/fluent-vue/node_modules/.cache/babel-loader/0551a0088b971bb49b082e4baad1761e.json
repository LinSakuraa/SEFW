{"ast":null,"code":"import { computed, defineComponent, h, Transition, watchEffect } from 'vue';\nimport { useCompitable } from 'vooks';\nimport { pxfy } from 'seemly';\nimport { NBaseLoading } from '../../_internal';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, warnOnce } from '../../_utils';\nimport { spinLight } from '../styles';\nimport style from './styles/index.cssr';\nconst STROKE_WIDTH = {\n  small: 20,\n  medium: 18,\n  large: 16\n};\nconst spinProps = Object.assign(Object.assign({}, useTheme.props), {\n  description: String,\n  stroke: String,\n  size: {\n    type: [String, Number],\n    default: 'medium'\n  },\n  show: {\n    type: Boolean,\n    default: true\n  },\n  strokeWidth: Number,\n  rotate: {\n    type: Boolean,\n    default: true\n  },\n  spinning: {\n    type: Boolean,\n    validator: () => {\n      return true;\n    },\n    default: undefined\n  }\n});\nexport default defineComponent({\n  name: 'Spin',\n  props: spinProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.spinning !== undefined) {\n          warnOnce('spin', '`spinning` is deprecated, please use `show` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Spin', '-spin', style, spinLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        size: spinSize\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self\n      } = themeRef.value;\n      const {\n        opacitySpinning,\n        color,\n        textColor\n      } = self;\n      const size = typeof spinSize === 'number' ? pxfy(spinSize) : self[createKey('size', spinSize)];\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-opacity-spinning': opacitySpinning,\n        '--n-size': size,\n        '--n-color': color,\n        '--n-text-color': textColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('spin', computed(() => {\n      const {\n        size\n      } = props;\n      return typeof size === 'number' ? String(size) : size[0];\n    }), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      compitableShow: useCompitable(props, ['spinning', 'show']),\n      mergedStrokeWidth: computed(() => {\n        const {\n          strokeWidth\n        } = props;\n        if (strokeWidth !== undefined) return strokeWidth;\n        const {\n          size\n        } = props;\n        return STROKE_WIDTH[typeof size === 'number' ? 'medium' : size];\n      }),\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      $slots,\n      mergedClsPrefix,\n      description\n    } = this;\n    const rotate = $slots.icon && this.rotate;\n    const descriptionNode = (description || $slots.description) && h(\"div\", {\n      class: `${mergedClsPrefix}-spin-description`\n    }, description || ((_a = $slots.description) === null || _a === void 0 ? void 0 : _a.call($slots)));\n    const icon = $slots.icon ? h(\"div\", {\n      class: [`${mergedClsPrefix}-spin-body`, this.themeClass]\n    }, h(\"div\", {\n      class: [`${mergedClsPrefix}-spin`, rotate && `${mergedClsPrefix}-spin--rotate`],\n      style: $slots.default ? '' : this.cssVars\n    }, $slots.icon()), descriptionNode) : h(\"div\", {\n      class: [`${mergedClsPrefix}-spin-body`, this.themeClass]\n    }, h(NBaseLoading, {\n      clsPrefix: mergedClsPrefix,\n      style: $slots.default ? '' : this.cssVars,\n      stroke: this.stroke,\n      \"stroke-width\": this.mergedStrokeWidth,\n      class: `${mergedClsPrefix}-spin`\n    }), descriptionNode);\n    (_b = this.onRender) === null || _b === void 0 ? void 0 : _b.call(this);\n    return $slots.default ? h(\"div\", {\n      class: [`${mergedClsPrefix}-spin-container`, this.themeClass],\n      style: this.cssVars\n    }, h(\"div\", {\n      class: [`${mergedClsPrefix}-spin-content`, this.compitableShow && `${mergedClsPrefix}-spin-content--spinning`]\n    }, $slots), h(Transition, {\n      name: \"fade-in-transition\"\n    }, {\n      default: () => this.compitableShow ? icon : null\n    })) : icon;\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/spin/src/Spin.js"],"names":["computed","defineComponent","h","Transition","watchEffect","useCompitable","pxfy","NBaseLoading","useConfig","useTheme","useThemeClass","createKey","warnOnce","spinLight","style","STROKE_WIDTH","small","medium","large","spinProps","Object","assign","props","description","String","stroke","size","type","Number","default","show","Boolean","strokeWidth","rotate","spinning","validator","undefined","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","inlineThemeDisabled","themeRef","cssVarsRef","spinSize","common","cubicBezierEaseInOut","self","value","opacitySpinning","color","textColor","themeClassHandle","mergedClsPrefix","compitableShow","mergedStrokeWidth","cssVars","themeClass","onRender","render","_a","_b","$slots","icon","descriptionNode","class","call","clsPrefix"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,CAApC,EAAuCC,UAAvC,EAAmDC,WAAnD,QAAsE,KAAtE;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,eAAnD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAKA,MAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,QAAQ,CAACa,KAA3B,CAAd,EAAiD;AAAEC,EAAAA,WAAW,EAAEC,MAAf;AAAuBC,EAAAA,MAAM,EAAED,MAA/B;AAAuCE,EAAAA,IAAI,EAAE;AACxGC,IAAAA,IAAI,EAAE,CAACH,MAAD,EAASI,MAAT,CADkG;AAExGC,IAAAA,OAAO,EAAE;AAF+F,GAA7C;AAG5DC,EAAAA,IAAI,EAAE;AACLH,IAAAA,IAAI,EAAEI,OADD;AAELF,IAAAA,OAAO,EAAE;AAFJ,GAHsD;AAM5DG,EAAAA,WAAW,EAAEJ,MAN+C;AAMvCK,EAAAA,MAAM,EAAE;AAC5BN,IAAAA,IAAI,EAAEI,OADsB;AAE5BF,IAAAA,OAAO,EAAE;AAFmB,GAN+B;AAS5DK,EAAAA,QAAQ,EAAE;AACTP,IAAAA,IAAI,EAAEI,OADG;AAETI,IAAAA,SAAS,EAAE,MAAM;AACb,aAAO,IAAP;AACH,KAJQ;AAKTN,IAAAA,OAAO,EAAEO;AALA;AATkD,CAAjD,CAAlB;AAgBA,eAAenC,eAAe,CAAC;AAC3BoC,EAAAA,IAAI,EAAE,MADqB;AAE3Bf,EAAAA,KAAK,EAAEH,SAFoB;;AAG3BmB,EAAAA,KAAK,CAAChB,KAAD,EAAQ;AACT,QAAIiB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCrC,MAAAA,WAAW,CAAC,MAAM;AACd,YAAIkB,KAAK,CAACY,QAAN,KAAmBE,SAAvB,EAAkC;AAC9BxB,UAAAA,QAAQ,CAAC,MAAD,EAAS,sDAAT,CAAR;AACH;AACJ,OAJU,CAAX;AAKH;;AACD,UAAM;AAAE8B,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAA8CnC,SAAS,CAACc,KAAD,CAA7D;AACA,UAAMsB,QAAQ,GAAGnC,QAAQ,CAAC,MAAD,EAAS,OAAT,EAAkBK,KAAlB,EAAyBD,SAAzB,EAAoCS,KAApC,EAA2CoB,kBAA3C,CAAzB;AACA,UAAMG,UAAU,GAAG7C,QAAQ,CAAC,MAAM;AAC9B,YAAM;AAAE0B,QAAAA,IAAI,EAAEoB;AAAR,UAAqBxB,KAA3B;AACA,YAAM;AAAEyB,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF,SAAV;AAAoCC,QAAAA;AAApC,UAA6CL,QAAQ,CAACM,KAA5D;AACA,YAAM;AAAEC,QAAAA,eAAF;AAAmBC,QAAAA,KAAnB;AAA0BC,QAAAA;AAA1B,UAAwCJ,IAA9C;AACA,YAAMvB,IAAI,GAAG,OAAOoB,QAAP,KAAoB,QAApB,GACPxC,IAAI,CAACwC,QAAD,CADG,GAEPG,IAAI,CAACtC,SAAS,CAAC,MAAD,EAASmC,QAAT,CAAV,CAFV;AAGA,aAAO;AACH,sBAAcE,oBADX;AAEH,gCAAwBG,eAFrB;AAGH,oBAAYzB,IAHT;AAIH,qBAAa0B,KAJV;AAKH,0BAAkBC;AALf,OAAP;AAOH,KAd0B,CAA3B;AAeA,UAAMC,gBAAgB,GAAGX,mBAAmB,GACtCjC,aAAa,CAAC,MAAD,EAASV,QAAQ,CAAC,MAAM;AACnC,YAAM;AAAE0B,QAAAA;AAAF,UAAWJ,KAAjB;AACA,aAAO,OAAOI,IAAP,KAAgB,QAAhB,GAA2BF,MAAM,CAACE,IAAD,CAAjC,GAA0CA,IAAI,CAAC,CAAD,CAArD;AACH,KAH+B,CAAjB,EAGXmB,UAHW,EAGCvB,KAHD,CADyB,GAKtCc,SALN;AAMA,WAAO;AACHmB,MAAAA,eAAe,EAAEb,kBADd;AAEHc,MAAAA,cAAc,EAAEnD,aAAa,CAACiB,KAAD,EAAQ,CAAC,UAAD,EAAa,MAAb,CAAR,CAF1B;AAGHmC,MAAAA,iBAAiB,EAAEzD,QAAQ,CAAC,MAAM;AAC9B,cAAM;AAAEgC,UAAAA;AAAF,YAAkBV,KAAxB;AACA,YAAIU,WAAW,KAAKI,SAApB,EACI,OAAOJ,WAAP;AACJ,cAAM;AAAEN,UAAAA;AAAF,YAAWJ,KAAjB;AACA,eAAOP,YAAY,CAAC,OAAOW,IAAP,KAAgB,QAAhB,GAA2B,QAA3B,GAAsCA,IAAvC,CAAnB;AACH,OAN0B,CAHxB;AAUHgC,MAAAA,OAAO,EAAEf,mBAAmB,GAAGP,SAAH,GAAeS,UAVxC;AAWHc,MAAAA,UAAU,EAAEL,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACK,UAX9F;AAYHC,MAAAA,QAAQ,EAAEN,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACM;AAZ5F,KAAP;AAcH,GAhD0B;;AAiD3BC,EAAAA,MAAM,GAAG;AACL,QAAIC,EAAJ,EAAQC,EAAR;;AACA,UAAM;AAAEC,MAAAA,MAAF;AAAUT,MAAAA,eAAV;AAA2BhC,MAAAA;AAA3B,QAA2C,IAAjD;AACA,UAAMU,MAAM,GAAG+B,MAAM,CAACC,IAAP,IAAe,KAAKhC,MAAnC;AACA,UAAMiC,eAAe,GAAG,CAAC3C,WAAW,IAAIyC,MAAM,CAACzC,WAAvB,KAAwCrB,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAG,GAAEZ,eAAgB;AAA5B,KAAR,EAA0DhC,WAAW,KAAK,CAACuC,EAAE,GAAGE,MAAM,CAACzC,WAAb,MAA8B,IAA9B,IAAsCuC,EAAE,KAAK,KAAK,CAAlD,GAAsD,KAAK,CAA3D,GAA+DA,EAAE,CAACM,IAAH,CAAQJ,MAAR,CAApE,CAArE,CAAjE;AACA,UAAMC,IAAI,GAAGD,MAAM,CAACC,IAAP,GAAe/D,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAE,CAAE,GAAEZ,eAAgB,YAApB,EAAiC,KAAKI,UAAtC;AAAT,KAAR,EACzBzD,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAE,CACT,GAAEZ,eAAgB,OADT,EAEVtB,MAAM,IAAK,GAAEsB,eAAgB,eAFnB,CAAT;AAGFzC,MAAAA,KAAK,EAAEkD,MAAM,CAACnC,OAAP,GAAiB,EAAjB,GAAsB,KAAK6B;AAHhC,KAAR,EAGmDM,MAAM,CAACC,IAAP,EAHnD,CADwB,EAKzBC,eALyB,CAAhB,GAKYhE,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAE,CAAE,GAAEZ,eAAgB,YAApB,EAAiC,KAAKI,UAAtC;AAAT,KAAR,EACtBzD,CAAC,CAACK,YAAD,EAAe;AAAE8D,MAAAA,SAAS,EAAEd,eAAb;AAA8BzC,MAAAA,KAAK,EAAEkD,MAAM,CAACnC,OAAP,GAAiB,EAAjB,GAAsB,KAAK6B,OAAhE;AAAyEjC,MAAAA,MAAM,EAAE,KAAKA,MAAtF;AAA8F,sBAAgB,KAAKgC,iBAAnH;AAAsIU,MAAAA,KAAK,EAAG,GAAEZ,eAAgB;AAAhK,KAAf,CADqB,EAEtBW,eAFsB,CAL1B;AAQA,KAACH,EAAE,GAAG,KAAKH,QAAX,MAAyB,IAAzB,IAAiCG,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GAA0DA,EAAE,CAACK,IAAH,CAAQ,IAAR,CAA1D;AACA,WAAOJ,MAAM,CAACnC,OAAP,GAAkB3B,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAE,CAAE,GAAEZ,eAAgB,iBAApB,EAAsC,KAAKI,UAA3C,CAAT;AAAiE7C,MAAAA,KAAK,EAAE,KAAK4C;AAA7E,KAAR,EACtBxD,CAAC,CAAC,KAAD,EAAQ;AAAEiE,MAAAA,KAAK,EAAE,CACT,GAAEZ,eAAgB,eADT,EAEV,KAAKC,cAAL,IAAwB,GAAED,eAAgB,yBAFhC;AAAT,KAAR,EAGQS,MAHR,CADqB,EAKtB9D,CAAC,CAACC,UAAD,EAAa;AAAEkC,MAAAA,IAAI,EAAE;AAAR,KAAb,EAA6C;AAC1CR,MAAAA,OAAO,EAAE,MAAO,KAAK2B,cAAL,GAAsBS,IAAtB,GAA6B;AADH,KAA7C,CALqB,CAAnB,GAOKA,IAPZ;AAQH;;AAvE0B,CAAD,CAA9B","sourcesContent":["import { computed, defineComponent, h, Transition, watchEffect } from 'vue';\nimport { useCompitable } from 'vooks';\nimport { pxfy } from 'seemly';\nimport { NBaseLoading } from '../../_internal';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, warnOnce } from '../../_utils';\nimport { spinLight } from '../styles';\nimport style from './styles/index.cssr';\nconst STROKE_WIDTH = {\n    small: 20,\n    medium: 18,\n    large: 16\n};\nconst spinProps = Object.assign(Object.assign({}, useTheme.props), { description: String, stroke: String, size: {\n        type: [String, Number],\n        default: 'medium'\n    }, show: {\n        type: Boolean,\n        default: true\n    }, strokeWidth: Number, rotate: {\n        type: Boolean,\n        default: true\n    }, spinning: {\n        type: Boolean,\n        validator: () => {\n            return true;\n        },\n        default: undefined\n    } });\nexport default defineComponent({\n    name: 'Spin',\n    props: spinProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.spinning !== undefined) {\n                    warnOnce('spin', '`spinning` is deprecated, please use `show` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Spin', '-spin', style, spinLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { size: spinSize } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { opacitySpinning, color, textColor } = self;\n            const size = typeof spinSize === 'number'\n                ? pxfy(spinSize)\n                : self[createKey('size', spinSize)];\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-opacity-spinning': opacitySpinning,\n                '--n-size': size,\n                '--n-color': color,\n                '--n-text-color': textColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('spin', computed(() => {\n                const { size } = props;\n                return typeof size === 'number' ? String(size) : size[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            compitableShow: useCompitable(props, ['spinning', 'show']),\n            mergedStrokeWidth: computed(() => {\n                const { strokeWidth } = props;\n                if (strokeWidth !== undefined)\n                    return strokeWidth;\n                const { size } = props;\n                return STROKE_WIDTH[typeof size === 'number' ? 'medium' : size];\n            }),\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a, _b;\n        const { $slots, mergedClsPrefix, description } = this;\n        const rotate = $slots.icon && this.rotate;\n        const descriptionNode = (description || $slots.description) && (h(\"div\", { class: `${mergedClsPrefix}-spin-description` }, description || ((_a = $slots.description) === null || _a === void 0 ? void 0 : _a.call($slots))));\n        const icon = $slots.icon ? (h(\"div\", { class: [`${mergedClsPrefix}-spin-body`, this.themeClass] },\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-spin`,\n                    rotate && `${mergedClsPrefix}-spin--rotate`\n                ], style: $slots.default ? '' : this.cssVars }, $slots.icon()),\n            descriptionNode)) : (h(\"div\", { class: [`${mergedClsPrefix}-spin-body`, this.themeClass] },\n            h(NBaseLoading, { clsPrefix: mergedClsPrefix, style: $slots.default ? '' : this.cssVars, stroke: this.stroke, \"stroke-width\": this.mergedStrokeWidth, class: `${mergedClsPrefix}-spin` }),\n            descriptionNode));\n        (_b = this.onRender) === null || _b === void 0 ? void 0 : _b.call(this);\n        return $slots.default ? (h(\"div\", { class: [`${mergedClsPrefix}-spin-container`, this.themeClass], style: this.cssVars },\n            h(\"div\", { class: [\n                    `${mergedClsPrefix}-spin-content`,\n                    this.compitableShow && `${mergedClsPrefix}-spin-content--spinning`\n                ] }, $slots),\n            h(Transition, { name: \"fade-in-transition\" }, {\n                default: () => (this.compitableShow ? icon : null)\n            }))) : (icon);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}