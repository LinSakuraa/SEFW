{"ast":null,"code":"import { h, defineComponent, computed, ref, provide, toRef } from 'vue';\nimport { useConfig, useThemeClass, useTheme } from '../../_mixins';\nimport { NBaseClose } from '../../_internal';\nimport { warn, createKey, call, createInjectionKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { tagLight } from '../styles';\nimport commonProps from './common-props';\nimport style from './styles/index.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst tagProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  checked: Boolean,\n  checkable: Boolean,\n  onClose: [Array, Function],\n  onMouseenter: Function,\n  onMouseleave: Function,\n  'onUpdate:checked': Function,\n  onUpdateChecked: Function,\n  // private\n  internalStopClickPropagation: Boolean,\n  // deprecated\n  onCheckedChange: {\n    type: Function,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('tag', '`on-checked-change` is deprecated, please use `on-update:checked` instead');\n      }\n\n      return true;\n    },\n    default: undefined\n  }\n});\nexport const tagInjectionKey = createInjectionKey('n-tag');\nexport default defineComponent({\n  name: 'Tag',\n  props: tagProps,\n\n  setup(props) {\n    const contentRef = ref(null);\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Tag', '-tag', style, tagLight, props, mergedClsPrefixRef);\n    provide(tagInjectionKey, {\n      roundRef: toRef(props, 'round')\n    });\n\n    function handleClick(e) {\n      if (!props.disabled) {\n        if (props.checkable) {\n          const {\n            checked,\n            onCheckedChange,\n            onUpdateChecked,\n            'onUpdate:checked': _onUpdateChecked\n          } = props;\n          if (onUpdateChecked) onUpdateChecked(!checked);\n          if (_onUpdateChecked) _onUpdateChecked(!checked); // deprecated\n\n          if (onCheckedChange) onCheckedChange(!checked);\n        }\n      }\n    }\n\n    function handleCloseClick(e) {\n      if (props.internalStopClickPropagation) {\n        e.stopPropagation();\n      }\n\n      if (!props.disabled) {\n        const {\n          onClose\n        } = props;\n        if (onClose) call(onClose, e);\n      }\n    }\n\n    const tagPublicMethods = {\n      setTextContent(textContent) {\n        const {\n          value\n        } = contentRef;\n        if (value) value.textContent = textContent;\n      }\n\n    };\n    const rtlEnabledRef = useRtl('Tag', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        type,\n        size,\n        color: {\n          color,\n          textColor\n        } = {}\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          padding,\n          closeMargin,\n          closeMarginRtl,\n          borderRadius,\n          opacityDisabled,\n          textColorCheckable,\n          textColorHoverCheckable,\n          textColorPressedCheckable,\n          textColorChecked,\n          colorCheckable,\n          colorHoverCheckable,\n          colorPressedCheckable,\n          colorChecked,\n          colorCheckedHover,\n          colorCheckedPressed,\n          [createKey('closeSize', size)]: closeSize,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height,\n          [createKey('color', type)]: typedColor,\n          [createKey('textColor', type)]: typeTextColor,\n          [createKey('border', type)]: border,\n          [createKey('closeColor', type)]: closeColor,\n          [createKey('closeColorHover', type)]: closeColorHover,\n          [createKey('closeColorPressed', type)]: closeColorPressed\n        }\n      } = themeRef.value;\n      return {\n        '--n-avatar-size-override': `calc(${height} - 8px)`,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-border': border,\n        '--n-close-color': closeColor,\n        '--n-close-color-hover': closeColorHover,\n        '--n-close-color-pressed': closeColorPressed,\n        '--n-close-color-disabled': closeColor,\n        '--n-close-margin': closeMargin,\n        '--n-close-margin-rtl': closeMarginRtl,\n        '--n-close-size': closeSize,\n        '--n-color': color || typedColor,\n        '--n-color-checkable': colorCheckable,\n        '--n-color-checked': colorChecked,\n        '--n-color-checked-hover': colorCheckedHover,\n        '--n-color-checked-pressed': colorCheckedPressed,\n        '--n-color-hover-checkable': colorHoverCheckable,\n        '--n-color-pressed-checkable': colorPressedCheckable,\n        '--n-font-size': fontSize,\n        '--n-height': height,\n        '--n-opacity-disabled': opacityDisabled,\n        '--n-padding': padding,\n        '--n-text-color': textColor || typeTextColor,\n        '--n-text-color-checkable': textColorCheckable,\n        '--n-text-color-checked': textColorChecked,\n        '--n-text-color-hover-checkable': textColorHoverCheckable,\n        '--n-text-color-pressed-checkable': textColorPressedCheckable\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('tag', computed(() => {\n      let hash = '';\n      const {\n        type,\n        size,\n        color: {\n          color,\n          textColor\n        } = {}\n      } = props;\n      hash += type[0];\n      hash += size[0];\n\n      if (color) {\n        hash += `a${color2Class(color)}`;\n      }\n\n      if (textColor) {\n        hash += `b${color2Class(textColor)}`;\n      }\n\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, tagPublicMethods), {\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      contentRef,\n      mergedBordered: mergedBorderedRef,\n      handleClick,\n      handleCloseClick,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    var _a, _b;\n\n    const {\n      mergedClsPrefix,\n      rtlEnabled,\n      color: {\n        borderColor\n      } = {},\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-tag`, this.themeClass, {\n        [`${mergedClsPrefix}-tag--rtl`]: rtlEnabled,\n        [`${mergedClsPrefix}-tag--disabled`]: this.disabled,\n        [`${mergedClsPrefix}-tag--checkable`]: this.checkable,\n        [`${mergedClsPrefix}-tag--checked`]: this.checkable && this.checked,\n        [`${mergedClsPrefix}-tag--round`]: this.round\n      }],\n      style: this.cssVars,\n      onClick: this.handleClick,\n      onMouseenter: this.onMouseenter,\n      onMouseleave: this.onMouseleave\n    }, resolveWrappedSlot($slots.avatar, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-tag__avatar`\n    }, children)), h(\"span\", {\n      class: `${mergedClsPrefix}-tag__content`,\n      ref: \"contentRef\"\n    }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)), !this.checkable && this.closable ? h(NBaseClose, {\n      clsPrefix: mergedClsPrefix,\n      class: `${mergedClsPrefix}-tag__close`,\n      disabled: this.disabled,\n      onClick: this.handleCloseClick\n    }) : null, !this.checkable && this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-tag__border`,\n      style: {\n        borderColor\n      }\n    }) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tag/src/Tag.js"],"names":["h","defineComponent","computed","ref","provide","toRef","useConfig","useThemeClass","useTheme","NBaseClose","warn","createKey","call","createInjectionKey","color2Class","resolveWrappedSlot","tagLight","commonProps","style","useRtl","tagProps","Object","assign","props","bordered","type","Boolean","default","undefined","checked","checkable","onClose","Array","Function","onMouseenter","onMouseleave","onUpdateChecked","internalStopClickPropagation","onCheckedChange","validator","process","env","NODE_ENV","tagInjectionKey","name","setup","contentRef","mergedBorderedRef","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","themeRef","roundRef","handleClick","e","disabled","_onUpdateChecked","handleCloseClick","stopPropagation","tagPublicMethods","setTextContent","textContent","value","rtlEnabledRef","cssVarsRef","size","color","textColor","common","cubicBezierEaseInOut","self","padding","closeMargin","closeMarginRtl","borderRadius","opacityDisabled","textColorCheckable","textColorHoverCheckable","textColorPressedCheckable","textColorChecked","colorCheckable","colorHoverCheckable","colorPressedCheckable","colorChecked","colorCheckedHover","colorCheckedPressed","closeSize","fontSize","height","typedColor","typeTextColor","border","closeColor","closeColorHover","closeColorPressed","themeClassHandle","hash","rtlEnabled","mergedClsPrefix","mergedBordered","cssVars","themeClass","onRender","render","_a","_b","borderColor","$slots","class","round","onClick","avatar","children","closable","clsPrefix"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, ref, provide, toRef } from 'vue';\nimport { useConfig, useThemeClass, useTheme } from '../../_mixins';\nimport { NBaseClose } from '../../_internal';\nimport { warn, createKey, call, createInjectionKey, color2Class, resolveWrappedSlot } from '../../_utils';\nimport { tagLight } from '../styles';\nimport commonProps from './common-props';\nimport style from './styles/index.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst tagProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), { bordered: {\n        type: Boolean,\n        default: undefined\n    }, checked: Boolean, checkable: Boolean, onClose: [Array, Function], onMouseenter: Function, onMouseleave: Function, 'onUpdate:checked': Function, onUpdateChecked: Function, \n    // private\n    internalStopClickPropagation: Boolean, \n    // deprecated\n    onCheckedChange: {\n        type: Function,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('tag', '`on-checked-change` is deprecated, please use `on-update:checked` instead');\n            }\n            return true;\n        },\n        default: undefined\n    } });\nexport const tagInjectionKey = createInjectionKey('n-tag');\nexport default defineComponent({\n    name: 'Tag',\n    props: tagProps,\n    setup(props) {\n        const contentRef = ref(null);\n        const { mergedBorderedRef, mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Tag', '-tag', style, tagLight, props, mergedClsPrefixRef);\n        provide(tagInjectionKey, {\n            roundRef: toRef(props, 'round')\n        });\n        function handleClick(e) {\n            if (!props.disabled) {\n                if (props.checkable) {\n                    const { checked, onCheckedChange, onUpdateChecked, 'onUpdate:checked': _onUpdateChecked } = props;\n                    if (onUpdateChecked)\n                        onUpdateChecked(!checked);\n                    if (_onUpdateChecked)\n                        _onUpdateChecked(!checked);\n                    // deprecated\n                    if (onCheckedChange)\n                        onCheckedChange(!checked);\n                }\n            }\n        }\n        function handleCloseClick(e) {\n            if (props.internalStopClickPropagation) {\n                e.stopPropagation();\n            }\n            if (!props.disabled) {\n                const { onClose } = props;\n                if (onClose)\n                    call(onClose, e);\n            }\n        }\n        const tagPublicMethods = {\n            setTextContent(textContent) {\n                const { value } = contentRef;\n                if (value)\n                    value.textContent = textContent;\n            }\n        };\n        const rtlEnabledRef = useRtl('Tag', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { type, size, color: { color, textColor } = {} } = props;\n            const { common: { cubicBezierEaseInOut }, self: { padding, closeMargin, closeMarginRtl, borderRadius, opacityDisabled, textColorCheckable, textColorHoverCheckable, textColorPressedCheckable, textColorChecked, colorCheckable, colorHoverCheckable, colorPressedCheckable, colorChecked, colorCheckedHover, colorCheckedPressed, [createKey('closeSize', size)]: closeSize, [createKey('fontSize', size)]: fontSize, [createKey('height', size)]: height, [createKey('color', type)]: typedColor, [createKey('textColor', type)]: typeTextColor, [createKey('border', type)]: border, [createKey('closeColor', type)]: closeColor, [createKey('closeColorHover', type)]: closeColorHover, [createKey('closeColorPressed', type)]: closeColorPressed } } = themeRef.value;\n            return {\n                '--n-avatar-size-override': `calc(${height} - 8px)`,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-border': border,\n                '--n-close-color': closeColor,\n                '--n-close-color-hover': closeColorHover,\n                '--n-close-color-pressed': closeColorPressed,\n                '--n-close-color-disabled': closeColor,\n                '--n-close-margin': closeMargin,\n                '--n-close-margin-rtl': closeMarginRtl,\n                '--n-close-size': closeSize,\n                '--n-color': color || typedColor,\n                '--n-color-checkable': colorCheckable,\n                '--n-color-checked': colorChecked,\n                '--n-color-checked-hover': colorCheckedHover,\n                '--n-color-checked-pressed': colorCheckedPressed,\n                '--n-color-hover-checkable': colorHoverCheckable,\n                '--n-color-pressed-checkable': colorPressedCheckable,\n                '--n-font-size': fontSize,\n                '--n-height': height,\n                '--n-opacity-disabled': opacityDisabled,\n                '--n-padding': padding,\n                '--n-text-color': textColor || typeTextColor,\n                '--n-text-color-checkable': textColorCheckable,\n                '--n-text-color-checked': textColorChecked,\n                '--n-text-color-hover-checkable': textColorHoverCheckable,\n                '--n-text-color-pressed-checkable': textColorPressedCheckable\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('tag', computed(() => {\n                let hash = '';\n                const { type, size, color: { color, textColor } = {} } = props;\n                hash += type[0];\n                hash += size[0];\n                if (color) {\n                    hash += `a${color2Class(color)}`;\n                }\n                if (textColor) {\n                    hash += `b${color2Class(textColor)}`;\n                }\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, tagPublicMethods), { rtlEnabled: rtlEnabledRef, mergedClsPrefix: mergedClsPrefixRef, contentRef, mergedBordered: mergedBorderedRef, handleClick,\n            handleCloseClick, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        var _a, _b;\n        const { mergedClsPrefix, rtlEnabled, color: { borderColor } = {}, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-tag`,\n                this.themeClass,\n                {\n                    [`${mergedClsPrefix}-tag--rtl`]: rtlEnabled,\n                    [`${mergedClsPrefix}-tag--disabled`]: this.disabled,\n                    [`${mergedClsPrefix}-tag--checkable`]: this.checkable,\n                    [`${mergedClsPrefix}-tag--checked`]: this.checkable && this.checked,\n                    [`${mergedClsPrefix}-tag--round`]: this.round\n                }\n            ], style: this.cssVars, onClick: this.handleClick, onMouseenter: this.onMouseenter, onMouseleave: this.onMouseleave },\n            resolveWrappedSlot($slots.avatar, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-tag__avatar` }, children))),\n            h(\"span\", { class: `${mergedClsPrefix}-tag__content`, ref: \"contentRef\" }, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a)),\n            !this.checkable && this.closable ? (h(NBaseClose, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-tag__close`, disabled: this.disabled, onClick: this.handleCloseClick })) : null,\n            !this.checkable && this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-tag__border`, style: { borderColor } })) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}