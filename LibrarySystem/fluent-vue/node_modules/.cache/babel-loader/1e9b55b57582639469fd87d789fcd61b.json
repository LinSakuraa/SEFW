{"ast":null,"code":"import { h, ref, defineComponent, provide, computed } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NFadeInExpandTransition } from '../../_internal';\nimport { NDropdown } from '../../dropdown';\nimport NMenuOptionContent from './MenuOptionContent'; // eslint-disable-next-line import/no-cycle\n\nimport { itemRenderer } from './utils';\nimport { useMenuChild } from './use-menu-child';\nimport { useMenuChildProps } from './use-menu-child-props';\nimport { menuItemGroupInjectionKey, submenuInjectionKey } from './context';\nexport const submenuProps = Object.assign(Object.assign({}, useMenuChildProps), {\n  rawNodes: {\n    type: Array,\n    default: () => []\n  },\n  tmNodes: {\n    type: Array,\n    default: () => []\n  },\n  tmNode: {\n    type: Object,\n    required: true\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  icon: Function,\n  onClick: Function\n});\nexport const NSubmenu = defineComponent({\n  name: 'Submenu',\n  props: submenuProps,\n\n  setup(props) {\n    const MenuChild = useMenuChild(props);\n    const {\n      NMenu,\n      NSubmenu\n    } = MenuChild;\n    const {\n      props: menuProps,\n      mergedCollapsedRef,\n      mergedThemeRef\n    } = NMenu;\n    const mergedDisabledRef = computed(() => {\n      const {\n        disabled\n      } = props;\n      if (NSubmenu === null || NSubmenu === void 0 ? void 0 : NSubmenu.mergedDisabledRef.value) return true;\n      if (menuProps.disabled) return true;\n      return disabled;\n    });\n    const dropdownShowRef = ref(false);\n    provide(submenuInjectionKey, {\n      paddingLeftRef: MenuChild.paddingLeft,\n      mergedDisabledRef\n    });\n    provide(menuItemGroupInjectionKey, null);\n\n    function doClick() {\n      const {\n        onClick\n      } = props;\n      if (onClick) onClick();\n    }\n\n    function handleClick() {\n      if (!mergedDisabledRef.value) {\n        if (!mergedCollapsedRef.value) {\n          NMenu.toggleExpand(props.internalKey);\n        }\n\n        doClick();\n      }\n    }\n\n    function handlePopoverShowChange(value) {\n      dropdownShowRef.value = value;\n    }\n\n    return {\n      menuProps,\n      mergedTheme: mergedThemeRef,\n      doSelect: NMenu.doSelect,\n      inverted: NMenu.invertedRef,\n      isHorizontal: NMenu.isHorizontalRef,\n      mergedClsPrefix: NMenu.mergedClsPrefixRef,\n      maxIconSize: MenuChild.maxIconSize,\n      activeIconSize: MenuChild.activeIconSize,\n      iconMarginRight: MenuChild.iconMarginRight,\n      dropdownPlacement: MenuChild.dropdownPlacement,\n      dropdownShow: dropdownShowRef,\n      paddingLeft: MenuChild.paddingLeft,\n      mergedDisabled: mergedDisabledRef,\n      mergedValue: NMenu.mergedValueRef,\n      childActive: useMemo(() => {\n        return NMenu.activePathRef.value.includes(props.internalKey);\n      }),\n      collapsed: computed(() => {\n        if (menuProps.mode === 'horizontal') return false;\n\n        if (mergedCollapsedRef.value) {\n          return true;\n        }\n\n        return !NMenu.mergedExpandedKeysRef.value.includes(props.internalKey);\n      }),\n      dropdownEnabled: computed(() => {\n        return !mergedDisabledRef.value && (menuProps.mode === 'horizontal' || mergedCollapsedRef.value);\n      }),\n      handlePopoverShowChange,\n      handleClick\n    };\n  },\n\n  render() {\n    var _a;\n\n    const {\n      mergedClsPrefix,\n      menuProps: {\n        renderIcon,\n        renderLabel\n      }\n    } = this;\n\n    const createSubmenuItem = () => {\n      const {\n        isHorizontal,\n        paddingLeft,\n        collapsed,\n        mergedDisabled,\n        maxIconSize,\n        activeIconSize,\n        title,\n        childActive,\n        icon,\n        handleClick,\n        dropdownShow,\n        iconMarginRight,\n        tmNode\n      } = this;\n      return h(NMenuOptionContent, {\n        tmNode: tmNode,\n        paddingLeft: paddingLeft,\n        collapsed: collapsed,\n        disabled: mergedDisabled,\n        iconMarginRight: iconMarginRight,\n        maxIconSize: maxIconSize,\n        activeIconSize: activeIconSize,\n        title: title,\n        showArrow: !isHorizontal,\n        childActive: childActive,\n        clsPrefix: mergedClsPrefix,\n        icon: icon,\n        hover: dropdownShow,\n        onClick: handleClick\n      });\n    };\n\n    const createSubmenuChildren = () => {\n      return h(NFadeInExpandTransition, null, {\n        default: () => {\n          const {\n            tmNodes,\n            collapsed\n          } = this;\n          return !collapsed ? h(\"div\", {\n            class: `${mergedClsPrefix}-submenu-children`,\n            role: \"menu\"\n          }, tmNodes.map(item => itemRenderer(item, this.menuProps))) : null;\n        }\n      });\n    };\n\n    return this.root ? h(NDropdown, Object.assign({}, (_a = this.menuProps) === null || _a === void 0 ? void 0 : _a.dropdownProps, {\n      themeOverrides: this.mergedTheme.peerOverrides.Dropdown,\n      theme: this.mergedTheme.peers.Dropdown,\n      builtinThemeOverrides: {\n        fontSizeLarge: '14px',\n        optionIconSizeLarge: '18px'\n      },\n      value: this.mergedValue,\n      size: \"large\",\n      trigger: \"hover\",\n      disabled: !this.dropdownEnabled,\n      placement: this.dropdownPlacement,\n      keyField: this.menuProps.keyField,\n      labelField: this.menuProps.labelField,\n      childrenField: this.menuProps.childrenField,\n      onUpdateShow: this.handlePopoverShowChange,\n      options: this.rawNodes,\n      onSelect: this.doSelect,\n      inverted: this.inverted,\n      renderIcon: renderIcon,\n      renderLabel: renderLabel\n    }), {\n      default: () => h(\"div\", {\n        class: `${mergedClsPrefix}-submenu`,\n        role: \"menuitem\",\n        \"aria-expanded\": !this.collapsed\n      }, createSubmenuItem(), this.isHorizontal ? null : createSubmenuChildren())\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-submenu`,\n      role: \"menuitem\",\n      \"aria-expanded\": !this.collapsed\n    }, createSubmenuItem(), createSubmenuChildren());\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/menu/src/Submenu.js"],"names":["h","ref","defineComponent","provide","computed","useMemo","NFadeInExpandTransition","NDropdown","NMenuOptionContent","itemRenderer","useMenuChild","useMenuChildProps","menuItemGroupInjectionKey","submenuInjectionKey","submenuProps","Object","assign","rawNodes","type","Array","default","tmNodes","tmNode","required","disabled","Boolean","icon","Function","onClick","NSubmenu","name","props","setup","MenuChild","NMenu","menuProps","mergedCollapsedRef","mergedThemeRef","mergedDisabledRef","value","dropdownShowRef","paddingLeftRef","paddingLeft","doClick","handleClick","toggleExpand","internalKey","handlePopoverShowChange","mergedTheme","doSelect","inverted","invertedRef","isHorizontal","isHorizontalRef","mergedClsPrefix","mergedClsPrefixRef","maxIconSize","activeIconSize","iconMarginRight","dropdownPlacement","dropdownShow","mergedDisabled","mergedValue","mergedValueRef","childActive","activePathRef","includes","collapsed","mode","mergedExpandedKeysRef","dropdownEnabled","render","_a","renderIcon","renderLabel","createSubmenuItem","title","showArrow","clsPrefix","hover","createSubmenuChildren","class","role","map","item","root","dropdownProps","themeOverrides","peerOverrides","Dropdown","theme","peers","builtinThemeOverrides","fontSizeLarge","optionIconSizeLarge","size","trigger","placement","keyField","labelField","childrenField","onUpdateShow","options","onSelect"],"mappings":"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","sourcesContent":["import { h, ref, defineComponent, provide, computed } from 'vue';\nimport { useMemo } from 'vooks';\nimport { NFadeInExpandTransition } from '../../_internal';\nimport { NDropdown } from '../../dropdown';\nimport NMenuOptionContent from './MenuOptionContent';\n// eslint-disable-next-line import/no-cycle\nimport { itemRenderer } from './utils';\nimport { useMenuChild } from './use-menu-child';\nimport { useMenuChildProps } from './use-menu-child-props';\nimport { menuItemGroupInjectionKey, submenuInjectionKey } from './context';\nexport const submenuProps = Object.assign(Object.assign({}, useMenuChildProps), { rawNodes: {\n        type: Array,\n        default: () => []\n    }, tmNodes: {\n        type: Array,\n        default: () => []\n    }, tmNode: {\n        type: Object,\n        required: true\n    }, disabled: {\n        type: Boolean,\n        default: false\n    }, icon: Function, onClick: Function });\nexport const NSubmenu = defineComponent({\n    name: 'Submenu',\n    props: submenuProps,\n    setup(props) {\n        const MenuChild = useMenuChild(props);\n        const { NMenu, NSubmenu } = MenuChild;\n        const { props: menuProps, mergedCollapsedRef, mergedThemeRef } = NMenu;\n        const mergedDisabledRef = computed(() => {\n            const { disabled } = props;\n            if (NSubmenu === null || NSubmenu === void 0 ? void 0 : NSubmenu.mergedDisabledRef.value)\n                return true;\n            if (menuProps.disabled)\n                return true;\n            return disabled;\n        });\n        const dropdownShowRef = ref(false);\n        provide(submenuInjectionKey, {\n            paddingLeftRef: MenuChild.paddingLeft,\n            mergedDisabledRef\n        });\n        provide(menuItemGroupInjectionKey, null);\n        function doClick() {\n            const { onClick } = props;\n            if (onClick)\n                onClick();\n        }\n        function handleClick() {\n            if (!mergedDisabledRef.value) {\n                if (!mergedCollapsedRef.value) {\n                    NMenu.toggleExpand(props.internalKey);\n                }\n                doClick();\n            }\n        }\n        function handlePopoverShowChange(value) {\n            dropdownShowRef.value = value;\n        }\n        return {\n            menuProps,\n            mergedTheme: mergedThemeRef,\n            doSelect: NMenu.doSelect,\n            inverted: NMenu.invertedRef,\n            isHorizontal: NMenu.isHorizontalRef,\n            mergedClsPrefix: NMenu.mergedClsPrefixRef,\n            maxIconSize: MenuChild.maxIconSize,\n            activeIconSize: MenuChild.activeIconSize,\n            iconMarginRight: MenuChild.iconMarginRight,\n            dropdownPlacement: MenuChild.dropdownPlacement,\n            dropdownShow: dropdownShowRef,\n            paddingLeft: MenuChild.paddingLeft,\n            mergedDisabled: mergedDisabledRef,\n            mergedValue: NMenu.mergedValueRef,\n            childActive: useMemo(() => {\n                return NMenu.activePathRef.value.includes(props.internalKey);\n            }),\n            collapsed: computed(() => {\n                if (menuProps.mode === 'horizontal')\n                    return false;\n                if (mergedCollapsedRef.value) {\n                    return true;\n                }\n                return !NMenu.mergedExpandedKeysRef.value.includes(props.internalKey);\n            }),\n            dropdownEnabled: computed(() => {\n                return (!mergedDisabledRef.value &&\n                    (menuProps.mode === 'horizontal' || mergedCollapsedRef.value));\n            }),\n            handlePopoverShowChange,\n            handleClick\n        };\n    },\n    render() {\n        var _a;\n        const { mergedClsPrefix, menuProps: { renderIcon, renderLabel } } = this;\n        const createSubmenuItem = () => {\n            const { isHorizontal, paddingLeft, collapsed, mergedDisabled, maxIconSize, activeIconSize, title, childActive, icon, handleClick, dropdownShow, iconMarginRight, tmNode } = this;\n            return (h(NMenuOptionContent, { tmNode: tmNode, paddingLeft: paddingLeft, collapsed: collapsed, disabled: mergedDisabled, iconMarginRight: iconMarginRight, maxIconSize: maxIconSize, activeIconSize: activeIconSize, title: title, showArrow: !isHorizontal, childActive: childActive, clsPrefix: mergedClsPrefix, icon: icon, hover: dropdownShow, onClick: handleClick }));\n        };\n        const createSubmenuChildren = () => {\n            return (h(NFadeInExpandTransition, null, {\n                default: () => {\n                    const { tmNodes, collapsed } = this;\n                    return !collapsed ? (h(\"div\", { class: `${mergedClsPrefix}-submenu-children`, role: \"menu\" }, tmNodes.map((item) => itemRenderer(item, this.menuProps)))) : null;\n                }\n            }));\n        };\n        return this.root ? (h(NDropdown, Object.assign({}, (_a = this.menuProps) === null || _a === void 0 ? void 0 : _a.dropdownProps, { themeOverrides: this.mergedTheme.peerOverrides.Dropdown, theme: this.mergedTheme.peers.Dropdown, builtinThemeOverrides: {\n                fontSizeLarge: '14px',\n                optionIconSizeLarge: '18px'\n            }, value: this.mergedValue, size: \"large\", trigger: \"hover\", disabled: !this.dropdownEnabled, placement: this.dropdownPlacement, keyField: this.menuProps.keyField, labelField: this.menuProps.labelField, childrenField: this.menuProps.childrenField, onUpdateShow: this.handlePopoverShowChange, options: this.rawNodes, onSelect: this.doSelect, inverted: this.inverted, renderIcon: renderIcon, renderLabel: renderLabel }), {\n            default: () => (h(\"div\", { class: `${mergedClsPrefix}-submenu`, role: \"menuitem\", \"aria-expanded\": !this.collapsed },\n                createSubmenuItem(),\n                this.isHorizontal ? null : createSubmenuChildren()))\n        })) : (h(\"div\", { class: `${mergedClsPrefix}-submenu`, role: \"menuitem\", \"aria-expanded\": !this.collapsed },\n            createSubmenuItem(),\n            createSubmenuChildren()));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}