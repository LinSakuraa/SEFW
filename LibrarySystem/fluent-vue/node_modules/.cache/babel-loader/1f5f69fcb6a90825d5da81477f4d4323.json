{"ast":null,"code":"import { roundToPrecisionSmall } from \"./math-utilities\";\n/**\n * This uses Hue values in \"degree\" format. So expect a range of [0,360]. Some other implementations instead uses radians or a normalized Hue with range [0,1]. Be aware of this when checking values or using other libraries.\n *\n * @public\n */\n\nexport class ColorHSV {\n  constructor(hue, sat, val) {\n    this.h = hue;\n    this.s = sat;\n    this.v = val;\n  }\n  /**\n   * Construct a {@link ColorHSV} from a config object.\n   */\n\n\n  static fromObject(data) {\n    if (data && !isNaN(data.h) && !isNaN(data.s) && !isNaN(data.v)) {\n      return new ColorHSV(data.h, data.s, data.v);\n    }\n\n    return null;\n  }\n  /**\n   * Determines if a color is equal to another\n   * @param rhs - the value to compare\n   */\n\n\n  equalValue(rhs) {\n    return this.h === rhs.h && this.s === rhs.s && this.v === rhs.v;\n  }\n  /**\n   * Returns a new {@link ColorHSV} rounded to the provided precision\n   * @param precision - the precision to round to\n   */\n\n\n  roundToPrecision(precision) {\n    return new ColorHSV(roundToPrecisionSmall(this.h, precision), roundToPrecisionSmall(this.s, precision), roundToPrecisionSmall(this.v, precision));\n  }\n  /**\n   * Returns the {@link ColorHSV} formatted as an object.\n   */\n\n\n  toObject() {\n    return {\n      h: this.h,\n      s: this.s,\n      v: this.v\n    };\n  }\n\n}","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-colors/dist/color-hsv.js"],"names":["roundToPrecisionSmall","ColorHSV","constructor","hue","sat","val","h","s","v","fromObject","data","isNaN","equalValue","rhs","roundToPrecision","precision","toObject"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,kBAAtC;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAN,CAAe;AAClBC,EAAAA,WAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgB;AACvB,SAAKC,CAAL,GAASH,GAAT;AACA,SAAKI,CAAL,GAASH,GAAT;AACA,SAAKI,CAAL,GAASH,GAAT;AACH;AACD;AACJ;AACA;;;AACqB,SAAVI,UAAU,CAACC,IAAD,EAAO;AACpB,QAAIA,IAAI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACJ,CAAN,CAAd,IAA0B,CAACK,KAAK,CAACD,IAAI,CAACH,CAAN,CAAhC,IAA4C,CAACI,KAAK,CAACD,IAAI,CAACF,CAAN,CAAtD,EAAgE;AAC5D,aAAO,IAAIP,QAAJ,CAAaS,IAAI,CAACJ,CAAlB,EAAqBI,IAAI,CAACH,CAA1B,EAA6BG,IAAI,CAACF,CAAlC,CAAP;AACH;;AACD,WAAO,IAAP;AACH;AACD;AACJ;AACA;AACA;;;AACII,EAAAA,UAAU,CAACC,GAAD,EAAM;AACZ,WAAO,KAAKP,CAAL,KAAWO,GAAG,CAACP,CAAf,IAAoB,KAAKC,CAAL,KAAWM,GAAG,CAACN,CAAnC,IAAwC,KAAKC,CAAL,KAAWK,GAAG,CAACL,CAA9D;AACH;AACD;AACJ;AACA;AACA;;;AACIM,EAAAA,gBAAgB,CAACC,SAAD,EAAY;AACxB,WAAO,IAAId,QAAJ,CAAaD,qBAAqB,CAAC,KAAKM,CAAN,EAASS,SAAT,CAAlC,EAAuDf,qBAAqB,CAAC,KAAKO,CAAN,EAASQ,SAAT,CAA5E,EAAiGf,qBAAqB,CAAC,KAAKQ,CAAN,EAASO,SAAT,CAAtH,CAAP;AACH;AACD;AACJ;AACA;;;AACIC,EAAAA,QAAQ,GAAG;AACP,WAAO;AAAEV,MAAAA,CAAC,EAAE,KAAKA,CAAV;AAAaC,MAAAA,CAAC,EAAE,KAAKA,CAArB;AAAwBC,MAAAA,CAAC,EAAE,KAAKA;AAAhC,KAAP;AACH;;AAlCiB","sourcesContent":["import { roundToPrecisionSmall } from \"./math-utilities\";\n/**\n * This uses Hue values in \"degree\" format. So expect a range of [0,360]. Some other implementations instead uses radians or a normalized Hue with range [0,1]. Be aware of this when checking values or using other libraries.\n *\n * @public\n */\nexport class ColorHSV {\n    constructor(hue, sat, val) {\n        this.h = hue;\n        this.s = sat;\n        this.v = val;\n    }\n    /**\n     * Construct a {@link ColorHSV} from a config object.\n     */\n    static fromObject(data) {\n        if (data && !isNaN(data.h) && !isNaN(data.s) && !isNaN(data.v)) {\n            return new ColorHSV(data.h, data.s, data.v);\n        }\n        return null;\n    }\n    /**\n     * Determines if a color is equal to another\n     * @param rhs - the value to compare\n     */\n    equalValue(rhs) {\n        return this.h === rhs.h && this.s === rhs.s && this.v === rhs.v;\n    }\n    /**\n     * Returns a new {@link ColorHSV} rounded to the provided precision\n     * @param precision - the precision to round to\n     */\n    roundToPrecision(precision) {\n        return new ColorHSV(roundToPrecisionSmall(this.h, precision), roundToPrecisionSmall(this.s, precision), roundToPrecisionSmall(this.v, precision));\n    }\n    /**\n     * Returns the {@link ColorHSV} formatted as an object.\n     */\n    toObject() {\n        return { h: this.h, s: this.s, v: this.v };\n    }\n}\n"]},"metadata":{},"sourceType":"module"}