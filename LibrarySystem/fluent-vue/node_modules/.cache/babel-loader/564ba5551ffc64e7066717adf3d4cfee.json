{"ast":null,"code":"import { defineComponent, h, toRef, watch, onMounted, ref, computed } from 'vue';\nimport { useTheme, useHljs, useConfig, useThemeClass } from '../../_mixins';\nimport { codeLight } from '../styles';\nimport style from './styles/index.cssr';\nconst codeProps = Object.assign(Object.assign({}, useTheme.props), {\n  language: String,\n  code: {\n    type: String,\n    default: ''\n  },\n  trim: {\n    type: Boolean,\n    default: true\n  },\n  hljs: Object,\n  uri: Boolean,\n  inline: Boolean,\n  wordWrap: Boolean,\n  // In n-log, we only need to mount code's style for highlight\n  internalFontSize: Number,\n  internalNoHighlight: Boolean\n});\nexport default defineComponent({\n  name: 'Code',\n  props: codeProps,\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      internalNoHighlight\n    } = props;\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig();\n    const codeRef = ref(null);\n    const hljsRef = internalNoHighlight ? {\n      value: undefined\n    } : useHljs(props);\n\n    const createCodeHtml = (language, code, trim) => {\n      const {\n        value: hljs\n      } = hljsRef;\n\n      if (!hljs) {\n        return null;\n      }\n\n      if (!(language && hljs.getLanguage(language))) {\n        return null;\n      }\n\n      return hljs.highlight(trim ? code.trim() : code, {\n        language\n      }).value;\n    };\n\n    const setCode = () => {\n      if (slots.default) return;\n      const {\n        value: codeEl\n      } = codeRef;\n      if (!codeEl) return;\n      const {\n        language\n      } = props;\n      const code = props.uri ? window.decodeURIComponent(props.code) : props.code;\n\n      if (language) {\n        const html = createCodeHtml(language, code, props.trim);\n\n        if (html !== null) {\n          codeEl.innerHTML = props.inline ? html : `<pre>${html}</pre>`;\n          return;\n        }\n      }\n\n      if (props.inline) {\n        codeEl.textContent = code;\n        return;\n      }\n\n      const maybePreEl = codeEl.children[0];\n\n      if (maybePreEl && maybePreEl.tagName === 'PRE') {\n        maybePreEl.textContent = code;\n      } else {\n        const warp = document.createElement('pre');\n        warp.textContent = code;\n        codeEl.innerHTML = '';\n        codeEl.appendChild(warp);\n      }\n    };\n\n    onMounted(setCode);\n    watch(toRef(props, 'language'), setCode);\n    watch(toRef(props, 'code'), setCode);\n    if (!internalNoHighlight) watch(hljsRef, setCode);\n    const themeRef = useTheme('Code', '-code', style, codeLight, props, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut,\n          fontFamilyMono\n        },\n        self: {\n          textColor,\n          fontSize,\n          fontWeightStrong,\n          // extracted from hljs atom-one-light.scss\n          'mono-3': $1,\n          'hue-1': $2,\n          'hue-2': $3,\n          'hue-3': $4,\n          'hue-4': $5,\n          'hue-5': $6,\n          'hue-5-2': $7,\n          'hue-6': $8,\n          'hue-6-2': $9\n        }\n      } = themeRef.value;\n      const {\n        internalFontSize\n      } = props;\n      return {\n        '--n-font-size': internalFontSize ? `${internalFontSize}px` : fontSize,\n        '--n-font-family': fontFamilyMono,\n        '--n-font-weight-strong': fontWeightStrong,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-mono-3': $1,\n        '--n-hue-1': $2,\n        '--n-hue-2': $3,\n        '--n-hue-3': $4,\n        '--n-hue-4': $5,\n        '--n-hue-5': $6,\n        '--n-hue-5-2': $7,\n        '--n-hue-6': $8,\n        '--n-hue-6-2': $9\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('code', computed(() => {\n      return `${props.internalFontSize || 'a'}`;\n    }), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      codeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      wordWrap,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"code\", {\n      class: [`${mergedClsPrefix}-code`, this.themeClass, wordWrap && `${mergedClsPrefix}-code--word-wrap`],\n      style: this.cssVars,\n      ref: \"codeRef\"\n    }, this.$slots);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/code/src/Code.js"],"names":["defineComponent","h","toRef","watch","onMounted","ref","computed","useTheme","useHljs","useConfig","useThemeClass","codeLight","style","codeProps","Object","assign","props","language","String","code","type","default","trim","Boolean","hljs","uri","inline","wordWrap","internalFontSize","Number","internalNoHighlight","name","setup","slots","mergedClsPrefixRef","inlineThemeDisabled","codeRef","hljsRef","value","undefined","createCodeHtml","getLanguage","highlight","setCode","codeEl","window","decodeURIComponent","html","innerHTML","textContent","maybePreEl","children","tagName","warp","document","createElement","appendChild","themeRef","cssVarsRef","common","cubicBezierEaseInOut","fontFamilyMono","self","textColor","fontSize","fontWeightStrong","$1","$2","$3","$4","$5","$6","$7","$8","$9","themeClassHandle","mergedClsPrefix","cssVars","themeClass","onRender","render","class","$slots"],"mappings":"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","sourcesContent":["import { defineComponent, h, toRef, watch, onMounted, ref, computed } from 'vue';\nimport { useTheme, useHljs, useConfig, useThemeClass } from '../../_mixins';\nimport { codeLight } from '../styles';\nimport style from './styles/index.cssr';\nconst codeProps = Object.assign(Object.assign({}, useTheme.props), { language: String, code: {\n        type: String,\n        default: ''\n    }, trim: {\n        type: Boolean,\n        default: true\n    }, hljs: Object, uri: Boolean, inline: Boolean, wordWrap: Boolean, \n    // In n-log, we only need to mount code's style for highlight\n    internalFontSize: Number, internalNoHighlight: Boolean });\nexport default defineComponent({\n    name: 'Code',\n    props: codeProps,\n    setup(props, { slots }) {\n        const { internalNoHighlight } = props;\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig();\n        const codeRef = ref(null);\n        const hljsRef = internalNoHighlight ? { value: undefined } : useHljs(props);\n        const createCodeHtml = (language, code, trim) => {\n            const { value: hljs } = hljsRef;\n            if (!hljs) {\n                return null;\n            }\n            if (!(language && hljs.getLanguage(language))) {\n                return null;\n            }\n            return hljs.highlight(trim ? code.trim() : code, {\n                language\n            }).value;\n        };\n        const setCode = () => {\n            if (slots.default)\n                return;\n            const { value: codeEl } = codeRef;\n            if (!codeEl)\n                return;\n            const { language } = props;\n            const code = props.uri\n                ? window.decodeURIComponent(props.code)\n                : props.code;\n            if (language) {\n                const html = createCodeHtml(language, code, props.trim);\n                if (html !== null) {\n                    codeEl.innerHTML = props.inline ? html : `<pre>${html}</pre>`;\n                    return;\n                }\n            }\n            if (props.inline) {\n                codeEl.textContent = code;\n                return;\n            }\n            const maybePreEl = codeEl.children[0];\n            if (maybePreEl && maybePreEl.tagName === 'PRE') {\n                maybePreEl.textContent = code;\n            }\n            else {\n                const warp = document.createElement('pre');\n                warp.textContent = code;\n                codeEl.innerHTML = '';\n                codeEl.appendChild(warp);\n            }\n        };\n        onMounted(setCode);\n        watch(toRef(props, 'language'), setCode);\n        watch(toRef(props, 'code'), setCode);\n        if (!internalNoHighlight)\n            watch(hljsRef, setCode);\n        const themeRef = useTheme('Code', '-code', style, codeLight, props, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut, fontFamilyMono }, self: { textColor, fontSize, fontWeightStrong, \n            // extracted from hljs atom-one-light.scss\n            'mono-3': $1, 'hue-1': $2, 'hue-2': $3, 'hue-3': $4, 'hue-4': $5, 'hue-5': $6, 'hue-5-2': $7, 'hue-6': $8, 'hue-6-2': $9 } } = themeRef.value;\n            const { internalFontSize } = props;\n            return {\n                '--n-font-size': internalFontSize ? `${internalFontSize}px` : fontSize,\n                '--n-font-family': fontFamilyMono,\n                '--n-font-weight-strong': fontWeightStrong,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-mono-3': $1,\n                '--n-hue-1': $2,\n                '--n-hue-2': $3,\n                '--n-hue-3': $4,\n                '--n-hue-4': $5,\n                '--n-hue-5': $6,\n                '--n-hue-5-2': $7,\n                '--n-hue-6': $8,\n                '--n-hue-6-2': $9\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('code', computed(() => {\n                return `${props.internalFontSize || 'a'}`;\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            codeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, wordWrap, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"code\", { class: [\n                `${mergedClsPrefix}-code`,\n                this.themeClass,\n                wordWrap && `${mergedClsPrefix}-code--word-wrap`\n            ], style: this.cssVars, ref: \"codeRef\" }, this.$slots));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}