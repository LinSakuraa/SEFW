{"ast":null,"code":"import { h, ref, defineComponent, computed, provide, watch, toRef, nextTick, withDirectives, vShow, watchEffect, cloneVNode, TransitionGroup } from 'vue';\nimport { VResizeObserver, VXScroll } from 'vueuc';\nimport { throttle } from 'lodash-es';\nimport { useCompitable, onFontsReady, useMergedState } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, call, flatten, warnOnce, resolveWrappedSlot } from '../../_utils';\nimport { tabsLight } from '../styles';\nimport { tabsInjectionKey } from './interface';\nimport Tab from './Tab';\nimport style from './styles/index.cssr';\nconst tabsProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: [String, Number],\n  defaultValue: [String, Number],\n  trigger: {\n    type: String,\n    default: 'click'\n  },\n  type: {\n    type: String,\n    default: 'bar'\n  },\n  closable: Boolean,\n  justifyContent: String,\n  size: {\n    type: String,\n    default: 'medium'\n  },\n  tabStyle: [String, Object],\n  barWidth: Number,\n  paneClass: String,\n  paneStyle: [String, Object],\n  addable: [Boolean, Object],\n  tabsPadding: {\n    type: Number,\n    default: 0\n  },\n  animated: Boolean,\n  onBeforeLeave: Function,\n  onAdd: Function,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onClose: [Function, Array],\n  // deprecated\n  labelSize: String,\n  activeName: [String, Number],\n  onActiveNameChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Tabs',\n  props: tabsProps,\n\n  setup(props, {\n    slots\n  }) {\n    var _a, _b, _c, _d;\n\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.labelSize !== undefined) {\n          warnOnce('tabs', '`label-size` is deprecated, please use `size` instead.');\n        }\n\n        if (props.activeName !== undefined) {\n          warnOnce('tabs', '`active-name` is deprecated, please use `value` instead.');\n        }\n\n        if (props.onActiveNameChange !== undefined) {\n          warnOnce('tabs', '`on-active-name-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Tabs', '-tabs', style, tabsLight, props, mergedClsPrefixRef);\n    const tabsElRef = ref(null);\n    const barElRef = ref(null);\n    const scrollWrapperElRef = ref(null);\n    const addTabInstRef = ref(null);\n    const xScrollInstRef = ref(null);\n    const leftReachedRef = ref(true);\n    const rightReachedRef = ref(true);\n    const compitableSizeRef = useCompitable(props, ['labelSize', 'size']);\n    const compitableValueRef = useCompitable(props, ['activeName', 'value']);\n    const uncontrolledValueRef = ref((_b = (_a = compitableValueRef.value) !== null && _a !== void 0 ? _a : props.defaultValue) !== null && _b !== void 0 ? _b : slots.default ? (_d = (_c = flatten(slots.default())[0]) === null || _c === void 0 ? void 0 : _c.props) === null || _d === void 0 ? void 0 : _d.name : null);\n    const mergedValueRef = useMergedState(compitableValueRef, uncontrolledValueRef);\n    const tabChangeIdRef = {\n      id: 0\n    };\n    const tabWrapperStyleRef = computed(() => {\n      if (!props.justifyContent || props.type === 'card') return undefined;\n      return {\n        display: 'flex',\n        justifyContent: props.justifyContent\n      };\n    });\n    watch(mergedValueRef, () => {\n      tabChangeIdRef.id = 0;\n      updateCurrentBarStyle();\n    });\n\n    function getCurrentEl() {\n      var _a;\n\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      const tabEl = (_a = tabsElRef.value) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-name=\"${value}\"]`);\n      return tabEl;\n    }\n\n    function updateBarStyle(tabEl) {\n      if (props.type === 'card') return;\n      const {\n        value: barEl\n      } = barElRef;\n      if (!barEl) return;\n\n      if (tabEl) {\n        const disabledClassName = `${mergedClsPrefixRef.value}-tabs-bar--disabled`;\n        const {\n          barWidth\n        } = props;\n\n        if (tabEl.dataset.disabled === 'true') {\n          barEl.classList.add(disabledClassName);\n        } else {\n          barEl.classList.remove(disabledClassName);\n        }\n\n        if (barWidth && tabEl.offsetWidth >= barWidth) {\n          const offsetDiffLeft = Math.floor((tabEl.offsetWidth - barWidth) / 2) + tabEl.offsetLeft;\n          barEl.style.left = `${offsetDiffLeft}px`;\n          barEl.style.maxWidth = `${barWidth}px`;\n        } else {\n          barEl.style.left = `${tabEl.offsetLeft}px`;\n          barEl.style.maxWidth = `${tabEl.offsetWidth}px`;\n        }\n\n        barEl.style.width = '8192px';\n      }\n    }\n\n    function updateCurrentBarStyle() {\n      if (props.type === 'card') return;\n      const tabEl = getCurrentEl();\n\n      if (tabEl) {\n        updateBarStyle(tabEl);\n      }\n    }\n\n    const tabsPaneWrapperRef = ref(null);\n    let currentHeight = 0;\n\n    function onAnimationBeforeLeave() {\n      const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n\n      if (tabsPaneWrapperEl) {\n        currentHeight = tabsPaneWrapperEl.getBoundingClientRect().height;\n        const currentHeightPx = `${currentHeight}px`;\n        tabsPaneWrapperEl.style.height = currentHeightPx;\n        tabsPaneWrapperEl.style.maxHeight = currentHeightPx;\n      }\n    }\n\n    function onAnimationEnter(el) {\n      const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n\n      if (tabsPaneWrapperEl) {\n        const targetHeight = el.getBoundingClientRect().height;\n        tabsPaneWrapperEl.style.maxHeight = `${targetHeight}px`;\n        tabsPaneWrapperEl.style.height = `${Math.max(currentHeight, targetHeight)}px`;\n      }\n    }\n\n    function onAnimationAfterEnter() {\n      const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n\n      if (tabsPaneWrapperEl) {\n        tabsPaneWrapperEl.style.maxHeight = '';\n        tabsPaneWrapperEl.style.height = '';\n      }\n    }\n\n    const renderNameListRef = {\n      value: []\n    };\n    const animationDirectionRef = ref('next');\n\n    function activateTab(panelName) {\n      const currentValue = mergedValueRef.value;\n      let dir = 'next';\n\n      for (const name of renderNameListRef.value) {\n        if (name === currentValue) {\n          break;\n        }\n\n        if (name === panelName) {\n          dir = 'prev';\n          break;\n        }\n      }\n\n      animationDirectionRef.value = dir;\n      doUpdateValue(panelName);\n    }\n\n    function doUpdateValue(panelName) {\n      const {\n        onActiveNameChange,\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n\n      if (onActiveNameChange) {\n        call(onActiveNameChange, panelName);\n      }\n\n      if (onUpdateValue) call(onUpdateValue, panelName);\n      if (_onUpdateValue) call(_onUpdateValue, panelName);\n      uncontrolledValueRef.value = panelName;\n    }\n\n    function handleClose(panelName) {\n      const {\n        onClose\n      } = props;\n      if (onClose) call(onClose, panelName);\n    }\n\n    let firstTimeUpdatePosition = true;\n    let memorizedWidth = 0;\n    const handleNavResize = throttle(function handleNavResize(entry) {\n      var _a;\n\n      if (entry.contentRect.width === 0 && entry.contentRect.height === 0) {\n        return;\n      }\n\n      if (memorizedWidth === entry.contentRect.width) {\n        return;\n      }\n\n      memorizedWidth = entry.contentRect.width;\n      const {\n        type\n      } = props;\n\n      if ((type === 'line' || type === 'bar') && (firstTimeUpdatePosition || props.justifyContent)) {\n        const {\n          value: barEl\n        } = barElRef;\n        if (!barEl) return;\n        if (!firstTimeUpdatePosition) firstTimeUpdatePosition = false;\n        const disableTransitionClassName = `${mergedClsPrefixRef.value}-tabs-bar--transition-disabled`;\n        barEl.classList.add(disableTransitionClassName);\n        updateCurrentBarStyle(); // here we don't need to force layout after update bar style\n        // since deriveScrollShadow will force layout\n\n        barEl.classList.remove(disableTransitionClassName);\n      }\n\n      if (type !== 'segment') {\n        deriveScrollShadow((_a = xScrollInstRef.value) === null || _a === void 0 ? void 0 : _a.$el);\n      }\n    }, 64);\n    const addTabFixedRef = ref(false);\n\n    function _handleTabsResize(entry) {\n      var _a;\n\n      const {\n        target,\n        contentRect: {\n          width\n        }\n      } = entry; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      const containerWidth = target.parentElement.offsetWidth;\n\n      if (!addTabFixedRef.value) {\n        if (containerWidth < width) {\n          addTabFixedRef.value = true;\n        }\n      } else {\n        const {\n          value: addTabInst\n        } = addTabInstRef;\n        if (!addTabInst) return;\n\n        if (containerWidth - width > addTabInst.$el.offsetWidth) {\n          addTabFixedRef.value = false;\n        }\n      }\n\n      deriveScrollShadow((_a = xScrollInstRef.value) === null || _a === void 0 ? void 0 : _a.$el);\n    }\n\n    const handleTabsResize = throttle(_handleTabsResize, 64);\n\n    function handleAdd() {\n      const {\n        onAdd\n      } = props;\n      if (onAdd) onAdd();\n      void nextTick(() => {\n        const currentEl = getCurrentEl();\n        const {\n          value: xScrollInst\n        } = xScrollInstRef;\n        if (!currentEl || !xScrollInst) return;\n        xScrollInst.scrollTo({\n          left: currentEl.offsetLeft,\n          top: 0,\n          behavior: 'smooth'\n        });\n      });\n    }\n\n    function deriveScrollShadow(el) {\n      if (!el) return;\n      const {\n        scrollLeft,\n        scrollWidth,\n        offsetWidth\n      } = el;\n      leftReachedRef.value = scrollLeft <= 0;\n      rightReachedRef.value = scrollLeft + offsetWidth >= scrollWidth;\n    }\n\n    const handleScroll = throttle(e => {\n      deriveScrollShadow(e.target);\n    }, 64);\n    provide(tabsInjectionKey, {\n      triggerRef: toRef(props, 'trigger'),\n      tabStyleRef: toRef(props, 'tabStyle'),\n      paneClassRef: toRef(props, 'paneClass'),\n      paneStyleRef: toRef(props, 'paneStyle'),\n      mergedClsPrefixRef,\n      typeRef: toRef(props, 'type'),\n      closableRef: toRef(props, 'closable'),\n      valueRef: mergedValueRef,\n      tabChangeIdRef,\n      onBeforeLeaveRef: toRef(props, 'onBeforeLeave'),\n      activateTab,\n      handleClose,\n      handleAdd\n    });\n    onFontsReady(() => {\n      updateCurrentBarStyle();\n    }); // avoid useless rerender\n\n    watchEffect(() => {\n      const {\n        value: el\n      } = scrollWrapperElRef;\n      if (!el) return;\n      const {\n        value: clsPrefix\n      } = mergedClsPrefixRef;\n      const shadowBeforeClass = `${clsPrefix}-tabs-nav-scroll-wrapper--shadow-before`;\n      const shadowAfterClass = `${clsPrefix}-tabs-nav-scroll-wrapper--shadow-after`;\n\n      if (leftReachedRef.value) {\n        el.classList.remove(shadowBeforeClass);\n      } else {\n        el.classList.add(shadowBeforeClass);\n      }\n\n      if (rightReachedRef.value) {\n        el.classList.remove(shadowAfterClass);\n      } else {\n        el.classList.add(shadowAfterClass);\n      }\n    });\n    const exposedMethods = {\n      syncBarPosition: () => {\n        updateCurrentBarStyle();\n      }\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = compitableSizeRef;\n      const {\n        type\n      } = props;\n      const typeSuffix = {\n        card: 'Card',\n        bar: 'Bar',\n        line: 'Line',\n        segment: 'Segment'\n      }[type];\n      const sizeType = `${size}${typeSuffix}`;\n      const {\n        self: {\n          barColor,\n          closeColor,\n          closeColorHover,\n          closeColorPressed,\n          tabColor,\n          tabBorderColor,\n          paneTextColor,\n          tabFontWeight,\n          tabBorderRadius,\n          tabFontWeightActive,\n          colorSegment,\n          fontWeightStrong,\n          tabColorSegment,\n          [createKey('panePadding', size)]: panePadding,\n          [createKey('tabPadding', sizeType)]: tabPadding,\n          [createKey('tabGap', sizeType)]: tabGap,\n          [createKey('tabTextColor', type)]: tabTextColor,\n          [createKey('tabTextColorActive', type)]: tabTextColorActive,\n          [createKey('tabTextColorHover', type)]: tabTextColorHover,\n          [createKey('tabTextColorDisabled', type)]: tabTextColorDisabled,\n          [createKey('tabFontSize', size)]: tabFontSize\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-color-segment': colorSegment,\n        '--n-bar-color': barColor,\n        '--n-tab-font-size': tabFontSize,\n        '--n-tab-text-color': tabTextColor,\n        '--n-tab-text-color-active': tabTextColorActive,\n        '--n-tab-text-color-disabled': tabTextColorDisabled,\n        '--n-tab-text-color-hover': tabTextColorHover,\n        '--n-pane-text-color': paneTextColor,\n        '--n-tab-border-color': tabBorderColor,\n        '--n-tab-border-radius': tabBorderRadius,\n        '--n-close-color': closeColor,\n        '--n-close-color-hover': closeColorHover,\n        '--n-close-color-pressed': closeColorPressed,\n        '--n-tab-color': tabColor,\n        '--n-tab-font-weight': tabFontWeight,\n        '--n-tab-font-weight-active': tabFontWeightActive,\n        '--n-tab-padding': tabPadding,\n        '--n-tab-gap': tabGap,\n        '--n-pane-padding': panePadding,\n        '--n-font-weight-strong': fontWeightStrong,\n        '--n-tab-color-segment': tabColorSegment\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('tabs', computed(() => {\n      return `${compitableSizeRef.value[0]}${props.type[0]}`;\n    }), cssVarsRef, props) : undefined;\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: mergedValueRef,\n      renderedNames: new Set(),\n      tabsPaneWrapperRef,\n      tabsElRef,\n      barElRef,\n      addTabInstRef,\n      xScrollInstRef,\n      scrollWrapperElRef,\n      addTabFixed: addTabFixedRef,\n      tabWrapperStyle: tabWrapperStyleRef,\n      handleNavResize,\n      mergedSize: compitableSizeRef,\n      handleScroll,\n      handleTabsResize,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      animationDirection: animationDirectionRef,\n      renderNameListRef,\n      onAnimationBeforeLeave,\n      onAnimationEnter,\n      onAnimationAfterEnter,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    }, exposedMethods);\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      type,\n      addTabFixed,\n      addable,\n      mergedSize,\n      renderNameListRef,\n      onRender,\n      $slots: {\n        default: defaultSlot,\n        prefix: prefixSlot,\n        suffix: suffixSlot\n      }\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    const tabPaneChildren = defaultSlot ? flatten(defaultSlot()).filter(v => {\n      return v.type.__TAB_PANE__ === true;\n    }) : [];\n    const tabChildren = defaultSlot ? flatten(defaultSlot()).filter(v => {\n      return v.type.__TAB__ === true;\n    }) : [];\n    const showPane = !tabChildren.length;\n    const isCard = type === 'card';\n    const isSegment = type === 'segment';\n    const mergedJustifyContent = !isCard && !isSegment && this.justifyContent;\n    renderNameListRef.value = [];\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-tabs`, this.themeClass, `${mergedClsPrefix}-tabs--${type}-type`, `${mergedClsPrefix}-tabs--${mergedSize}-size`, mergedJustifyContent && `${mergedClsPrefix}-tabs--flex`],\n      style: this.cssVars\n    }, h(\"div\", {\n      class: [// the class should be applied here since it's possible\n      // to make tabs nested in tabs, style may influence each\n      // other. adding a class will make it easy to write the\n      // style.\n      `${mergedClsPrefix}-tabs-nav--${type}-type`, `${mergedClsPrefix}-tabs-nav`]\n    }, resolveWrappedSlot(prefixSlot, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-tabs-nav__prefix`\n    }, children)), isSegment ? h(\"div\", {\n      class: `${mergedClsPrefix}-tabs-rail`\n    }, showPane ? tabPaneChildren.map((tabPaneVNode, index) => {\n      renderNameListRef.value.push(tabPaneVNode.props.name);\n      return h(Tab, Object.assign({}, tabPaneVNode.props, {\n        internalCreatedByPane: true,\n        internalLeftPadded: index !== 0\n      }), tabPaneVNode.children ? {\n        default: tabPaneVNode.children.tab\n      } : undefined);\n    }) : tabChildren.map((tabVNode, index) => {\n      renderNameListRef.value.push(tabVNode.props.name);\n\n      if (index === 0) {\n        return tabVNode;\n      } else {\n        return createLeftPaddedTabVNode(tabVNode);\n      }\n    })) : h(VResizeObserver, {\n      onResize: this.handleNavResize\n    }, {\n      default: () => h(\"div\", {\n        class: `${mergedClsPrefix}-tabs-nav-scroll-wrapper`,\n        ref: \"scrollWrapperElRef\"\n      }, h(VXScroll, {\n        ref: \"xScrollInstRef\",\n        onScroll: this.handleScroll\n      }, {\n        default: () => {\n          const rawWrappedTabs = h(\"div\", {\n            style: this.tabWrapperStyle,\n            class: `${mergedClsPrefix}-tabs-wrapper`\n          }, mergedJustifyContent ? null : h(\"div\", {\n            class: `${mergedClsPrefix}-tabs-scroll-padding`,\n            style: {\n              width: `${this.tabsPadding}px`\n            }\n          }), showPane ? tabPaneChildren.map((tabPaneVNode, index) => {\n            renderNameListRef.value.push(tabPaneVNode.props.name);\n            return justifyTabDynamicProps(h(Tab, Object.assign({}, tabPaneVNode.props, {\n              internalCreatedByPane: true,\n              internalLeftPadded: index !== 0 && !mergedJustifyContent\n            }), tabPaneVNode.children ? {\n              default: tabPaneVNode.children.tab\n            } : undefined));\n          }) : tabChildren.map((tabVNode, index) => {\n            renderNameListRef.value.push(tabVNode.props.name);\n\n            if (index !== 0 && !mergedJustifyContent) {\n              return justifyTabDynamicProps(createLeftPaddedTabVNode(tabVNode));\n            } else {\n              return justifyTabDynamicProps(tabVNode);\n            }\n          }), !addTabFixed && addable && isCard ? createAddTag(addable, (showPane ? tabPaneChildren.length : tabChildren.length) !== 0) : null, mergedJustifyContent ? null : h(\"div\", {\n            class: `${mergedClsPrefix}-tabs-scroll-padding`,\n            style: {\n              width: `${this.tabsPadding}px`\n            }\n          }));\n          let wrappedTabs = rawWrappedTabs;\n\n          if (isCard && addable) {\n            wrappedTabs = h(VResizeObserver, {\n              onResize: this.handleTabsResize\n            }, {\n              default: () => rawWrappedTabs\n            });\n          }\n\n          return h(\"div\", {\n            ref: \"tabsElRef\",\n            class: `${mergedClsPrefix}-tabs-nav-scroll-content`\n          }, wrappedTabs, isCard ? h(\"div\", {\n            class: `${mergedClsPrefix}-tabs-pad`\n          }) : null, isCard ? null : h(\"div\", {\n            ref: \"barElRef\",\n            class: `${mergedClsPrefix}-tabs-bar`\n          }));\n        }\n      }))\n    }), addTabFixed && addable && isCard ? createAddTag(addable, true) : null, resolveWrappedSlot(suffixSlot, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-tabs-nav__suffix`\n    }, children))), showPane && (this.animated ? h(\"div\", {\n      ref: \"tabsPaneWrapperRef\",\n      class: `${mergedClsPrefix}-tabs-pane-wrapper`\n    }, filterMapTabPanes(tabPaneChildren, this.mergedValue, this.renderedNames, this.onAnimationBeforeLeave, this.onAnimationEnter, this.onAnimationAfterEnter, this.animationDirection)) : filterMapTabPanes(tabPaneChildren, this.mergedValue, this.renderedNames)));\n  }\n\n});\n\nfunction filterMapTabPanes(tabPaneVNodes, value, renderedNames, onBeforeLeave, onEnter, onAfterEnter, animationDirection) {\n  const children = [];\n  tabPaneVNodes.forEach(vNode => {\n    const {\n      name,\n      displayDirective,\n      'display-directive': _displayDirective\n    } = vNode.props;\n\n    const matchDisplayDirective = directive => displayDirective === directive || _displayDirective === directive;\n\n    const show = value === name;\n\n    if (vNode.key !== undefined) {\n      vNode.key = name;\n    }\n\n    if (show || matchDisplayDirective('show') || matchDisplayDirective('show:lazy') && renderedNames.has(name)) {\n      if (!renderedNames.has(name)) {\n        renderedNames.add(name);\n      }\n\n      const useVShow = !matchDisplayDirective('if');\n      children.push(useVShow ? withDirectives(vNode, [[vShow, show]]) : vNode);\n    }\n  });\n\n  if (!animationDirection) {\n    return children;\n  }\n\n  return h(TransitionGroup, {\n    name: `${animationDirection}-transition`,\n    onBeforeLeave: onBeforeLeave,\n    onEnter: onEnter,\n    onAfterEnter: onAfterEnter\n  }, {\n    default: () => children\n  });\n}\n\nfunction createAddTag(addable, internalLeftPadded) {\n  return h(Tab, {\n    ref: \"addTabInstRef\",\n    key: \"__addable\",\n    name: \"__addable\",\n    internalCreatedByPane: true,\n    internalAddable: true,\n    internalLeftPadded: internalLeftPadded,\n    disabled: typeof addable === 'object' && addable.disabled\n  });\n}\n\nfunction createLeftPaddedTabVNode(tabVNode) {\n  const modifiedVNode = cloneVNode(tabVNode);\n\n  if (modifiedVNode.props) {\n    modifiedVNode.props.internalLeftPadded = true;\n  } else {\n    modifiedVNode.props = {\n      internalLeftPadded: true\n    };\n  }\n\n  return modifiedVNode;\n}\n\nfunction justifyTabDynamicProps(tabVNode) {\n  if (Array.isArray(tabVNode.dynamicProps)) {\n    if (!tabVNode.dynamicProps.includes('internalLeftPadded')) {\n      tabVNode.dynamicProps.push('internalLeftPadded');\n    }\n  } else {\n    tabVNode.dynamicProps = ['internalLeftPadded'];\n  }\n\n  return tabVNode;\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tabs/src/Tabs.js"],"names":["h","ref","defineComponent","computed","provide","watch","toRef","nextTick","withDirectives","vShow","watchEffect","cloneVNode","TransitionGroup","VResizeObserver","VXScroll","throttle","useCompitable","onFontsReady","useMergedState","useConfig","useTheme","useThemeClass","createKey","call","flatten","warnOnce","resolveWrappedSlot","tabsLight","tabsInjectionKey","Tab","style","tabsProps","Object","assign","props","value","String","Number","defaultValue","trigger","type","default","closable","Boolean","justifyContent","size","tabStyle","barWidth","paneClass","paneStyle","addable","tabsPadding","animated","onBeforeLeave","Function","onAdd","Array","onUpdateValue","onClose","labelSize","activeName","onActiveNameChange","name","setup","slots","_a","_b","_c","_d","process","env","NODE_ENV","undefined","mergedClsPrefixRef","inlineThemeDisabled","themeRef","tabsElRef","barElRef","scrollWrapperElRef","addTabInstRef","xScrollInstRef","leftReachedRef","rightReachedRef","compitableSizeRef","compitableValueRef","uncontrolledValueRef","mergedValueRef","tabChangeIdRef","id","tabWrapperStyleRef","display","updateCurrentBarStyle","getCurrentEl","tabEl","querySelector","updateBarStyle","barEl","disabledClassName","dataset","disabled","classList","add","remove","offsetWidth","offsetDiffLeft","Math","floor","offsetLeft","left","maxWidth","width","tabsPaneWrapperRef","currentHeight","onAnimationBeforeLeave","tabsPaneWrapperEl","getBoundingClientRect","height","currentHeightPx","maxHeight","onAnimationEnter","el","targetHeight","max","onAnimationAfterEnter","renderNameListRef","animationDirectionRef","activateTab","panelName","currentValue","dir","doUpdateValue","_onUpdateValue","handleClose","firstTimeUpdatePosition","memorizedWidth","handleNavResize","entry","contentRect","disableTransitionClassName","deriveScrollShadow","$el","addTabFixedRef","_handleTabsResize","target","containerWidth","parentElement","addTabInst","handleTabsResize","handleAdd","currentEl","xScrollInst","scrollTo","top","behavior","scrollLeft","scrollWidth","handleScroll","e","triggerRef","tabStyleRef","paneClassRef","paneStyleRef","typeRef","closableRef","valueRef","onBeforeLeaveRef","clsPrefix","shadowBeforeClass","shadowAfterClass","exposedMethods","syncBarPosition","cssVarsRef","typeSuffix","card","bar","line","segment","sizeType","self","barColor","closeColor","closeColorHover","closeColorPressed","tabColor","tabBorderColor","paneTextColor","tabFontWeight","tabBorderRadius","tabFontWeightActive","colorSegment","fontWeightStrong","tabColorSegment","panePadding","tabPadding","tabGap","tabTextColor","tabTextColorActive","tabTextColorHover","tabTextColorDisabled","tabFontSize","common","cubicBezierEaseInOut","themeClassHandle","mergedClsPrefix","mergedValue","renderedNames","Set","addTabFixed","tabWrapperStyle","mergedSize","cssVars","themeClass","animationDirection","onRender","render","$slots","defaultSlot","prefix","prefixSlot","suffix","suffixSlot","tabPaneChildren","filter","v","__TAB_PANE__","tabChildren","__TAB__","showPane","length","isCard","isSegment","mergedJustifyContent","class","children","map","tabPaneVNode","index","push","internalCreatedByPane","internalLeftPadded","tab","tabVNode","createLeftPaddedTabVNode","onResize","onScroll","rawWrappedTabs","justifyTabDynamicProps","createAddTag","wrappedTabs","filterMapTabPanes","tabPaneVNodes","onEnter","onAfterEnter","forEach","vNode","displayDirective","_displayDirective","matchDisplayDirective","directive","show","key","has","useVShow","internalAddable","modifiedVNode","isArray","dynamicProps","includes"],"mappings":"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","sourcesContent":["import { h, ref, defineComponent, computed, provide, watch, toRef, nextTick, withDirectives, vShow, watchEffect, cloneVNode, TransitionGroup } from 'vue';\nimport { VResizeObserver, VXScroll } from 'vueuc';\nimport { throttle } from 'lodash-es';\nimport { useCompitable, onFontsReady, useMergedState } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey, call, flatten, warnOnce, resolveWrappedSlot } from '../../_utils';\nimport { tabsLight } from '../styles';\nimport { tabsInjectionKey } from './interface';\nimport Tab from './Tab';\nimport style from './styles/index.cssr';\nconst tabsProps = Object.assign(Object.assign({}, useTheme.props), { value: [String, Number], defaultValue: [String, Number], trigger: {\n        type: String,\n        default: 'click'\n    }, type: {\n        type: String,\n        default: 'bar'\n    }, closable: Boolean, justifyContent: String, size: {\n        type: String,\n        default: 'medium'\n    }, tabStyle: [String, Object], barWidth: Number, paneClass: String, paneStyle: [String, Object], addable: [Boolean, Object], tabsPadding: {\n        type: Number,\n        default: 0\n    }, animated: Boolean, onBeforeLeave: Function, onAdd: Function, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], onClose: [Function, Array], \n    // deprecated\n    labelSize: String, activeName: [String, Number], onActiveNameChange: [Function, Array] });\nexport default defineComponent({\n    name: 'Tabs',\n    props: tabsProps,\n    setup(props, { slots }) {\n        var _a, _b, _c, _d;\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.labelSize !== undefined) {\n                    warnOnce('tabs', '`label-size` is deprecated, please use `size` instead.');\n                }\n                if (props.activeName !== undefined) {\n                    warnOnce('tabs', '`active-name` is deprecated, please use `value` instead.');\n                }\n                if (props.onActiveNameChange !== undefined) {\n                    warnOnce('tabs', '`on-active-name-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Tabs', '-tabs', style, tabsLight, props, mergedClsPrefixRef);\n        const tabsElRef = ref(null);\n        const barElRef = ref(null);\n        const scrollWrapperElRef = ref(null);\n        const addTabInstRef = ref(null);\n        const xScrollInstRef = ref(null);\n        const leftReachedRef = ref(true);\n        const rightReachedRef = ref(true);\n        const compitableSizeRef = useCompitable(props, ['labelSize', 'size']);\n        const compitableValueRef = useCompitable(props, ['activeName', 'value']);\n        const uncontrolledValueRef = ref((_b = (_a = compitableValueRef.value) !== null && _a !== void 0 ? _a : props.defaultValue) !== null && _b !== void 0 ? _b : (slots.default\n            ? (_d = (_c = flatten(slots.default())[0]) === null || _c === void 0 ? void 0 : _c.props) === null || _d === void 0 ? void 0 : _d.name\n            : null));\n        const mergedValueRef = useMergedState(compitableValueRef, uncontrolledValueRef);\n        const tabChangeIdRef = { id: 0 };\n        const tabWrapperStyleRef = computed(() => {\n            if (!props.justifyContent || props.type === 'card')\n                return undefined;\n            return {\n                display: 'flex',\n                justifyContent: props.justifyContent\n            };\n        });\n        watch(mergedValueRef, () => {\n            tabChangeIdRef.id = 0;\n            updateCurrentBarStyle();\n        });\n        function getCurrentEl() {\n            var _a;\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            const tabEl = (_a = tabsElRef.value) === null || _a === void 0 ? void 0 : _a.querySelector(`[data-name=\"${value}\"]`);\n            return tabEl;\n        }\n        function updateBarStyle(tabEl) {\n            if (props.type === 'card')\n                return;\n            const { value: barEl } = barElRef;\n            if (!barEl)\n                return;\n            if (tabEl) {\n                const disabledClassName = `${mergedClsPrefixRef.value}-tabs-bar--disabled`;\n                const { barWidth } = props;\n                if (tabEl.dataset.disabled === 'true') {\n                    barEl.classList.add(disabledClassName);\n                }\n                else {\n                    barEl.classList.remove(disabledClassName);\n                }\n                if (barWidth && tabEl.offsetWidth >= barWidth) {\n                    const offsetDiffLeft = Math.floor((tabEl.offsetWidth - barWidth) / 2) + tabEl.offsetLeft;\n                    barEl.style.left = `${offsetDiffLeft}px`;\n                    barEl.style.maxWidth = `${barWidth}px`;\n                }\n                else {\n                    barEl.style.left = `${tabEl.offsetLeft}px`;\n                    barEl.style.maxWidth = `${tabEl.offsetWidth}px`;\n                }\n                barEl.style.width = '8192px';\n            }\n        }\n        function updateCurrentBarStyle() {\n            if (props.type === 'card')\n                return;\n            const tabEl = getCurrentEl();\n            if (tabEl) {\n                updateBarStyle(tabEl);\n            }\n        }\n        const tabsPaneWrapperRef = ref(null);\n        let currentHeight = 0;\n        function onAnimationBeforeLeave() {\n            const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n            if (tabsPaneWrapperEl) {\n                currentHeight = tabsPaneWrapperEl.getBoundingClientRect().height;\n                const currentHeightPx = `${currentHeight}px`;\n                tabsPaneWrapperEl.style.height = currentHeightPx;\n                tabsPaneWrapperEl.style.maxHeight = currentHeightPx;\n            }\n        }\n        function onAnimationEnter(el) {\n            const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n            if (tabsPaneWrapperEl) {\n                const targetHeight = el.getBoundingClientRect().height;\n                tabsPaneWrapperEl.style.maxHeight = `${targetHeight}px`;\n                tabsPaneWrapperEl.style.height = `${Math.max(currentHeight, targetHeight)}px`;\n            }\n        }\n        function onAnimationAfterEnter() {\n            const tabsPaneWrapperEl = tabsPaneWrapperRef.value;\n            if (tabsPaneWrapperEl) {\n                tabsPaneWrapperEl.style.maxHeight = '';\n                tabsPaneWrapperEl.style.height = '';\n            }\n        }\n        const renderNameListRef = { value: [] };\n        const animationDirectionRef = ref('next');\n        function activateTab(panelName) {\n            const currentValue = mergedValueRef.value;\n            let dir = 'next';\n            for (const name of renderNameListRef.value) {\n                if (name === currentValue) {\n                    break;\n                }\n                if (name === panelName) {\n                    dir = 'prev';\n                    break;\n                }\n            }\n            animationDirectionRef.value = dir;\n            doUpdateValue(panelName);\n        }\n        function doUpdateValue(panelName) {\n            const { onActiveNameChange, onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onActiveNameChange) {\n                call(onActiveNameChange, panelName);\n            }\n            if (onUpdateValue)\n                call(onUpdateValue, panelName);\n            if (_onUpdateValue)\n                call(_onUpdateValue, panelName);\n            uncontrolledValueRef.value = panelName;\n        }\n        function handleClose(panelName) {\n            const { onClose } = props;\n            if (onClose)\n                call(onClose, panelName);\n        }\n        let firstTimeUpdatePosition = true;\n        let memorizedWidth = 0;\n        const handleNavResize = throttle(function handleNavResize(entry) {\n            var _a;\n            if (entry.contentRect.width === 0 && entry.contentRect.height === 0) {\n                return;\n            }\n            if (memorizedWidth === entry.contentRect.width) {\n                return;\n            }\n            memorizedWidth = entry.contentRect.width;\n            const { type } = props;\n            if ((type === 'line' || type === 'bar') &&\n                (firstTimeUpdatePosition || props.justifyContent)) {\n                const { value: barEl } = barElRef;\n                if (!barEl)\n                    return;\n                if (!firstTimeUpdatePosition)\n                    firstTimeUpdatePosition = false;\n                const disableTransitionClassName = `${mergedClsPrefixRef.value}-tabs-bar--transition-disabled`;\n                barEl.classList.add(disableTransitionClassName);\n                updateCurrentBarStyle();\n                // here we don't need to force layout after update bar style\n                // since deriveScrollShadow will force layout\n                barEl.classList.remove(disableTransitionClassName);\n            }\n            if (type !== 'segment') {\n                deriveScrollShadow((_a = xScrollInstRef.value) === null || _a === void 0 ? void 0 : _a.$el);\n            }\n        }, 64);\n        const addTabFixedRef = ref(false);\n        function _handleTabsResize(entry) {\n            var _a;\n            const { target, contentRect: { width } } = entry;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const containerWidth = target.parentElement.offsetWidth;\n            if (!addTabFixedRef.value) {\n                if (containerWidth < width) {\n                    addTabFixedRef.value = true;\n                }\n            }\n            else {\n                const { value: addTabInst } = addTabInstRef;\n                if (!addTabInst)\n                    return;\n                if (containerWidth - width > addTabInst.$el.offsetWidth) {\n                    addTabFixedRef.value = false;\n                }\n            }\n            deriveScrollShadow((_a = xScrollInstRef.value) === null || _a === void 0 ? void 0 : _a.$el);\n        }\n        const handleTabsResize = throttle(_handleTabsResize, 64);\n        function handleAdd() {\n            const { onAdd } = props;\n            if (onAdd)\n                onAdd();\n            void nextTick(() => {\n                const currentEl = getCurrentEl();\n                const { value: xScrollInst } = xScrollInstRef;\n                if (!currentEl || !xScrollInst)\n                    return;\n                xScrollInst.scrollTo({\n                    left: currentEl.offsetLeft,\n                    top: 0,\n                    behavior: 'smooth'\n                });\n            });\n        }\n        function deriveScrollShadow(el) {\n            if (!el)\n                return;\n            const { scrollLeft, scrollWidth, offsetWidth } = el;\n            leftReachedRef.value = scrollLeft <= 0;\n            rightReachedRef.value = scrollLeft + offsetWidth >= scrollWidth;\n        }\n        const handleScroll = throttle((e) => {\n            deriveScrollShadow(e.target);\n        }, 64);\n        provide(tabsInjectionKey, {\n            triggerRef: toRef(props, 'trigger'),\n            tabStyleRef: toRef(props, 'tabStyle'),\n            paneClassRef: toRef(props, 'paneClass'),\n            paneStyleRef: toRef(props, 'paneStyle'),\n            mergedClsPrefixRef,\n            typeRef: toRef(props, 'type'),\n            closableRef: toRef(props, 'closable'),\n            valueRef: mergedValueRef,\n            tabChangeIdRef,\n            onBeforeLeaveRef: toRef(props, 'onBeforeLeave'),\n            activateTab,\n            handleClose,\n            handleAdd\n        });\n        onFontsReady(() => {\n            updateCurrentBarStyle();\n        });\n        // avoid useless rerender\n        watchEffect(() => {\n            const { value: el } = scrollWrapperElRef;\n            if (!el)\n                return;\n            const { value: clsPrefix } = mergedClsPrefixRef;\n            const shadowBeforeClass = `${clsPrefix}-tabs-nav-scroll-wrapper--shadow-before`;\n            const shadowAfterClass = `${clsPrefix}-tabs-nav-scroll-wrapper--shadow-after`;\n            if (leftReachedRef.value) {\n                el.classList.remove(shadowBeforeClass);\n            }\n            else {\n                el.classList.add(shadowBeforeClass);\n            }\n            if (rightReachedRef.value) {\n                el.classList.remove(shadowAfterClass);\n            }\n            else {\n                el.classList.add(shadowAfterClass);\n            }\n        });\n        const exposedMethods = {\n            syncBarPosition: () => {\n                updateCurrentBarStyle();\n            }\n        };\n        const cssVarsRef = computed(() => {\n            const { value: size } = compitableSizeRef;\n            const { type } = props;\n            const typeSuffix = {\n                card: 'Card',\n                bar: 'Bar',\n                line: 'Line',\n                segment: 'Segment'\n            }[type];\n            const sizeType = `${size}${typeSuffix}`;\n            const { self: { barColor, closeColor, closeColorHover, closeColorPressed, tabColor, tabBorderColor, paneTextColor, tabFontWeight, tabBorderRadius, tabFontWeightActive, colorSegment, fontWeightStrong, tabColorSegment, [createKey('panePadding', size)]: panePadding, [createKey('tabPadding', sizeType)]: tabPadding, [createKey('tabGap', sizeType)]: tabGap, [createKey('tabTextColor', type)]: tabTextColor, [createKey('tabTextColorActive', type)]: tabTextColorActive, [createKey('tabTextColorHover', type)]: tabTextColorHover, [createKey('tabTextColorDisabled', type)]: tabTextColorDisabled, [createKey('tabFontSize', size)]: tabFontSize }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-color-segment': colorSegment,\n                '--n-bar-color': barColor,\n                '--n-tab-font-size': tabFontSize,\n                '--n-tab-text-color': tabTextColor,\n                '--n-tab-text-color-active': tabTextColorActive,\n                '--n-tab-text-color-disabled': tabTextColorDisabled,\n                '--n-tab-text-color-hover': tabTextColorHover,\n                '--n-pane-text-color': paneTextColor,\n                '--n-tab-border-color': tabBorderColor,\n                '--n-tab-border-radius': tabBorderRadius,\n                '--n-close-color': closeColor,\n                '--n-close-color-hover': closeColorHover,\n                '--n-close-color-pressed': closeColorPressed,\n                '--n-tab-color': tabColor,\n                '--n-tab-font-weight': tabFontWeight,\n                '--n-tab-font-weight-active': tabFontWeightActive,\n                '--n-tab-padding': tabPadding,\n                '--n-tab-gap': tabGap,\n                '--n-pane-padding': panePadding,\n                '--n-font-weight-strong': fontWeightStrong,\n                '--n-tab-color-segment': tabColorSegment\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('tabs', computed(() => {\n                return `${compitableSizeRef.value[0]}${props.type[0]}`;\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, mergedValue: mergedValueRef, renderedNames: new Set(), tabsPaneWrapperRef,\n            tabsElRef,\n            barElRef,\n            addTabInstRef,\n            xScrollInstRef,\n            scrollWrapperElRef, addTabFixed: addTabFixedRef, tabWrapperStyle: tabWrapperStyleRef, handleNavResize, mergedSize: compitableSizeRef, handleScroll,\n            handleTabsResize, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, animationDirection: animationDirectionRef, renderNameListRef,\n            onAnimationBeforeLeave,\n            onAnimationEnter,\n            onAnimationAfterEnter, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender }, exposedMethods);\n    },\n    render() {\n        const { mergedClsPrefix, type, addTabFixed, addable, mergedSize, renderNameListRef, onRender, $slots: { default: defaultSlot, prefix: prefixSlot, suffix: suffixSlot } } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        const tabPaneChildren = defaultSlot\n            ? flatten(defaultSlot()).filter((v) => {\n                return v.type.__TAB_PANE__ === true;\n            })\n            : [];\n        const tabChildren = defaultSlot\n            ? flatten(defaultSlot()).filter((v) => {\n                return v.type.__TAB__ === true;\n            })\n            : [];\n        const showPane = !tabChildren.length;\n        const isCard = type === 'card';\n        const isSegment = type === 'segment';\n        const mergedJustifyContent = !isCard && !isSegment && this.justifyContent;\n        renderNameListRef.value = [];\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-tabs`,\n                this.themeClass,\n                `${mergedClsPrefix}-tabs--${type}-type`,\n                `${mergedClsPrefix}-tabs--${mergedSize}-size`,\n                mergedJustifyContent && `${mergedClsPrefix}-tabs--flex`\n            ], style: this.cssVars },\n            h(\"div\", { class: [\n                    // the class should be applied here since it's possible\n                    // to make tabs nested in tabs, style may influence each\n                    // other. adding a class will make it easy to write the\n                    // style.\n                    `${mergedClsPrefix}-tabs-nav--${type}-type`,\n                    `${mergedClsPrefix}-tabs-nav`\n                ] },\n                resolveWrappedSlot(prefixSlot, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-tabs-nav__prefix` }, children))),\n                isSegment ? (h(\"div\", { class: `${mergedClsPrefix}-tabs-rail` }, showPane\n                    ? tabPaneChildren.map((tabPaneVNode, index) => {\n                        renderNameListRef.value.push(tabPaneVNode.props.name);\n                        return (h(Tab, Object.assign({}, tabPaneVNode.props, { internalCreatedByPane: true, internalLeftPadded: index !== 0 }), tabPaneVNode.children\n                            ? {\n                                default: tabPaneVNode.children.tab\n                            }\n                            : undefined));\n                    })\n                    : tabChildren.map((tabVNode, index) => {\n                        renderNameListRef.value.push(tabVNode.props.name);\n                        if (index === 0) {\n                            return tabVNode;\n                        }\n                        else {\n                            return createLeftPaddedTabVNode(tabVNode);\n                        }\n                    }))) : (h(VResizeObserver, { onResize: this.handleNavResize }, {\n                    default: () => (h(\"div\", { class: `${mergedClsPrefix}-tabs-nav-scroll-wrapper`, ref: \"scrollWrapperElRef\" },\n                        h(VXScroll, { ref: \"xScrollInstRef\", onScroll: this.handleScroll }, {\n                            default: () => {\n                                const rawWrappedTabs = (h(\"div\", { style: this.tabWrapperStyle, class: `${mergedClsPrefix}-tabs-wrapper` },\n                                    mergedJustifyContent ? null : (h(\"div\", { class: `${mergedClsPrefix}-tabs-scroll-padding`, style: { width: `${this.tabsPadding}px` } })),\n                                    showPane\n                                        ? tabPaneChildren.map((tabPaneVNode, index) => {\n                                            renderNameListRef.value.push(tabPaneVNode.props.name);\n                                            return justifyTabDynamicProps(h(Tab, Object.assign({}, tabPaneVNode.props, { internalCreatedByPane: true, internalLeftPadded: index !== 0 && !mergedJustifyContent }), tabPaneVNode.children\n                                                ? {\n                                                    default: tabPaneVNode.children.tab\n                                                }\n                                                : undefined));\n                                        })\n                                        : tabChildren.map((tabVNode, index) => {\n                                            renderNameListRef.value.push(tabVNode.props.name);\n                                            if (index !== 0 &&\n                                                !mergedJustifyContent) {\n                                                return justifyTabDynamicProps(createLeftPaddedTabVNode(tabVNode));\n                                            }\n                                            else {\n                                                return justifyTabDynamicProps(tabVNode);\n                                            }\n                                        }),\n                                    !addTabFixed && addable && isCard\n                                        ? createAddTag(addable, (showPane\n                                            ? tabPaneChildren.length\n                                            : tabChildren.length) !== 0)\n                                        : null,\n                                    mergedJustifyContent ? null : (h(\"div\", { class: `${mergedClsPrefix}-tabs-scroll-padding`, style: { width: `${this.tabsPadding}px` } }))));\n                                let wrappedTabs = rawWrappedTabs;\n                                if (isCard && addable) {\n                                    wrappedTabs = (h(VResizeObserver, { onResize: this.handleTabsResize }, {\n                                        default: () => rawWrappedTabs\n                                    }));\n                                }\n                                return (h(\"div\", { ref: \"tabsElRef\", class: `${mergedClsPrefix}-tabs-nav-scroll-content` },\n                                    wrappedTabs,\n                                    isCard ? (h(\"div\", { class: `${mergedClsPrefix}-tabs-pad` })) : null,\n                                    isCard ? null : (h(\"div\", { ref: \"barElRef\", class: `${mergedClsPrefix}-tabs-bar` }))));\n                            }\n                        })))\n                })),\n                addTabFixed && addable && isCard\n                    ? createAddTag(addable, true)\n                    : null,\n                resolveWrappedSlot(suffixSlot, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-tabs-nav__suffix` }, children)))),\n            showPane &&\n                (this.animated ? (h(\"div\", { ref: \"tabsPaneWrapperRef\", class: `${mergedClsPrefix}-tabs-pane-wrapper` }, filterMapTabPanes(tabPaneChildren, this.mergedValue, this.renderedNames, this.onAnimationBeforeLeave, this.onAnimationEnter, this.onAnimationAfterEnter, this.animationDirection))) : (filterMapTabPanes(tabPaneChildren, this.mergedValue, this.renderedNames)))));\n    }\n});\nfunction filterMapTabPanes(tabPaneVNodes, value, renderedNames, onBeforeLeave, onEnter, onAfterEnter, animationDirection) {\n    const children = [];\n    tabPaneVNodes.forEach((vNode) => {\n        const { name, displayDirective, 'display-directive': _displayDirective } = vNode.props;\n        const matchDisplayDirective = (directive) => displayDirective === directive || _displayDirective === directive;\n        const show = value === name;\n        if (vNode.key !== undefined) {\n            vNode.key = name;\n        }\n        if (show ||\n            matchDisplayDirective('show') ||\n            (matchDisplayDirective('show:lazy') && renderedNames.has(name))) {\n            if (!renderedNames.has(name)) {\n                renderedNames.add(name);\n            }\n            const useVShow = !matchDisplayDirective('if');\n            children.push(useVShow ? withDirectives(vNode, [[vShow, show]]) : vNode);\n        }\n    });\n    if (!animationDirection) {\n        return children;\n    }\n    return (h(TransitionGroup, { name: `${animationDirection}-transition`, onBeforeLeave: onBeforeLeave, onEnter: onEnter, onAfterEnter: onAfterEnter }, { default: () => children }));\n}\nfunction createAddTag(addable, internalLeftPadded) {\n    return (h(Tab, { ref: \"addTabInstRef\", key: \"__addable\", name: \"__addable\", internalCreatedByPane: true, internalAddable: true, internalLeftPadded: internalLeftPadded, disabled: typeof addable === 'object' && addable.disabled }));\n}\nfunction createLeftPaddedTabVNode(tabVNode) {\n    const modifiedVNode = cloneVNode(tabVNode);\n    if (modifiedVNode.props) {\n        modifiedVNode.props.internalLeftPadded = true;\n    }\n    else {\n        modifiedVNode.props = {\n            internalLeftPadded: true\n        };\n    }\n    return modifiedVNode;\n}\nfunction justifyTabDynamicProps(tabVNode) {\n    if (Array.isArray(tabVNode.dynamicProps)) {\n        if (!tabVNode.dynamicProps.includes('internalLeftPadded')) {\n            tabVNode.dynamicProps.push('internalLeftPadded');\n        }\n    }\n    else {\n        tabVNode.dynamicProps = ['internalLeftPadded'];\n    }\n    return tabVNode;\n}\n"]},"metadata":{},"sourceType":"module"}