{"ast":null,"code":"import { h, computed, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render } from '../../_utils';\nimport { NTooltip } from '../../tooltip';\nimport NMenuOptionContent from './MenuOptionContent';\nimport { useMenuChild } from './use-menu-child';\nimport { useMenuChildProps } from './use-menu-child-props';\nexport const menuItemProps = Object.assign(Object.assign({}, useMenuChildProps), {\n  tmNode: {\n    type: Object,\n    required: true\n  },\n  disabled: Boolean,\n  icon: Function,\n  onClick: Function\n});\nexport const NMenuOption = defineComponent({\n  name: 'MenuOption',\n  props: menuItemProps,\n\n  setup(props) {\n    const MenuChild = useMenuChild(props);\n    const {\n      NSubmenu,\n      NMenu\n    } = MenuChild;\n    const {\n      props: menuProps,\n      mergedClsPrefixRef,\n      mergedCollapsedRef\n    } = NMenu;\n    const submenuDisabledRef = NSubmenu ? NSubmenu.mergedDisabledRef : {\n      value: false\n    };\n    const mergedDisabledRef = computed(() => {\n      return submenuDisabledRef.value || props.disabled;\n    });\n\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) onClick(e);\n    }\n\n    function handleClick(e) {\n      if (!mergedDisabledRef.value) {\n        NMenu.doSelect(props.internalKey, props.tmNode.rawNode);\n        doClick(e);\n      }\n    }\n\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      dropdownPlacement: MenuChild.dropdownPlacement,\n      paddingLeft: MenuChild.paddingLeft,\n      iconMarginRight: MenuChild.iconMarginRight,\n      maxIconSize: MenuChild.maxIconSize,\n      activeIconSize: MenuChild.activeIconSize,\n      mergedTheme: NMenu.mergedThemeRef,\n      menuProps,\n      dropdownEnabled: useMemo(() => {\n        return props.root && mergedCollapsedRef.value && menuProps.mode !== 'horizontal' && !mergedDisabledRef.value;\n      }),\n      // Vue has bug when using vooks.useMemo\n      // menu item state won't be updated...\n      // a minimal reproduction is needed\n      selected: computed(() => {\n        if (NMenu.mergedValueRef.value === props.internalKey) return true;\n        return false;\n      }),\n      mergedDisabled: mergedDisabledRef,\n      handleClick\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedTheme,\n      tmNode,\n      menuProps: {\n        renderLabel\n      }\n    } = this;\n    return h(\"div\", {\n      role: \"menuitem\",\n      class: [`${mergedClsPrefix}-menu-item`]\n    }, h(NTooltip, {\n      theme: mergedTheme.peers.Tooltip,\n      themeOverrides: mergedTheme.peerOverrides.Tooltip,\n      trigger: \"hover\",\n      placement: this.dropdownPlacement,\n      disabled: !this.dropdownEnabled || this.title === undefined,\n      internalExtraClass: ['menu-tooltip']\n    }, {\n      default: () => renderLabel ? renderLabel(tmNode.rawNode) : render(this.title),\n      trigger: () => h(NMenuOptionContent, {\n        tmNode: tmNode,\n        clsPrefix: mergedClsPrefix,\n        paddingLeft: this.paddingLeft,\n        iconMarginRight: this.iconMarginRight,\n        maxIconSize: this.maxIconSize,\n        activeIconSize: this.activeIconSize,\n        selected: this.selected,\n        title: this.title,\n        extra: this.extra,\n        disabled: this.mergedDisabled,\n        icon: this.icon,\n        onClick: this.handleClick\n      })\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/menu/src/MenuOption.js"],"names":["h","computed","defineComponent","useMemo","render","NTooltip","NMenuOptionContent","useMenuChild","useMenuChildProps","menuItemProps","Object","assign","tmNode","type","required","disabled","Boolean","icon","Function","onClick","NMenuOption","name","props","setup","MenuChild","NSubmenu","NMenu","menuProps","mergedClsPrefixRef","mergedCollapsedRef","submenuDisabledRef","mergedDisabledRef","value","doClick","e","handleClick","doSelect","internalKey","rawNode","mergedClsPrefix","dropdownPlacement","paddingLeft","iconMarginRight","maxIconSize","activeIconSize","mergedTheme","mergedThemeRef","dropdownEnabled","root","mode","selected","mergedValueRef","mergedDisabled","renderLabel","role","class","theme","peers","Tooltip","themeOverrides","peerOverrides","trigger","placement","title","undefined","internalExtraClass","default","clsPrefix","extra"],"mappings":"AAAA,SAASA,CAAT,EAAYC,QAAZ,EAAsBC,eAAtB,QAA6C,KAA7C;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,OAAO,MAAMC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,iBAAlB,CAAd,EAAoD;AAAEI,EAAAA,MAAM,EAAE;AACnFC,IAAAA,IAAI,EAAEH,MAD6E;AAEnFI,IAAAA,QAAQ,EAAE;AAFyE,GAAV;AAG1EC,EAAAA,QAAQ,EAAEC,OAHgE;AAGvDC,EAAAA,IAAI,EAAEC,QAHiD;AAGvCC,EAAAA,OAAO,EAAED;AAH8B,CAApD,CAAtB;AAIP,OAAO,MAAME,WAAW,GAAGlB,eAAe,CAAC;AACvCmB,EAAAA,IAAI,EAAE,YADiC;AAEvCC,EAAAA,KAAK,EAAEb,aAFgC;;AAGvCc,EAAAA,KAAK,CAACD,KAAD,EAAQ;AACT,UAAME,SAAS,GAAGjB,YAAY,CAACe,KAAD,CAA9B;AACA,UAAM;AAAEG,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAAsBF,SAA5B;AACA,UAAM;AAAEF,MAAAA,KAAK,EAAEK,SAAT;AAAoBC,MAAAA,kBAApB;AAAwCC,MAAAA;AAAxC,QAA+DH,KAArE;AACA,UAAMI,kBAAkB,GAAGL,QAAQ,GAC7BA,QAAQ,CAACM,iBADoB,GAE7B;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAFN;AAGA,UAAMD,iBAAiB,GAAG9B,QAAQ,CAAC,MAAM;AACrC,aAAO6B,kBAAkB,CAACE,KAAnB,IAA4BV,KAAK,CAACP,QAAzC;AACH,KAFiC,CAAlC;;AAGA,aAASkB,OAAT,CAAiBC,CAAjB,EAAoB;AAChB,YAAM;AAAEf,QAAAA;AAAF,UAAcG,KAApB;AACA,UAAIH,OAAJ,EACIA,OAAO,CAACe,CAAD,CAAP;AACP;;AACD,aAASC,WAAT,CAAqBD,CAArB,EAAwB;AACpB,UAAI,CAACH,iBAAiB,CAACC,KAAvB,EAA8B;AAC1BN,QAAAA,KAAK,CAACU,QAAN,CAAed,KAAK,CAACe,WAArB,EAAkCf,KAAK,CAACV,MAAN,CAAa0B,OAA/C;AACAL,QAAAA,OAAO,CAACC,CAAD,CAAP;AACH;AACJ;;AACD,WAAO;AACHK,MAAAA,eAAe,EAAEX,kBADd;AAEHY,MAAAA,iBAAiB,EAAEhB,SAAS,CAACgB,iBAF1B;AAGHC,MAAAA,WAAW,EAAEjB,SAAS,CAACiB,WAHpB;AAIHC,MAAAA,eAAe,EAAElB,SAAS,CAACkB,eAJxB;AAKHC,MAAAA,WAAW,EAAEnB,SAAS,CAACmB,WALpB;AAMHC,MAAAA,cAAc,EAAEpB,SAAS,CAACoB,cANvB;AAOHC,MAAAA,WAAW,EAAEnB,KAAK,CAACoB,cAPhB;AAQHnB,MAAAA,SARG;AASHoB,MAAAA,eAAe,EAAE5C,OAAO,CAAC,MAAM;AAC3B,eAAQmB,KAAK,CAAC0B,IAAN,IACJnB,kBAAkB,CAACG,KADf,IAEJL,SAAS,CAACsB,IAAV,KAAmB,YAFf,IAGJ,CAAClB,iBAAiB,CAACC,KAHvB;AAIH,OALuB,CATrB;AAeH;AACA;AACA;AACAkB,MAAAA,QAAQ,EAAEjD,QAAQ,CAAC,MAAM;AACrB,YAAIyB,KAAK,CAACyB,cAAN,CAAqBnB,KAArB,KAA+BV,KAAK,CAACe,WAAzC,EACI,OAAO,IAAP;AACJ,eAAO,KAAP;AACH,OAJiB,CAlBf;AAuBHe,MAAAA,cAAc,EAAErB,iBAvBb;AAwBHI,MAAAA;AAxBG,KAAP;AA0BH,GAlDsC;;AAmDvC/B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEmC,MAAAA,eAAF;AAAmBM,MAAAA,WAAnB;AAAgCjC,MAAAA,MAAhC;AAAwCe,MAAAA,SAAS,EAAE;AAAE0B,QAAAA;AAAF;AAAnD,QAAuE,IAA7E;AACA,WAAQrD,CAAC,CAAC,KAAD,EAAQ;AAAEsD,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,KAAK,EAAE,CAAE,GAAEhB,eAAgB,YAApB;AAA3B,KAAR,EACLvC,CAAC,CAACK,QAAD,EAAW;AAAEmD,MAAAA,KAAK,EAAEX,WAAW,CAACY,KAAZ,CAAkBC,OAA3B;AAAoCC,MAAAA,cAAc,EAAEd,WAAW,CAACe,aAAZ,CAA0BF,OAA9E;AAAuFG,MAAAA,OAAO,EAAE,OAAhG;AAAyGC,MAAAA,SAAS,EAAE,KAAKtB,iBAAzH;AAA4IzB,MAAAA,QAAQ,EAAE,CAAC,KAAKgC,eAAN,IAAyB,KAAKgB,KAAL,KAAeC,SAA9L;AAAyMC,MAAAA,kBAAkB,EAAE,CAAC,cAAD;AAA7N,KAAX,EAA4P;AACzPC,MAAAA,OAAO,EAAE,MAAMb,WAAW,GAAGA,WAAW,CAACzC,MAAM,CAAC0B,OAAR,CAAd,GAAiClC,MAAM,CAAC,KAAK2D,KAAN,CADwL;AAEzPF,MAAAA,OAAO,EAAE,MAAO7D,CAAC,CAACM,kBAAD,EAAqB;AAAEM,QAAAA,MAAM,EAAEA,MAAV;AAAkBuD,QAAAA,SAAS,EAAE5B,eAA7B;AAA8CE,QAAAA,WAAW,EAAE,KAAKA,WAAhE;AAA6EC,QAAAA,eAAe,EAAE,KAAKA,eAAnG;AAAoHC,QAAAA,WAAW,EAAE,KAAKA,WAAtI;AAAmJC,QAAAA,cAAc,EAAE,KAAKA,cAAxK;AAAwLM,QAAAA,QAAQ,EAAE,KAAKA,QAAvM;AAAiNa,QAAAA,KAAK,EAAE,KAAKA,KAA7N;AAAoOK,QAAAA,KAAK,EAAE,KAAKA,KAAhP;AAAuPrD,QAAAA,QAAQ,EAAE,KAAKqC,cAAtQ;AAAsRnC,QAAAA,IAAI,EAAE,KAAKA,IAAjS;AAAuSE,QAAAA,OAAO,EAAE,KAAKgB;AAArT,OAArB;AAFwO,KAA5P,CADI,CAAT;AAKH;;AA1DsC,CAAD,CAAnC","sourcesContent":["import { h, computed, defineComponent } from 'vue';\nimport { useMemo } from 'vooks';\nimport { render } from '../../_utils';\nimport { NTooltip } from '../../tooltip';\nimport NMenuOptionContent from './MenuOptionContent';\nimport { useMenuChild } from './use-menu-child';\nimport { useMenuChildProps } from './use-menu-child-props';\nexport const menuItemProps = Object.assign(Object.assign({}, useMenuChildProps), { tmNode: {\n        type: Object,\n        required: true\n    }, disabled: Boolean, icon: Function, onClick: Function });\nexport const NMenuOption = defineComponent({\n    name: 'MenuOption',\n    props: menuItemProps,\n    setup(props) {\n        const MenuChild = useMenuChild(props);\n        const { NSubmenu, NMenu } = MenuChild;\n        const { props: menuProps, mergedClsPrefixRef, mergedCollapsedRef } = NMenu;\n        const submenuDisabledRef = NSubmenu\n            ? NSubmenu.mergedDisabledRef\n            : { value: false };\n        const mergedDisabledRef = computed(() => {\n            return submenuDisabledRef.value || props.disabled;\n        });\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                onClick(e);\n        }\n        function handleClick(e) {\n            if (!mergedDisabledRef.value) {\n                NMenu.doSelect(props.internalKey, props.tmNode.rawNode);\n                doClick(e);\n            }\n        }\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            dropdownPlacement: MenuChild.dropdownPlacement,\n            paddingLeft: MenuChild.paddingLeft,\n            iconMarginRight: MenuChild.iconMarginRight,\n            maxIconSize: MenuChild.maxIconSize,\n            activeIconSize: MenuChild.activeIconSize,\n            mergedTheme: NMenu.mergedThemeRef,\n            menuProps,\n            dropdownEnabled: useMemo(() => {\n                return (props.root &&\n                    mergedCollapsedRef.value &&\n                    menuProps.mode !== 'horizontal' &&\n                    !mergedDisabledRef.value);\n            }),\n            // Vue has bug when using vooks.useMemo\n            // menu item state won't be updated...\n            // a minimal reproduction is needed\n            selected: computed(() => {\n                if (NMenu.mergedValueRef.value === props.internalKey)\n                    return true;\n                return false;\n            }),\n            mergedDisabled: mergedDisabledRef,\n            handleClick\n        };\n    },\n    render() {\n        const { mergedClsPrefix, mergedTheme, tmNode, menuProps: { renderLabel } } = this;\n        return (h(\"div\", { role: \"menuitem\", class: [`${mergedClsPrefix}-menu-item`] },\n            h(NTooltip, { theme: mergedTheme.peers.Tooltip, themeOverrides: mergedTheme.peerOverrides.Tooltip, trigger: \"hover\", placement: this.dropdownPlacement, disabled: !this.dropdownEnabled || this.title === undefined, internalExtraClass: ['menu-tooltip'] }, {\n                default: () => renderLabel ? renderLabel(tmNode.rawNode) : render(this.title),\n                trigger: () => (h(NMenuOptionContent, { tmNode: tmNode, clsPrefix: mergedClsPrefix, paddingLeft: this.paddingLeft, iconMarginRight: this.iconMarginRight, maxIconSize: this.maxIconSize, activeIconSize: this.activeIconSize, selected: this.selected, title: this.title, extra: this.extra, disabled: this.mergedDisabled, icon: this.icon, onClick: this.handleClick }))\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}