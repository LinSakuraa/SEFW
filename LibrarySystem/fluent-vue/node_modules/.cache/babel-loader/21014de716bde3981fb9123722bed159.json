{"ast":null,"code":"import { h, ref, onBeforeUnmount, defineComponent, Transition, toRef } from 'vue';\nimport { useStyle } from '../../../_mixins';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n  name: 'BaseMenuMask',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup(props) {\n    useStyle('-base-menu-mask', style, toRef(props, 'clsPrefix'));\n    const messageRef = ref(null);\n    let timerId = null;\n    const uncontrolledShowRef = ref(false);\n    onBeforeUnmount(() => {\n      if (timerId !== null) {\n        window.clearTimeout(timerId);\n      }\n    });\n    const exposedRef = {\n      showOnce(message, duration = 1500) {\n        if (timerId) window.clearTimeout(timerId);\n        uncontrolledShowRef.value = true;\n        messageRef.value = message;\n        timerId = window.setTimeout(() => {\n          uncontrolledShowRef.value = false;\n          messageRef.value = null;\n        }, duration);\n      }\n\n    };\n    return Object.assign({\n      message: messageRef,\n      show: uncontrolledShowRef\n    }, exposedRef);\n  },\n\n  render() {\n    return h(Transition, {\n      name: \"fade-in-transition\"\n    }, {\n      default: () => this.show ? h(\"div\", {\n        class: `${this.clsPrefix}-base-menu-mask`\n      }, this.message) : null\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/_internal/menu-mask/src/MenuMask.js"],"names":["h","ref","onBeforeUnmount","defineComponent","Transition","toRef","useStyle","style","name","props","clsPrefix","type","String","required","setup","messageRef","timerId","uncontrolledShowRef","window","clearTimeout","exposedRef","showOnce","message","duration","value","setTimeout","Object","assign","show","render","default","class"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,eAAjB,EAAkCC,eAAlC,EAAmDC,UAAnD,EAA+DC,KAA/D,QAA4E,KAA5E;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,eAAeJ,eAAe,CAAC;AAC3BK,EAAAA,IAAI,EAAE,cADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,QAAQ,EAAE;AAFH;AADR,GAFoB;;AAQ3BC,EAAAA,KAAK,CAACL,KAAD,EAAQ;AACTH,IAAAA,QAAQ,CAAC,iBAAD,EAAoBC,KAApB,EAA2BF,KAAK,CAACI,KAAD,EAAQ,WAAR,CAAhC,CAAR;AACA,UAAMM,UAAU,GAAGd,GAAG,CAAC,IAAD,CAAtB;AACA,QAAIe,OAAO,GAAG,IAAd;AACA,UAAMC,mBAAmB,GAAGhB,GAAG,CAAC,KAAD,CAA/B;AACAC,IAAAA,eAAe,CAAC,MAAM;AAClB,UAAIc,OAAO,KAAK,IAAhB,EAAsB;AAClBE,QAAAA,MAAM,CAACC,YAAP,CAAoBH,OAApB;AACH;AACJ,KAJc,CAAf;AAKA,UAAMI,UAAU,GAAG;AACfC,MAAAA,QAAQ,CAACC,OAAD,EAAUC,QAAQ,GAAG,IAArB,EAA2B;AAC/B,YAAIP,OAAJ,EACIE,MAAM,CAACC,YAAP,CAAoBH,OAApB;AACJC,QAAAA,mBAAmB,CAACO,KAApB,GAA4B,IAA5B;AACAT,QAAAA,UAAU,CAACS,KAAX,GAAmBF,OAAnB;AACAN,QAAAA,OAAO,GAAGE,MAAM,CAACO,UAAP,CAAkB,MAAM;AAC9BR,UAAAA,mBAAmB,CAACO,KAApB,GAA4B,KAA5B;AACAT,UAAAA,UAAU,CAACS,KAAX,GAAmB,IAAnB;AACH,SAHS,EAGPD,QAHO,CAAV;AAIH;;AAVc,KAAnB;AAYA,WAAOG,MAAM,CAACC,MAAP,CAAc;AAAEL,MAAAA,OAAO,EAAEP,UAAX;AAAuBa,MAAAA,IAAI,EAAEX;AAA7B,KAAd,EAAkEG,UAAlE,CAAP;AACH,GA/B0B;;AAgC3BS,EAAAA,MAAM,GAAG;AACL,WAAQ7B,CAAC,CAACI,UAAD,EAAa;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAb,EAA6C;AAClDsB,MAAAA,OAAO,EAAE,MAAM,KAAKF,IAAL,GAAa5B,CAAC,CAAC,KAAD,EAAQ;AAAE+B,QAAAA,KAAK,EAAG,GAAE,KAAKrB,SAAU;AAA3B,OAAR,EAAuD,KAAKY,OAA5D,CAAd,GAAsF;AADnD,KAA7C,CAAT;AAGH;;AApC0B,CAAD,CAA9B","sourcesContent":["import { h, ref, onBeforeUnmount, defineComponent, Transition, toRef } from 'vue';\nimport { useStyle } from '../../../_mixins';\nimport style from './styles/index.cssr';\nexport default defineComponent({\n    name: 'BaseMenuMask',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        }\n    },\n    setup(props) {\n        useStyle('-base-menu-mask', style, toRef(props, 'clsPrefix'));\n        const messageRef = ref(null);\n        let timerId = null;\n        const uncontrolledShowRef = ref(false);\n        onBeforeUnmount(() => {\n            if (timerId !== null) {\n                window.clearTimeout(timerId);\n            }\n        });\n        const exposedRef = {\n            showOnce(message, duration = 1500) {\n                if (timerId)\n                    window.clearTimeout(timerId);\n                uncontrolledShowRef.value = true;\n                messageRef.value = message;\n                timerId = window.setTimeout(() => {\n                    uncontrolledShowRef.value = false;\n                    messageRef.value = null;\n                }, duration);\n            }\n        };\n        return Object.assign({ message: messageRef, show: uncontrolledShowRef }, exposedRef);\n    },\n    render() {\n        return (h(Transition, { name: \"fade-in-transition\" }, {\n            default: () => this.show ? (h(\"div\", { class: `${this.clsPrefix}-base-menu-mask` }, this.message)) : null\n        }));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}