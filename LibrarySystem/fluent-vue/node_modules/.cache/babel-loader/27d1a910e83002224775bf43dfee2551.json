{"ast":null,"code":"import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr'; // validate hours, minutes, seconds prop\n\nfunction validateUnits(value, max) {\n  if (value === undefined) {\n    return true;\n  }\n\n  if (Array.isArray(value)) {\n    return value.every(v => v >= 0 && v <= max);\n  } else {\n    return value >= 0 && value <= max;\n  }\n}\n\nconst timePickerProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: useAdjustedTo.propTo,\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: Array,\n  defaultValue: {\n    type: Number,\n    default: null\n  },\n  defaultFormattedValue: String,\n  placeholder: String,\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  value: Number,\n  format: {\n    type: String,\n    default: 'HH:mm:ss'\n  },\n  valueFormat: String,\n  formattedValue: String,\n  isHourDisabled: Function,\n  size: String,\n  isMinuteDisabled: Function,\n  isSecondDisabled: Function,\n  inputReadonly: Boolean,\n  clearable: Boolean,\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  onUpdateFormattedValue: [Function, Array],\n  'onUpdate:formattedValue': [Function, Array],\n  onBlur: [Function, Array],\n  onFocus: [Function, Array],\n  // private\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  showIcon: {\n    type: Boolean,\n    default: true\n  },\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  hours: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 23)\n  },\n  minutes: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  seconds: {\n    type: [Number, Array],\n    validator: value => validateUnits(value, 59)\n  },\n  use12Hours: Boolean,\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'TimePicker',\n  props: timePickerProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedBorderedRef,\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef,\n      dateLocaleRef\n    } = useLocale('TimePicker');\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem;\n    const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n    const keyboardState = useKeyboard();\n    const inputInstRef = ref(null);\n    const panelInstRef = ref(null);\n    const dateFnsOptionsRef = computed(() => {\n      return {\n        locale: dateLocaleRef.value.locale\n      };\n    });\n\n    function getTimestampFromFormattedValue(value) {\n      if (value === null) return null;\n      return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n    }\n\n    const {\n      defaultValue,\n      defaultFormattedValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultFormattedValue !== undefined ? getTimestampFromFormattedValue(defaultFormattedValue) : defaultValue);\n    const mergedValueRef = computed(() => {\n      const {\n        formattedValue\n      } = props;\n\n      if (formattedValue !== undefined) {\n        return getTimestampFromFormattedValue(formattedValue);\n      }\n\n      const {\n        value\n      } = props;\n\n      if (value !== undefined) {\n        return value;\n      }\n\n      return uncontrolledValueRef.value;\n    });\n    const {\n      value: mergedValue\n    } = mergedValueRef;\n    const displayTimeStringRef = ref(mergedValue === null ? '' : format(mergedValue, props.format, dateFnsOptionsRef.value));\n    const uncontrolledShowRef = ref(false);\n    const controlledShowRef = toRef(props, 'show');\n    const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n    const memorizedValueRef = ref(mergedValue);\n    const transitionDisabledRef = ref(false);\n    const localizedNowRef = computed(() => {\n      return localeRef.value.now;\n    });\n    const localizedPlaceholderRef = computed(() => {\n      if (props.placeholder !== undefined) return props.placeholder;\n      return localeRef.value.placeholder;\n    });\n    const localizedNegativeTextRef = computed(() => {\n      return localeRef.value.negativeText;\n    });\n    const localizedPositiveTextRef = computed(() => {\n      return localeRef.value.positiveText;\n    });\n    const hourInFormatRef = computed(() => {\n      return /H|h|K|k/.test(props.format);\n    });\n    const minuteInFormatRef = computed(() => {\n      return props.format.includes('m');\n    });\n    const secondInFormatRef = computed(() => {\n      return props.format.includes('s');\n    });\n    const isHourInvalidRef = computed(() => {\n      const {\n        isHourDisabled\n      } = props;\n      if (hourValueRef.value === null) return false;\n      if (!isTimeInStep(hourValueRef.value, 'hours', props.hours)) return true;\n      if (!isHourDisabled) return false;\n      return isHourDisabled(hourValueRef.value);\n    });\n    const isMinuteInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      if (minuteValue === null || hourValue === null) return false;\n      if (!isTimeInStep(minuteValue, 'minutes', props.minutes)) return true;\n      const {\n        isMinuteDisabled\n      } = props;\n      if (!isMinuteDisabled) return false;\n      return isMinuteDisabled(minuteValue, hourValue);\n    });\n    const isSecondInvalidRef = computed(() => {\n      const {\n        value: minuteValue\n      } = minuteValueRef;\n      const {\n        value: hourValue\n      } = hourValueRef;\n      const {\n        value: secondValue\n      } = secondValueRef;\n\n      if (secondValue === null || minuteValue === null || hourValue === null) {\n        return false;\n      }\n\n      if (!isTimeInStep(secondValue, 'seconds', props.seconds)) return true;\n      const {\n        isSecondDisabled\n      } = props;\n      if (!isSecondDisabled) return false;\n      return isSecondDisabled(secondValue, minuteValue, hourValue);\n    });\n    const isValueInvalidRef = computed(() => {\n      return isHourInvalidRef.value || isMinuteInvalidRef.value || isSecondInvalidRef.value;\n    });\n    const mergedAttrSizeRef = computed(() => {\n      return props.format.length + 4;\n    });\n    const amPmValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return getHours(value) < 12 ? 'am' : 'pm';\n    });\n    const hourValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(format(value, 'HH', dateFnsOptionsRef.value));\n    });\n    const minuteValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(format(value, 'mm', dateFnsOptionsRef.value));\n    });\n    const secondValueRef = computed(() => {\n      const {\n        value\n      } = mergedValueRef;\n      if (value === null) return null;\n      return Number(format(value, 'ss', dateFnsOptionsRef.value));\n    });\n\n    function doUpdateFormattedValue(value, timestampValue) {\n      const {\n        onUpdateFormattedValue,\n        'onUpdate:formattedValue': _onUpdateFormattedValue\n      } = props;\n\n      if (onUpdateFormattedValue) {\n        call(onUpdateFormattedValue, value, timestampValue);\n      }\n\n      if (_onUpdateFormattedValue) {\n        call(_onUpdateFormattedValue, value, timestampValue);\n      }\n    }\n\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const formattedValue = value === null ? null : format(value, props.valueFormat || props.format);\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, formattedValue);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, formattedValue);\n      }\n\n      if (onChange) call(onChange, value, formattedValue);\n      doUpdateFormattedValue(formattedValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function handleTimeInputClear(e) {\n      e.stopPropagation();\n      doUpdateValue(null);\n      deriveInputValue(null);\n    }\n\n    function handleFocusDetectorFocus() {\n      closePanel({\n        returnFocus: true\n      });\n    }\n\n    function handleMenuKeyDown(e) {\n      var _a;\n\n      switch (e.code) {\n        case 'Escape':\n          closePanel({\n            returnFocus: true\n          });\n          break;\n\n        case 'Tab':\n          if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n            e.preventDefault();\n            closePanel({\n              returnFocus: true\n            });\n          }\n\n          break;\n      }\n    }\n\n    function disableTransitionOneTick() {\n      transitionDisabledRef.value = true;\n      void nextTick(() => {\n        transitionDisabledRef.value = false;\n      });\n    }\n\n    function handleTriggerClick(e) {\n      if (mergedDisabledRef.value || happensIn(e, 'clear')) return;\n\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n\n    function handleHourClick(hour) {\n      if (typeof hour === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n      } else {\n        doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n      }\n    }\n\n    function handleMinuteClick(minute) {\n      if (typeof minute === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n      } else {\n        doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n      }\n    }\n\n    function handleSecondClick(second) {\n      if (typeof second === 'string') return;\n\n      if (mergedValueRef.value === null) {\n        doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n      } else {\n        doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n      }\n    }\n\n    function handleAmPmClick(amPm) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (mergedValue === null) {\n        const now = new Date();\n        const hours = getHours(now);\n\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(now, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(now, hours - 12)));\n        }\n\n        doUpdateValue(getTime(now));\n      } else {\n        const hours = getHours(mergedValue);\n\n        if (amPm === 'pm' && hours < 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n        } else if (amPm === 'am' && hours >= 12) {\n          doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n        }\n      }\n    }\n\n    function deriveInputValue(time) {\n      if (time === undefined) time = mergedValueRef.value;\n      if (time === null) displayTimeStringRef.value = '';else {\n        displayTimeStringRef.value = format(time, props.format, dateFnsOptionsRef.value);\n      }\n    }\n\n    function handleTimeInputFocus(e) {\n      if (isInternalFocusSwitch(e)) return;\n      doFocus(e);\n    }\n\n    function handleTimeInputBlur(e) {\n      var _a;\n\n      if (isInternalFocusSwitch(e)) return;\n\n      if (mergedShowRef.value) {\n        const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n\n        if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n          doBlur(e);\n          closePanel({\n            returnFocus: false\n          });\n        }\n      } else {\n        doBlur(e);\n      }\n    }\n\n    function handleTimeInputActivate() {\n      if (mergedDisabledRef.value) return;\n\n      if (!mergedShowRef.value) {\n        openPanel();\n      }\n    }\n\n    function handleTimeInputDeactivate() {\n      if (mergedDisabledRef.value) return;\n      deriveInputValue();\n      closePanel({\n        returnFocus: false\n      });\n    }\n\n    function scrollTimer() {\n      if (!panelInstRef.value) return;\n      const {\n        hourScrollRef,\n        minuteScrollRef,\n        secondScrollRef,\n        amPmScrollRef\n      } = panelInstRef.value;\n      [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach(itemScrollRef => {\n        var _a;\n\n        if (!itemScrollRef) return;\n        const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n\n        if (activeItemEl) {\n          itemScrollRef.scrollTo({\n            top: activeItemEl.offsetTop\n          });\n        }\n      });\n    }\n\n    function doUpdateShow(value) {\n      uncontrolledShowRef.value = value;\n    }\n\n    function isInternalFocusSwitch(e) {\n      var _a, _b, _c;\n\n      return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) || ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n    }\n\n    function openPanel() {\n      memorizedValueRef.value = mergedValueRef.value;\n      doUpdateShow(true);\n      void nextTick(scrollTimer);\n    }\n\n    function handleClickOutside(e) {\n      var _a, _b;\n\n      if (mergedShowRef.value && !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {\n        closePanel({\n          returnFocus: false\n        });\n      }\n    }\n\n    function closePanel({\n      returnFocus\n    }) {\n      var _a;\n\n      if (mergedShowRef.value) {\n        doUpdateShow(false);\n\n        if (returnFocus) {\n          (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n      }\n    }\n\n    function handleTimeInputUpdateValue(v) {\n      if (v === '') {\n        doUpdateValue(null);\n        return;\n      }\n\n      const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n      displayTimeStringRef.value = v;\n\n      if (isValid(time)) {\n        const {\n          value: mergedValue\n        } = mergedValueRef;\n\n        if (mergedValue !== null) {\n          const newTime = set(mergedValue, {\n            hours: getHours(time),\n            minutes: getMinutes(time),\n            seconds: getSeconds(time)\n          });\n          doUpdateValue(getTime(newTime));\n        } else {\n          doUpdateValue(getTime(time));\n        }\n      }\n    }\n\n    function handleCancelClick() {\n      doUpdateValue(memorizedValueRef.value);\n      doUpdateShow(false);\n    }\n\n    function handleNowClick() {\n      const now = new Date();\n      const getNowTime = {\n        hours: getHours,\n        minutes: getMinutes,\n        seconds: getSeconds\n      };\n      const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map(i => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i]) ? getNowTime[i](now) : findSimilarTime(getNowTime[i](now), i, props[i]));\n      const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n      doUpdateValue(getTime(newValue));\n    }\n\n    function handleConfirmClick() {\n      deriveInputValue();\n      closePanel({\n        returnFocus: true\n      });\n    }\n\n    function handleMenuFocusOut(e) {\n      if (isInternalFocusSwitch(e)) return;\n      doBlur(e);\n      closePanel({\n        returnFocus: false\n      });\n    }\n\n    watch(mergedValueRef, value => {\n      deriveInputValue(value);\n      disableTransitionOneTick();\n      void nextTick(scrollTimer);\n    });\n    watch(mergedShowRef, () => {\n      if (isValueInvalidRef.value) {\n        doUpdateValue(memorizedValueRef.value);\n      }\n    });\n    provide(timePickerInjectionKey, {\n      mergedThemeRef: themeRef,\n      mergedClsPrefixRef\n    });\n    const exposedMethods = {\n      focus: () => {\n        var _a;\n\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: () => {\n        var _a;\n\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      }\n    };\n    const triggerCssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          iconColor,\n          iconColorDisabled\n        }\n      } = themeRef.value;\n      return {\n        '--n-icon-color': iconColor,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-bezier': cubicBezierEaseInOut\n      };\n    });\n    const triggerThemeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props) : undefined;\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          panelColor,\n          itemTextColor,\n          itemTextColorActive,\n          itemColorHover,\n          panelDividerColor,\n          panelBoxShadow,\n          itemOpacityDisabled,\n          borderRadius,\n          itemFontSize,\n          itemWidth,\n          itemHeight,\n          panelActionPadding,\n          itemBorderRadius\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-border-radius': borderRadius,\n        '--n-item-color-hover': itemColorHover,\n        '--n-item-font-size': itemFontSize,\n        '--n-item-height': itemHeight,\n        '--n-item-opacity-disabled': itemOpacityDisabled,\n        '--n-item-text-color': itemTextColor,\n        '--n-item-text-color-active': itemTextColorActive,\n        '--n-item-width': itemWidth,\n        '--n-panel-action-padding': panelActionPadding,\n        '--n-panel-box-shadow': panelBoxShadow,\n        '--n-panel-color': panelColor,\n        '--n-panel-divider-color': panelDividerColor,\n        '--n-item-border-radius': itemBorderRadius\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('time-picker', undefined, cssVarsRef, props) : undefined;\n    return {\n      focus: exposedMethods.focus,\n      blur: exposedMethods.blur,\n      mergedStatus: mergedStatusRef,\n      mergedBordered: mergedBorderedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      isMounted: useIsMounted(),\n      inputInstRef,\n      panelInstRef,\n      adjustedTo: useAdjustedTo(props),\n      mergedShow: mergedShowRef,\n      localizedNow: localizedNowRef,\n      localizedPlaceholder: localizedPlaceholderRef,\n      localizedNegativeText: localizedNegativeTextRef,\n      localizedPositiveText: localizedPositiveTextRef,\n      hourInFormat: hourInFormatRef,\n      minuteInFormat: minuteInFormatRef,\n      secondInFormat: secondInFormatRef,\n      mergedAttrSize: mergedAttrSizeRef,\n      displayTimeString: displayTimeStringRef,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      isValueInvalid: isValueInvalidRef,\n      isHourInvalid: isHourInvalidRef,\n      isMinuteInvalid: isMinuteInvalidRef,\n      isSecondInvalid: isSecondInvalidRef,\n      transitionDisabled: transitionDisabledRef,\n      hourValue: hourValueRef,\n      minuteValue: minuteValueRef,\n      secondValue: secondValueRef,\n      amPmValue: amPmValueRef,\n      handleTimeInputFocus,\n      handleTimeInputBlur,\n      handleNowClick,\n      handleConfirmClick,\n      handleTimeInputUpdateValue,\n      handleMenuFocusOut,\n      handleCancelClick,\n      handleClickOutside,\n      handleTimeInputActivate,\n      handleTimeInputDeactivate,\n      handleHourClick,\n      handleMinuteClick,\n      handleSecondClick,\n      handleAmPmClick,\n      handleTimeInputClear,\n      handleFocusDetectorFocus,\n      handleMenuKeyDown,\n      handleTriggerClick,\n      mergedTheme: themeRef,\n      triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n      triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n      triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      $slots,\n      triggerOnRender\n    } = this;\n    triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass],\n      style: this.triggerCssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(NInput, {\n          ref: \"inputInstRef\",\n          status: this.mergedStatus,\n          value: this.displayTimeString,\n          bordered: this.mergedBordered,\n          passivelyActivated: true,\n          attrSize: this.mergedAttrSize,\n          theme: this.mergedTheme.peers.Input,\n          themeOverrides: this.mergedTheme.peerOverrides.Input,\n          stateful: this.stateful,\n          size: this.mergedSize,\n          placeholder: this.localizedPlaceholder,\n          clearable: this.clearable,\n          disabled: this.mergedDisabled,\n          textDecoration: this.isValueInvalid ? 'line-through' : undefined,\n          onFocus: this.handleTimeInputFocus,\n          onBlur: this.handleTimeInputBlur,\n          onActivate: this.handleTimeInputActivate,\n          onDeactivate: this.handleTimeInputDeactivate,\n          onUpdateValue: this.handleTimeInputUpdateValue,\n          onClear: this.handleTimeInputClear,\n          internalDeactivateOnEnter: true,\n          internalForceFocus: this.mergedShow,\n          readonly: this.inputReadonly || this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, this.showIcon ? {\n          [this.clearable ? 'clear' : 'suffix']: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix,\n            class: `${mergedClsPrefix}-time-picker-icon`\n          }, {\n            default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n          })\n        } : null)\n      }), h(VFollower, {\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        show: this.mergedShow,\n        to: this.adjustedTo,\n        containerClass: this.namespace,\n        placement: this.placement\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => {\n            var _a;\n\n            if (this.mergedShow) {\n              (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n              return withDirectives(h(Panel, {\n                ref: \"panelInstRef\",\n                actions: this.actions,\n                class: this.themeClass,\n                style: this.cssVars,\n                seconds: this.seconds,\n                minutes: this.minutes,\n                hours: this.hours,\n                transitionDisabled: this.transitionDisabled,\n                hourValue: this.hourValue,\n                showHour: this.hourInFormat,\n                isHourInvalid: this.isHourInvalid,\n                isHourDisabled: this.isHourDisabled,\n                minuteValue: this.minuteValue,\n                showMinute: this.minuteInFormat,\n                isMinuteInvalid: this.isMinuteInvalid,\n                isMinuteDisabled: this.isMinuteDisabled,\n                secondValue: this.secondValue,\n                amPmValue: this.amPmValue,\n                showSecond: this.secondInFormat,\n                isSecondInvalid: this.isSecondInvalid,\n                isSecondDisabled: this.isSecondDisabled,\n                isValueInvalid: this.isValueInvalid,\n                nowText: this.localizedNow,\n                confirmText: this.localizedPositiveText,\n                use12Hours: this.use12Hours,\n                onFocusout: this.handleMenuFocusOut,\n                onKeydown: this.handleMenuKeyDown,\n                onHourClick: this.handleHourClick,\n                onMinuteClick: this.handleMinuteClick,\n                onSecondClick: this.handleSecondClick,\n                onAmPmClick: this.handleAmPmClick,\n                onNowClick: this.handleNowClick,\n                onConfirmClick: this.handleConfirmClick,\n                onFocusDetectorFocus: this.handleFocusDetectorFocus\n              }), [[clickoutside, this.handleClickOutside, undefined, {\n                capture: true\n              }]]);\n            }\n\n            return null;\n          }\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/time-picker/src/TimePicker.js"],"names":["h","ref","toRef","defineComponent","computed","withDirectives","Transition","provide","nextTick","watch","watchEffect","useIsMounted","useKeyboard","useMergedState","VBinder","VTarget","VFollower","clickoutside","happensIn","isValid","startOfSecond","startOfMinute","startOfHour","format","set","setHours","setMinutes","setSeconds","getTime","getMinutes","getHours","getSeconds","strictParse","TimeIcon","NInput","NBaseIcon","useConfig","useTheme","useLocale","useFormItem","useThemeClass","call","useAdjustedTo","warnOnce","timePickerLight","Panel","timePickerInjectionKey","findSimilarTime","isTimeInStep","style","validateUnits","value","max","undefined","Array","isArray","every","v","timePickerProps","Object","assign","props","to","propTo","bordered","type","Boolean","default","actions","defaultValue","Number","defaultFormattedValue","String","placeholder","placement","valueFormat","formattedValue","isHourDisabled","Function","size","isMinuteDisabled","isSecondDisabled","inputReadonly","clearable","status","onUpdateValue","onUpdateFormattedValue","onBlur","onFocus","stateful","showIcon","disabled","show","hours","validator","minutes","seconds","use12Hours","onChange","name","setup","process","env","NODE_ENV","mergedBorderedRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","localeRef","dateLocaleRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","themeRef","keyboardState","inputInstRef","panelInstRef","dateFnsOptionsRef","locale","getTimestampFromFormattedValue","Date","uncontrolledValueRef","mergedValueRef","mergedValue","displayTimeStringRef","uncontrolledShowRef","controlledShowRef","mergedShowRef","memorizedValueRef","transitionDisabledRef","localizedNowRef","now","localizedPlaceholderRef","localizedNegativeTextRef","negativeText","localizedPositiveTextRef","positiveText","hourInFormatRef","test","minuteInFormatRef","includes","secondInFormatRef","isHourInvalidRef","hourValueRef","isMinuteInvalidRef","minuteValue","minuteValueRef","hourValue","isSecondInvalidRef","secondValue","secondValueRef","isValueInvalidRef","mergedAttrSizeRef","length","amPmValueRef","doUpdateFormattedValue","timestampValue","_onUpdateFormattedValue","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","doFocus","e","nTriggerFormFocus","doBlur","nTriggerFormBlur","handleTimeInputClear","stopPropagation","deriveInputValue","handleFocusDetectorFocus","closePanel","returnFocus","handleMenuKeyDown","_a","code","shift","target","$el","preventDefault","disableTransitionOneTick","handleTriggerClick","openPanel","handleHourClick","hour","handleMinuteClick","minute","handleSecondClick","second","handleAmPmClick","amPm","time","handleTimeInputFocus","isInternalFocusSwitch","handleTimeInputBlur","panelEl","contains","relatedTarget","handleTimeInputActivate","handleTimeInputDeactivate","scrollTimer","hourScrollRef","minuteScrollRef","secondScrollRef","amPmScrollRef","forEach","itemScrollRef","activeItemEl","contentRef","querySelector","scrollTo","top","offsetTop","doUpdateShow","_b","_c","wrapperElRef","handleClickOutside","focus","handleTimeInputUpdateValue","newTime","handleCancelClick","handleNowClick","getNowTime","mergeHours","mergeMinutes","mergeSeconds","map","i","newValue","handleConfirmClick","handleMenuFocusOut","mergedThemeRef","exposedMethods","blur","triggerCssVarsRef","common","cubicBezierEaseInOut","self","iconColor","iconColorDisabled","triggerThemeClassHandle","cssVarsRef","panelColor","itemTextColor","itemTextColorActive","itemColorHover","panelDividerColor","panelBoxShadow","itemOpacityDisabled","borderRadius","itemFontSize","itemWidth","itemHeight","panelActionPadding","itemBorderRadius","themeClassHandle","mergedStatus","mergedBordered","mergedClsPrefix","namespace","uncontrolledValue","isMounted","adjustedTo","mergedShow","localizedNow","localizedPlaceholder","localizedNegativeText","localizedPositiveText","hourInFormat","minuteInFormat","secondInFormat","mergedAttrSize","displayTimeString","mergedSize","mergedDisabled","isValueInvalid","isHourInvalid","isMinuteInvalid","isSecondInvalid","transitionDisabled","amPmValue","mergedTheme","triggerCssVars","triggerThemeClass","themeClass","triggerOnRender","onRender","cssVars","render","$slots","class","passivelyActivated","attrSize","theme","peers","Input","themeOverrides","peerOverrides","textDecoration","onActivate","onDeactivate","onClear","internalDeactivateOnEnter","internalForceFocus","readonly","onClick","clsPrefix","icon","teleportDisabled","tdkey","containerClass","appear","showHour","showMinute","showSecond","nowText","confirmText","onFocusout","onKeydown","onHourClick","onMinuteClick","onSecondClick","onAmPmClick","onNowClick","onConfirmClick","onFocusDetectorFocus","capture"],"mappings":"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","sourcesContent":["import { h, ref, toRef, defineComponent, computed, withDirectives, Transition, provide, nextTick, watch, watchEffect } from 'vue';\nimport { useIsMounted, useKeyboard, useMergedState } from 'vooks';\nimport { VBinder, VTarget, VFollower } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { happensIn } from 'seemly';\nimport { isValid, startOfSecond, startOfMinute, startOfHour, format, set, setHours, setMinutes, setSeconds, getTime, getMinutes, getHours, getSeconds } from 'date-fns';\nimport { strictParse } from '../../date-picker/src/utils';\nimport { TimeIcon } from '../../_internal/icons';\nimport { NInput } from '../../input';\nimport { NBaseIcon } from '../../_internal';\nimport { useConfig, useTheme, useLocale, useFormItem, useThemeClass } from '../../_mixins';\nimport { call, useAdjustedTo, warnOnce } from '../../_utils';\nimport { timePickerLight } from '../styles';\nimport Panel from './Panel';\nimport { timePickerInjectionKey } from './interface';\nimport { findSimilarTime, isTimeInStep } from './utils';\nimport style from './styles/index.cssr';\n// validate hours, minutes, seconds prop\nfunction validateUnits(value, max) {\n    if (value === undefined) {\n        return true;\n    }\n    if (Array.isArray(value)) {\n        return value.every((v) => v >= 0 && v <= max);\n    }\n    else {\n        return value >= 0 && value <= max;\n    }\n}\nconst timePickerProps = Object.assign(Object.assign({}, useTheme.props), { to: useAdjustedTo.propTo, bordered: {\n        type: Boolean,\n        default: undefined\n    }, actions: Array, defaultValue: {\n        type: Number,\n        default: null\n    }, defaultFormattedValue: String, placeholder: String, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, value: Number, format: {\n        type: String,\n        default: 'HH:mm:ss'\n    }, valueFormat: String, formattedValue: String, isHourDisabled: Function, size: String, isMinuteDisabled: Function, isSecondDisabled: Function, inputReadonly: Boolean, clearable: Boolean, status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], onUpdateFormattedValue: [Function, Array], 'onUpdate:formattedValue': [Function, Array], onBlur: [Function, Array], onFocus: [Function, Array], \n    // private\n    stateful: {\n        type: Boolean,\n        default: true\n    }, showIcon: {\n        type: Boolean,\n        default: true\n    }, disabled: {\n        type: Boolean,\n        default: undefined\n    }, show: {\n        type: Boolean,\n        default: undefined\n    }, hours: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 23)\n    }, minutes: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, seconds: {\n        type: [Number, Array],\n        validator: (value) => validateUnits(value, 59)\n    }, use12Hours: Boolean, \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'TimePicker',\n    props: timePickerProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('time-picker', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedBorderedRef, mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const { localeRef, dateLocaleRef } = useLocale('TimePicker');\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        const themeRef = useTheme('TimePicker', '-time-picker', style, timePickerLight, props, mergedClsPrefixRef);\n        const keyboardState = useKeyboard();\n        const inputInstRef = ref(null);\n        const panelInstRef = ref(null);\n        const dateFnsOptionsRef = computed(() => {\n            return {\n                locale: dateLocaleRef.value.locale\n            };\n        });\n        function getTimestampFromFormattedValue(value) {\n            if (value === null)\n                return null;\n            return strictParse(value, props.valueFormat || props.format, new Date(), dateFnsOptionsRef.value).getTime();\n        }\n        const { defaultValue, defaultFormattedValue } = props;\n        const uncontrolledValueRef = ref(defaultFormattedValue !== undefined\n            ? getTimestampFromFormattedValue(defaultFormattedValue)\n            : defaultValue);\n        const mergedValueRef = computed(() => {\n            const { formattedValue } = props;\n            if (formattedValue !== undefined) {\n                return getTimestampFromFormattedValue(formattedValue);\n            }\n            const { value } = props;\n            if (value !== undefined) {\n                return value;\n            }\n            return uncontrolledValueRef.value;\n        });\n        const { value: mergedValue } = mergedValueRef;\n        const displayTimeStringRef = ref(mergedValue === null\n            ? ''\n            : format(mergedValue, props.format, dateFnsOptionsRef.value));\n        const uncontrolledShowRef = ref(false);\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const memorizedValueRef = ref(mergedValue);\n        const transitionDisabledRef = ref(false);\n        const localizedNowRef = computed(() => {\n            return localeRef.value.now;\n        });\n        const localizedPlaceholderRef = computed(() => {\n            if (props.placeholder !== undefined)\n                return props.placeholder;\n            return localeRef.value.placeholder;\n        });\n        const localizedNegativeTextRef = computed(() => {\n            return localeRef.value.negativeText;\n        });\n        const localizedPositiveTextRef = computed(() => {\n            return localeRef.value.positiveText;\n        });\n        const hourInFormatRef = computed(() => {\n            return /H|h|K|k/.test(props.format);\n        });\n        const minuteInFormatRef = computed(() => {\n            return props.format.includes('m');\n        });\n        const secondInFormatRef = computed(() => {\n            return props.format.includes('s');\n        });\n        const isHourInvalidRef = computed(() => {\n            const { isHourDisabled } = props;\n            if (hourValueRef.value === null)\n                return false;\n            if (!isTimeInStep(hourValueRef.value, 'hours', props.hours))\n                return true;\n            if (!isHourDisabled)\n                return false;\n            return isHourDisabled(hourValueRef.value);\n        });\n        const isMinuteInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            if (minuteValue === null || hourValue === null)\n                return false;\n            if (!isTimeInStep(minuteValue, 'minutes', props.minutes))\n                return true;\n            const { isMinuteDisabled } = props;\n            if (!isMinuteDisabled)\n                return false;\n            return isMinuteDisabled(minuteValue, hourValue);\n        });\n        const isSecondInvalidRef = computed(() => {\n            const { value: minuteValue } = minuteValueRef;\n            const { value: hourValue } = hourValueRef;\n            const { value: secondValue } = secondValueRef;\n            if (secondValue === null || minuteValue === null || hourValue === null) {\n                return false;\n            }\n            if (!isTimeInStep(secondValue, 'seconds', props.seconds))\n                return true;\n            const { isSecondDisabled } = props;\n            if (!isSecondDisabled)\n                return false;\n            return isSecondDisabled(secondValue, minuteValue, hourValue);\n        });\n        const isValueInvalidRef = computed(() => {\n            return (isHourInvalidRef.value ||\n                isMinuteInvalidRef.value ||\n                isSecondInvalidRef.value);\n        });\n        const mergedAttrSizeRef = computed(() => {\n            return props.format.length + 4;\n        });\n        const amPmValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return getHours(value) < 12 ? 'am' : 'pm';\n        });\n        const hourValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(format(value, 'HH', dateFnsOptionsRef.value));\n        });\n        const minuteValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(format(value, 'mm', dateFnsOptionsRef.value));\n        });\n        const secondValueRef = computed(() => {\n            const { value } = mergedValueRef;\n            if (value === null)\n                return null;\n            return Number(format(value, 'ss', dateFnsOptionsRef.value));\n        });\n        function doUpdateFormattedValue(value, timestampValue) {\n            const { onUpdateFormattedValue, 'onUpdate:formattedValue': _onUpdateFormattedValue } = props;\n            if (onUpdateFormattedValue) {\n                call(onUpdateFormattedValue, value, timestampValue);\n            }\n            if (_onUpdateFormattedValue) {\n                call(_onUpdateFormattedValue, value, timestampValue);\n            }\n        }\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onChange } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const formattedValue = value === null ? null : format(value, props.valueFormat || props.format);\n            if (onUpdateValue) {\n                call(onUpdateValue, value, formattedValue);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, formattedValue);\n            }\n            if (onChange)\n                call(onChange, value, formattedValue);\n            doUpdateFormattedValue(formattedValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function handleTimeInputClear(e) {\n            e.stopPropagation();\n            doUpdateValue(null);\n            deriveInputValue(null);\n        }\n        function handleFocusDetectorFocus() {\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleMenuKeyDown(e) {\n            var _a;\n            switch (e.code) {\n                case 'Escape':\n                    closePanel({\n                        returnFocus: true\n                    });\n                    break;\n                case 'Tab':\n                    if (keyboardState.shift && e.target === ((_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el)) {\n                        e.preventDefault();\n                        closePanel({\n                            returnFocus: true\n                        });\n                    }\n                    break;\n            }\n        }\n        function disableTransitionOneTick() {\n            transitionDisabledRef.value = true;\n            void nextTick(() => {\n                transitionDisabledRef.value = false;\n            });\n        }\n        function handleTriggerClick(e) {\n            if (mergedDisabledRef.value || happensIn(e, 'clear'))\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleHourClick(hour) {\n            if (typeof hour === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setHours(startOfHour(new Date()), hour)));\n            }\n            else {\n                doUpdateValue(getTime(setHours(mergedValueRef.value, hour)));\n            }\n        }\n        function handleMinuteClick(minute) {\n            if (typeof minute === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setMinutes(startOfMinute(new Date()), minute)));\n            }\n            else {\n                doUpdateValue(getTime(setMinutes(mergedValueRef.value, minute)));\n            }\n        }\n        function handleSecondClick(second) {\n            if (typeof second === 'string')\n                return;\n            if (mergedValueRef.value === null) {\n                doUpdateValue(getTime(setSeconds(startOfSecond(new Date()), second)));\n            }\n            else {\n                doUpdateValue(getTime(setSeconds(mergedValueRef.value, second)));\n            }\n        }\n        function handleAmPmClick(amPm) {\n            const { value: mergedValue } = mergedValueRef;\n            if (mergedValue === null) {\n                const now = new Date();\n                const hours = getHours(now);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(now, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(now, hours - 12)));\n                }\n                doUpdateValue(getTime(now));\n            }\n            else {\n                const hours = getHours(mergedValue);\n                if (amPm === 'pm' && hours < 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours + 12)));\n                }\n                else if (amPm === 'am' && hours >= 12) {\n                    doUpdateValue(getTime(setHours(mergedValue, hours - 12)));\n                }\n            }\n        }\n        function deriveInputValue(time) {\n            if (time === undefined)\n                time = mergedValueRef.value;\n            if (time === null)\n                displayTimeStringRef.value = '';\n            else {\n                displayTimeStringRef.value = format(time, props.format, dateFnsOptionsRef.value);\n            }\n        }\n        function handleTimeInputFocus(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            doFocus(e);\n        }\n        function handleTimeInputBlur(e) {\n            var _a;\n            if (isInternalFocusSwitch(e))\n                return;\n            if (mergedShowRef.value) {\n                const panelEl = (_a = panelInstRef.value) === null || _a === void 0 ? void 0 : _a.$el;\n                if (!(panelEl === null || panelEl === void 0 ? void 0 : panelEl.contains(e.relatedTarget))) {\n                    doBlur(e);\n                    closePanel({\n                        returnFocus: false\n                    });\n                }\n            }\n            else {\n                doBlur(e);\n            }\n        }\n        function handleTimeInputActivate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (!mergedShowRef.value) {\n                openPanel();\n            }\n        }\n        function handleTimeInputDeactivate() {\n            if (mergedDisabledRef.value)\n                return;\n            deriveInputValue();\n            closePanel({\n                returnFocus: false\n            });\n        }\n        function scrollTimer() {\n            if (!panelInstRef.value)\n                return;\n            const { hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef } = panelInstRef.value;\n            [hourScrollRef, minuteScrollRef, secondScrollRef, amPmScrollRef].forEach((itemScrollRef) => {\n                var _a;\n                if (!itemScrollRef)\n                    return;\n                const activeItemEl = (_a = itemScrollRef.contentRef) === null || _a === void 0 ? void 0 : _a.querySelector('[data-active]');\n                if (activeItemEl) {\n                    itemScrollRef.scrollTo({\n                        top: activeItemEl.offsetTop\n                    });\n                }\n            });\n        }\n        function doUpdateShow(value) {\n            uncontrolledShowRef.value = value;\n        }\n        function isInternalFocusSwitch(e) {\n            var _a, _b, _c;\n            return !!(((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.relatedTarget)) ||\n                ((_c = panelInstRef.value) === null || _c === void 0 ? void 0 : _c.$el.contains(e.relatedTarget)));\n        }\n        function openPanel() {\n            memorizedValueRef.value = mergedValueRef.value;\n            doUpdateShow(true);\n            void nextTick(scrollTimer);\n        }\n        function handleClickOutside(e) {\n            var _a, _b;\n            if (mergedShowRef.value &&\n                !((_b = (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.wrapperElRef) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {\n                closePanel({\n                    returnFocus: false\n                });\n            }\n        }\n        function closePanel({ returnFocus }) {\n            var _a;\n            if (mergedShowRef.value) {\n                doUpdateShow(false);\n                if (returnFocus) {\n                    (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n            }\n        }\n        function handleTimeInputUpdateValue(v) {\n            if (v === '') {\n                doUpdateValue(null);\n                return;\n            }\n            const time = strictParse(v, props.format, new Date(), dateFnsOptionsRef.value);\n            displayTimeStringRef.value = v;\n            if (isValid(time)) {\n                const { value: mergedValue } = mergedValueRef;\n                if (mergedValue !== null) {\n                    const newTime = set(mergedValue, {\n                        hours: getHours(time),\n                        minutes: getMinutes(time),\n                        seconds: getSeconds(time)\n                    });\n                    doUpdateValue(getTime(newTime));\n                }\n                else {\n                    doUpdateValue(getTime(time));\n                }\n            }\n        }\n        function handleCancelClick() {\n            doUpdateValue(memorizedValueRef.value);\n            doUpdateShow(false);\n        }\n        function handleNowClick() {\n            const now = new Date();\n            const getNowTime = {\n                hours: getHours,\n                minutes: getMinutes,\n                seconds: getSeconds\n            };\n            const [mergeHours, mergeMinutes, mergeSeconds] = ['hours', 'minutes', 'seconds'].map((i) => !props[i] || isTimeInStep(getNowTime[i](now), i, props[i])\n                ? getNowTime[i](now)\n                : findSimilarTime(getNowTime[i](now), i, props[i]));\n            const newValue = setSeconds(setMinutes(setHours(mergedValueRef.value ? mergedValueRef.value : getTime(now), mergeHours), mergeMinutes), mergeSeconds);\n            doUpdateValue(getTime(newValue));\n        }\n        function handleConfirmClick() {\n            deriveInputValue();\n            closePanel({\n                returnFocus: true\n            });\n        }\n        function handleMenuFocusOut(e) {\n            if (isInternalFocusSwitch(e))\n                return;\n            doBlur(e);\n            closePanel({\n                returnFocus: false\n            });\n        }\n        watch(mergedValueRef, (value) => {\n            deriveInputValue(value);\n            disableTransitionOneTick();\n            void nextTick(scrollTimer);\n        });\n        watch(mergedShowRef, () => {\n            if (isValueInvalidRef.value) {\n                doUpdateValue(memorizedValueRef.value);\n            }\n        });\n        provide(timePickerInjectionKey, {\n            mergedThemeRef: themeRef,\n            mergedClsPrefixRef\n        });\n        const exposedMethods = {\n            focus: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            },\n            blur: () => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n            }\n        };\n        const triggerCssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { iconColor, iconColorDisabled } } = themeRef.value;\n            return {\n                '--n-icon-color': iconColor,\n                '--n-icon-color-disabled': iconColorDisabled,\n                '--n-bezier': cubicBezierEaseInOut\n            };\n        });\n        const triggerThemeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker-trigger', undefined, triggerCssVarsRef, props)\n            : undefined;\n        const cssVarsRef = computed(() => {\n            const { self: { panelColor, itemTextColor, itemTextColorActive, itemColorHover, panelDividerColor, panelBoxShadow, itemOpacityDisabled, borderRadius, itemFontSize, itemWidth, itemHeight, panelActionPadding, itemBorderRadius }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-border-radius': borderRadius,\n                '--n-item-color-hover': itemColorHover,\n                '--n-item-font-size': itemFontSize,\n                '--n-item-height': itemHeight,\n                '--n-item-opacity-disabled': itemOpacityDisabled,\n                '--n-item-text-color': itemTextColor,\n                '--n-item-text-color-active': itemTextColorActive,\n                '--n-item-width': itemWidth,\n                '--n-panel-action-padding': panelActionPadding,\n                '--n-panel-box-shadow': panelBoxShadow,\n                '--n-panel-color': panelColor,\n                '--n-panel-divider-color': panelDividerColor,\n                '--n-item-border-radius': itemBorderRadius\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('time-picker', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            focus: exposedMethods.focus,\n            blur: exposedMethods.blur,\n            mergedStatus: mergedStatusRef,\n            mergedBordered: mergedBorderedRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            isMounted: useIsMounted(),\n            inputInstRef,\n            panelInstRef,\n            adjustedTo: useAdjustedTo(props),\n            mergedShow: mergedShowRef,\n            localizedNow: localizedNowRef,\n            localizedPlaceholder: localizedPlaceholderRef,\n            localizedNegativeText: localizedNegativeTextRef,\n            localizedPositiveText: localizedPositiveTextRef,\n            hourInFormat: hourInFormatRef,\n            minuteInFormat: minuteInFormatRef,\n            secondInFormat: secondInFormatRef,\n            mergedAttrSize: mergedAttrSizeRef,\n            displayTimeString: displayTimeStringRef,\n            mergedSize: mergedSizeRef,\n            mergedDisabled: mergedDisabledRef,\n            isValueInvalid: isValueInvalidRef,\n            isHourInvalid: isHourInvalidRef,\n            isMinuteInvalid: isMinuteInvalidRef,\n            isSecondInvalid: isSecondInvalidRef,\n            transitionDisabled: transitionDisabledRef,\n            hourValue: hourValueRef,\n            minuteValue: minuteValueRef,\n            secondValue: secondValueRef,\n            amPmValue: amPmValueRef,\n            handleTimeInputFocus,\n            handleTimeInputBlur,\n            handleNowClick,\n            handleConfirmClick,\n            handleTimeInputUpdateValue,\n            handleMenuFocusOut,\n            handleCancelClick,\n            handleClickOutside,\n            handleTimeInputActivate,\n            handleTimeInputDeactivate,\n            handleHourClick,\n            handleMinuteClick,\n            handleSecondClick,\n            handleAmPmClick,\n            handleTimeInputClear,\n            handleFocusDetectorFocus,\n            handleMenuKeyDown,\n            handleTriggerClick,\n            mergedTheme: themeRef,\n            triggerCssVars: inlineThemeDisabled ? undefined : triggerCssVarsRef,\n            triggerThemeClass: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.themeClass,\n            triggerOnRender: triggerThemeClassHandle === null || triggerThemeClassHandle === void 0 ? void 0 : triggerThemeClassHandle.onRender,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedClsPrefix, $slots, triggerOnRender } = this;\n        triggerOnRender === null || triggerOnRender === void 0 ? void 0 : triggerOnRender();\n        return (h(\"div\", { class: [`${mergedClsPrefix}-time-picker`, this.triggerThemeClass], style: this.triggerCssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(NInput, { ref: \"inputInstRef\", status: this.mergedStatus, value: this.displayTimeString, bordered: this.mergedBordered, passivelyActivated: true, attrSize: this.mergedAttrSize, theme: this.mergedTheme.peers.Input, themeOverrides: this.mergedTheme.peerOverrides.Input, stateful: this.stateful, size: this.mergedSize, placeholder: this.localizedPlaceholder, clearable: this.clearable, disabled: this.mergedDisabled, textDecoration: this.isValueInvalid ? 'line-through' : undefined, onFocus: this.handleTimeInputFocus, onBlur: this.handleTimeInputBlur, onActivate: this.handleTimeInputActivate, onDeactivate: this.handleTimeInputDeactivate, onUpdateValue: this.handleTimeInputUpdateValue, onClear: this.handleTimeInputClear, internalDeactivateOnEnter: true, internalForceFocus: this.mergedShow, readonly: this.inputReadonly || this.mergedDisabled, onClick: this.handleTriggerClick }, this.showIcon\n                            ? {\n                                [this.clearable ? 'clear' : 'suffix']: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-time-picker-icon` }, {\n                                    default: () => $slots.icon ? $slots.icon() : h(TimeIcon, null)\n                                }))\n                            }\n                            : null))\n                    }),\n                    h(VFollower, { teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, show: this.mergedShow, to: this.adjustedTo, containerClass: this.namespace, placement: this.placement }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => {\n                                var _a;\n                                if (this.mergedShow) {\n                                    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n                                    return withDirectives(h(Panel, { ref: \"panelInstRef\", actions: this.actions, class: this.themeClass, style: this.cssVars, seconds: this.seconds, minutes: this.minutes, hours: this.hours, transitionDisabled: this.transitionDisabled, hourValue: this.hourValue, showHour: this.hourInFormat, isHourInvalid: this.isHourInvalid, isHourDisabled: this.isHourDisabled, minuteValue: this.minuteValue, showMinute: this.minuteInFormat, isMinuteInvalid: this.isMinuteInvalid, isMinuteDisabled: this.isMinuteDisabled, secondValue: this.secondValue, amPmValue: this.amPmValue, showSecond: this.secondInFormat, isSecondInvalid: this.isSecondInvalid, isSecondDisabled: this.isSecondDisabled, isValueInvalid: this.isValueInvalid, nowText: this.localizedNow, confirmText: this.localizedPositiveText, use12Hours: this.use12Hours, onFocusout: this.handleMenuFocusOut, onKeydown: this.handleMenuKeyDown, onHourClick: this.handleHourClick, onMinuteClick: this.handleMinuteClick, onSecondClick: this.handleSecondClick, onAmPmClick: this.handleAmPmClick, onNowClick: this.handleNowClick, onConfirmClick: this.handleConfirmClick, onFocusDetectorFocus: this.handleFocusDetectorFocus }), [\n                                        [\n                                            clickoutside,\n                                            this.handleClickOutside,\n                                            undefined,\n                                            { capture: true }\n                                        ]\n                                    ]);\n                                }\n                                return null;\n                            }\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}