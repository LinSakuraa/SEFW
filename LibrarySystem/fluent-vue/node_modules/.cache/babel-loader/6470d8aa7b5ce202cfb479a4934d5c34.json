{"ast":null,"code":"import { defineComponent, h, inject } from 'vue';\nimport { NCheckbox } from '../../../checkbox';\nimport { dataTableInjectionKey } from '../interface'; // Extract the checkbox to avoid useless rendering in table body\n\nexport default defineComponent({\n  name: 'DataTableBodyCheckbox',\n  props: {\n    rowKey: {\n      type: [String, Number],\n      required: true\n    },\n    disabled: {\n      type: Boolean,\n      required: true\n    },\n    onUpdateChecked: {\n      type: Function,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const {\n      mergedCheckedRowKeySetRef,\n      mergedInderminateRowKeySetRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(dataTableInjectionKey);\n    return () => {\n      const {\n        rowKey\n      } = props;\n      return h(NCheckbox, {\n        privateInsideTable: true,\n        disabled: props.disabled,\n        indeterminate: mergedInderminateRowKeySetRef.value.has(rowKey),\n        checked: mergedCheckedRowKeySetRef.value.has(rowKey),\n        onUpdateChecked: props.onUpdateChecked\n      });\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/data-table/src/TableParts/BodyCheckbox.js"],"names":["defineComponent","h","inject","NCheckbox","dataTableInjectionKey","name","props","rowKey","type","String","Number","required","disabled","Boolean","onUpdateChecked","Function","setup","mergedCheckedRowKeySetRef","mergedInderminateRowKeySetRef","privateInsideTable","indeterminate","value","has","checked"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,CAA1B,EAA6BC,MAA7B,QAA2C,KAA3C;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,SAASC,qBAAT,QAAsC,cAAtC,C,CACA;;AACA,eAAeJ,eAAe,CAAC;AAC3BK,EAAAA,IAAI,EAAE,uBADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADF;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADL;AAKHC,IAAAA,QAAQ,EAAE;AACNJ,MAAAA,IAAI,EAAEK,OADA;AAENF,MAAAA,QAAQ,EAAE;AAFJ,KALP;AASHG,IAAAA,eAAe,EAAE;AACbN,MAAAA,IAAI,EAAEO,QADO;AAEbJ,MAAAA,QAAQ,EAAE;AAFG;AATd,GAFoB;;AAgB3BK,EAAAA,KAAK,CAACV,KAAD,EAAQ;AACT,UAAM;AAAEW,MAAAA,yBAAF;AAA6BC,MAAAA,6BAA7B,CACN;;AADM,QAEDhB,MAAM,CAACE,qBAAD,CAFX;AAGA,WAAO,MAAM;AACT,YAAM;AAAEG,QAAAA;AAAF,UAAaD,KAAnB;AACA,aAAQL,CAAC,CAACE,SAAD,EAAY;AAAEgB,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BP,QAAAA,QAAQ,EAAEN,KAAK,CAACM,QAA5C;AAAsDQ,QAAAA,aAAa,EAAEF,6BAA6B,CAACG,KAA9B,CAAoCC,GAApC,CAAwCf,MAAxC,CAArE;AAAsHgB,QAAAA,OAAO,EAAEN,yBAAyB,CAACI,KAA1B,CAAgCC,GAAhC,CAAoCf,MAApC,CAA/H;AAA4KO,QAAAA,eAAe,EAAER,KAAK,CAACQ;AAAnM,OAAZ,CAAT;AACH,KAHD;AAIH;;AAxB0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, h, inject } from 'vue';\nimport { NCheckbox } from '../../../checkbox';\nimport { dataTableInjectionKey } from '../interface';\n// Extract the checkbox to avoid useless rendering in table body\nexport default defineComponent({\n    name: 'DataTableBodyCheckbox',\n    props: {\n        rowKey: {\n            type: [String, Number],\n            required: true\n        },\n        disabled: {\n            type: Boolean,\n            required: true\n        },\n        onUpdateChecked: {\n            type: Function,\n            required: true\n        }\n    },\n    setup(props) {\n        const { mergedCheckedRowKeySetRef, mergedInderminateRowKeySetRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dataTableInjectionKey);\n        return () => {\n            const { rowKey } = props;\n            return (h(NCheckbox, { privateInsideTable: true, disabled: props.disabled, indeterminate: mergedInderminateRowKeySetRef.value.has(rowKey), checked: mergedCheckedRowKeySetRef.value.has(rowKey), onUpdateChecked: props.onUpdateChecked }));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}