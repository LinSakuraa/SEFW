{"ast":null,"code":"import { defineComponent, h, inject } from 'vue';\nimport { NBaseClose, NScrollbar } from '../../_internal';\nimport { throwError } from '../../_utils';\nimport { drawerInjectionKey } from './interface';\nconst drawerContentProps = {\n  title: {\n    type: String\n  },\n  headerStyle: [Object, String],\n  footerStyle: [Object, String],\n  bodyStyle: [Object, String],\n  bodyContentStyle: [Object, String],\n  nativeScrollbar: {\n    type: Boolean,\n    default: true\n  },\n  scrollbarProps: Object,\n  closable: Boolean\n};\nexport default defineComponent({\n  name: 'DrawerContent',\n  props: drawerContentProps,\n\n  setup() {\n    const NDrawer = inject(drawerInjectionKey, null);\n\n    if (!NDrawer) {\n      throwError('drawer-content', '`n-drawer-content` must be placed inside `n-drawer`.');\n    }\n\n    const {\n      doUpdateShow\n    } = NDrawer;\n\n    function handleCloseClick() {\n      doUpdateShow(false);\n    }\n\n    return {\n      handleCloseClick,\n      mergedTheme: NDrawer.mergedThemeRef,\n      mergedClsPrefix: NDrawer.mergedClsPrefixRef\n    };\n  },\n\n  render() {\n    const {\n      title,\n      mergedClsPrefix,\n      nativeScrollbar,\n      mergedTheme,\n      bodyStyle,\n      bodyContentStyle,\n      headerStyle,\n      footerStyle,\n      scrollbarProps,\n      closable,\n      $slots\n    } = this;\n    return h(\"div\", {\n      role: \"none\",\n      class: [`${mergedClsPrefix}-drawer-content`, nativeScrollbar && `${mergedClsPrefix}-drawer-content--native-scrollbar`]\n    }, $slots.header || title || closable ? h(\"div\", {\n      class: `${mergedClsPrefix}-drawer-header`,\n      style: headerStyle,\n      role: \"none\"\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-drawer-header__main`,\n      role: \"heading\",\n      \"aria-level\": \"1\"\n    }, $slots.header !== undefined ? $slots.header() : title), closable && h(NBaseClose, {\n      onClick: this.handleCloseClick,\n      clsPrefix: mergedClsPrefix,\n      class: `${mergedClsPrefix}-drawer-header__close`\n    })) : null, nativeScrollbar ? h(\"div\", {\n      class: `${mergedClsPrefix}-drawer-body`,\n      style: bodyStyle,\n      role: \"none\"\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-drawer-body-content-wrapper`,\n      style: bodyContentStyle,\n      role: \"none\"\n    }, $slots)) : h(NScrollbar, Object.assign({\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      theme: mergedTheme.peers.Scrollbar\n    }, scrollbarProps, {\n      class: `${mergedClsPrefix}-drawer-body`,\n      contentClass: `${mergedClsPrefix}-drawer-body-content-wrapper`,\n      contentStyle: bodyContentStyle\n    }), $slots), $slots.footer ? h(\"div\", {\n      class: `${mergedClsPrefix}-drawer-footer`,\n      style: footerStyle,\n      role: \"none\"\n    }, $slots.footer()) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/drawer/src/DrawerContent.js"],"names":["defineComponent","h","inject","NBaseClose","NScrollbar","throwError","drawerInjectionKey","drawerContentProps","title","type","String","headerStyle","Object","footerStyle","bodyStyle","bodyContentStyle","nativeScrollbar","Boolean","default","scrollbarProps","closable","name","props","setup","NDrawer","doUpdateShow","handleCloseClick","mergedTheme","mergedThemeRef","mergedClsPrefix","mergedClsPrefixRef","render","$slots","role","class","header","style","undefined","onClick","clsPrefix","assign","themeOverrides","peerOverrides","Scrollbar","theme","peers","contentClass","contentStyle","footer"],"mappings":"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","sourcesContent":["import { defineComponent, h, inject } from 'vue';\nimport { NBaseClose, NScrollbar } from '../../_internal';\nimport { throwError } from '../../_utils';\nimport { drawerInjectionKey } from './interface';\nconst drawerContentProps = {\n    title: {\n        type: String\n    },\n    headerStyle: [Object, String],\n    footerStyle: [Object, String],\n    bodyStyle: [Object, String],\n    bodyContentStyle: [Object, String],\n    nativeScrollbar: { type: Boolean, default: true },\n    scrollbarProps: Object,\n    closable: Boolean\n};\nexport default defineComponent({\n    name: 'DrawerContent',\n    props: drawerContentProps,\n    setup() {\n        const NDrawer = inject(drawerInjectionKey, null);\n        if (!NDrawer) {\n            throwError('drawer-content', '`n-drawer-content` must be placed inside `n-drawer`.');\n        }\n        const { doUpdateShow } = NDrawer;\n        function handleCloseClick() {\n            doUpdateShow(false);\n        }\n        return {\n            handleCloseClick,\n            mergedTheme: NDrawer.mergedThemeRef,\n            mergedClsPrefix: NDrawer.mergedClsPrefixRef\n        };\n    },\n    render() {\n        const { title, mergedClsPrefix, nativeScrollbar, mergedTheme, bodyStyle, bodyContentStyle, headerStyle, footerStyle, scrollbarProps, closable, $slots } = this;\n        return (h(\"div\", { role: \"none\", class: [\n                `${mergedClsPrefix}-drawer-content`,\n                nativeScrollbar &&\n                    `${mergedClsPrefix}-drawer-content--native-scrollbar`\n            ] },\n            $slots.header || title || closable ? (h(\"div\", { class: `${mergedClsPrefix}-drawer-header`, style: headerStyle, role: \"none\" },\n                h(\"div\", { class: `${mergedClsPrefix}-drawer-header__main`, role: \"heading\", \"aria-level\": \"1\" }, $slots.header !== undefined ? $slots.header() : title),\n                closable && (h(NBaseClose, { onClick: this.handleCloseClick, clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-drawer-header__close` })))) : null,\n            nativeScrollbar ? (h(\"div\", { class: `${mergedClsPrefix}-drawer-body`, style: bodyStyle, role: \"none\" },\n                h(\"div\", { class: `${mergedClsPrefix}-drawer-body-content-wrapper`, style: bodyContentStyle, role: \"none\" }, $slots))) : (h(NScrollbar, Object.assign({ themeOverrides: mergedTheme.peerOverrides.Scrollbar, theme: mergedTheme.peers.Scrollbar }, scrollbarProps, { class: `${mergedClsPrefix}-drawer-body`, contentClass: `${mergedClsPrefix}-drawer-body-content-wrapper`, contentStyle: bodyContentStyle }), $slots)),\n            $slots.footer ? (h(\"div\", { class: `${mergedClsPrefix}-drawer-footer`, style: footerStyle, role: \"none\" }, $slots.footer())) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}