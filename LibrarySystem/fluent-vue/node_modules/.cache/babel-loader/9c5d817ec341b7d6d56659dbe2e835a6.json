{"ast":null,"code":"export function mapAutoCompleteOptionsToSelectOptions(options) {\n  return options.map(convertAutoCompleteOptionToSelectOption);\n}\n\nfunction convertAutoCompleteOptionToSelectOption(option) {\n  var _a, _b;\n\n  if (typeof option === 'string') {\n    return {\n      label: option,\n      value: option\n    };\n  } else if (option.type === 'group') {\n    const groupOption = {\n      type: 'group',\n      label: (_a = option.label) !== null && _a !== void 0 ? _a : option.name,\n      value: (_b = option.value) !== null && _b !== void 0 ? _b : option.name,\n      key: option.key || option.name,\n      children: option.children.map(groupOption => convertAutoCompleteOptionToSelectOption(groupOption))\n    };\n    return groupOption;\n  } else {\n    return option;\n  }\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/auto-complete/src/utils.js"],"names":["mapAutoCompleteOptionsToSelectOptions","options","map","convertAutoCompleteOptionToSelectOption","option","_a","_b","label","value","type","groupOption","name","key","children"],"mappings":"AAAA,OAAO,SAASA,qCAAT,CAA+CC,OAA/C,EAAwD;AAC3D,SAAOA,OAAO,CAACC,GAAR,CAAYC,uCAAZ,CAAP;AACH;;AACD,SAASA,uCAAT,CAAiDC,MAAjD,EAAyD;AACrD,MAAIC,EAAJ,EAAQC,EAAR;;AACA,MAAI,OAAOF,MAAP,KAAkB,QAAtB,EAAgC;AAC5B,WAAO;AACHG,MAAAA,KAAK,EAAEH,MADJ;AAEHI,MAAAA,KAAK,EAAEJ;AAFJ,KAAP;AAIH,GALD,MAMK,IAAIA,MAAM,CAACK,IAAP,KAAgB,OAApB,EAA6B;AAC9B,UAAMC,WAAW,GAAG;AAChBD,MAAAA,IAAI,EAAE,OADU;AAEhBF,MAAAA,KAAK,EAAE,CAACF,EAAE,GAAGD,MAAM,CAACG,KAAb,MAAwB,IAAxB,IAAgCF,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqDD,MAAM,CAACO,IAFnD;AAGhBH,MAAAA,KAAK,EAAE,CAACF,EAAE,GAAGF,MAAM,CAACI,KAAb,MAAwB,IAAxB,IAAgCF,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqDF,MAAM,CAACO,IAHnD;AAIhBC,MAAAA,GAAG,EAAGR,MAAM,CAACQ,GAAP,IAAcR,MAAM,CAACO,IAJX;AAKhBE,MAAAA,QAAQ,EAAET,MAAM,CAACS,QAAP,CAAgBX,GAAhB,CAAqBQ,WAAD,IAAiBP,uCAAuC,CAACO,WAAD,CAA5E;AALM,KAApB;AAOA,WAAOA,WAAP;AACH,GATI,MAUA;AACD,WAAON,MAAP;AACH;AACJ","sourcesContent":["export function mapAutoCompleteOptionsToSelectOptions(options) {\n    return options.map(convertAutoCompleteOptionToSelectOption);\n}\nfunction convertAutoCompleteOptionToSelectOption(option) {\n    var _a, _b;\n    if (typeof option === 'string') {\n        return {\n            label: option,\n            value: option\n        };\n    }\n    else if (option.type === 'group') {\n        const groupOption = {\n            type: 'group',\n            label: (_a = option.label) !== null && _a !== void 0 ? _a : option.name,\n            value: (_b = option.value) !== null && _b !== void 0 ? _b : option.name,\n            key: (option.key || option.name),\n            children: option.children.map((groupOption) => convertAutoCompleteOptionToSelectOption(groupOption))\n        };\n        return groupOption;\n    }\n    else {\n        return option;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}