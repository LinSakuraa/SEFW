{"ast":null,"code":"import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerPanelProps = Object.assign(Object.assign({}, useTheme.props), {\n  value: String,\n  show: {\n    type: Boolean,\n    default: undefined\n  },\n  defaultShow: {\n    type: Boolean,\n    default: false\n  },\n  defaultValue: String,\n  modes: {\n    type: Array,\n    // no hsva by default since browser doesn't support it\n    default: () => ['rgb', 'hex', 'hsl']\n  },\n  placement: {\n    type: String,\n    default: 'bottom-start'\n  },\n  to: useAdjustedTo.propTo,\n  showAlpha: {\n    type: Boolean,\n    default: true\n  },\n  showPreview: Boolean,\n  swatches: Array,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  actions: {\n    type: Array,\n    default: null\n  },\n  internalActions: Array,\n  size: String,\n  renderLabel: Function,\n  onComplete: Function,\n  'onUpdate:show': [Function, Array],\n  onUpdateShow: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'ColorPicker',\n  props: colorPickerPanelProps,\n\n  setup(props, {\n    slots\n  }) {\n    const selfRef = ref(null);\n    let upcomingValue = null;\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef\n    } = formItem;\n    const {\n      localeRef\n    } = useLocale('global');\n    const {\n      mergedClsPrefixRef,\n      namespaceRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n    provide(colorPickerInjectionKey, {\n      themeRef,\n      renderLabelRef: toRef(props, 'renderLabel'),\n      colorPickerSlots: slots\n    });\n    const uncontrolledShowRef = ref(props.defaultShow);\n    const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n\n    function doUpdateShow(value) {\n      const {\n        onUpdateShow,\n        'onUpdate:show': _onUpdateShow\n      } = props;\n      if (onUpdateShow) call(onUpdateShow, value);\n      if (_onUpdateShow) call(_onUpdateShow, value);\n      uncontrolledShowRef.value = value;\n    }\n\n    const {\n      defaultValue\n    } = props;\n    const uncontrolledValueRef = ref(defaultValue === undefined ? deriveDefaultValue(props.modes, props.showAlpha) : defaultValue);\n    const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n    const undoStackRef = ref([mergedValueRef.value]);\n    const valueIndexRef = ref(0);\n    const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n    const {\n      modes\n    } = props;\n    const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n\n    function handleUpdateDisplayedMode() {\n      const {\n        modes\n      } = props;\n      const {\n        value: displayedMode\n      } = displayedModeRef;\n      const currentModeIndex = modes.findIndex(mode => mode === displayedMode);\n\n      if (~currentModeIndex) {\n        displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n      } else {\n        displayedModeRef.value = 'rgb';\n      }\n    }\n\n    let _h, // avoid conflict with render function's h\n    s, l, v, r, g, b, a;\n\n    const hsvaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'hsv':\n          return hsva(mergedValue);\n\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2hsv(_h, s, l), a];\n\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsv(r, g, b), a];\n      }\n    });\n    const rgbaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgba(mergedValue);\n\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2rgb(_h, s, v), a];\n\n        case 'hsl':\n          ;\n          [_h, s, l, a] = hsla(mergedValue);\n          return [...hsl2rgb(_h, s, l), a];\n      }\n    });\n    const hslaRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!mergedValue) return null; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n      switch (valueModeRef.value) {\n        case 'hsl':\n          return hsla(mergedValue);\n\n        case 'hsv':\n          ;\n          [_h, s, v, a] = hsva(mergedValue);\n          return [...hsv2hsl(_h, s, v), a];\n\n        case 'rgb':\n        case 'hex':\n          ;\n          [r, g, b, a] = rgba(mergedValue);\n          return [...rgb2hsl(r, g, b), a];\n      }\n    });\n    const mergedValueArrRef = computed(() => {\n      switch (displayedModeRef.value) {\n        case 'rgb':\n        case 'hex':\n          return rgbaRef.value;\n\n        case 'hsv':\n          return hsvaRef.value;\n\n        case 'hsl':\n          return hslaRef.value;\n      }\n    });\n    const displayedHueRef = ref(0);\n    const displayedAlphaRef = ref(1);\n    const displayedSvRef = ref([0, 0]);\n\n    function handleUpdateSv(s, v) {\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n      const hue = displayedHueRef.value;\n      const alpha = hsvaArr ? hsvaArr[3] : 1;\n      displayedSvRef.value = [s, v];\n      const {\n        showAlpha\n      } = props;\n\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n          break;\n\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), alpha]), 'cursor');\n          break;\n\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), alpha]), 'cursor');\n          break;\n      }\n    }\n\n    function handleUpdateHue(hue) {\n      displayedHueRef.value = hue;\n      const {\n        value: hsvaArr\n      } = hsvaRef;\n\n      if (!hsvaArr) {\n        return;\n      }\n\n      const [, s, v, a] = hsvaArr;\n      const {\n        showAlpha\n      } = props;\n\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n          break;\n\n        case 'rgb':\n          doUpdateValue((showAlpha ? toRgbaString : toRgbString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n\n        case 'hex':\n          doUpdateValue((showAlpha ? toHexaString : toHexString)([...hsv2rgb(hue, s, v), a]), 'cursor');\n          break;\n\n        case 'hsl':\n          doUpdateValue((showAlpha ? toHslaString : toHslString)([...hsv2hsl(hue, s, v), a]), 'cursor');\n          break;\n      }\n    }\n\n    function handleUpdateAlpha(alpha) {\n      switch (displayedModeRef.value) {\n        case 'hsv':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, v] = hsvaRef.value;\n          doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n          break;\n\n        case 'rgb':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n          break;\n\n        case 'hex':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [r, g, b] = rgbaRef.value;\n          doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n          break;\n\n        case 'hsl':\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          ;\n          [_h, s, l] = hslaRef.value;\n          doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n          break;\n      }\n\n      displayedAlphaRef.value = alpha;\n    }\n\n    function doUpdateValue(value, updateSource) {\n      if (updateSource === 'cursor') {\n        upcomingValue = value;\n      } else {\n        upcomingValue = null;\n      }\n\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      nTriggerFormChange();\n      nTriggerFormInput();\n      uncontrolledValueRef.value = value;\n    }\n\n    function handleInputUpdateValue(value) {\n      doUpdateValue(value, 'input');\n      void nextTick(handleComplete);\n    }\n\n    function handleComplete(pushStack = true) {\n      const {\n        value\n      } = mergedValueRef; // no value & only hue changes will complete with no value\n\n      if (value) {\n        const {\n          nTriggerFormChange,\n          nTriggerFormInput\n        } = formItem;\n        const {\n          onComplete\n        } = props;\n\n        if (onComplete) {\n          ;\n          onComplete(value);\n        }\n\n        const {\n          value: undoStack\n        } = undoStackRef;\n        const {\n          value: valueIndex\n        } = valueIndexRef;\n\n        if (pushStack) {\n          undoStack.splice(valueIndex + 1, undoStack.length, value);\n          valueIndexRef.value = valueIndex + 1;\n        }\n\n        nTriggerFormChange();\n        nTriggerFormInput();\n      }\n    }\n\n    function undo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex - 1 < 0) return;\n      doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex - 1;\n    }\n\n    function redo() {\n      const {\n        value: valueIndex\n      } = valueIndexRef;\n      if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length) return;\n      doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n      handleComplete(false);\n      valueIndexRef.value = valueIndex + 1;\n    }\n\n    function handleConfirm() {\n      doUpdateShow(false);\n    }\n\n    const undoableRef = computed(() => valueIndexRef.value >= 1);\n    const redoableRef = computed(() => {\n      const {\n        value: undoStack\n      } = undoStackRef;\n      return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n    });\n    watch(mergedShowRef, value => {\n      if (!value) {\n        undoStackRef.value = [mergedValueRef.value];\n        valueIndexRef.value = 0;\n      }\n    });\n    watchEffect(() => {\n      if (upcomingValue && upcomingValue === mergedValueRef.value) {// let it works in uncontrolled mode\n      } else {\n        const {\n          value\n        } = hsvaRef;\n\n        if (value) {\n          displayedHueRef.value = value[0];\n          displayedAlphaRef.value = value[3];\n          displayedSvRef.value = [value[1], value[2]];\n        }\n      }\n\n      upcomingValue = null;\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        value: mergedSize\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          textColor,\n          color,\n          panelFontSize,\n          boxShadow,\n          border,\n          borderRadius,\n          dividerColor,\n          [createKey('height', mergedSize)]: height,\n          [createKey('fontSize', mergedSize)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-color': color,\n        '--n-panel-font-size': panelFontSize,\n        '--n-font-size': fontSize,\n        '--n-box-shadow': boxShadow,\n        '--n-border': border,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-divider-color': dividerColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('color-picker', computed(() => {\n      return mergedSizeRef.value[0];\n    }), cssVarsRef, props) : undefined;\n\n    function renderPanel() {\n      var _a;\n\n      const {\n        value: rgba\n      } = rgbaRef;\n      const {\n        value: displayedHue\n      } = displayedHueRef;\n      const {\n        internalActions,\n        modes,\n        actions\n      } = props;\n      const {\n        value: mergedTheme\n      } = themeRef;\n      const {\n        value: mergedClsPrefix\n      } = mergedClsPrefixRef;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-color-picker-panel`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        onDragstart: e => {\n          e.preventDefault();\n        },\n        style: inlineThemeDisabled ? undefined : cssVarsRef.value\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-control`\n      }, h(Pallete, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        displayedHue: displayedHue,\n        displayedSv: displayedSvRef.value,\n        onUpdateSV: handleUpdateSv,\n        onComplete: handleComplete\n      }), h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview`\n      }, h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-preview__sliders`\n      }, h(HueSlider, {\n        clsPrefix: mergedClsPrefix,\n        hue: displayedHue,\n        onUpdateHue: handleUpdateHue,\n        onComplete: handleComplete\n      }), props.showAlpha ? h(AlphaSlider, {\n        clsPrefix: mergedClsPrefix,\n        rgba: rgba,\n        alpha: displayedAlphaRef.value,\n        onUpdateAlpha: handleUpdateAlpha,\n        onComplete: handleComplete\n      }) : null), props.showPreview ? h(ColorPreview, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        color: rgbaRef.value && toHexString(rgbaRef.value),\n        onUpdateColor: color => doUpdateValue(color, 'input')\n      }) : null), h(ColorInput, {\n        clsPrefix: mergedClsPrefix,\n        showAlpha: props.showAlpha,\n        mode: displayedModeRef.value,\n        modes: modes,\n        onUpdateMode: handleUpdateDisplayedMode,\n        value: mergedValueRef.value,\n        valueArr: mergedValueArrRef.value,\n        onUpdateValue: handleInputUpdateValue\n      }), ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && h(ColorPickerSwatches, {\n        clsPrefix: mergedClsPrefix,\n        mode: displayedModeRef.value,\n        swatches: props.swatches,\n        onUpdateColor: color => doUpdateValue(color, 'input')\n      })), (actions === null || actions === void 0 ? void 0 : actions.length) ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, actions.includes('confirm') && h(NButton, {\n        size: \"small\",\n        onClick: handleConfirm,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.confirm\n      })) : null, slots.action ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, {\n        default: slots.action\n      }) : internalActions ? h(\"div\", {\n        class: `${mergedClsPrefix}-color-picker-action`\n      }, internalActions.includes('undo') && h(NButton, {\n        size: \"small\",\n        onClick: undo,\n        disabled: !undoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.undo\n      }), internalActions.includes('redo') && h(NButton, {\n        size: \"small\",\n        onClick: redo,\n        disabled: !redoableRef.value,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button\n      }, {\n        default: () => localeRef.value.redo\n      })) : null);\n    }\n\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      namespace: namespaceRef,\n      selfRef,\n      hsla: hslaRef,\n      rgba: rgbaRef,\n      mergedShow: mergedShowRef,\n      mergedDisabled: mergedDisabledRef,\n      isMounted: useIsMounted(),\n      adjustedTo: useAdjustedTo(props),\n      mergedValue: mergedValueRef,\n\n      handleTriggerClick() {\n        doUpdateShow(true);\n      },\n\n      handleClickOutside(e) {\n        var _a;\n\n        if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target)) return;\n        doUpdateShow(false);\n      },\n\n      renderPanel,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [this.themeClass, `${mergedClsPrefix}-color-picker`],\n      ref: \"selfRef\",\n      style: this.cssVars\n    }, h(VBinder, null, {\n      default: () => [h(VTarget, null, {\n        default: () => h(ColorPickerTrigger, {\n          clsPrefix: mergedClsPrefix,\n          value: this.mergedValue,\n          hsla: this.hsla,\n          disabled: this.mergedDisabled,\n          onClick: this.handleTriggerClick\n        }, {\n          label: $slots.label\n        })\n      }), h(VFollower, {\n        placement: this.placement,\n        show: this.mergedShow,\n        containerClass: this.namespace,\n        teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey,\n        to: this.adjustedTo\n      }, {\n        default: () => h(Transition, {\n          name: \"fade-in-scale-up-transition\",\n          appear: this.isMounted\n        }, {\n          default: () => this.mergedShow ? withDirectives(this.renderPanel(), [[clickoutside, this.handleClickOutside, undefined, {\n            capture: true\n          }]]) : null\n        })\n      })]\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/color-picker/src/ColorPicker.js"],"names":["h","defineComponent","ref","computed","toRef","watchEffect","withDirectives","Transition","provide","watch","nextTick","hsv2rgb","rgb2hsv","rgba","hsva","hsla","hsl2hsv","hsv2hsl","rgb2hsl","hsl2rgb","toRgbaString","toHsvaString","toHslaString","toHexaString","toHsvString","toRgbString","toHexString","toHslString","useIsMounted","useMergedState","VBinder","VFollower","VTarget","clickoutside","colorPickerLight","useFormItem","useConfig","useTheme","useLocale","useThemeClass","call","createKey","useAdjustedTo","NButton","HueSlider","AlphaSlider","Pallete","ColorInput","ColorPickerTrigger","deriveDefaultValue","getModeFromValue","ColorPickerSwatches","ColorPreview","colorPickerInjectionKey","style","colorPickerPanelProps","Object","assign","props","value","String","show","type","Boolean","default","undefined","defaultShow","defaultValue","modes","Array","placement","to","propTo","showAlpha","showPreview","swatches","disabled","actions","internalActions","size","renderLabel","Function","onComplete","onUpdateShow","onUpdateValue","name","setup","slots","selfRef","upcomingValue","formItem","mergedSizeRef","mergedDisabledRef","localeRef","mergedClsPrefixRef","namespaceRef","inlineThemeDisabled","themeRef","renderLabelRef","colorPickerSlots","uncontrolledShowRef","mergedShowRef","doUpdateShow","_onUpdateShow","uncontrolledValueRef","mergedValueRef","undoStackRef","valueIndexRef","valueModeRef","displayedModeRef","handleUpdateDisplayedMode","displayedMode","currentModeIndex","findIndex","mode","length","_h","s","l","v","r","g","b","a","hsvaRef","mergedValue","rgbaRef","hslaRef","mergedValueArrRef","displayedHueRef","displayedAlphaRef","displayedSvRef","handleUpdateSv","hsvaArr","hue","alpha","doUpdateValue","handleUpdateHue","handleUpdateAlpha","updateSource","nTriggerFormChange","nTriggerFormInput","_onUpdateValue","handleInputUpdateValue","handleComplete","pushStack","undoStack","valueIndex","splice","undo","redo","handleConfirm","undoableRef","redoableRef","cssVarsRef","mergedSize","common","cubicBezierEaseInOut","self","textColor","color","panelFontSize","boxShadow","border","borderRadius","dividerColor","height","fontSize","themeClassHandle","renderPanel","_a","displayedHue","mergedTheme","mergedClsPrefix","class","themeClass","onDragstart","e","preventDefault","clsPrefix","displayedSv","onUpdateSV","onUpdateHue","onUpdateAlpha","onUpdateColor","onUpdateMode","valueArr","includes","onClick","theme","peers","Button","themeOverrides","peerOverrides","confirm","action","namespace","mergedShow","mergedDisabled","isMounted","adjustedTo","handleTriggerClick","handleClickOutside","contains","target","cssVars","onRender","render","$slots","label","containerClass","teleportDisabled","tdkey","appear","capture"],"mappings":"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","sourcesContent":["import { h, defineComponent, ref, computed, toRef, watchEffect, withDirectives, Transition, provide, watch, nextTick } from 'vue';\nimport { hsv2rgb, rgb2hsv, rgba, hsva, hsla, hsl2hsv, hsv2hsl, rgb2hsl, hsl2rgb, toRgbaString, toHsvaString, toHslaString, toHexaString, toHsvString, toRgbString, toHexString, toHslString } from 'seemly';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { VBinder, VFollower, VTarget } from 'vueuc';\nimport { clickoutside } from 'vdirs';\nimport { colorPickerLight } from '../styles';\nimport { useFormItem, useConfig, useTheme, useLocale, useThemeClass } from '../../_mixins';\nimport { call, createKey, useAdjustedTo } from '../../_utils';\nimport { NButton } from '../../button';\nimport HueSlider from './HueSlider';\nimport AlphaSlider from './AlphaSlider';\nimport Pallete from './Pallete';\nimport ColorInput from './ColorInput';\nimport ColorPickerTrigger from './ColorPickerTrigger';\nimport { deriveDefaultValue, getModeFromValue } from './utils';\nimport ColorPickerSwatches from './ColorPickerSwatches';\nimport ColorPreview from './ColorPreview';\nimport { colorPickerInjectionKey } from './context';\nimport style from './styles/index.cssr';\nexport const colorPickerPanelProps = Object.assign(Object.assign({}, useTheme.props), { value: String, show: {\n        type: Boolean,\n        default: undefined\n    }, defaultShow: {\n        type: Boolean,\n        default: false\n    }, defaultValue: String, modes: {\n        type: Array,\n        // no hsva by default since browser doesn't support it\n        default: () => ['rgb', 'hex', 'hsl']\n    }, placement: {\n        type: String,\n        default: 'bottom-start'\n    }, to: useAdjustedTo.propTo, showAlpha: {\n        type: Boolean,\n        default: true\n    }, showPreview: Boolean, swatches: Array, disabled: {\n        type: Boolean,\n        default: undefined\n    }, actions: {\n        type: Array,\n        default: null\n    }, internalActions: Array, size: String, renderLabel: Function, onComplete: Function, 'onUpdate:show': [Function, Array], onUpdateShow: [Function, Array], 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'ColorPicker',\n    props: colorPickerPanelProps,\n    setup(props, { slots }) {\n        const selfRef = ref(null);\n        let upcomingValue = null;\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef } = formItem;\n        const { localeRef } = useLocale('global');\n        const { mergedClsPrefixRef, namespaceRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('ColorPicker', '-color-picker', style, colorPickerLight, props, mergedClsPrefixRef);\n        provide(colorPickerInjectionKey, {\n            themeRef,\n            renderLabelRef: toRef(props, 'renderLabel'),\n            colorPickerSlots: slots\n        });\n        const uncontrolledShowRef = ref(props.defaultShow);\n        const mergedShowRef = useMergedState(toRef(props, 'show'), uncontrolledShowRef);\n        function doUpdateShow(value) {\n            const { onUpdateShow, 'onUpdate:show': _onUpdateShow } = props;\n            if (onUpdateShow)\n                call(onUpdateShow, value);\n            if (_onUpdateShow)\n                call(_onUpdateShow, value);\n            uncontrolledShowRef.value = value;\n        }\n        const { defaultValue } = props;\n        const uncontrolledValueRef = ref(defaultValue === undefined\n            ? deriveDefaultValue(props.modes, props.showAlpha)\n            : defaultValue);\n        const mergedValueRef = useMergedState(toRef(props, 'value'), uncontrolledValueRef);\n        const undoStackRef = ref([mergedValueRef.value]);\n        const valueIndexRef = ref(0);\n        const valueModeRef = computed(() => getModeFromValue(mergedValueRef.value));\n        const { modes } = props;\n        const displayedModeRef = ref(getModeFromValue(mergedValueRef.value) || modes[0] || 'rgb');\n        function handleUpdateDisplayedMode() {\n            const { modes } = props;\n            const { value: displayedMode } = displayedModeRef;\n            const currentModeIndex = modes.findIndex((mode) => mode === displayedMode);\n            if (~currentModeIndex) {\n                displayedModeRef.value = modes[(currentModeIndex + 1) % modes.length];\n            }\n            else {\n                displayedModeRef.value = 'rgb';\n            }\n        }\n        let _h, // avoid conflict with render function's h\n        s, l, v, r, g, b, a;\n        const hsvaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsv':\n                    return hsva(mergedValue);\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2hsv(_h, s, l), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsv(r, g, b), a];\n            }\n        });\n        const rgbaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgba(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2rgb(_h, s, v), a];\n                case 'hsl':\n                    ;\n                    [_h, s, l, a] = hsla(mergedValue);\n                    return [...hsl2rgb(_h, s, l), a];\n            }\n        });\n        const hslaRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (!mergedValue)\n                return null;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            switch (valueModeRef.value) {\n                case 'hsl':\n                    return hsla(mergedValue);\n                case 'hsv':\n                    ;\n                    [_h, s, v, a] = hsva(mergedValue);\n                    return [...hsv2hsl(_h, s, v), a];\n                case 'rgb':\n                case 'hex':\n                    ;\n                    [r, g, b, a] = rgba(mergedValue);\n                    return [...rgb2hsl(r, g, b), a];\n            }\n        });\n        const mergedValueArrRef = computed(() => {\n            switch (displayedModeRef.value) {\n                case 'rgb':\n                case 'hex':\n                    return rgbaRef.value;\n                case 'hsv':\n                    return hsvaRef.value;\n                case 'hsl':\n                    return hslaRef.value;\n            }\n        });\n        const displayedHueRef = ref(0);\n        const displayedAlphaRef = ref(1);\n        const displayedSvRef = ref([0, 0]);\n        function handleUpdateSv(s, v) {\n            const { value: hsvaArr } = hsvaRef;\n            const hue = displayedHueRef.value;\n            const alpha = hsvaArr ? hsvaArr[3] : 1;\n            displayedSvRef.value = [s, v];\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        alpha\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateHue(hue) {\n            displayedHueRef.value = hue;\n            const { value: hsvaArr } = hsvaRef;\n            if (!hsvaArr) {\n                return;\n            }\n            const [, s, v, a] = hsvaArr;\n            const { showAlpha } = props;\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    doUpdateValue((showAlpha ? toHsvaString : toHsvString)([hue, s, v, a]), 'cursor');\n                    break;\n                case 'rgb':\n                    doUpdateValue((showAlpha ? toRgbaString : toRgbString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hex':\n                    doUpdateValue((showAlpha ? toHexaString : toHexString)([\n                        ...hsv2rgb(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n                case 'hsl':\n                    doUpdateValue((showAlpha ? toHslaString : toHslString)([\n                        ...hsv2hsl(hue, s, v),\n                        a\n                    ]), 'cursor');\n                    break;\n            }\n        }\n        function handleUpdateAlpha(alpha) {\n            switch (displayedModeRef.value) {\n                case 'hsv':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, v] = hsvaRef.value;\n                    doUpdateValue(toHsvaString([_h, s, v, alpha]), 'cursor');\n                    break;\n                case 'rgb':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toRgbaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hex':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [r, g, b] = rgbaRef.value;\n                    doUpdateValue(toHexaString([r, g, b, alpha]), 'cursor');\n                    break;\n                case 'hsl':\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    ;\n                    [_h, s, l] = hslaRef.value;\n                    doUpdateValue(toHslaString([_h, s, l, alpha]), 'cursor');\n                    break;\n            }\n            displayedAlphaRef.value = alpha;\n        }\n        function doUpdateValue(value, updateSource) {\n            if (updateSource === 'cursor') {\n                upcomingValue = value;\n            }\n            else {\n                upcomingValue = null;\n            }\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            nTriggerFormChange();\n            nTriggerFormInput();\n            uncontrolledValueRef.value = value;\n        }\n        function handleInputUpdateValue(value) {\n            doUpdateValue(value, 'input');\n            void nextTick(handleComplete);\n        }\n        function handleComplete(pushStack = true) {\n            const { value } = mergedValueRef;\n            // no value & only hue changes will complete with no value\n            if (value) {\n                const { nTriggerFormChange, nTriggerFormInput } = formItem;\n                const { onComplete } = props;\n                if (onComplete) {\n                    ;\n                    onComplete(value);\n                }\n                const { value: undoStack } = undoStackRef;\n                const { value: valueIndex } = valueIndexRef;\n                if (pushStack) {\n                    undoStack.splice(valueIndex + 1, undoStack.length, value);\n                    valueIndexRef.value = valueIndex + 1;\n                }\n                nTriggerFormChange();\n                nTriggerFormInput();\n            }\n        }\n        function undo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex - 1 < 0)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex - 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex - 1;\n        }\n        function redo() {\n            const { value: valueIndex } = valueIndexRef;\n            if (valueIndex < 0 || valueIndex + 1 >= undoStackRef.value.length)\n                return;\n            doUpdateValue(undoStackRef.value[valueIndex + 1], 'input');\n            handleComplete(false);\n            valueIndexRef.value = valueIndex + 1;\n        }\n        function handleConfirm() {\n            doUpdateShow(false);\n        }\n        const undoableRef = computed(() => valueIndexRef.value >= 1);\n        const redoableRef = computed(() => {\n            const { value: undoStack } = undoStackRef;\n            return undoStack.length > 1 && valueIndexRef.value < undoStack.length - 1;\n        });\n        watch(mergedShowRef, (value) => {\n            if (!value) {\n                undoStackRef.value = [mergedValueRef.value];\n                valueIndexRef.value = 0;\n            }\n        });\n        watchEffect(() => {\n            if (upcomingValue && upcomingValue === mergedValueRef.value) {\n                // let it works in uncontrolled mode\n            }\n            else {\n                const { value } = hsvaRef;\n                if (value) {\n                    displayedHueRef.value = value[0];\n                    displayedAlphaRef.value = value[3];\n                    displayedSvRef.value = [value[1], value[2]];\n                }\n            }\n            upcomingValue = null;\n        });\n        const cssVarsRef = computed(() => {\n            const { value: mergedSize } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { textColor, color, panelFontSize, boxShadow, border, borderRadius, dividerColor, [createKey('height', mergedSize)]: height, [createKey('fontSize', mergedSize)]: fontSize } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-color': color,\n                '--n-panel-font-size': panelFontSize,\n                '--n-font-size': fontSize,\n                '--n-box-shadow': boxShadow,\n                '--n-border': border,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-divider-color': dividerColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('color-picker', computed(() => {\n                return mergedSizeRef.value[0];\n            }), cssVarsRef, props)\n            : undefined;\n        function renderPanel() {\n            var _a;\n            const { value: rgba } = rgbaRef;\n            const { value: displayedHue } = displayedHueRef;\n            const { internalActions, modes, actions } = props;\n            const { value: mergedTheme } = themeRef;\n            const { value: mergedClsPrefix } = mergedClsPrefixRef;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefix}-color-picker-panel`,\n                    themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value\n                ], onDragstart: (e) => {\n                    e.preventDefault();\n                }, style: inlineThemeDisabled\n                    ? undefined\n                    : cssVarsRef.value },\n                h(\"div\", { class: `${mergedClsPrefix}-color-picker-control` },\n                    h(Pallete, { clsPrefix: mergedClsPrefix, rgba: rgba, displayedHue: displayedHue, displayedSv: displayedSvRef.value, onUpdateSV: handleUpdateSv, onComplete: handleComplete }),\n                    h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview` },\n                        h(\"div\", { class: `${mergedClsPrefix}-color-picker-preview__sliders` },\n                            h(HueSlider, { clsPrefix: mergedClsPrefix, hue: displayedHue, onUpdateHue: handleUpdateHue, onComplete: handleComplete }),\n                            props.showAlpha ? (h(AlphaSlider, { clsPrefix: mergedClsPrefix, rgba: rgba, alpha: displayedAlphaRef.value, onUpdateAlpha: handleUpdateAlpha, onComplete: handleComplete })) : null),\n                        props.showPreview ? (h(ColorPreview, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, color: rgbaRef.value && toHexString(rgbaRef.value), onUpdateColor: (color) => doUpdateValue(color, 'input') })) : null),\n                    h(ColorInput, { clsPrefix: mergedClsPrefix, showAlpha: props.showAlpha, mode: displayedModeRef.value, modes: modes, onUpdateMode: handleUpdateDisplayedMode, value: mergedValueRef.value, valueArr: mergedValueArrRef.value, onUpdateValue: handleInputUpdateValue }),\n                    ((_a = props.swatches) === null || _a === void 0 ? void 0 : _a.length) && (h(ColorPickerSwatches, { clsPrefix: mergedClsPrefix, mode: displayedModeRef.value, swatches: props.swatches, onUpdateColor: (color) => doUpdateValue(color, 'input') }))),\n                (actions === null || actions === void 0 ? void 0 : actions.length) ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` }, actions.includes('confirm') && (h(NButton, { size: \"small\", onClick: handleConfirm, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.confirm })))) : null,\n                slots.action ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` }, { default: slots.action })) : internalActions ? (h(\"div\", { class: `${mergedClsPrefix}-color-picker-action` },\n                    internalActions.includes('undo') && (h(NButton, { size: \"small\", onClick: undo, disabled: !undoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.undo })),\n                    internalActions.includes('redo') && (h(NButton, { size: \"small\", onClick: redo, disabled: !redoableRef.value, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button }, { default: () => localeRef.value.redo })))) : null));\n        }\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            namespace: namespaceRef,\n            selfRef,\n            hsla: hslaRef,\n            rgba: rgbaRef,\n            mergedShow: mergedShowRef,\n            mergedDisabled: mergedDisabledRef,\n            isMounted: useIsMounted(),\n            adjustedTo: useAdjustedTo(props),\n            mergedValue: mergedValueRef,\n            handleTriggerClick() {\n                doUpdateShow(true);\n            },\n            handleClickOutside(e) {\n                var _a;\n                if ((_a = selfRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target))\n                    return;\n                doUpdateShow(false);\n            },\n            renderPanel,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [this.themeClass, `${mergedClsPrefix}-color-picker`], ref: \"selfRef\", style: this.cssVars },\n            h(VBinder, null, {\n                default: () => [\n                    h(VTarget, null, {\n                        default: () => (h(ColorPickerTrigger, { clsPrefix: mergedClsPrefix, value: this.mergedValue, hsla: this.hsla, disabled: this.mergedDisabled, onClick: this.handleTriggerClick }, {\n                            label: $slots.label\n                        }))\n                    }),\n                    h(VFollower, { placement: this.placement, show: this.mergedShow, containerClass: this.namespace, teleportDisabled: this.adjustedTo === useAdjustedTo.tdkey, to: this.adjustedTo }, {\n                        default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted }, {\n                            default: () => this.mergedShow\n                                ? withDirectives(this.renderPanel(), [\n                                    [\n                                        clickoutside,\n                                        this.handleClickOutside,\n                                        undefined,\n                                        { capture: true }\n                                    ]\n                                ])\n                                : null\n                        }))\n                    })\n                ]\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}