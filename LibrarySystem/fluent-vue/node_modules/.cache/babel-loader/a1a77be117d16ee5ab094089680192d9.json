{"ast":null,"code":"import { on, off } from './delegate';\nconst traps = {\n  mousemoveoutside: new WeakMap(),\n  clickoutside: new WeakMap()\n};\n\nfunction createTrapHandler(name, el, originalHandler) {\n  if (name === 'mousemoveoutside') {\n    const moveHandler = e => {\n      if (el.contains(e.target)) return;\n      originalHandler(e);\n    };\n\n    return {\n      mousemove: moveHandler,\n      touchstart: moveHandler\n    };\n  } else if (name === 'clickoutside') {\n    let mouseDownOutside = false;\n\n    const downHandler = e => {\n      mouseDownOutside = !el.contains(e.target);\n    };\n\n    const upHanlder = e => {\n      if (!mouseDownOutside) return;\n      if (el.contains(e.target)) return;\n      originalHandler(e);\n    };\n\n    return {\n      mousedown: downHandler,\n      mouseup: upHanlder,\n      touchstart: downHandler,\n      touchend: upHanlder\n    };\n  } // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n\n\n  console.error(`[evtd/create-trap-handler]: name \\`${name}\\` is invalid. This could be a bug of evtd.`);\n  return {};\n}\n\nfunction ensureTrapHandlers(name, el, handler) {\n  const handlers = traps[name];\n  let elHandlers = handlers.get(el);\n\n  if (elHandlers === undefined) {\n    handlers.set(el, elHandlers = new WeakMap());\n  }\n\n  let trapHandler = elHandlers.get(handler);\n\n  if (trapHandler === undefined) {\n    elHandlers.set(handler, trapHandler = createTrapHandler(name, el, handler));\n  }\n\n  return trapHandler;\n}\n\nfunction trapOn(name, el, handler, options) {\n  if (name === 'mousemoveoutside' || name === 'clickoutside') {\n    const trapHandlers = ensureTrapHandlers(name, el, handler);\n    Object.keys(trapHandlers).forEach(key => {\n      on(key, document, trapHandlers[key], options);\n    });\n    return true;\n  }\n\n  return false;\n}\n\nfunction trapOff(name, el, handler, options) {\n  if (name === 'mousemoveoutside' || name === 'clickoutside') {\n    const trapHandlers = ensureTrapHandlers(name, el, handler);\n    Object.keys(trapHandlers).forEach(key => {\n      off(key, document, trapHandlers[key], options);\n    });\n    return true;\n  }\n\n  return false;\n}\n\nexport { trapOff, trapOn };","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/evtd/es/traps.js"],"names":["on","off","traps","mousemoveoutside","WeakMap","clickoutside","createTrapHandler","name","el","originalHandler","moveHandler","e","contains","target","mousemove","touchstart","mouseDownOutside","downHandler","upHanlder","mousedown","mouseup","touchend","console","error","ensureTrapHandlers","handler","handlers","elHandlers","get","undefined","set","trapHandler","trapOn","options","trapHandlers","Object","keys","forEach","key","document","trapOff"],"mappings":"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","sourcesContent":["import { on, off } from './delegate';\nconst traps = {\n    mousemoveoutside: new WeakMap(),\n    clickoutside: new WeakMap()\n};\nfunction createTrapHandler(name, el, originalHandler) {\n    if (name === 'mousemoveoutside') {\n        const moveHandler = (e) => {\n            if (el.contains(e.target))\n                return;\n            originalHandler(e);\n        };\n        return {\n            mousemove: moveHandler,\n            touchstart: moveHandler\n        };\n    }\n    else if (name === 'clickoutside') {\n        let mouseDownOutside = false;\n        const downHandler = (e) => {\n            mouseDownOutside = !el.contains(e.target);\n        };\n        const upHanlder = (e) => {\n            if (!mouseDownOutside)\n                return;\n            if (el.contains(e.target))\n                return;\n            originalHandler(e);\n        };\n        return {\n            mousedown: downHandler,\n            mouseup: upHanlder,\n            touchstart: downHandler,\n            touchend: upHanlder\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/restrict-template-expressions\n    console.error(`[evtd/create-trap-handler]: name \\`${name}\\` is invalid. This could be a bug of evtd.`);\n    return {};\n}\nfunction ensureTrapHandlers(name, el, handler) {\n    const handlers = traps[name];\n    let elHandlers = handlers.get(el);\n    if (elHandlers === undefined) {\n        handlers.set(el, elHandlers = new WeakMap());\n    }\n    let trapHandler = elHandlers.get(handler);\n    if (trapHandler === undefined) {\n        elHandlers.set(handler, trapHandler = createTrapHandler(name, el, handler));\n    }\n    return trapHandler;\n}\nfunction trapOn(name, el, handler, options) {\n    if (name === 'mousemoveoutside' ||\n        name === 'clickoutside') {\n        const trapHandlers = ensureTrapHandlers(name, el, handler);\n        Object.keys(trapHandlers).forEach(key => {\n            on(key, document, trapHandlers[key], options);\n        });\n        return true;\n    }\n    return false;\n}\nfunction trapOff(name, el, handler, options) {\n    if (name === 'mousemoveoutside' ||\n        name === 'clickoutside') {\n        const trapHandlers = ensureTrapHandlers(name, el, handler);\n        Object.keys(trapHandlers).forEach(key => {\n            off(key, document, trapHandlers[key], options);\n        });\n        return true;\n    }\n    return false;\n}\nexport { trapOff, trapOn };\n"]},"metadata":{},"sourceType":"module"}