{"ast":null,"code":"import { h, ref, defineComponent, inject, computed } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport NCascaderOption from './CascaderOption';\nimport { NScrollbar } from '../../_internal';\nimport { cascaderInjectionKey } from './interface';\nimport { depx } from 'seemly';\nexport default defineComponent({\n  name: 'CascaderSubmenu',\n  props: {\n    depth: {\n      type: Number,\n      required: true\n    },\n    tmNodes: {\n      type: Array,\n      required: true\n    }\n  },\n\n  setup() {\n    const {\n      virtualScrollRef,\n      mergedClsPrefixRef,\n      mergedThemeRef,\n      optionHeightRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(cascaderInjectionKey);\n    const scrollbarInstRef = ref(null);\n    const vlInstRef = ref(null);\n    const inst = {\n      scroll(index, elSize) {\n        var _a, _b;\n\n        if (virtualScrollRef.value) {\n          (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo({\n            index\n          });\n        } else {\n          (_b = scrollbarInstRef.value) === null || _b === void 0 ? void 0 : _b.scrollTo({\n            index,\n            elSize\n          });\n        }\n      }\n\n    };\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedTheme: mergedThemeRef,\n      scrollbarInstRef,\n      vlInstRef,\n      virtualScroll: virtualScrollRef,\n      itemSize: computed(() => depx(optionHeightRef.value)),\n      handleVlScroll: () => {\n        var _a;\n\n        (_a = scrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n      },\n      getVlContainer: () => {\n        var _a;\n\n        return (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n      },\n      getVlContent: () => {\n        var _a;\n\n        return (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n      }\n    }, inst);\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedTheme,\n      virtualScroll\n    } = this;\n    return h(\"div\", {\n      class: [virtualScroll && `${mergedClsPrefix}-cascader-submenu--virtual`, `${mergedClsPrefix}-cascader-submenu`]\n    }, h(NScrollbar, {\n      ref: \"scrollbarInstRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      container: virtualScroll ? this.getVlContainer : undefined,\n      content: virtualScroll ? this.getVlContent : undefined\n    }, {\n      default: () => virtualScroll ? h(VirtualList, {\n        items: this.tmNodes,\n        itemSize: this.itemSize,\n        onScroll: this.handleVlScroll,\n        showScrollbar: false,\n        ref: \"vlInstRef\"\n      }, {\n        default: ({\n          item: tmNode\n        }) => h(NCascaderOption, {\n          key: tmNode.key,\n          tmNode: tmNode\n        })\n      }) : this.tmNodes.map(tmNode => h(NCascaderOption, {\n        key: tmNode.key,\n        tmNode: tmNode\n      }))\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/cascader/src/CascaderSubmenu.js"],"names":["h","ref","defineComponent","inject","computed","VirtualList","NCascaderOption","NScrollbar","cascaderInjectionKey","depx","name","props","depth","type","Number","required","tmNodes","Array","setup","virtualScrollRef","mergedClsPrefixRef","mergedThemeRef","optionHeightRef","scrollbarInstRef","vlInstRef","inst","scroll","index","elSize","_a","_b","value","scrollTo","Object","assign","mergedClsPrefix","mergedTheme","virtualScroll","itemSize","handleVlScroll","sync","getVlContainer","listElRef","getVlContent","itemsElRef","render","class","theme","peers","Scrollbar","themeOverrides","peerOverrides","container","undefined","content","default","items","onScroll","showScrollbar","item","tmNode","key","map"],"mappings":"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","sourcesContent":["import { h, ref, defineComponent, inject, computed } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport NCascaderOption from './CascaderOption';\nimport { NScrollbar } from '../../_internal';\nimport { cascaderInjectionKey } from './interface';\nimport { depx } from 'seemly';\nexport default defineComponent({\n    name: 'CascaderSubmenu',\n    props: {\n        depth: {\n            type: Number,\n            required: true\n        },\n        tmNodes: {\n            type: Array,\n            required: true\n        }\n    },\n    setup() {\n        const { virtualScrollRef, mergedClsPrefixRef, mergedThemeRef, optionHeightRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(cascaderInjectionKey);\n        const scrollbarInstRef = ref(null);\n        const vlInstRef = ref(null);\n        const inst = {\n            scroll(index, elSize) {\n                var _a, _b;\n                if (virtualScrollRef.value) {\n                    (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo({\n                        index\n                    });\n                }\n                else {\n                    (_b = scrollbarInstRef.value) === null || _b === void 0 ? void 0 : _b.scrollTo({\n                        index,\n                        elSize\n                    });\n                }\n            }\n        };\n        return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, mergedTheme: mergedThemeRef, scrollbarInstRef,\n            vlInstRef, virtualScroll: virtualScrollRef, itemSize: computed(() => depx(optionHeightRef.value)), handleVlScroll: () => {\n                var _a;\n                (_a = scrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.sync();\n            }, getVlContainer: () => {\n                var _a;\n                return (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.listElRef;\n            }, getVlContent: () => {\n                var _a;\n                return (_a = vlInstRef.value) === null || _a === void 0 ? void 0 : _a.itemsElRef;\n            } }, inst);\n    },\n    render() {\n        const { mergedClsPrefix, mergedTheme, virtualScroll } = this;\n        return (h(\"div\", { class: [\n                virtualScroll && `${mergedClsPrefix}-cascader-submenu--virtual`,\n                `${mergedClsPrefix}-cascader-submenu`\n            ] },\n            h(NScrollbar, { ref: \"scrollbarInstRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar, container: virtualScroll ? this.getVlContainer : undefined, content: virtualScroll ? this.getVlContent : undefined }, {\n                default: () => virtualScroll ? (h(VirtualList, { items: this.tmNodes, itemSize: this.itemSize, onScroll: this.handleVlScroll, showScrollbar: false, ref: \"vlInstRef\" }, {\n                    default: ({ item: tmNode }) => (h(NCascaderOption, { key: tmNode.key, tmNode: tmNode }))\n                })) : (this.tmNodes.map((tmNode) => (h(NCascaderOption, { key: tmNode.key, tmNode: tmNode }))))\n            })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}