{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nimport { Dialog } from \"vant\"; // axios.defaults.baseURL = 'http://hp.suoluomei.cn/index.php'  //正式\n\naxios.defaults.baseURL = 'http://hp.suoluomei.cn/index.php'; //测试\n//post请求头\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/x-www-form-urlencoded;charset=UTF-8\"; //设置超时\n\naxios.defaults.timeout = 10000;\naxios.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\naxios.interceptors.response.use(response => {\n  if (response.status == 200) {\n    return Promise.resolve(response);\n  } else {\n    return Promise.reject(response);\n  }\n}, error => {\n  Dialog.alert({\n    title: \"提示\",\n    message: \"网络请求失败，请刷新重试\"\n  });\n});\nexport default {\n  post(url, data) {\n    return new Promise((resolve, reject) => {\n      axios({\n        method: 'post',\n        url,\n        data: qs.stringify(data)\n      }).then(res => {\n        resolve(res.data);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  },\n\n  get(url, data) {\n    return new Promise((resolve, reject) => {\n      axios({\n        method: 'get',\n        url,\n        params: data\n      }).then(res => {\n        resolve(res.data);\n      }).catch(err => {\n        reject(err);\n      });\n    });\n  }\n\n};","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/src/utils/http.js"],"names":["axios","qs","Dialog","defaults","baseURL","headers","post","timeout","interceptors","request","use","config","error","Promise","reject","response","status","resolve","alert","title","message","url","data","method","stringify","then","res","catch","err","get","params"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,IAAf;AACA,SACEC,MADF,QAEO,MAFP,C,CAIA;;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyB,kCAAzB,C,CAA4D;AAE5D;;AACAJ,KAAK,CAACG,QAAN,CAAeE,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IACE,iDADF,C,CAEA;;AACAN,KAAK,CAACG,QAAN,CAAeI,OAAf,GAAyB,KAAzB;AAEAP,KAAK,CAACQ,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACEC,MAAM,IAAI;AACR,SAAOA,MAAP;AACD,CAHH,EAIEC,KAAK,IAAI;AACP,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACD,CANH;AASAZ,KAAK,CAACQ,YAAN,CAAmBO,QAAnB,CAA4BL,GAA5B,CACEK,QAAQ,IAAI;AACV,MAAIA,QAAQ,CAACC,MAAT,IAAmB,GAAvB,EAA4B;AAC1B,WAAOH,OAAO,CAACI,OAAR,CAAgBF,QAAhB,CAAP;AACD,GAFD,MAEO;AACL,WAAOF,OAAO,CAACC,MAAR,CAAeC,QAAf,CAAP;AACD;AACF,CAPH,EAQEH,KAAK,IAAI;AACPV,EAAAA,MAAM,CAACgB,KAAP,CAAa;AACXC,IAAAA,KAAK,EAAE,IADI;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAAb;AAID,CAbH;AAeA,eAAe;AACbd,EAAAA,IAAI,CAACe,GAAD,EAAMC,IAAN,EAAY;AACd,WAAO,IAAIT,OAAJ,CAAY,CAACI,OAAD,EAAUH,MAAV,KAAqB;AACtCd,MAAAA,KAAK,CAAC;AACFuB,QAAAA,MAAM,EAAE,MADN;AAEFF,QAAAA,GAFE;AAGFC,QAAAA,IAAI,EAAErB,EAAE,CAACuB,SAAH,CAAaF,IAAb;AAHJ,OAAD,CAAL,CAKGG,IALH,CAKQC,GAAG,IAAI;AACXT,QAAAA,OAAO,CAACS,GAAG,CAACJ,IAAL,CAAP;AACD,OAPH,EAQGK,KARH,CAQSC,GAAG,IAAI;AACZd,QAAAA,MAAM,CAACc,GAAD,CAAN;AACD,OAVH;AAWD,KAZM,CAAP;AAaD,GAfY;;AAiBbC,EAAAA,GAAG,CAACR,GAAD,EAAMC,IAAN,EAAY;AACb,WAAO,IAAIT,OAAJ,CAAY,CAACI,OAAD,EAAUH,MAAV,KAAqB;AACtCd,MAAAA,KAAK,CAAC;AACFuB,QAAAA,MAAM,EAAE,KADN;AAEFF,QAAAA,GAFE;AAGFS,QAAAA,MAAM,EAAER;AAHN,OAAD,CAAL,CAKGG,IALH,CAKQC,GAAG,IAAI;AACXT,QAAAA,OAAO,CAACS,GAAG,CAACJ,IAAL,CAAP;AACD,OAPH,EAQGK,KARH,CAQSC,GAAG,IAAI;AACZd,QAAAA,MAAM,CAACc,GAAD,CAAN;AACD,OAVH;AAWD,KAZM,CAAP;AAaD;;AA/BY,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport {\r\n  Dialog\r\n} from \"vant\";\r\n\r\n// axios.defaults.baseURL = 'http://hp.suoluomei.cn/index.php'  //正式\r\naxios.defaults.baseURL = 'http://hp.suoluomei.cn/index.php' //测试\r\n\r\n//post请求头\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded;charset=UTF-8\";\r\n//设置超时\r\naxios.defaults.timeout = 10000;\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  response => {\r\n    if (response.status == 200) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(response);\r\n    }\r\n  },\r\n  error => {\r\n    Dialog.alert({\r\n      title: \"提示\",\r\n      message: \"网络请求失败，请刷新重试\"\r\n    });\r\n  }\r\n);\r\nexport default {\r\n  post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n          method: 'post',\r\n          url,\r\n          data: qs.stringify(data),\r\n        })\r\n        .then(res => {\r\n          resolve(res.data)\r\n        })\r\n        .catch(err => {\r\n          reject(err)\r\n        });\r\n    })\r\n  },\r\n\r\n  get(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      axios({\r\n          method: 'get',\r\n          url,\r\n          params: data,\r\n        })\r\n        .then(res => {\r\n          resolve(res.data)\r\n        })\r\n        .catch(err => {\r\n          reject(err)\r\n        })\r\n    })\r\n  }\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}