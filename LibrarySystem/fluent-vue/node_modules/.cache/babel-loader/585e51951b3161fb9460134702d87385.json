{"ast":null,"code":"import { h, Transition, defineComponent, computed, provide, nextTick, ref, toRef } from 'vue';\nimport { throttle } from 'lodash-es';\nimport { useTheme, useHljs, useConfig, useThemeClass } from '../../_mixins';\nimport { warn } from '../../_utils';\nimport { NScrollbar } from '../../_internal';\nimport { NCode } from '../../code';\nimport { logLight } from '../styles';\nimport NLogLoader from './LogLoader';\nimport NLogLine from './LogLine';\nimport { logInjectionKey } from './context';\nimport style from './styles/index.cssr';\nconst logProps = Object.assign(Object.assign({}, useTheme.props), {\n  loading: Boolean,\n  trim: Boolean,\n  log: String,\n  fontSize: {\n    type: Number,\n    default: 14\n  },\n  lines: {\n    type: Array,\n    default: () => []\n  },\n  lineHeight: {\n    type: Number,\n    default: 1.25\n  },\n  language: String,\n  rows: {\n    type: Number,\n    default: 15\n  },\n  offsetTop: {\n    type: Number,\n    default: 0\n  },\n  offsetBottom: {\n    type: Number,\n    default: 0\n  },\n  hljs: Object,\n  onReachTop: Function,\n  onReachBottom: Function,\n  onRequireMore: Function\n});\nexport default defineComponent({\n  name: 'Log',\n  props: logProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const slientRef = ref(false);\n    const highlightRef = computed(() => {\n      return props.language !== undefined;\n    });\n    const styleHeightRef = computed(() => {\n      return `calc(${Math.round(props.rows * props.lineHeight * props.fontSize)}px)`;\n    });\n    const mergedLinesRef = computed(() => {\n      const {\n        log\n      } = props;\n\n      if (log) {\n        return log.split('\\n');\n      }\n\n      return props.lines;\n    });\n    const scrollbarRef = ref(null);\n    const themeRef = useTheme('Log', '-log', style, logLight, props, mergedClsPrefixRef);\n\n    function handleScroll(e) {\n      const container = e.target;\n      const content = container.firstElementChild;\n\n      if (slientRef.value) {\n        void nextTick(() => {\n          slientRef.value = false;\n        });\n        return;\n      }\n\n      const containerHeight = container.offsetHeight;\n      const containerScrollTop = container.scrollTop;\n      const contentHeight = content.offsetHeight;\n      const scrollTop = containerScrollTop;\n      const scrollBottom = contentHeight - containerScrollTop - containerHeight;\n\n      if (scrollTop <= props.offsetTop) {\n        const {\n          onReachTop,\n          onRequireMore\n        } = props;\n        if (onRequireMore) onRequireMore('top');\n        if (onReachTop) onReachTop();\n      }\n\n      if (scrollBottom <= props.offsetBottom) {\n        const {\n          onReachBottom,\n          onRequireMore\n        } = props;\n        if (onRequireMore) onRequireMore('bottom');\n        if (onReachBottom) onReachBottom();\n      }\n    }\n\n    const handleWheel = throttle(_handleWheel, 300);\n\n    function _handleWheel(e) {\n      if (slientRef.value) {\n        void nextTick(() => {\n          slientRef.value = false;\n        });\n        return;\n      }\n\n      if (scrollbarRef.value) {\n        const {\n          containerRef,\n          contentRef\n        } = scrollbarRef.value;\n\n        if (containerRef && contentRef) {\n          const containerHeight = containerRef.offsetHeight;\n          const containerScrollTop = containerRef.scrollTop;\n          const contentHeight = contentRef.offsetHeight;\n          const scrollTop = containerScrollTop;\n          const scrollBottom = contentHeight - containerScrollTop - containerHeight;\n          const deltaY = e.deltaY;\n\n          if (scrollTop === 0 && deltaY < 0) {\n            const {\n              onRequireMore\n            } = props;\n            if (onRequireMore) onRequireMore('top');\n          }\n\n          if (scrollBottom <= 0 && deltaY > 0) {\n            const {\n              onRequireMore\n            } = props;\n            if (onRequireMore) onRequireMore('bottom');\n          }\n        }\n      }\n    }\n\n    function scrollTo(options) {\n      const {\n        value: scrollbarInst\n      } = scrollbarRef;\n      if (!scrollbarInst) return;\n      const {\n        slient,\n        top,\n        position\n      } = options;\n\n      if (slient) {\n        slientRef.value = true;\n      }\n\n      if (top !== undefined) {\n        scrollbarInst.scrollTo({\n          left: 0,\n          top\n        });\n      } else if (position === 'bottom' || position === 'top') {\n        scrollbarInst.scrollTo({\n          position\n        });\n      }\n    } // deprecated\n\n\n    function scrollToTop(slient = false) {\n      warn('log', \"`scrollToTop` is deprecated, please use `scrollTo({ position: 'top'})` instead.\");\n      scrollTo({\n        position: 'top',\n        slient\n      });\n    }\n\n    function scrollToBottom(slient = false) {\n      warn('log', \"`scrollToTop` is deprecated, please use `scrollTo({ position: 'bottom'})` instead.\");\n      scrollTo({\n        position: 'bottom',\n        slient\n      });\n    }\n\n    provide(logInjectionKey, {\n      languageRef: toRef(props, 'language'),\n      mergedHljsRef: useHljs(props, highlightRef),\n      trimRef: toRef(props, 'trim'),\n      highlightRef\n    });\n    const exportedMethods = {\n      scrollTo\n    };\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          loaderFontSize,\n          loaderTextColor,\n          loaderColor,\n          loaderBorder,\n          loadingColor\n        },\n        common: {\n          cubicBezierEaseInOut\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-loader-font-size': loaderFontSize,\n        '--n-loader-border': loaderBorder,\n        '--n-loader-color': loaderColor,\n        '--n-loader-text-color': loaderTextColor,\n        '--n-loading-color': loadingColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('log', undefined, cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exportedMethods), {\n      mergedClsPrefix: mergedClsPrefixRef,\n      scrollbarRef,\n      mergedTheme: themeRef,\n      styleHeight: styleHeightRef,\n      mergedLines: mergedLinesRef,\n      scrollToTop,\n      scrollToBottom,\n      handleWheel,\n      handleScroll,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedTheme,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h('div', {\n      class: [`${mergedClsPrefix}-log`, this.themeClass],\n      style: [{\n        lineHeight: this.lineHeight,\n        height: this.styleHeight\n      }, this.cssVars],\n      onWheelPassive: this.handleWheel\n    }, [h(NScrollbar, {\n      ref: \"scrollbarRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      onScroll: this.handleScroll\n    }, {\n      default: () => h(NCode, {\n        internalNoHighlight: true,\n        internalFontSize: this.fontSize,\n        theme: mergedTheme.peers.Code,\n        themeOverrides: mergedTheme.peerOverrides.Code\n      }, {\n        default: () => this.mergedLines.map((line, index) => {\n          return h(NLogLine, {\n            key: index,\n            line: line\n          });\n        })\n      })\n    }), h(Transition, {\n      name: \"fade-in-scale-up-transition\"\n    }, {\n      default: () => this.loading ? h(NLogLoader, {\n        clsPrefix: mergedClsPrefix\n      }) : null\n    })]);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/log/src/Log.js"],"names":["h","Transition","defineComponent","computed","provide","nextTick","ref","toRef","throttle","useTheme","useHljs","useConfig","useThemeClass","warn","NScrollbar","NCode","logLight","NLogLoader","NLogLine","logInjectionKey","style","logProps","Object","assign","props","loading","Boolean","trim","log","String","fontSize","type","Number","default","lines","Array","lineHeight","language","rows","offsetTop","offsetBottom","hljs","onReachTop","Function","onReachBottom","onRequireMore","name","setup","mergedClsPrefixRef","inlineThemeDisabled","slientRef","highlightRef","undefined","styleHeightRef","Math","round","mergedLinesRef","split","scrollbarRef","themeRef","handleScroll","e","container","target","content","firstElementChild","value","containerHeight","offsetHeight","containerScrollTop","scrollTop","contentHeight","scrollBottom","handleWheel","_handleWheel","containerRef","contentRef","deltaY","scrollTo","options","scrollbarInst","slient","top","position","left","scrollToTop","scrollToBottom","languageRef","mergedHljsRef","trimRef","exportedMethods","cssVarsRef","self","loaderFontSize","loaderTextColor","loaderColor","loaderBorder","loadingColor","common","cubicBezierEaseInOut","themeClassHandle","mergedClsPrefix","mergedTheme","styleHeight","mergedLines","cssVars","themeClass","onRender","render","class","height","onWheelPassive","theme","peers","Scrollbar","themeOverrides","peerOverrides","onScroll","internalNoHighlight","internalFontSize","Code","map","line","index","key","clsPrefix"],"mappings":"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","sourcesContent":["import { h, Transition, defineComponent, computed, provide, nextTick, ref, toRef } from 'vue';\nimport { throttle } from 'lodash-es';\nimport { useTheme, useHljs, useConfig, useThemeClass } from '../../_mixins';\nimport { warn } from '../../_utils';\nimport { NScrollbar } from '../../_internal';\nimport { NCode } from '../../code';\nimport { logLight } from '../styles';\nimport NLogLoader from './LogLoader';\nimport NLogLine from './LogLine';\nimport { logInjectionKey } from './context';\nimport style from './styles/index.cssr';\nconst logProps = Object.assign(Object.assign({}, useTheme.props), { loading: Boolean, trim: Boolean, log: String, fontSize: {\n        type: Number,\n        default: 14\n    }, lines: {\n        type: Array,\n        default: () => []\n    }, lineHeight: {\n        type: Number,\n        default: 1.25\n    }, language: String, rows: {\n        type: Number,\n        default: 15\n    }, offsetTop: {\n        type: Number,\n        default: 0\n    }, offsetBottom: {\n        type: Number,\n        default: 0\n    }, hljs: Object, onReachTop: Function, onReachBottom: Function, onRequireMore: Function });\nexport default defineComponent({\n    name: 'Log',\n    props: logProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const slientRef = ref(false);\n        const highlightRef = computed(() => {\n            return props.language !== undefined;\n        });\n        const styleHeightRef = computed(() => {\n            return `calc(${Math.round(props.rows * props.lineHeight * props.fontSize)}px)`;\n        });\n        const mergedLinesRef = computed(() => {\n            const { log } = props;\n            if (log) {\n                return log.split('\\n');\n            }\n            return props.lines;\n        });\n        const scrollbarRef = ref(null);\n        const themeRef = useTheme('Log', '-log', style, logLight, props, mergedClsPrefixRef);\n        function handleScroll(e) {\n            const container = e.target;\n            const content = container.firstElementChild;\n            if (slientRef.value) {\n                void nextTick(() => {\n                    slientRef.value = false;\n                });\n                return;\n            }\n            const containerHeight = container.offsetHeight;\n            const containerScrollTop = container.scrollTop;\n            const contentHeight = content.offsetHeight;\n            const scrollTop = containerScrollTop;\n            const scrollBottom = contentHeight - containerScrollTop - containerHeight;\n            if (scrollTop <= props.offsetTop) {\n                const { onReachTop, onRequireMore } = props;\n                if (onRequireMore)\n                    onRequireMore('top');\n                if (onReachTop)\n                    onReachTop();\n            }\n            if (scrollBottom <= props.offsetBottom) {\n                const { onReachBottom, onRequireMore } = props;\n                if (onRequireMore)\n                    onRequireMore('bottom');\n                if (onReachBottom)\n                    onReachBottom();\n            }\n        }\n        const handleWheel = throttle(_handleWheel, 300);\n        function _handleWheel(e) {\n            if (slientRef.value) {\n                void nextTick(() => {\n                    slientRef.value = false;\n                });\n                return;\n            }\n            if (scrollbarRef.value) {\n                const { containerRef, contentRef } = scrollbarRef.value;\n                if (containerRef && contentRef) {\n                    const containerHeight = containerRef.offsetHeight;\n                    const containerScrollTop = containerRef.scrollTop;\n                    const contentHeight = contentRef.offsetHeight;\n                    const scrollTop = containerScrollTop;\n                    const scrollBottom = contentHeight - containerScrollTop - containerHeight;\n                    const deltaY = e.deltaY;\n                    if (scrollTop === 0 && deltaY < 0) {\n                        const { onRequireMore } = props;\n                        if (onRequireMore)\n                            onRequireMore('top');\n                    }\n                    if (scrollBottom <= 0 && deltaY > 0) {\n                        const { onRequireMore } = props;\n                        if (onRequireMore)\n                            onRequireMore('bottom');\n                    }\n                }\n            }\n        }\n        function scrollTo(options) {\n            const { value: scrollbarInst } = scrollbarRef;\n            if (!scrollbarInst)\n                return;\n            const { slient, top, position } = options;\n            if (slient) {\n                slientRef.value = true;\n            }\n            if (top !== undefined) {\n                scrollbarInst.scrollTo({ left: 0, top });\n            }\n            else if (position === 'bottom' || position === 'top') {\n                scrollbarInst.scrollTo({ position });\n            }\n        }\n        // deprecated\n        function scrollToTop(slient = false) {\n            warn('log', \"`scrollToTop` is deprecated, please use `scrollTo({ position: 'top'})` instead.\");\n            scrollTo({\n                position: 'top',\n                slient\n            });\n        }\n        function scrollToBottom(slient = false) {\n            warn('log', \"`scrollToTop` is deprecated, please use `scrollTo({ position: 'bottom'})` instead.\");\n            scrollTo({\n                position: 'bottom',\n                slient\n            });\n        }\n        provide(logInjectionKey, {\n            languageRef: toRef(props, 'language'),\n            mergedHljsRef: useHljs(props, highlightRef),\n            trimRef: toRef(props, 'trim'),\n            highlightRef\n        });\n        const exportedMethods = {\n            scrollTo\n        };\n        const cssVarsRef = computed(() => {\n            const { self: { loaderFontSize, loaderTextColor, loaderColor, loaderBorder, loadingColor }, common: { cubicBezierEaseInOut } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-loader-font-size': loaderFontSize,\n                '--n-loader-border': loaderBorder,\n                '--n-loader-color': loaderColor,\n                '--n-loader-text-color': loaderTextColor,\n                '--n-loading-color': loadingColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('log', undefined, cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exportedMethods), { mergedClsPrefix: mergedClsPrefixRef, scrollbarRef, mergedTheme: themeRef, styleHeight: styleHeightRef, mergedLines: mergedLinesRef, scrollToTop,\n            scrollToBottom,\n            handleWheel,\n            handleScroll, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { mergedClsPrefix, mergedTheme, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return h('div', {\n            class: [`${mergedClsPrefix}-log`, this.themeClass],\n            style: [\n                {\n                    lineHeight: this.lineHeight,\n                    height: this.styleHeight\n                },\n                this.cssVars\n            ],\n            onWheelPassive: this.handleWheel\n        }, [\n            h(NScrollbar, { ref: \"scrollbarRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar, onScroll: this.handleScroll }, {\n                default: () => (h(NCode, { internalNoHighlight: true, internalFontSize: this.fontSize, theme: mergedTheme.peers.Code, themeOverrides: mergedTheme.peerOverrides.Code }, {\n                    default: () => this.mergedLines.map((line, index) => {\n                        return h(NLogLine, { key: index, line: line });\n                    })\n                }))\n            }),\n            h(Transition, { name: \"fade-in-scale-up-transition\" }, {\n                default: () => this.loading ? h(NLogLoader, { clsPrefix: mergedClsPrefix }) : null\n            })\n        ]);\n    }\n});\n"]},"metadata":{},"sourceType":"module"}