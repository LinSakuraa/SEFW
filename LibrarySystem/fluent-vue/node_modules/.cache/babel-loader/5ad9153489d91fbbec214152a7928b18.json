{"ast":null,"code":"import { h, ref, toRef, isProxy, toRaw, computed, defineComponent, inject, provide, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { createId } from 'seemly';\nimport { RemoveIcon, AddIcon, ArrowDownIcon, ArrowUpIcon } from '../../_internal/icons';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { NBaseIcon } from '../../_internal';\nimport { NButton, NButtonGroup } from '../../button';\nimport { useTheme, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, warnOnce, resolveSlotWithProps, resolveSlot } from '../../_utils';\nimport { dynamicInputLight } from '../styles';\nimport NDynamicInputInputPreset from './InputPreset';\nimport NDynamicInputPairPreset from './PairPreset';\nimport { dynamicInputInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nconst globalDataKeyMap = new WeakMap();\nconst dynamicInputProps = Object.assign(Object.assign({}, useTheme.props), {\n  max: Number,\n  min: {\n    type: Number,\n    default: 0\n  },\n  value: Array,\n  // TODO: make it robust for different types\n  defaultValue: {\n    type: Array,\n    default: () => []\n  },\n  preset: {\n    type: String,\n    default: 'input'\n  },\n  keyField: String,\n  itemStyle: [String, Object],\n  // for preset pair\n  keyPlaceholder: {\n    type: String,\n    default: ''\n  },\n  valuePlaceholder: {\n    type: String,\n    default: ''\n  },\n  // for preset input\n  placeholder: {\n    type: String,\n    default: ''\n  },\n  showSortButton: Boolean,\n  createButtonProps: Object,\n  onCreate: Function,\n  onRemove: Function,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  // deprecated\n  onClear: Function,\n  onInput: [Function, Array]\n});\nexport default defineComponent({\n  name: 'DynamicInput',\n  props: dynamicInputProps,\n\n  setup(props, {\n    slots\n  }) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onClear !== undefined) {\n          warnOnce('dynamic-input', '`on-clear` is deprecated, it is out of usage anymore.');\n        }\n\n        if (props.onInput !== undefined) {\n          warnOnce('dynamic-input', '`on-input` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedComponentPropsRef,\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig();\n    const NFormItem = inject(formItemInjectionKey, null);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const themeRef = useTheme('DynamicInput', '-dynamic-input', style, dynamicInputLight, props, mergedClsPrefixRef);\n    const insertionDisabledRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n\n      if (Array.isArray(mergedValue)) {\n        const {\n          max\n        } = props;\n        return max !== undefined && mergedValue.length >= max;\n      }\n\n      return false;\n    });\n    const removeDisabledRef = computed(() => {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (Array.isArray(mergedValue)) return mergedValue.length <= props.min;\n      return true;\n    });\n    const buttonSizeRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.DynamicInput) === null || _b === void 0 ? void 0 : _b.buttonSize;\n    });\n\n    function doUpdateValue(value) {\n      const {\n        onInput,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      if (onInput) call(onInput, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n    }\n\n    function ensureKey(value, index) {\n      if (value === undefined || value === null) return index;\n      if (typeof value !== 'object') return index;\n      const rawValue = isProxy(value) ? toRaw(value) : value;\n      let key = globalDataKeyMap.get(rawValue);\n\n      if (key === undefined) {\n        globalDataKeyMap.set(rawValue, key = createId());\n      }\n\n      return key;\n    }\n\n    function handleValueChange(index, value) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n      const originalItem = newValue[index];\n      newValue[index] = value; // update dataKeyMap\n\n      if (originalItem && value && typeof originalItem === 'object' && typeof value === 'object') {\n        const rawOriginal = isProxy(originalItem) ? toRaw(originalItem) : originalItem;\n        const rawNew = isProxy(value) ? toRaw(value) : value; // inherit key is value position is not change\n\n        const originalKey = globalDataKeyMap.get(rawOriginal);\n\n        if (originalKey !== undefined) {\n          globalDataKeyMap.set(rawNew, originalKey);\n        }\n      }\n\n      doUpdateValue(newValue);\n    }\n\n    function handleCreateClick() {\n      createItem(0);\n    }\n\n    function createItem(index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        onCreate\n      } = props;\n      const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n\n      if (onCreate) {\n        newValue.splice(index + 1, 0, onCreate(index + 1));\n        doUpdateValue(newValue);\n      } else if (slots.default) {\n        newValue.splice(index + 1, 0, null);\n        doUpdateValue(newValue);\n      } else {\n        switch (props.preset) {\n          case 'input':\n            newValue.splice(index + 1, 0, '');\n            doUpdateValue(newValue);\n            break;\n\n          case 'pair':\n            newValue.splice(index + 1, 0, {\n              key: '',\n              value: ''\n            });\n            doUpdateValue(newValue);\n            break;\n        }\n      }\n    }\n\n    function remove(index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue)) return;\n      const {\n        min\n      } = props;\n      if (mergedValue.length <= min) return;\n      const newValue = Array.from(mergedValue);\n      newValue.splice(index, 1);\n      doUpdateValue(newValue);\n      const {\n        onRemove\n      } = props;\n      if (onRemove) onRemove(index);\n    }\n\n    function swap(array, currentIndex, targetIndex) {\n      if (currentIndex < 0 || targetIndex < 0 || currentIndex >= array.length || targetIndex >= array.length) {\n        return;\n      }\n\n      if (currentIndex === targetIndex) return;\n      const currentItem = array[currentIndex];\n      array[currentIndex] = array[targetIndex];\n      array[targetIndex] = currentItem;\n    }\n\n    function move(type, index) {\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      if (!Array.isArray(mergedValue)) return;\n      const newValue = Array.from(mergedValue);\n\n      if (type === 'up') {\n        swap(newValue, index, index - 1);\n      }\n\n      if (type === 'down') {\n        swap(newValue, index, index + 1);\n      }\n\n      doUpdateValue(newValue);\n    }\n\n    provide(dynamicInputInjectionKey, {\n      mergedThemeRef: themeRef,\n      keyPlaceholderRef: toRef(props, 'keyPlaceholder'),\n      valuePlaceholderRef: toRef(props, 'valuePlaceholder'),\n      placeholderRef: toRef(props, 'placeholder')\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          actionMargin\n        }\n      } = themeRef.value;\n      return {\n        '--action-margin': actionMargin\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('dynamic-input', undefined, cssVarsRef, props) : undefined;\n    return {\n      locale: useLocale('DynamicInput').localeRef,\n      buttonSize: buttonSizeRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      NFormItem,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      insertionDisabled: insertionDisabledRef,\n      removeDisabled: removeDisabledRef,\n      handleCreateClick,\n      ensureKey,\n      handleValueChange,\n      remove,\n      move,\n      createItem,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      buttonSize,\n      mergedClsPrefix,\n      mergedValue,\n      locale,\n      mergedTheme,\n      keyField,\n      itemStyle,\n      preset,\n      showSortButton,\n      NFormItem,\n      ensureKey,\n      handleValueChange,\n      remove,\n      createItem,\n      move,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-dynamic-input`, this.themeClass],\n      style: this.cssVars\n    }, !Array.isArray(mergedValue) || mergedValue.length === 0 ? h(NButton, Object.assign({\n      block: true,\n      ghost: true,\n      dashed: true,\n      size: buttonSize\n    }, this.createButtonProps, {\n      disabled: this.insertionDisabled,\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      onClick: this.handleCreateClick\n    }), {\n      default: () => resolveSlot($slots['create-button-default'], () => [locale.create]),\n      icon: () => resolveSlot($slots['create-button-icon'], () => [h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => h(AddIcon, null)\n      })])\n    }) : mergedValue.map((_, index) => h(\"div\", {\n      key: keyField ? _[keyField] : ensureKey(_, index),\n      \"data-key\": keyField ? _[keyField] : ensureKey(_, index),\n      class: `${mergedClsPrefix}-dynamic-input-item`,\n      style: itemStyle\n    }, resolveSlotWithProps($slots.default, {\n      value: mergedValue[index],\n      index\n    }, () => {\n      return [preset === 'input' ? h(NDynamicInputInputPreset, {\n        clsPrefix: mergedClsPrefix,\n        value: mergedValue[index],\n        parentPath: NFormItem ? NFormItem.path.value : undefined,\n        path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value) ? `${NFormItem.path.value}[${index}]` : undefined,\n        onUpdateValue: v => handleValueChange(index, v)\n      }) : preset === 'pair' ? h(NDynamicInputPairPreset, {\n        clsPrefix: mergedClsPrefix,\n        value: mergedValue[index],\n        parentPath: NFormItem ? NFormItem.path.value : undefined,\n        path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value) ? `${NFormItem.path.value}[${index}]` : undefined,\n        onUpdateValue: v => handleValueChange(index, v)\n      }) : null];\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-dynamic-input-item__action`\n    }, h(NButtonGroup, {\n      size: buttonSize\n    }, {\n      default: () => [h(NButton, {\n        disabled: this.removeDisabled,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        circle: true,\n        onClick: () => remove(index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(RemoveIcon, null)\n        })\n      }), h(NButton, {\n        disabled: this.insertionDisabled,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => createItem(index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(AddIcon, null)\n        })\n      }), showSortButton ? h(NButton, {\n        disabled: index === 0,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => move('up', index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(ArrowUpIcon, null)\n        })\n      }) : null, showSortButton ? h(NButton, {\n        disabled: index === mergedValue.length - 1,\n        circle: true,\n        theme: mergedTheme.peers.Button,\n        themeOverrides: mergedTheme.peerOverrides.Button,\n        onClick: () => move('down', index)\n      }, {\n        icon: () => h(NBaseIcon, {\n          clsPrefix: mergedClsPrefix\n        }, {\n          default: () => h(ArrowDownIcon, null)\n        })\n      }) : null]\n    })))));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dynamic-input/src/DynamicInput.js"],"names":["h","ref","toRef","isProxy","toRaw","computed","defineComponent","inject","provide","watchEffect","useMergedState","createId","RemoveIcon","AddIcon","ArrowDownIcon","ArrowUpIcon","formItemInjectionKey","NBaseIcon","NButton","NButtonGroup","useTheme","useLocale","useConfig","useThemeClass","call","warnOnce","resolveSlotWithProps","resolveSlot","dynamicInputLight","NDynamicInputInputPreset","NDynamicInputPairPreset","dynamicInputInjectionKey","style","globalDataKeyMap","WeakMap","dynamicInputProps","Object","assign","props","max","Number","min","type","default","value","Array","defaultValue","preset","String","keyField","itemStyle","keyPlaceholder","valuePlaceholder","placeholder","showSortButton","Boolean","createButtonProps","onCreate","Function","onRemove","onUpdateValue","onClear","onInput","name","setup","slots","process","env","NODE_ENV","undefined","mergedComponentPropsRef","mergedClsPrefixRef","inlineThemeDisabled","NFormItem","uncontrolledValueRef","controlledValueRef","mergedValueRef","themeRef","insertionDisabledRef","mergedValue","isArray","length","removeDisabledRef","buttonSizeRef","_a","_b","DynamicInput","buttonSize","doUpdateValue","_onUpdateValue","ensureKey","index","rawValue","key","get","set","handleValueChange","newValue","from","originalItem","rawOriginal","rawNew","originalKey","handleCreateClick","createItem","splice","remove","swap","array","currentIndex","targetIndex","currentItem","move","mergedThemeRef","keyPlaceholderRef","valuePlaceholderRef","placeholderRef","cssVarsRef","self","actionMargin","themeClassHandle","locale","localeRef","mergedClsPrefix","uncontrolledValue","insertionDisabled","removeDisabled","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","block","ghost","dashed","size","disabled","theme","peers","Button","themeOverrides","peerOverrides","onClick","create","icon","clsPrefix","map","_","parentPath","path","v","circle"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,KAAjB,EAAwBC,OAAxB,EAAiCC,KAAjC,EAAwCC,QAAxC,EAAkDC,eAAlD,EAAmEC,MAAnE,EAA2EC,OAA3E,EAAoFC,WAApF,QAAuG,KAAvG;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,aAA9B,EAA6CC,WAA7C,QAAgE,uBAAhE;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,OAAT,EAAkBC,YAAlB,QAAsC,cAAtC;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,SAA9B,EAAyCC,aAAzC,QAA8D,eAA9D;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,oBAAzB,EAA+CC,WAA/C,QAAkE,cAAlE;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,OAAOC,wBAAP,MAAqC,eAArC;AACA,OAAOC,uBAAP,MAAoC,cAApC;AACA,SAASC,wBAAT,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,MAAMC,gBAAgB,GAAG,IAAIC,OAAJ,EAAzB;AACA,MAAMC,iBAAiB,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,QAAQ,CAACkB,KAA3B,CAAd,EAAiD;AAAEC,EAAAA,GAAG,EAAEC,MAAP;AAAeC,EAAAA,GAAG,EAAE;AACvFC,IAAAA,IAAI,EAAEF,MADiF;AAEvFG,IAAAA,OAAO,EAAE;AAF8E,GAApB;AAGpEC,EAAAA,KAAK,EAAEC,KAH6D;AAIvE;AACAC,EAAAA,YAAY,EAAE;AACVJ,IAAAA,IAAI,EAAEG,KADI;AAEVF,IAAAA,OAAO,EAAE,MAAM;AAFL,GALyD;AAQpEI,EAAAA,MAAM,EAAE;AACPL,IAAAA,IAAI,EAAEM,MADC;AAEPL,IAAAA,OAAO,EAAE;AAFF,GAR4D;AAWpEM,EAAAA,QAAQ,EAAED,MAX0D;AAWlDE,EAAAA,SAAS,EAAE,CAACF,MAAD,EAASZ,MAAT,CAXuC;AAYvE;AACAe,EAAAA,cAAc,EAAE;AACZT,IAAAA,IAAI,EAAEM,MADM;AAEZL,IAAAA,OAAO,EAAE;AAFG,GAbuD;AAgBpES,EAAAA,gBAAgB,EAAE;AACjBV,IAAAA,IAAI,EAAEM,MADW;AAEjBL,IAAAA,OAAO,EAAE;AAFQ,GAhBkD;AAoBvE;AACAU,EAAAA,WAAW,EAAE;AACTX,IAAAA,IAAI,EAAEM,MADG;AAETL,IAAAA,OAAO,EAAE;AAFA,GArB0D;AAwBpEW,EAAAA,cAAc,EAAEC,OAxBoD;AAwB3CC,EAAAA,iBAAiB,EAAEpB,MAxBwB;AAwBhBqB,EAAAA,QAAQ,EAAEC,QAxBM;AAwBIC,EAAAA,QAAQ,EAAED,QAxBd;AAwBwB,oBAAkB,CAACA,QAAD,EAAWb,KAAX,CAxB1C;AAwB6De,EAAAA,aAAa,EAAE,CAACF,QAAD,EAAWb,KAAX,CAxB5E;AAyBvE;AACAgB,EAAAA,OAAO,EAAEH,QA1B8D;AA0BpDI,EAAAA,OAAO,EAAE,CAACJ,QAAD,EAAWb,KAAX;AA1B2C,CAAjD,CAA1B;AA2BA,eAAevC,eAAe,CAAC;AAC3ByD,EAAAA,IAAI,EAAE,cADqB;AAE3BzB,EAAAA,KAAK,EAAEH,iBAFoB;;AAG3B6B,EAAAA,KAAK,CAAC1B,KAAD,EAAQ;AAAE2B,IAAAA;AAAF,GAAR,EAAmB;AACpB,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvC3D,MAAAA,WAAW,CAAC,MAAM;AACd,YAAI6B,KAAK,CAACuB,OAAN,KAAkBQ,SAAtB,EAAiC;AAC7B5C,UAAAA,QAAQ,CAAC,eAAD,EAAkB,uDAAlB,CAAR;AACH;;AACD,YAAIa,KAAK,CAACwB,OAAN,KAAkBO,SAAtB,EAAiC;AAC7B5C,UAAAA,QAAQ,CAAC,eAAD,EAAkB,iEAAlB,CAAR;AACH;AACJ,OAPU,CAAX;AAQH;;AACD,UAAM;AAAE6C,MAAAA,uBAAF;AAA2BC,MAAAA,kBAA3B;AAA+CC,MAAAA;AAA/C,QAAuElD,SAAS,EAAtF;AACA,UAAMmD,SAAS,GAAGlE,MAAM,CAACS,oBAAD,EAAuB,IAAvB,CAAxB;AACA,UAAM0D,oBAAoB,GAAGzE,GAAG,CAACqC,KAAK,CAACQ,YAAP,CAAhC;AACA,UAAM6B,kBAAkB,GAAGzE,KAAK,CAACoC,KAAD,EAAQ,OAAR,CAAhC;AACA,UAAMsC,cAAc,GAAGlE,cAAc,CAACiE,kBAAD,EAAqBD,oBAArB,CAArC;AACA,UAAMG,QAAQ,GAAGzD,QAAQ,CAAC,cAAD,EAAiB,gBAAjB,EAAmCY,KAAnC,EAA0CJ,iBAA1C,EAA6DU,KAA7D,EAAoEiC,kBAApE,CAAzB;AACA,UAAMO,oBAAoB,GAAGzE,QAAQ,CAAC,MAAM;AACxC,YAAM;AAAEuC,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;;AACA,UAAI/B,KAAK,CAACmC,OAAN,CAAcD,WAAd,CAAJ,EAAgC;AAC5B,cAAM;AAAExC,UAAAA;AAAF,YAAUD,KAAhB;AACA,eAAOC,GAAG,KAAK8B,SAAR,IAAqBU,WAAW,CAACE,MAAZ,IAAsB1C,GAAlD;AACH;;AACD,aAAO,KAAP;AACH,KAPoC,CAArC;AAQA,UAAM2C,iBAAiB,GAAG7E,QAAQ,CAAC,MAAM;AACrC,YAAM;AAAEuC,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;AACA,UAAI/B,KAAK,CAACmC,OAAN,CAAcD,WAAd,CAAJ,EACI,OAAOA,WAAW,CAACE,MAAZ,IAAsB3C,KAAK,CAACG,GAAnC;AACJ,aAAO,IAAP;AACH,KALiC,CAAlC;AAMA,UAAM0C,aAAa,GAAG9E,QAAQ,CAAC,MAAM;AACjC,UAAI+E,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGd,uBAAuB,KAAK,IAA5B,IAAoCA,uBAAuB,KAAK,KAAK,CAArE,GAAyE,KAAK,CAA9E,GAAkFA,uBAAuB,CAAC1B,KAAhH,MAA2H,IAA3H,IAAmIwC,EAAE,KAAK,KAAK,CAA/I,GAAmJ,KAAK,CAAxJ,GAA4JA,EAAE,CAACE,YAArK,MAAuL,IAAvL,IAA+LD,EAAE,KAAK,KAAK,CAA3M,GAA+M,KAAK,CAApN,GAAwNA,EAAE,CAACE,UAAlO;AACH,KAH6B,CAA9B;;AAIA,aAASC,aAAT,CAAuB5C,KAAvB,EAA8B;AAC1B,YAAM;AAAEkB,QAAAA,OAAF;AAAW,0BAAkB2B,cAA7B;AAA6C7B,QAAAA;AAA7C,UAA+DtB,KAArE;AACA,UAAIwB,OAAJ,EACItC,IAAI,CAACsC,OAAD,EAAUlB,KAAV,CAAJ;AACJ,UAAI6C,cAAJ,EACIjE,IAAI,CAACiE,cAAD,EAAiB7C,KAAjB,CAAJ;AACJ,UAAIgB,aAAJ,EACIpC,IAAI,CAACoC,aAAD,EAAgBhB,KAAhB,CAAJ;AACJ8B,MAAAA,oBAAoB,CAAC9B,KAArB,GAA6BA,KAA7B;AACH;;AACD,aAAS8C,SAAT,CAAmB9C,KAAnB,EAA0B+C,KAA1B,EAAiC;AAC7B,UAAI/C,KAAK,KAAKyB,SAAV,IAAuBzB,KAAK,KAAK,IAArC,EACI,OAAO+C,KAAP;AACJ,UAAI,OAAO/C,KAAP,KAAiB,QAArB,EACI,OAAO+C,KAAP;AACJ,YAAMC,QAAQ,GAAGzF,OAAO,CAACyC,KAAD,CAAP,GAAiBxC,KAAK,CAACwC,KAAD,CAAtB,GAAgCA,KAAjD;AACA,UAAIiD,GAAG,GAAG5D,gBAAgB,CAAC6D,GAAjB,CAAqBF,QAArB,CAAV;;AACA,UAAIC,GAAG,KAAKxB,SAAZ,EAAuB;AACnBpC,QAAAA,gBAAgB,CAAC8D,GAAjB,CAAqBH,QAArB,EAAgCC,GAAG,GAAGlF,QAAQ,EAA9C;AACH;;AACD,aAAOkF,GAAP;AACH;;AACD,aAASG,iBAAT,CAA2BL,KAA3B,EAAkC/C,KAAlC,EAAyC;AACrC,YAAM;AAAEA,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;AACA,YAAMqB,QAAQ,GAAGpD,KAAK,CAACqD,IAAN,CAAWnB,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+D,EAA1E,CAAjB;AACA,YAAMoB,YAAY,GAAGF,QAAQ,CAACN,KAAD,CAA7B;AACAM,MAAAA,QAAQ,CAACN,KAAD,CAAR,GAAkB/C,KAAlB,CAJqC,CAKrC;;AACA,UAAIuD,YAAY,IACZvD,KADA,IAEA,OAAOuD,YAAP,KAAwB,QAFxB,IAGA,OAAOvD,KAAP,KAAiB,QAHrB,EAG+B;AAC3B,cAAMwD,WAAW,GAAGjG,OAAO,CAACgG,YAAD,CAAP,GACd/F,KAAK,CAAC+F,YAAD,CADS,GAEdA,YAFN;AAGA,cAAME,MAAM,GAAGlG,OAAO,CAACyC,KAAD,CAAP,GAAiBxC,KAAK,CAACwC,KAAD,CAAtB,GAAgCA,KAA/C,CAJ2B,CAK3B;;AACA,cAAM0D,WAAW,GAAGrE,gBAAgB,CAAC6D,GAAjB,CAAqBM,WAArB,CAApB;;AACA,YAAIE,WAAW,KAAKjC,SAApB,EAA+B;AAC3BpC,UAAAA,gBAAgB,CAAC8D,GAAjB,CAAqBM,MAArB,EAA6BC,WAA7B;AACH;AACJ;;AACDd,MAAAA,aAAa,CAACS,QAAD,CAAb;AACH;;AACD,aAASM,iBAAT,GAA6B;AACzBC,MAAAA,UAAU,CAAC,CAAD,CAAV;AACH;;AACD,aAASA,UAAT,CAAoBb,KAApB,EAA2B;AACvB,YAAM;AAAE/C,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;AACA,YAAM;AAAEnB,QAAAA;AAAF,UAAenB,KAArB;AACA,YAAM2D,QAAQ,GAAGpD,KAAK,CAACqD,IAAN,CAAWnB,WAAW,KAAK,IAAhB,IAAwBA,WAAW,KAAK,KAAK,CAA7C,GAAiDA,WAAjD,GAA+D,EAA1E,CAAjB;;AACA,UAAItB,QAAJ,EAAc;AACVwC,QAAAA,QAAQ,CAACQ,MAAT,CAAgBd,KAAK,GAAG,CAAxB,EAA2B,CAA3B,EAA8BlC,QAAQ,CAACkC,KAAK,GAAG,CAAT,CAAtC;AACAH,QAAAA,aAAa,CAACS,QAAD,CAAb;AACH,OAHD,MAIK,IAAIhC,KAAK,CAACtB,OAAV,EAAmB;AACpBsD,QAAAA,QAAQ,CAACQ,MAAT,CAAgBd,KAAK,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,IAA9B;AACAH,QAAAA,aAAa,CAACS,QAAD,CAAb;AACH,OAHI,MAIA;AACD,gBAAQ3D,KAAK,CAACS,MAAd;AACI,eAAK,OAAL;AACIkD,YAAAA,QAAQ,CAACQ,MAAT,CAAgBd,KAAK,GAAG,CAAxB,EAA2B,CAA3B,EAA8B,EAA9B;AACAH,YAAAA,aAAa,CAACS,QAAD,CAAb;AACA;;AACJ,eAAK,MAAL;AACIA,YAAAA,QAAQ,CAACQ,MAAT,CAAgBd,KAAK,GAAG,CAAxB,EAA2B,CAA3B,EAA8B;AAAEE,cAAAA,GAAG,EAAE,EAAP;AAAWjD,cAAAA,KAAK,EAAE;AAAlB,aAA9B;AACA4C,YAAAA,aAAa,CAACS,QAAD,CAAb;AACA;AARR;AAUH;AACJ;;AACD,aAASS,MAAT,CAAgBf,KAAhB,EAAuB;AACnB,YAAM;AAAE/C,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;AACA,UAAI,CAAC/B,KAAK,CAACmC,OAAN,CAAcD,WAAd,CAAL,EACI;AACJ,YAAM;AAAEtC,QAAAA;AAAF,UAAUH,KAAhB;AACA,UAAIyC,WAAW,CAACE,MAAZ,IAAsBxC,GAA1B,EACI;AACJ,YAAMwD,QAAQ,GAAGpD,KAAK,CAACqD,IAAN,CAAWnB,WAAX,CAAjB;AACAkB,MAAAA,QAAQ,CAACQ,MAAT,CAAgBd,KAAhB,EAAuB,CAAvB;AACAH,MAAAA,aAAa,CAACS,QAAD,CAAb;AACA,YAAM;AAAEtC,QAAAA;AAAF,UAAerB,KAArB;AACA,UAAIqB,QAAJ,EACIA,QAAQ,CAACgC,KAAD,CAAR;AACP;;AACD,aAASgB,IAAT,CAAcC,KAAd,EAAqBC,YAArB,EAAmCC,WAAnC,EAAgD;AAC5C,UAAID,YAAY,GAAG,CAAf,IACAC,WAAW,GAAG,CADd,IAEAD,YAAY,IAAID,KAAK,CAAC3B,MAFtB,IAGA6B,WAAW,IAAIF,KAAK,CAAC3B,MAHzB,EAGiC;AAC7B;AACH;;AACD,UAAI4B,YAAY,KAAKC,WAArB,EACI;AACJ,YAAMC,WAAW,GAAGH,KAAK,CAACC,YAAD,CAAzB;AACAD,MAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACE,WAAD,CAA3B;AACAF,MAAAA,KAAK,CAACE,WAAD,CAAL,GAAqBC,WAArB;AACH;;AACD,aAASC,IAAT,CAActE,IAAd,EAAoBiD,KAApB,EAA2B;AACvB,YAAM;AAAE/C,QAAAA,KAAK,EAAEmC;AAAT,UAAyBH,cAA/B;AACA,UAAI,CAAC/B,KAAK,CAACmC,OAAN,CAAcD,WAAd,CAAL,EACI;AACJ,YAAMkB,QAAQ,GAAGpD,KAAK,CAACqD,IAAN,CAAWnB,WAAX,CAAjB;;AACA,UAAIrC,IAAI,KAAK,IAAb,EAAmB;AACfiE,QAAAA,IAAI,CAACV,QAAD,EAAWN,KAAX,EAAkBA,KAAK,GAAG,CAA1B,CAAJ;AACH;;AACD,UAAIjD,IAAI,KAAK,MAAb,EAAqB;AACjBiE,QAAAA,IAAI,CAACV,QAAD,EAAWN,KAAX,EAAkBA,KAAK,GAAG,CAA1B,CAAJ;AACH;;AACDH,MAAAA,aAAa,CAACS,QAAD,CAAb;AACH;;AACDzF,IAAAA,OAAO,CAACuB,wBAAD,EAA2B;AAC9BkF,MAAAA,cAAc,EAAEpC,QADc;AAE9BqC,MAAAA,iBAAiB,EAAEhH,KAAK,CAACoC,KAAD,EAAQ,gBAAR,CAFM;AAG9B6E,MAAAA,mBAAmB,EAAEjH,KAAK,CAACoC,KAAD,EAAQ,kBAAR,CAHI;AAI9B8E,MAAAA,cAAc,EAAElH,KAAK,CAACoC,KAAD,EAAQ,aAAR;AAJS,KAA3B,CAAP;AAMA,UAAM+E,UAAU,GAAGhH,QAAQ,CAAC,MAAM;AAC9B,YAAM;AAAEiH,QAAAA,IAAI,EAAE;AAAEC,UAAAA;AAAF;AAAR,UAA6B1C,QAAQ,CAACjC,KAA5C;AACA,aAAO;AACH,2BAAmB2E;AADhB,OAAP;AAGH,KAL0B,CAA3B;AAMA,UAAMC,gBAAgB,GAAGhD,mBAAmB,GACtCjD,aAAa,CAAC,eAAD,EAAkB8C,SAAlB,EAA6BgD,UAA7B,EAAyC/E,KAAzC,CADyB,GAEtC+B,SAFN;AAGA,WAAO;AACHoD,MAAAA,MAAM,EAAEpG,SAAS,CAAC,cAAD,CAAT,CAA0BqG,SAD/B;AAEHnC,MAAAA,UAAU,EAAEJ,aAFT;AAGHwC,MAAAA,eAAe,EAAEpD,kBAHd;AAIHE,MAAAA,SAJG;AAKHmD,MAAAA,iBAAiB,EAAElD,oBALhB;AAMHK,MAAAA,WAAW,EAAEH,cANV;AAOHiD,MAAAA,iBAAiB,EAAE/C,oBAPhB;AAQHgD,MAAAA,cAAc,EAAE5C,iBARb;AASHqB,MAAAA,iBATG;AAUHb,MAAAA,SAVG;AAWHM,MAAAA,iBAXG;AAYHU,MAAAA,MAZG;AAaHM,MAAAA,IAbG;AAcHR,MAAAA,UAdG;AAeHuB,MAAAA,WAAW,EAAElD,QAfV;AAgBHmD,MAAAA,OAAO,EAAExD,mBAAmB,GAAGH,SAAH,GAAegD,UAhBxC;AAiBHY,MAAAA,UAAU,EAAET,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACS,UAjB9F;AAkBHC,MAAAA,QAAQ,EAAEV,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACU;AAlB5F,KAAP;AAoBH,GAzL0B;;AA0L3BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,MAAF;AAAU7C,MAAAA,UAAV;AAAsBoC,MAAAA,eAAtB;AAAuC5C,MAAAA,WAAvC;AAAoD0C,MAAAA,MAApD;AAA4DM,MAAAA,WAA5D;AAAyE9E,MAAAA,QAAzE;AAAmFC,MAAAA,SAAnF;AAA8FH,MAAAA,MAA9F;AAAsGO,MAAAA,cAAtG;AAAsHmB,MAAAA,SAAtH;AAAiIiB,MAAAA,SAAjI;AAA4IM,MAAAA,iBAA5I;AAA+JU,MAAAA,MAA/J;AAAuKF,MAAAA,UAAvK;AAAmLQ,MAAAA,IAAnL;AAAyLkB,MAAAA;AAAzL,QAAsM,IAA5M;AACAA,IAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,EAA5D;AACA,WAAQlI,CAAC,CAAC,KAAD,EAAQ;AAAEqI,MAAAA,KAAK,EAAE,CAAE,GAAEV,eAAgB,gBAApB,EAAqC,KAAKM,UAA1C,CAAT;AAAgEjG,MAAAA,KAAK,EAAE,KAAKgG;AAA5E,KAAR,EAA+F,CAACnF,KAAK,CAACmC,OAAN,CAAcD,WAAd,CAAD,IAA+BA,WAAW,CAACE,MAAZ,KAAuB,CAAtD,GAA2DjF,CAAC,CAACkB,OAAD,EAAUkB,MAAM,CAACC,MAAP,CAAc;AAAEiG,MAAAA,KAAK,EAAE,IAAT;AAAeC,MAAAA,KAAK,EAAE,IAAtB;AAA4BC,MAAAA,MAAM,EAAE,IAApC;AAA0CC,MAAAA,IAAI,EAAElD;AAAhD,KAAd,EAA4E,KAAK/B,iBAAjF,EAAoG;AAAEkF,MAAAA,QAAQ,EAAE,KAAKb,iBAAjB;AAAoCc,MAAAA,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBC,MAA7D;AAAqEC,MAAAA,cAAc,EAAEf,WAAW,CAACgB,aAAZ,CAA0BF,MAA/G;AAAuHG,MAAAA,OAAO,EAAE,KAAKzC;AAArI,KAApG,CAAV,EAAyQ;AACza5D,MAAAA,OAAO,EAAE,MAAMhB,WAAW,CAACyG,MAAM,CAAC,uBAAD,CAAP,EAAkC,MAAM,CAC9DX,MAAM,CAACwB,MADuD,CAAxC,CAD+Y;AAIzaC,MAAAA,IAAI,EAAE,MAAMvH,WAAW,CAACyG,MAAM,CAAC,oBAAD,CAAP,EAA+B,MAAM,CACxDpI,CAAC,CAACiB,SAAD,EAAY;AAAEkI,QAAAA,SAAS,EAAExB;AAAb,OAAZ,EAA4C;AAAEhF,QAAAA,OAAO,EAAE,MAAM3C,CAAC,CAACa,OAAD,EAAU,IAAV;AAAlB,OAA5C,CADuD,CAArC;AAJkZ,KAAzQ,CAA5D,GAOjGkE,WAAW,CAACqE,GAAZ,CAAgB,CAACC,CAAD,EAAI1D,KAAJ,KAAe3F,CAAC,CAAC,KAAD,EAAQ;AAAE6F,MAAAA,GAAG,EAAE5C,QAAQ,GAAGoG,CAAC,CAACpG,QAAD,CAAJ,GAAiByC,SAAS,CAAC2D,CAAD,EAAI1D,KAAJ,CAAzC;AAAqD,kBAAY1C,QAAQ,GAAGoG,CAAC,CAACpG,QAAD,CAAJ,GAAiByC,SAAS,CAAC2D,CAAD,EAAI1D,KAAJ,CAAnG;AAA+G0C,MAAAA,KAAK,EAAG,GAAEV,eAAgB,qBAAzI;AAA+J3F,MAAAA,KAAK,EAAEkB;AAAtK,KAAR,EACnCxB,oBAAoB,CAAC0G,MAAM,CAACzF,OAAR,EAAiB;AACjCC,MAAAA,KAAK,EAAEmC,WAAW,CAACY,KAAD,CADe;AAEjCA,MAAAA;AAFiC,KAAjB,EAGjB,MAAM;AACL,aAAO,CACH5C,MAAM,KAAK,OAAX,GAAsB/C,CAAC,CAAC6B,wBAAD,EAA2B;AAAEsH,QAAAA,SAAS,EAAExB,eAAb;AAA8B/E,QAAAA,KAAK,EAAEmC,WAAW,CAACY,KAAD,CAAhD;AAAyD2D,QAAAA,UAAU,EAAE7E,SAAS,GAAGA,SAAS,CAAC8E,IAAV,CAAe3G,KAAlB,GAA0ByB,SAAxG;AAAmHkF,QAAAA,IAAI,EAAE,CAAC9E,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC8E,IAAV,CAAe3G,KAAtE,IAChK,GAAE6B,SAAS,CAAC8E,IAAV,CAAe3G,KAAM,IAAG+C,KAAM,GADgI,GAEjKtB,SAFwC;AAE7BT,QAAAA,aAAa,EAAG4F,CAAD,IAAOxD,iBAAiB,CAACL,KAAD,EAAQ6D,CAAR;AAFV,OAA3B,CAAvB,GAE6EzG,MAAM,KAAK,MAAX,GAAqB/C,CAAC,CAAC8B,uBAAD,EAA0B;AAAEqH,QAAAA,SAAS,EAAExB,eAAb;AAA8B/E,QAAAA,KAAK,EAAEmC,WAAW,CAACY,KAAD,CAAhD;AAAyD2D,QAAAA,UAAU,EAAE7E,SAAS,GAAGA,SAAS,CAAC8E,IAAV,CAAe3G,KAAlB,GAA0ByB,SAAxG;AAAmHkF,QAAAA,IAAI,EAAE,CAAC9E,SAAS,KAAK,IAAd,IAAsBA,SAAS,KAAK,KAAK,CAAzC,GAA6C,KAAK,CAAlD,GAAsDA,SAAS,CAAC8E,IAAV,CAAe3G,KAAtE,IAC3O,GAAE6B,SAAS,CAAC8E,IAAV,CAAe3G,KAAM,IAAG+C,KAAM,GAD2M,GAE5OtB,SAFmH;AAExGT,QAAAA,aAAa,EAAG4F,CAAD,IAAOxD,iBAAiB,CAACL,KAAD,EAAQ6D,CAAR;AAFiE,OAA1B,CAAtB,GAEA,IAL1E,CAAP;AAOH,KAXmB,CADe,EAanCxJ,CAAC,CAAC,KAAD,EAAQ;AAAEqI,MAAAA,KAAK,EAAG,GAAEV,eAAgB;AAA5B,KAAR,EACG3H,CAAC,CAACmB,YAAD,EAAe;AAAEsH,MAAAA,IAAI,EAAElD;AAAR,KAAf,EAAqC;AAClC5C,MAAAA,OAAO,EAAE,MAAM,CACX3C,CAAC,CAACkB,OAAD,EAAU;AAAEwH,QAAAA,QAAQ,EAAE,KAAKZ,cAAjB;AAAiCa,QAAAA,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBC,MAA1D;AAAkEC,QAAAA,cAAc,EAAEf,WAAW,CAACgB,aAAZ,CAA0BF,MAA5G;AAAoHY,QAAAA,MAAM,EAAE,IAA5H;AAAkIT,QAAAA,OAAO,EAAE,MAAMtC,MAAM,CAACf,KAAD;AAAvJ,OAAV,EAA4K;AACzKuD,QAAAA,IAAI,EAAE,MAAOlJ,CAAC,CAACiB,SAAD,EAAY;AAAEkI,UAAAA,SAAS,EAAExB;AAAb,SAAZ,EAA4C;AAAEhF,UAAAA,OAAO,EAAE,MAAM3C,CAAC,CAACY,UAAD,EAAa,IAAb;AAAlB,SAA5C;AAD2J,OAA5K,CADU,EAIXZ,CAAC,CAACkB,OAAD,EAAU;AAAEwH,QAAAA,QAAQ,EAAE,KAAKb,iBAAjB;AAAoC4B,QAAAA,MAAM,EAAE,IAA5C;AAAkDd,QAAAA,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBC,MAA3E;AAAmFC,QAAAA,cAAc,EAAEf,WAAW,CAACgB,aAAZ,CAA0BF,MAA7H;AAAqIG,QAAAA,OAAO,EAAE,MAAMxC,UAAU,CAACb,KAAD;AAA9J,OAAV,EAAmL;AAChLuD,QAAAA,IAAI,EAAE,MAAOlJ,CAAC,CAACiB,SAAD,EAAY;AAAEkI,UAAAA,SAAS,EAAExB;AAAb,SAAZ,EAA4C;AAAEhF,UAAAA,OAAO,EAAE,MAAM3C,CAAC,CAACa,OAAD,EAAU,IAAV;AAAlB,SAA5C;AADkK,OAAnL,CAJU,EAOXyC,cAAc,GAAItD,CAAC,CAACkB,OAAD,EAAU;AAAEwH,QAAAA,QAAQ,EAAE/C,KAAK,KAAK,CAAtB;AAAyB8D,QAAAA,MAAM,EAAE,IAAjC;AAAuCd,QAAAA,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBC,MAAhE;AAAwEC,QAAAA,cAAc,EAAEf,WAAW,CAACgB,aAAZ,CAA0BF,MAAlH;AAA0HG,QAAAA,OAAO,EAAE,MAAMhC,IAAI,CAAC,IAAD,EAAOrB,KAAP;AAA7I,OAAV,EAAwK;AACvLuD,QAAAA,IAAI,EAAE,MAAOlJ,CAAC,CAACiB,SAAD,EAAY;AAAEkI,UAAAA,SAAS,EAAExB;AAAb,SAAZ,EAA4C;AACtDhF,UAAAA,OAAO,EAAE,MAAM3C,CAAC,CAACe,WAAD,EAAc,IAAd;AADsC,SAA5C;AADyK,OAAxK,CAAL,GAIR,IAXK,EAYXuC,cAAc,GAAItD,CAAC,CAACkB,OAAD,EAAU;AAAEwH,QAAAA,QAAQ,EAAE/C,KAAK,KAAKZ,WAAW,CAACE,MAAZ,GAAqB,CAA3C;AAA8CwE,QAAAA,MAAM,EAAE,IAAtD;AAA4Dd,QAAAA,KAAK,EAAEZ,WAAW,CAACa,KAAZ,CAAkBC,MAArF;AAA6FC,QAAAA,cAAc,EAAEf,WAAW,CAACgB,aAAZ,CAA0BF,MAAvI;AAA+IG,QAAAA,OAAO,EAAE,MAAMhC,IAAI,CAAC,MAAD,EAASrB,KAAT;AAAlK,OAAV,EAA+L;AAC9MuD,QAAAA,IAAI,EAAE,MAAOlJ,CAAC,CAACiB,SAAD,EAAY;AAAEkI,UAAAA,SAAS,EAAExB;AAAb,SAAZ,EAA4C;AAAEhF,UAAAA,OAAO,EAAE,MAAM3C,CAAC,CAACc,aAAD,EAAgB,IAAhB;AAAlB,SAA5C;AADgM,OAA/L,CAAL,GAER,IAdK;AADmB,KAArC,CADJ,CAbkC,CAAhC,CAPE,CAAT;AAuCH;;AApO0B,CAAD,CAA9B","sourcesContent":["import { h, ref, toRef, isProxy, toRaw, computed, defineComponent, inject, provide, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { createId } from 'seemly';\nimport { RemoveIcon, AddIcon, ArrowDownIcon, ArrowUpIcon } from '../../_internal/icons';\nimport { formItemInjectionKey } from '../../_mixins/use-form-item';\nimport { NBaseIcon } from '../../_internal';\nimport { NButton, NButtonGroup } from '../../button';\nimport { useTheme, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, warnOnce, resolveSlotWithProps, resolveSlot } from '../../_utils';\nimport { dynamicInputLight } from '../styles';\nimport NDynamicInputInputPreset from './InputPreset';\nimport NDynamicInputPairPreset from './PairPreset';\nimport { dynamicInputInjectionKey } from './interface';\nimport style from './styles/index.cssr';\nconst globalDataKeyMap = new WeakMap();\nconst dynamicInputProps = Object.assign(Object.assign({}, useTheme.props), { max: Number, min: {\n        type: Number,\n        default: 0\n    }, value: Array, \n    // TODO: make it robust for different types\n    defaultValue: {\n        type: Array,\n        default: () => []\n    }, preset: {\n        type: String,\n        default: 'input'\n    }, keyField: String, itemStyle: [String, Object], \n    // for preset pair\n    keyPlaceholder: {\n        type: String,\n        default: ''\n    }, valuePlaceholder: {\n        type: String,\n        default: ''\n    }, \n    // for preset input\n    placeholder: {\n        type: String,\n        default: ''\n    }, showSortButton: Boolean, createButtonProps: Object, onCreate: Function, onRemove: Function, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    // deprecated\n    onClear: Function, onInput: [Function, Array] });\nexport default defineComponent({\n    name: 'DynamicInput',\n    props: dynamicInputProps,\n    setup(props, { slots }) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onClear !== undefined) {\n                    warnOnce('dynamic-input', '`on-clear` is deprecated, it is out of usage anymore.');\n                }\n                if (props.onInput !== undefined) {\n                    warnOnce('dynamic-input', '`on-input` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedComponentPropsRef, mergedClsPrefixRef, inlineThemeDisabled } = useConfig();\n        const NFormItem = inject(formItemInjectionKey, null);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const themeRef = useTheme('DynamicInput', '-dynamic-input', style, dynamicInputLight, props, mergedClsPrefixRef);\n        const insertionDisabledRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (Array.isArray(mergedValue)) {\n                const { max } = props;\n                return max !== undefined && mergedValue.length >= max;\n            }\n            return false;\n        });\n        const removeDisabledRef = computed(() => {\n            const { value: mergedValue } = mergedValueRef;\n            if (Array.isArray(mergedValue))\n                return mergedValue.length <= props.min;\n            return true;\n        });\n        const buttonSizeRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = mergedComponentPropsRef === null || mergedComponentPropsRef === void 0 ? void 0 : mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.DynamicInput) === null || _b === void 0 ? void 0 : _b.buttonSize;\n        });\n        function doUpdateValue(value) {\n            const { onInput, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            if (onInput)\n                call(onInput, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n        }\n        function ensureKey(value, index) {\n            if (value === undefined || value === null)\n                return index;\n            if (typeof value !== 'object')\n                return index;\n            const rawValue = isProxy(value) ? toRaw(value) : value;\n            let key = globalDataKeyMap.get(rawValue);\n            if (key === undefined) {\n                globalDataKeyMap.set(rawValue, (key = createId()));\n            }\n            return key;\n        }\n        function handleValueChange(index, value) {\n            const { value: mergedValue } = mergedValueRef;\n            const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n            const originalItem = newValue[index];\n            newValue[index] = value;\n            // update dataKeyMap\n            if (originalItem &&\n                value &&\n                typeof originalItem === 'object' &&\n                typeof value === 'object') {\n                const rawOriginal = isProxy(originalItem)\n                    ? toRaw(originalItem)\n                    : originalItem;\n                const rawNew = isProxy(value) ? toRaw(value) : value;\n                // inherit key is value position is not change\n                const originalKey = globalDataKeyMap.get(rawOriginal);\n                if (originalKey !== undefined) {\n                    globalDataKeyMap.set(rawNew, originalKey);\n                }\n            }\n            doUpdateValue(newValue);\n        }\n        function handleCreateClick() {\n            createItem(0);\n        }\n        function createItem(index) {\n            const { value: mergedValue } = mergedValueRef;\n            const { onCreate } = props;\n            const newValue = Array.from(mergedValue !== null && mergedValue !== void 0 ? mergedValue : []);\n            if (onCreate) {\n                newValue.splice(index + 1, 0, onCreate(index + 1));\n                doUpdateValue(newValue);\n            }\n            else if (slots.default) {\n                newValue.splice(index + 1, 0, null);\n                doUpdateValue(newValue);\n            }\n            else {\n                switch (props.preset) {\n                    case 'input':\n                        newValue.splice(index + 1, 0, '');\n                        doUpdateValue(newValue);\n                        break;\n                    case 'pair':\n                        newValue.splice(index + 1, 0, { key: '', value: '' });\n                        doUpdateValue(newValue);\n                        break;\n                }\n            }\n        }\n        function remove(index) {\n            const { value: mergedValue } = mergedValueRef;\n            if (!Array.isArray(mergedValue))\n                return;\n            const { min } = props;\n            if (mergedValue.length <= min)\n                return;\n            const newValue = Array.from(mergedValue);\n            newValue.splice(index, 1);\n            doUpdateValue(newValue);\n            const { onRemove } = props;\n            if (onRemove)\n                onRemove(index);\n        }\n        function swap(array, currentIndex, targetIndex) {\n            if (currentIndex < 0 ||\n                targetIndex < 0 ||\n                currentIndex >= array.length ||\n                targetIndex >= array.length) {\n                return;\n            }\n            if (currentIndex === targetIndex)\n                return;\n            const currentItem = array[currentIndex];\n            array[currentIndex] = array[targetIndex];\n            array[targetIndex] = currentItem;\n        }\n        function move(type, index) {\n            const { value: mergedValue } = mergedValueRef;\n            if (!Array.isArray(mergedValue))\n                return;\n            const newValue = Array.from(mergedValue);\n            if (type === 'up') {\n                swap(newValue, index, index - 1);\n            }\n            if (type === 'down') {\n                swap(newValue, index, index + 1);\n            }\n            doUpdateValue(newValue);\n        }\n        provide(dynamicInputInjectionKey, {\n            mergedThemeRef: themeRef,\n            keyPlaceholderRef: toRef(props, 'keyPlaceholder'),\n            valuePlaceholderRef: toRef(props, 'valuePlaceholder'),\n            placeholderRef: toRef(props, 'placeholder')\n        });\n        const cssVarsRef = computed(() => {\n            const { self: { actionMargin } } = themeRef.value;\n            return {\n                '--action-margin': actionMargin\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dynamic-input', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            locale: useLocale('DynamicInput').localeRef,\n            buttonSize: buttonSizeRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            NFormItem,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            insertionDisabled: insertionDisabledRef,\n            removeDisabled: removeDisabledRef,\n            handleCreateClick,\n            ensureKey,\n            handleValueChange,\n            remove,\n            move,\n            createItem,\n            mergedTheme: themeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, buttonSize, mergedClsPrefix, mergedValue, locale, mergedTheme, keyField, itemStyle, preset, showSortButton, NFormItem, ensureKey, handleValueChange, remove, createItem, move, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [`${mergedClsPrefix}-dynamic-input`, this.themeClass], style: this.cssVars }, !Array.isArray(mergedValue) || mergedValue.length === 0 ? (h(NButton, Object.assign({ block: true, ghost: true, dashed: true, size: buttonSize }, this.createButtonProps, { disabled: this.insertionDisabled, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: this.handleCreateClick }), {\n            default: () => resolveSlot($slots['create-button-default'], () => [\n                locale.create\n            ]),\n            icon: () => resolveSlot($slots['create-button-icon'], () => [\n                h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) })\n            ])\n        })) : (mergedValue.map((_, index) => (h(\"div\", { key: keyField ? _[keyField] : ensureKey(_, index), \"data-key\": keyField ? _[keyField] : ensureKey(_, index), class: `${mergedClsPrefix}-dynamic-input-item`, style: itemStyle },\n            resolveSlotWithProps($slots.default, {\n                value: mergedValue[index],\n                index\n            }, () => {\n                return [\n                    preset === 'input' ? (h(NDynamicInputInputPreset, { clsPrefix: mergedClsPrefix, value: mergedValue[index], parentPath: NFormItem ? NFormItem.path.value : undefined, path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value)\n                            ? `${NFormItem.path.value}[${index}]`\n                            : undefined, onUpdateValue: (v) => handleValueChange(index, v) })) : preset === 'pair' ? (h(NDynamicInputPairPreset, { clsPrefix: mergedClsPrefix, value: mergedValue[index], parentPath: NFormItem ? NFormItem.path.value : undefined, path: (NFormItem === null || NFormItem === void 0 ? void 0 : NFormItem.path.value)\n                            ? `${NFormItem.path.value}[${index}]`\n                            : undefined, onUpdateValue: (v) => handleValueChange(index, v) })) : null\n                ];\n            }),\n            h(\"div\", { class: `${mergedClsPrefix}-dynamic-input-item__action` },\n                h(NButtonGroup, { size: buttonSize }, {\n                    default: () => [\n                        h(NButton, { disabled: this.removeDisabled, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, circle: true, onClick: () => remove(index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(RemoveIcon, null) }))\n                        }),\n                        h(NButton, { disabled: this.insertionDisabled, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => createItem(index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) }))\n                        }),\n                        showSortButton ? (h(NButton, { disabled: index === 0, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => move('up', index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, {\n                                default: () => h(ArrowUpIcon, null)\n                            }))\n                        })) : null,\n                        showSortButton ? (h(NButton, { disabled: index === mergedValue.length - 1, circle: true, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, onClick: () => move('down', index) }, {\n                            icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(ArrowDownIcon, null) }))\n                        })) : null\n                    ]\n                }))))))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}