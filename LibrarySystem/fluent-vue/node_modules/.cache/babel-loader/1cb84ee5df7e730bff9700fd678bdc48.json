{"ast":null,"code":"import { h, defineComponent, inject } from 'vue';\nimport { throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nexport const uploadDraggerKey = '__UPLOAD_DRAGGER__';\nexport default defineComponent({\n  name: 'UploadDragger',\n  [uploadDraggerKey]: true,\n\n  setup(_, {\n    slots\n  }) {\n    const NUpload = inject(uploadInjectionKey, null);\n\n    if (!NUpload) {\n      throwError('upload-dragger', '`n-upload-dragger` must be placed inside `n-upload`.');\n    }\n\n    return () => {\n      const {\n        mergedClsPrefixRef: {\n          value: mergedClsPrefix\n        },\n        mergedDisabledRef: {\n          value: mergedDisabled\n        }\n      } = NUpload;\n      return h(\"div\", {\n        class: [`${mergedClsPrefix}-upload-dragger`, mergedDisabled && `${mergedClsPrefix}-upload-dragger--disabled`]\n      }, slots);\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/upload/src/UploadDragger.js"],"names":["h","defineComponent","inject","throwError","uploadInjectionKey","uploadDraggerKey","name","setup","_","slots","NUpload","mergedClsPrefixRef","value","mergedClsPrefix","mergedDisabledRef","mergedDisabled","class"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,MAA7B,QAA2C,KAA3C;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,OAAO,MAAMC,gBAAgB,GAAG,oBAAzB;AACP,eAAeJ,eAAe,CAAC;AAC3BK,EAAAA,IAAI,EAAE,eADqB;AAE3B,GAACD,gBAAD,GAAoB,IAFO;;AAG3BE,EAAAA,KAAK,CAACC,CAAD,EAAI;AAAEC,IAAAA;AAAF,GAAJ,EAAe;AAChB,UAAMC,OAAO,GAAGR,MAAM,CAACE,kBAAD,EAAqB,IAArB,CAAtB;;AACA,QAAI,CAACM,OAAL,EAAc;AACVP,MAAAA,UAAU,CAAC,gBAAD,EAAmB,sDAAnB,CAAV;AACH;;AACD,WAAO,MAAM;AACT,YAAM;AAAEQ,QAAAA,kBAAkB,EAAE;AAAEC,UAAAA,KAAK,EAAEC;AAAT,SAAtB;AAAkDC,QAAAA,iBAAiB,EAAE;AAAEF,UAAAA,KAAK,EAAEG;AAAT;AAArE,UAAmGL,OAAzG;AACA,aAAQV,CAAC,CAAC,KAAD,EAAQ;AAAEgB,QAAAA,KAAK,EAAE,CACjB,GAAEH,eAAgB,iBADD,EAElBE,cAAc,IAAK,GAAEF,eAAgB,2BAFnB;AAAT,OAAR,EAGAJ,KAHA,CAAT;AAIH,KAND;AAOH;;AAf0B,CAAD,CAA9B","sourcesContent":["import { h, defineComponent, inject } from 'vue';\nimport { throwError } from '../../_utils';\nimport { uploadInjectionKey } from './interface';\nexport const uploadDraggerKey = '__UPLOAD_DRAGGER__';\nexport default defineComponent({\n    name: 'UploadDragger',\n    [uploadDraggerKey]: true,\n    setup(_, { slots }) {\n        const NUpload = inject(uploadInjectionKey, null);\n        if (!NUpload) {\n            throwError('upload-dragger', '`n-upload-dragger` must be placed inside `n-upload`.');\n        }\n        return () => {\n            const { mergedClsPrefixRef: { value: mergedClsPrefix }, mergedDisabledRef: { value: mergedDisabled } } = NUpload;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefix}-upload-dragger`,\n                    mergedDisabled && `${mergedClsPrefix}-upload-dragger--disabled`\n                ] }, slots));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}