{"ast":null,"code":"import { defineComponent, h, watchEffect } from 'vue';\nimport { NButton, NxButton } from '../../../button';\nimport { NInput } from '../../../input';\nimport { NTimePicker } from '../../../time-picker';\nimport { BackwardIcon, FastBackwardIcon, ForwardIcon, FastForwardIcon } from '../../../_internal/icons';\nimport { NBaseFocusDetector } from '../../../_internal';\nimport { warnOnce } from '../../../_utils';\nimport { useDualCalendar, useDualCalendarProps } from './use-dual-calendar';\nimport PanelHeader from './panelHeader';\nexport default defineComponent({\n  name: 'DateTimeRangePanel',\n  props: useDualCalendarProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        var _a;\n\n        if ((_a = props.actions) === null || _a === void 0 ? void 0 : _a.includes('now')) {\n          warnOnce('date-picker', 'The `now` action is not supported for n-date-picker of `datetimerange` type');\n        }\n      });\n    }\n\n    return useDualCalendar(props, 'datetimerange');\n  },\n\n  render() {\n    var _a, _b, _c;\n\n    const {\n      mergedClsPrefix,\n      mergedTheme,\n      shortcuts,\n      timePickerProps,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"selfRef\",\n      tabindex: 0,\n      class: [`${mergedClsPrefix}-date-panel`, `${mergedClsPrefix}-date-panel--datetimerange`, this.themeClass],\n      onClick: this.resetSelectingStatus,\n      onKeydown: this.handlePanelKeyDown,\n      onFocus: this.handlePanelFocus\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-header`\n    }, h(NInput, {\n      value: this.startDateDisplayString,\n      theme: mergedTheme.peers.Input,\n      themeOverrides: mergedTheme.peerOverrides.Input,\n      size: this.timePickerSize,\n      stateful: false,\n      class: `${mergedClsPrefix}-date-panel-date-input`,\n      textDecoration: this.isStartValueInvalid ? 'line-through' : '',\n      placeholder: this.locale.selectDate,\n      onBlur: this.handleStartDateInputBlur,\n      onUpdateValue: this.handleStartDateInput\n    }), h(NTimePicker, Object.assign({\n      placeholder: this.locale.selectTime,\n      format: this.timeFormat,\n      size: this.timePickerSize\n    }, Array.isArray(timePickerProps) ? timePickerProps[0] : timePickerProps, {\n      value: this.startTimeValue,\n      to: false,\n      showIcon: false,\n      theme: mergedTheme.peers.TimePicker,\n      themeOverrides: mergedTheme.peerOverrides.TimePicker,\n      stateful: false,\n      isHourDisabled: this.isStartHourDisabled,\n      isMinuteDisabled: this.isStartMinuteDisabled,\n      isSecondDisabled: this.isStartSecondDisabled,\n      onUpdateValue: this.handleStartTimePickerChange\n    })), h(NInput, {\n      value: this.endDateInput,\n      theme: mergedTheme.peers.Input,\n      themeOverrides: mergedTheme.peerOverrides.Input,\n      stateful: false,\n      size: this.timePickerSize,\n      class: `${mergedClsPrefix}-date-panel-date-input`,\n      textDecoration: this.isEndValueInvalid ? 'line-through' : '',\n      placeholder: this.locale.selectDate,\n      onBlur: this.handleEndDateInputBlur,\n      onUpdateValue: this.handleEndDateInput\n    }), h(NTimePicker, Object.assign({\n      placeholder: this.locale.selectTime,\n      format: this.timeFormat,\n      size: this.timePickerSize\n    }, Array.isArray(timePickerProps) ? timePickerProps[1] : timePickerProps, {\n      showIcon: false,\n      theme: mergedTheme.peers.TimePicker,\n      themeOverrides: mergedTheme.peerOverrides.TimePicker,\n      to: false,\n      stateful: false,\n      value: this.endTimeValue,\n      isHourDisabled: this.isEndHourDisabled,\n      isMinuteDisabled: this.isEndMinuteDisabled,\n      isSecondDisabled: this.isEndSecondDisabled,\n      onUpdateValue: this.handleEndTimePickerChange\n    }))), h(\"div\", {\n      ref: \"startDatesElRef\",\n      class: `${mergedClsPrefix}-date-panel-calendar ${mergedClsPrefix}-date-panel-calendar--start`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__fast-prev`,\n      onClick: this.startCalendarPrevYear\n    }, h(FastBackwardIcon, null)), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__prev`,\n      onClick: this.startCalendarPrevMonth\n    }, h(BackwardIcon, null)), h(PanelHeader, {\n      monthBeforeYear: this.locale.monthBeforeYear,\n      value: this.startCalendarDateTime,\n      onUpdateValue: this.onUpdateStartCalendarValue,\n      mergedClsPrefix: mergedClsPrefix,\n      calendarMonth: this.startCalendarMonth,\n      calendarYear: this.startCalendarYear\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__next`,\n      onClick: this.startCalendarNextMonth\n    }, h(ForwardIcon, null)), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__fast-next`,\n      onClick: this.startCalendarNextYear\n    }, h(FastForwardIcon, null))), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-weekdays`\n    }, this.weekdays.map(weekday => h(\"div\", {\n      key: weekday,\n      class: `${mergedClsPrefix}-date-panel-weekdays__day`\n    }, weekday))), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel__divider`\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-dates`\n    }, this.startDateArray.map((dateItem, i) => h(\"div\", {\n      \"data-n-date\": true,\n      key: i,\n      class: [`${mergedClsPrefix}-date-panel-date`, {\n        [`${mergedClsPrefix}-date-panel-date--excluded`]: !dateItem.inCurrentMonth,\n        [`${mergedClsPrefix}-date-panel-date--current`]: dateItem.isCurrentDate,\n        [`${mergedClsPrefix}-date-panel-date--selected`]: dateItem.selected,\n        [`${mergedClsPrefix}-date-panel-date--covered`]: dateItem.inSpan,\n        [`${mergedClsPrefix}-date-panel-date--start`]: dateItem.startOfSpan,\n        [`${mergedClsPrefix}-date-panel-date--end`]: dateItem.endOfSpan,\n        [`${mergedClsPrefix}-date-panel-date--disabled`]: this.mergedIsDateDisabled(dateItem.ts)\n      }],\n      onClick: () => this.handleDateClick(dateItem),\n      onMouseenter: () => this.handleDateMouseEnter(dateItem)\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-date__trigger`\n    }), dateItem.dateObject.date, dateItem.isCurrentDate ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-date__sup`\n    }) : null)))), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel__vertical-divider`\n    }), h(\"div\", {\n      ref: \"endDatesElRef\",\n      class: `${mergedClsPrefix}-date-panel-calendar ${mergedClsPrefix}-date-panel-calendar--end`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__fast-prev`,\n      onClick: this.endCalendarPrevYear\n    }, h(FastBackwardIcon, null)), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__prev`,\n      onClick: this.endCalendarPrevMonth\n    }, h(BackwardIcon, null)), h(PanelHeader, {\n      monthBeforeYear: this.locale.monthBeforeYear,\n      value: this.endCalendarDateTime,\n      onUpdateValue: this.onUpdateEndCalendarValue,\n      mergedClsPrefix: mergedClsPrefix,\n      calendarMonth: this.endCalendarMonth,\n      calendarYear: this.endCalendarYear\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__next`,\n      onClick: this.endCalendarNextMonth\n    }, h(ForwardIcon, null)), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month__fast-next`,\n      onClick: this.endCalendarNextYear\n    }, h(FastForwardIcon, null))), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-weekdays`\n    }, this.weekdays.map(weekday => h(\"div\", {\n      key: weekday,\n      class: `${mergedClsPrefix}-date-panel-weekdays__day`\n    }, weekday))), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel__divider`\n    }), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-dates`\n    }, this.endDateArray.map((dateItem, i) => h(\"div\", {\n      \"data-n-date\": true,\n      key: i,\n      class: [`${mergedClsPrefix}-date-panel-date`, {\n        [`${mergedClsPrefix}-date-panel-date--excluded`]: !dateItem.inCurrentMonth,\n        [`${mergedClsPrefix}-date-panel-date--current`]: dateItem.isCurrentDate,\n        [`${mergedClsPrefix}-date-panel-date--selected`]: dateItem.selected,\n        [`${mergedClsPrefix}-date-panel-date--covered`]: dateItem.inSpan,\n        [`${mergedClsPrefix}-date-panel-date--start`]: dateItem.startOfSpan,\n        [`${mergedClsPrefix}-date-panel-date--end`]: dateItem.endOfSpan,\n        [`${mergedClsPrefix}-date-panel-date--disabled`]: this.mergedIsDateDisabled(dateItem.ts)\n      }],\n      onClick: () => this.handleDateClick(dateItem),\n      onMouseenter: () => this.handleDateMouseEnter(dateItem)\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-date__trigger`\n    }), dateItem.dateObject.date, dateItem.isCurrentDate ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-date__sup`\n    }) : null)))), this.datePickerSlots.footer ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-footer`\n    }, this.datePickerSlots.footer()) : null, ((_a = this.actions) === null || _a === void 0 ? void 0 : _a.length) || shortcuts ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions__prefix`\n    }, shortcuts && Object.keys(shortcuts).map(key => {\n      const shortcut = shortcuts[key];\n      return Array.isArray(shortcut) || typeof shortcut === 'function' ? h(NxButton, {\n        size: \"tiny\",\n        onMouseenter: () => {\n          this.handleRangeShortcutMouseenter(shortcut);\n        },\n        onClick: () => {\n          this.handleRangeShortcutClick(shortcut);\n        },\n        onMouseleave: () => {\n          this.handleShortcutMouseleave();\n        }\n      }, {\n        default: () => key\n      }) : null;\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions__suffix`\n    }, ((_b = this.actions) === null || _b === void 0 ? void 0 : _b.includes('clear')) ? h(NButton, {\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"tiny\",\n      onClick: this.handleClearClick\n    }, {\n      default: () => this.locale.clear\n    }) : null, ((_c = this.actions) === null || _c === void 0 ? void 0 : _c.includes('confirm')) ? h(NButton, {\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"tiny\",\n      type: \"primary\",\n      disabled: this.isRangeInvalid,\n      onClick: this.handleConfirmClick\n    }, {\n      default: () => this.locale.confirm\n    }) : null)) : null, h(NBaseFocusDetector, {\n      onFocus: this.handleFocusDetectorFocus\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/panel/datetimerange.js"],"names":["defineComponent","h","watchEffect","NButton","NxButton","NInput","NTimePicker","BackwardIcon","FastBackwardIcon","ForwardIcon","FastForwardIcon","NBaseFocusDetector","warnOnce","useDualCalendar","useDualCalendarProps","PanelHeader","name","props","setup","process","env","NODE_ENV","_a","actions","includes","render","_b","_c","mergedClsPrefix","mergedTheme","shortcuts","timePickerProps","onRender","ref","tabindex","class","themeClass","onClick","resetSelectingStatus","onKeydown","handlePanelKeyDown","onFocus","handlePanelFocus","value","startDateDisplayString","theme","peers","Input","themeOverrides","peerOverrides","size","timePickerSize","stateful","textDecoration","isStartValueInvalid","placeholder","locale","selectDate","onBlur","handleStartDateInputBlur","onUpdateValue","handleStartDateInput","Object","assign","selectTime","format","timeFormat","Array","isArray","startTimeValue","to","showIcon","TimePicker","isHourDisabled","isStartHourDisabled","isMinuteDisabled","isStartMinuteDisabled","isSecondDisabled","isStartSecondDisabled","handleStartTimePickerChange","endDateInput","isEndValueInvalid","handleEndDateInputBlur","handleEndDateInput","endTimeValue","isEndHourDisabled","isEndMinuteDisabled","isEndSecondDisabled","handleEndTimePickerChange","startCalendarPrevYear","startCalendarPrevMonth","monthBeforeYear","startCalendarDateTime","onUpdateStartCalendarValue","calendarMonth","startCalendarMonth","calendarYear","startCalendarYear","startCalendarNextMonth","startCalendarNextYear","weekdays","map","weekday","key","startDateArray","dateItem","i","inCurrentMonth","isCurrentDate","selected","inSpan","startOfSpan","endOfSpan","mergedIsDateDisabled","ts","handleDateClick","onMouseenter","handleDateMouseEnter","dateObject","date","endCalendarPrevYear","endCalendarPrevMonth","endCalendarDateTime","onUpdateEndCalendarValue","endCalendarMonth","endCalendarYear","endCalendarNextMonth","endCalendarNextYear","endDateArray","datePickerSlots","footer","length","keys","shortcut","handleRangeShortcutMouseenter","handleRangeShortcutClick","onMouseleave","handleShortcutMouseleave","default","Button","handleClearClick","clear","type","disabled","isRangeInvalid","handleConfirmClick","confirm","handleFocusDetectorFocus"],"mappings":"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","sourcesContent":["import { defineComponent, h, watchEffect } from 'vue';\nimport { NButton, NxButton } from '../../../button';\nimport { NInput } from '../../../input';\nimport { NTimePicker } from '../../../time-picker';\nimport { BackwardIcon, FastBackwardIcon, ForwardIcon, FastForwardIcon } from '../../../_internal/icons';\nimport { NBaseFocusDetector } from '../../../_internal';\nimport { warnOnce } from '../../../_utils';\nimport { useDualCalendar, useDualCalendarProps } from './use-dual-calendar';\nimport PanelHeader from './panelHeader';\nexport default defineComponent({\n    name: 'DateTimeRangePanel',\n    props: useDualCalendarProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                var _a;\n                if ((_a = props.actions) === null || _a === void 0 ? void 0 : _a.includes('now')) {\n                    warnOnce('date-picker', 'The `now` action is not supported for n-date-picker of `datetimerange` type');\n                }\n            });\n        }\n        return useDualCalendar(props, 'datetimerange');\n    },\n    render() {\n        var _a, _b, _c;\n        const { mergedClsPrefix, mergedTheme, shortcuts, timePickerProps, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { ref: \"selfRef\", tabindex: 0, class: [\n                `${mergedClsPrefix}-date-panel`,\n                `${mergedClsPrefix}-date-panel--datetimerange`,\n                this.themeClass\n            ], onClick: this.resetSelectingStatus, onKeydown: this.handlePanelKeyDown, onFocus: this.handlePanelFocus },\n            h(\"div\", { class: `${mergedClsPrefix}-date-panel-header` },\n                h(NInput, { value: this.startDateDisplayString, theme: mergedTheme.peers.Input, themeOverrides: mergedTheme.peerOverrides.Input, size: this.timePickerSize, stateful: false, class: `${mergedClsPrefix}-date-panel-date-input`, textDecoration: this.isStartValueInvalid ? 'line-through' : '', placeholder: this.locale.selectDate, onBlur: this.handleStartDateInputBlur, onUpdateValue: this.handleStartDateInput }),\n                h(NTimePicker, Object.assign({ placeholder: this.locale.selectTime, format: this.timeFormat, size: this.timePickerSize }, (Array.isArray(timePickerProps)\n                    ? timePickerProps[0]\n                    : timePickerProps), { value: this.startTimeValue, to: false, showIcon: false, theme: mergedTheme.peers.TimePicker, themeOverrides: mergedTheme.peerOverrides.TimePicker, stateful: false, isHourDisabled: this.isStartHourDisabled, isMinuteDisabled: this.isStartMinuteDisabled, isSecondDisabled: this.isStartSecondDisabled, onUpdateValue: this.handleStartTimePickerChange })),\n                h(NInput, { value: this.endDateInput, theme: mergedTheme.peers.Input, themeOverrides: mergedTheme.peerOverrides.Input, stateful: false, size: this.timePickerSize, class: `${mergedClsPrefix}-date-panel-date-input`, textDecoration: this.isEndValueInvalid ? 'line-through' : '', placeholder: this.locale.selectDate, onBlur: this.handleEndDateInputBlur, onUpdateValue: this.handleEndDateInput }),\n                h(NTimePicker, Object.assign({ placeholder: this.locale.selectTime, format: this.timeFormat, size: this.timePickerSize }, (Array.isArray(timePickerProps)\n                    ? timePickerProps[1]\n                    : timePickerProps), { showIcon: false, theme: mergedTheme.peers.TimePicker, themeOverrides: mergedTheme.peerOverrides.TimePicker, to: false, stateful: false, value: this.endTimeValue, isHourDisabled: this.isEndHourDisabled, isMinuteDisabled: this.isEndMinuteDisabled, isSecondDisabled: this.isEndSecondDisabled, onUpdateValue: this.handleEndTimePickerChange }))),\n            h(\"div\", { ref: \"startDatesElRef\", class: `${mergedClsPrefix}-date-panel-calendar ${mergedClsPrefix}-date-panel-calendar--start` },\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-month` },\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__fast-prev`, onClick: this.startCalendarPrevYear },\n                        h(FastBackwardIcon, null)),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__prev`, onClick: this.startCalendarPrevMonth },\n                        h(BackwardIcon, null)),\n                    h(PanelHeader, { monthBeforeYear: this.locale.monthBeforeYear, value: this.startCalendarDateTime, onUpdateValue: this.onUpdateStartCalendarValue, mergedClsPrefix: mergedClsPrefix, calendarMonth: this.startCalendarMonth, calendarYear: this.startCalendarYear }),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__next`, onClick: this.startCalendarNextMonth },\n                        h(ForwardIcon, null)),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__fast-next`, onClick: this.startCalendarNextYear },\n                        h(FastForwardIcon, null))),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-weekdays` }, this.weekdays.map((weekday) => (h(\"div\", { key: weekday, class: `${mergedClsPrefix}-date-panel-weekdays__day` }, weekday)))),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel__divider` }),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-dates` }, this.startDateArray.map((dateItem, i) => (h(\"div\", { \"data-n-date\": true, key: i, class: [\n                        `${mergedClsPrefix}-date-panel-date`,\n                        {\n                            [`${mergedClsPrefix}-date-panel-date--excluded`]: !dateItem.inCurrentMonth,\n                            [`${mergedClsPrefix}-date-panel-date--current`]: dateItem.isCurrentDate,\n                            [`${mergedClsPrefix}-date-panel-date--selected`]: dateItem.selected,\n                            [`${mergedClsPrefix}-date-panel-date--covered`]: dateItem.inSpan,\n                            [`${mergedClsPrefix}-date-panel-date--start`]: dateItem.startOfSpan,\n                            [`${mergedClsPrefix}-date-panel-date--end`]: dateItem.endOfSpan,\n                            [`${mergedClsPrefix}-date-panel-date--disabled`]: this.mergedIsDateDisabled(dateItem.ts)\n                        }\n                    ], onClick: () => this.handleDateClick(dateItem), onMouseenter: () => this.handleDateMouseEnter(dateItem) },\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-date__trigger` }),\n                    dateItem.dateObject.date,\n                    dateItem.isCurrentDate ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-date__sup` })) : null))))),\n            h(\"div\", { class: `${mergedClsPrefix}-date-panel__vertical-divider` }),\n            h(\"div\", { ref: \"endDatesElRef\", class: `${mergedClsPrefix}-date-panel-calendar ${mergedClsPrefix}-date-panel-calendar--end` },\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-month` },\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__fast-prev`, onClick: this.endCalendarPrevYear },\n                        h(FastBackwardIcon, null)),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__prev`, onClick: this.endCalendarPrevMonth },\n                        h(BackwardIcon, null)),\n                    h(PanelHeader, { monthBeforeYear: this.locale.monthBeforeYear, value: this.endCalendarDateTime, onUpdateValue: this.onUpdateEndCalendarValue, mergedClsPrefix: mergedClsPrefix, calendarMonth: this.endCalendarMonth, calendarYear: this.endCalendarYear }),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__next`, onClick: this.endCalendarNextMonth },\n                        h(ForwardIcon, null)),\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-month__fast-next`, onClick: this.endCalendarNextYear },\n                        h(FastForwardIcon, null))),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-weekdays` }, this.weekdays.map((weekday) => (h(\"div\", { key: weekday, class: `${mergedClsPrefix}-date-panel-weekdays__day` }, weekday)))),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel__divider` }),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-dates` }, this.endDateArray.map((dateItem, i) => (h(\"div\", { \"data-n-date\": true, key: i, class: [\n                        `${mergedClsPrefix}-date-panel-date`,\n                        {\n                            [`${mergedClsPrefix}-date-panel-date--excluded`]: !dateItem.inCurrentMonth,\n                            [`${mergedClsPrefix}-date-panel-date--current`]: dateItem.isCurrentDate,\n                            [`${mergedClsPrefix}-date-panel-date--selected`]: dateItem.selected,\n                            [`${mergedClsPrefix}-date-panel-date--covered`]: dateItem.inSpan,\n                            [`${mergedClsPrefix}-date-panel-date--start`]: dateItem.startOfSpan,\n                            [`${mergedClsPrefix}-date-panel-date--end`]: dateItem.endOfSpan,\n                            [`${mergedClsPrefix}-date-panel-date--disabled`]: this.mergedIsDateDisabled(dateItem.ts)\n                        }\n                    ], onClick: () => this.handleDateClick(dateItem), onMouseenter: () => this.handleDateMouseEnter(dateItem) },\n                    h(\"div\", { class: `${mergedClsPrefix}-date-panel-date__trigger` }),\n                    dateItem.dateObject.date,\n                    dateItem.isCurrentDate ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-date__sup` })) : null))))),\n            this.datePickerSlots.footer ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-footer` }, this.datePickerSlots.footer())) : null,\n            ((_a = this.actions) === null || _a === void 0 ? void 0 : _a.length) || shortcuts ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions` },\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions__prefix` }, shortcuts &&\n                    Object.keys(shortcuts).map((key) => {\n                        const shortcut = shortcuts[key];\n                        return Array.isArray(shortcut) ||\n                            typeof shortcut === 'function' ? (h(NxButton, { size: \"tiny\", onMouseenter: () => {\n                                this.handleRangeShortcutMouseenter(shortcut);\n                            }, onClick: () => {\n                                this.handleRangeShortcutClick(shortcut);\n                            }, onMouseleave: () => {\n                                this.handleShortcutMouseleave();\n                            } }, { default: () => key })) : null;\n                    })),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions__suffix` },\n                    ((_b = this.actions) === null || _b === void 0 ? void 0 : _b.includes('clear')) ? (h(NButton, { theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"tiny\", onClick: this.handleClearClick }, { default: () => this.locale.clear })) : null,\n                    ((_c = this.actions) === null || _c === void 0 ? void 0 : _c.includes('confirm')) ? (h(NButton, { theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"tiny\", type: \"primary\", disabled: this.isRangeInvalid, onClick: this.handleConfirmClick }, { default: () => this.locale.confirm })) : null))) : null,\n            h(NBaseFocusDetector, { onFocus: this.handleFocusDetectorFocus })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}