{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { DOM, ElementStyles, FASTElement, observable, Observable } from \"@microsoft/fast-element\";\nexport const defaultElement = document.createElement(\"div\");\n\nfunction isFastElement(element) {\n  return element instanceof FASTElement;\n}\n\nclass QueuedStyleSheetTarget {\n  setProperty(name, value) {\n    DOM.queueUpdate(() => this.target.setProperty(name, value));\n  }\n\n  removeProperty(name) {\n    DOM.queueUpdate(() => this.target.removeProperty(name));\n  }\n\n}\n/**\n * Handles setting properties for a FASTElement using Constructable Stylesheets\n */\n\n\nclass ConstructableStyleSheetTarget extends QueuedStyleSheetTarget {\n  constructor(source) {\n    super();\n    const sheet = new CSSStyleSheet();\n    this.target = sheet.cssRules[sheet.insertRule(\":host{}\")].style;\n    source.$fastController.addStyles(ElementStyles.create([sheet]));\n  }\n\n}\n\nclass DocumentStyleSheetTarget extends QueuedStyleSheetTarget {\n  constructor() {\n    super();\n    const sheet = new CSSStyleSheet();\n    this.target = sheet.cssRules[sheet.insertRule(\":root{}\")].style;\n    document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\n  }\n\n}\n\nclass HeadStyleElementStyleSheetTarget extends QueuedStyleSheetTarget {\n  constructor() {\n    super();\n    this.style = document.createElement(\"style\");\n    document.head.appendChild(this.style);\n    const {\n      sheet\n    } = this.style; // Because the HTMLStyleElement has been appended,\n    // there shouldn't exist a case where `sheet` is null,\n    // but if-check it just in case.\n\n    if (sheet) {\n      // https://github.com/jsdom/jsdom uses https://github.com/NV/CSSOM for it's CSSOM implementation,\n      // which implements the DOM Level 2 spec for CSSStyleSheet where insertRule() requires an index argument.\n      const index = sheet.insertRule(\":root{}\", sheet.cssRules.length);\n      this.target = sheet.cssRules[index].style;\n    }\n  }\n\n}\n/**\n * Handles setting properties for a FASTElement using an HTMLStyleElement\n */\n\n\nclass StyleElementStyleSheetTarget {\n  constructor(target) {\n    this.store = new Map();\n    this.target = null;\n    const controller = target.$fastController;\n    this.style = document.createElement(\"style\");\n    controller.addStyles(this.style);\n    Observable.getNotifier(controller).subscribe(this, \"isConnected\");\n    this.handleChange(controller, \"isConnected\");\n  }\n\n  targetChanged() {\n    if (this.target !== null) {\n      for (const [key, value] of this.store.entries()) {\n        this.target.setProperty(key, value);\n      }\n    }\n  }\n\n  setProperty(name, value) {\n    this.store.set(name, value);\n    DOM.queueUpdate(() => {\n      if (this.target !== null) {\n        this.target.setProperty(name, value);\n      }\n    });\n  }\n\n  removeProperty(name) {\n    this.store.delete(name);\n    DOM.queueUpdate(() => {\n      if (this.target !== null) {\n        this.target.removeProperty(name);\n      }\n    });\n  }\n\n  handleChange(source, key) {\n    // HTMLStyleElement.sheet is null if the element isn't connected to the DOM,\n    // so this method reacts to changes in DOM connection for the element hosting\n    // the HTMLStyleElement.\n    //\n    // All rules applied via the CSSOM also get cleared when the element disconnects,\n    // so we need to add a new rule each time and populate it with the stored properties\n    const {\n      sheet\n    } = this.style;\n\n    if (sheet) {\n      // Safari will throw if we try to use the return result of insertRule()\n      // to index the rule inline, so store as a const prior to indexing.\n      // https://github.com/jsdom/jsdom uses https://github.com/NV/CSSOM for it's CSSOM implementation,\n      // which implements the DOM Level 2 spec for CSSStyleSheet where insertRule() requires an index argument.\n      const index = sheet.insertRule(\":host{}\", sheet.cssRules.length);\n      this.target = sheet.cssRules[index].style;\n    } else {\n      this.target = null;\n    }\n  }\n\n}\n\n__decorate([observable], StyleElementStyleSheetTarget.prototype, \"target\", void 0);\n/**\n * Handles setting properties for a normal HTMLElement\n */\n\n\nclass ElementStyleSheetTarget {\n  constructor(source) {\n    this.target = source.style;\n  }\n\n  setProperty(name, value) {\n    DOM.queueUpdate(() => this.target.setProperty(name, value));\n  }\n\n  removeProperty(name) {\n    DOM.queueUpdate(() => this.target.removeProperty(name));\n  }\n\n}\n/**\n * Controls emission for default values. This control is capable\n * of emitting to multiple {@link PropertyTarget | PropertyTargets},\n * and only emits if it has at least one root.\n *\n * @internal\n */\n\n\nexport class RootStyleSheetTarget {\n  setProperty(name, value) {\n    RootStyleSheetTarget.properties[name] = value;\n\n    for (const target of RootStyleSheetTarget.roots.values()) {\n      PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(target)).setProperty(name, value);\n    }\n  }\n\n  removeProperty(name) {\n    delete RootStyleSheetTarget.properties[name];\n\n    for (const target of RootStyleSheetTarget.roots.values()) {\n      PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(target)).removeProperty(name);\n    }\n  }\n\n  static registerRoot(root) {\n    const {\n      roots\n    } = RootStyleSheetTarget;\n\n    if (!roots.has(root)) {\n      roots.add(root);\n      const target = PropertyTargetManager.getOrCreate(this.normalizeRoot(root));\n\n      for (const key in RootStyleSheetTarget.properties) {\n        target.setProperty(key, RootStyleSheetTarget.properties[key]);\n      }\n    }\n  }\n\n  static unregisterRoot(root) {\n    const {\n      roots\n    } = RootStyleSheetTarget;\n\n    if (roots.has(root)) {\n      roots.delete(root);\n      const target = PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(root));\n\n      for (const key in RootStyleSheetTarget.properties) {\n        target.removeProperty(key);\n      }\n    }\n  }\n  /**\n   * Returns the document when provided the default element,\n   * otherwise is a no-op\n   * @param root - the root to normalize\n   */\n\n\n  static normalizeRoot(root) {\n    return root === defaultElement ? document : root;\n  }\n\n}\nRootStyleSheetTarget.roots = new Set();\nRootStyleSheetTarget.properties = {}; // Caches PropertyTarget instances\n\nconst propertyTargetCache = new WeakMap(); // Use Constructable StyleSheets for FAST elements when supported, otherwise use\n// HTMLStyleElement instances\n\nconst propertyTargetCtor = DOM.supportsAdoptedStyleSheets ? ConstructableStyleSheetTarget : StyleElementStyleSheetTarget;\n/**\n * Manages creation and caching of PropertyTarget instances.\n *\n * @internal\n */\n\nexport const PropertyTargetManager = Object.freeze({\n  getOrCreate(source) {\n    if (propertyTargetCache.has(source)) {\n      /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n      return propertyTargetCache.get(source);\n    }\n\n    let target;\n\n    if (source === defaultElement) {\n      target = new RootStyleSheetTarget();\n    } else if (source instanceof Document) {\n      target = DOM.supportsAdoptedStyleSheets ? new DocumentStyleSheetTarget() : new HeadStyleElementStyleSheetTarget();\n    } else if (isFastElement(source)) {\n      target = new propertyTargetCtor(source);\n    } else {\n      target = new ElementStyleSheetTarget(source);\n    }\n\n    propertyTargetCache.set(source, target);\n    return target;\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/design-token/custom-property-manager.js"],"names":["__decorate","DOM","ElementStyles","FASTElement","observable","Observable","defaultElement","document","createElement","isFastElement","element","QueuedStyleSheetTarget","setProperty","name","value","queueUpdate","target","removeProperty","ConstructableStyleSheetTarget","constructor","source","sheet","CSSStyleSheet","cssRules","insertRule","style","$fastController","addStyles","create","DocumentStyleSheetTarget","adoptedStyleSheets","HeadStyleElementStyleSheetTarget","head","appendChild","index","length","StyleElementStyleSheetTarget","store","Map","controller","getNotifier","subscribe","handleChange","targetChanged","key","entries","set","delete","prototype","ElementStyleSheetTarget","RootStyleSheetTarget","properties","roots","values","PropertyTargetManager","getOrCreate","normalizeRoot","registerRoot","root","has","add","unregisterRoot","Set","propertyTargetCache","WeakMap","propertyTargetCtor","supportsAdoptedStyleSheets","Object","freeze","get","Document"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { DOM, ElementStyles, FASTElement, observable, Observable, } from \"@microsoft/fast-element\";\nexport const defaultElement = document.createElement(\"div\");\nfunction isFastElement(element) {\n    return element instanceof FASTElement;\n}\nclass QueuedStyleSheetTarget {\n    setProperty(name, value) {\n        DOM.queueUpdate(() => this.target.setProperty(name, value));\n    }\n    removeProperty(name) {\n        DOM.queueUpdate(() => this.target.removeProperty(name));\n    }\n}\n/**\n * Handles setting properties for a FASTElement using Constructable Stylesheets\n */\nclass ConstructableStyleSheetTarget extends QueuedStyleSheetTarget {\n    constructor(source) {\n        super();\n        const sheet = new CSSStyleSheet();\n        this.target = sheet.cssRules[sheet.insertRule(\":host{}\")].style;\n        source.$fastController.addStyles(ElementStyles.create([sheet]));\n    }\n}\nclass DocumentStyleSheetTarget extends QueuedStyleSheetTarget {\n    constructor() {\n        super();\n        const sheet = new CSSStyleSheet();\n        this.target = sheet.cssRules[sheet.insertRule(\":root{}\")].style;\n        document.adoptedStyleSheets = [\n            ...document.adoptedStyleSheets,\n            sheet,\n        ];\n    }\n}\nclass HeadStyleElementStyleSheetTarget extends QueuedStyleSheetTarget {\n    constructor() {\n        super();\n        this.style = document.createElement(\"style\");\n        document.head.appendChild(this.style);\n        const { sheet } = this.style;\n        // Because the HTMLStyleElement has been appended,\n        // there shouldn't exist a case where `sheet` is null,\n        // but if-check it just in case.\n        if (sheet) {\n            // https://github.com/jsdom/jsdom uses https://github.com/NV/CSSOM for it's CSSOM implementation,\n            // which implements the DOM Level 2 spec for CSSStyleSheet where insertRule() requires an index argument.\n            const index = sheet.insertRule(\":root{}\", sheet.cssRules.length);\n            this.target = sheet.cssRules[index].style;\n        }\n    }\n}\n/**\n * Handles setting properties for a FASTElement using an HTMLStyleElement\n */\nclass StyleElementStyleSheetTarget {\n    constructor(target) {\n        this.store = new Map();\n        this.target = null;\n        const controller = target.$fastController;\n        this.style = document.createElement(\"style\");\n        controller.addStyles(this.style);\n        Observable.getNotifier(controller).subscribe(this, \"isConnected\");\n        this.handleChange(controller, \"isConnected\");\n    }\n    targetChanged() {\n        if (this.target !== null) {\n            for (const [key, value] of this.store.entries()) {\n                this.target.setProperty(key, value);\n            }\n        }\n    }\n    setProperty(name, value) {\n        this.store.set(name, value);\n        DOM.queueUpdate(() => {\n            if (this.target !== null) {\n                this.target.setProperty(name, value);\n            }\n        });\n    }\n    removeProperty(name) {\n        this.store.delete(name);\n        DOM.queueUpdate(() => {\n            if (this.target !== null) {\n                this.target.removeProperty(name);\n            }\n        });\n    }\n    handleChange(source, key) {\n        // HTMLStyleElement.sheet is null if the element isn't connected to the DOM,\n        // so this method reacts to changes in DOM connection for the element hosting\n        // the HTMLStyleElement.\n        //\n        // All rules applied via the CSSOM also get cleared when the element disconnects,\n        // so we need to add a new rule each time and populate it with the stored properties\n        const { sheet } = this.style;\n        if (sheet) {\n            // Safari will throw if we try to use the return result of insertRule()\n            // to index the rule inline, so store as a const prior to indexing.\n            // https://github.com/jsdom/jsdom uses https://github.com/NV/CSSOM for it's CSSOM implementation,\n            // which implements the DOM Level 2 spec for CSSStyleSheet where insertRule() requires an index argument.\n            const index = sheet.insertRule(\":host{}\", sheet.cssRules.length);\n            this.target = sheet.cssRules[index].style;\n        }\n        else {\n            this.target = null;\n        }\n    }\n}\n__decorate([\n    observable\n], StyleElementStyleSheetTarget.prototype, \"target\", void 0);\n/**\n * Handles setting properties for a normal HTMLElement\n */\nclass ElementStyleSheetTarget {\n    constructor(source) {\n        this.target = source.style;\n    }\n    setProperty(name, value) {\n        DOM.queueUpdate(() => this.target.setProperty(name, value));\n    }\n    removeProperty(name) {\n        DOM.queueUpdate(() => this.target.removeProperty(name));\n    }\n}\n/**\n * Controls emission for default values. This control is capable\n * of emitting to multiple {@link PropertyTarget | PropertyTargets},\n * and only emits if it has at least one root.\n *\n * @internal\n */\nexport class RootStyleSheetTarget {\n    setProperty(name, value) {\n        RootStyleSheetTarget.properties[name] = value;\n        for (const target of RootStyleSheetTarget.roots.values()) {\n            PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(target)).setProperty(name, value);\n        }\n    }\n    removeProperty(name) {\n        delete RootStyleSheetTarget.properties[name];\n        for (const target of RootStyleSheetTarget.roots.values()) {\n            PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(target)).removeProperty(name);\n        }\n    }\n    static registerRoot(root) {\n        const { roots } = RootStyleSheetTarget;\n        if (!roots.has(root)) {\n            roots.add(root);\n            const target = PropertyTargetManager.getOrCreate(this.normalizeRoot(root));\n            for (const key in RootStyleSheetTarget.properties) {\n                target.setProperty(key, RootStyleSheetTarget.properties[key]);\n            }\n        }\n    }\n    static unregisterRoot(root) {\n        const { roots } = RootStyleSheetTarget;\n        if (roots.has(root)) {\n            roots.delete(root);\n            const target = PropertyTargetManager.getOrCreate(RootStyleSheetTarget.normalizeRoot(root));\n            for (const key in RootStyleSheetTarget.properties) {\n                target.removeProperty(key);\n            }\n        }\n    }\n    /**\n     * Returns the document when provided the default element,\n     * otherwise is a no-op\n     * @param root - the root to normalize\n     */\n    static normalizeRoot(root) {\n        return root === defaultElement ? document : root;\n    }\n}\nRootStyleSheetTarget.roots = new Set();\nRootStyleSheetTarget.properties = {};\n// Caches PropertyTarget instances\nconst propertyTargetCache = new WeakMap();\n// Use Constructable StyleSheets for FAST elements when supported, otherwise use\n// HTMLStyleElement instances\nconst propertyTargetCtor = DOM.supportsAdoptedStyleSheets\n    ? ConstructableStyleSheetTarget\n    : StyleElementStyleSheetTarget;\n/**\n * Manages creation and caching of PropertyTarget instances.\n *\n * @internal\n */\nexport const PropertyTargetManager = Object.freeze({\n    getOrCreate(source) {\n        if (propertyTargetCache.has(source)) {\n            /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n            return propertyTargetCache.get(source);\n        }\n        let target;\n        if (source === defaultElement) {\n            target = new RootStyleSheetTarget();\n        }\n        else if (source instanceof Document) {\n            target = DOM.supportsAdoptedStyleSheets\n                ? new DocumentStyleSheetTarget()\n                : new HeadStyleElementStyleSheetTarget();\n        }\n        else if (isFastElement(source)) {\n            target = new propertyTargetCtor(source);\n        }\n        else {\n            target = new ElementStyleSheetTarget(source);\n        }\n        propertyTargetCache.set(source, target);\n        return target;\n    },\n});\n"]},"metadata":{},"sourceType":"module"}