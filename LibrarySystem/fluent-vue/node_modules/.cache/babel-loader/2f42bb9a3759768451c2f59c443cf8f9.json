{"ast":null,"code":"import { h, defineComponent, ref, computed, nextTick, toRef, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport commonProps from '../../tag/src/common-props';\nimport { AddIcon } from '../../_internal/icons';\nimport { NButton } from '../../button';\nimport { NSpace } from '../../space';\nimport { NInput } from '../../input';\nimport { NTag } from '../../tag';\nimport { NBaseIcon } from '../../_internal';\nimport { useTheme, useFormItem, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, smallerSize, warnOnce } from '../../_utils';\nimport { dynamicTagsLight } from '../styles';\nimport style from './styles/index.cssr';\nconst dynamicTagsProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), {\n  closable: {\n    type: Boolean,\n    default: true\n  },\n  defaultValue: {\n    type: Array,\n    default: () => []\n  },\n  value: Array,\n  inputStyle: [String, Object],\n  inputProps: Object,\n  max: Number,\n  tagStyle: [String, Object],\n  renderTag: Function,\n  onCreate: {\n    type: Function,\n    default: label => label\n  },\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n  // deprecated\n  onChange: [Function, Array]\n});\nexport default defineComponent({\n  name: 'DynamicTags',\n  props: dynamicTagsProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.onChange !== undefined) {\n          warnOnce('dynamic-tags', '`on-change` is deprecated, please use `on-update:value` instead.');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const {\n      localeRef\n    } = useLocale('DynamicTags');\n    const formItem = useFormItem(props);\n    const {\n      mergedDisabledRef\n    } = formItem;\n    const inputValueRef = ref('');\n    const showInputRef = ref(false);\n    const inputForceFocusedRef = ref(true);\n    const inputInstRef = ref(null);\n    const themeRef = useTheme('DynamicTags', '-dynamic-tags', style, dynamicTagsLight, props, mergedClsPrefixRef);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const localizedAddRef = computed(() => {\n      return localeRef.value.add;\n    });\n    const inputSizeRef = computed(() => {\n      return smallerSize(props.size);\n    });\n    const triggerDisabledRef = computed(() => {\n      return mergedDisabledRef.value || !!props.max && mergedValueRef.value.length >= props.max;\n    });\n\n    function doChange(value) {\n      const {\n        onChange,\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormInput,\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n      nTriggerFormChange();\n    }\n\n    function handleCloseClick(index) {\n      const tags = mergedValueRef.value.slice(0);\n      tags.splice(index, 1);\n      doChange(tags);\n    }\n\n    function handleInputKeyUp(e) {\n      switch (e.code) {\n        case 'Enter':\n        case 'NumpadEnter':\n          handleInputConfirm();\n      }\n    }\n\n    function handleInputConfirm(externalValue) {\n      const nextValue = externalValue !== null && externalValue !== void 0 ? externalValue : inputValueRef.value;\n\n      if (nextValue) {\n        const tags = mergedValueRef.value.slice(0);\n        tags.push(nextValue);\n        doChange(tags);\n      }\n\n      showInputRef.value = false;\n      inputForceFocusedRef.value = true;\n      inputValueRef.value = '';\n    }\n\n    function handleInputBlur() {\n      handleInputConfirm();\n    }\n\n    function handleAddClick() {\n      showInputRef.value = true;\n      void nextTick(() => {\n        var _a;\n\n        (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        inputForceFocusedRef.value = false;\n      });\n    }\n\n    const cssVarsRef = computed(() => {\n      const {\n        self: {\n          inputWidth\n        }\n      } = themeRef.value;\n      return {\n        '--n-input-width': inputWidth\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('dynamic-tags', undefined, cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      inputInstRef,\n      localizedAdd: localizedAddRef,\n      inputSize: inputSizeRef,\n      inputValue: inputValueRef,\n      showInput: showInputRef,\n      inputForceFocused: inputForceFocusedRef,\n      mergedValue: mergedValueRef,\n      mergedDisabled: mergedDisabledRef,\n      triggerDisabled: triggerDisabledRef,\n      handleInputKeyUp,\n      handleAddClick,\n      handleInputBlur,\n      handleCloseClick,\n      handleInputConfirm,\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      mergedTheme,\n      cssVars,\n      mergedClsPrefix,\n      onRender,\n      renderTag\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(NSpace, {\n      class: [`${mergedClsPrefix}-dynamic-tags`, this.themeClass],\n      size: \"small\",\n      style: cssVars,\n      theme: mergedTheme.peers.Space,\n      themeOverrides: mergedTheme.peerOverrides.Space,\n      itemStyle: \"display: flex;\"\n    }, {\n      default: () => {\n        const {\n          mergedTheme,\n          tagStyle,\n          type,\n          round,\n          size,\n          color,\n          closable,\n          mergedDisabled,\n          showInput,\n          inputValue,\n          inputStyle,\n          inputSize,\n          inputForceFocused,\n          triggerDisabled,\n          handleInputKeyUp,\n          handleInputBlur,\n          handleAddClick,\n          handleCloseClick,\n          handleInputConfirm,\n          $slots\n        } = this;\n        return this.mergedValue.map((tag, index) => renderTag ? renderTag(tag, index) : h(NTag, {\n          key: index,\n          theme: mergedTheme.peers.Tag,\n          themeOverrides: mergedTheme.peerOverrides.Tag,\n          style: tagStyle,\n          type: type,\n          round: round,\n          size: size,\n          color: color,\n          closable: closable,\n          disabled: mergedDisabled,\n          onClose: () => handleCloseClick(index)\n        }, {\n          default: () => typeof tag === 'string' ? tag : tag.label\n        })).concat(showInput ? $slots.input ? $slots.input({\n          submit: handleInputConfirm,\n          deactivate: handleInputBlur\n        }) : h(NInput, Object.assign({\n          placeholder: \"\",\n          size: inputSize,\n          style: inputStyle,\n          autosize: true\n        }, this.inputProps, {\n          ref: \"inputInstRef\",\n          value: inputValue,\n          onUpdateValue: v => {\n            this.inputValue = v;\n          },\n          theme: mergedTheme.peers.Input,\n          themeOverrides: mergedTheme.peerOverrides.Input,\n          onKeyup: handleInputKeyUp,\n          onBlur: handleInputBlur,\n          internalForceFocus: inputForceFocused\n        })) : $slots.trigger ? $slots.trigger({\n          activate: handleAddClick,\n          disabled: triggerDisabled\n        }) : h(NButton, {\n          dashed: true,\n          disabled: triggerDisabled,\n          theme: mergedTheme.peers.Button,\n          themeOverrides: mergedTheme.peerOverrides.Button,\n          size: inputSize,\n          onClick: handleAddClick\n        }, {\n          icon: () => h(NBaseIcon, {\n            clsPrefix: mergedClsPrefix\n          }, {\n            default: () => h(AddIcon, null)\n          })\n        }));\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dynamic-tags/src/DynamicTags.js"],"names":["h","defineComponent","ref","computed","nextTick","toRef","watchEffect","useMergedState","commonProps","AddIcon","NButton","NSpace","NInput","NTag","NBaseIcon","useTheme","useFormItem","useLocale","useConfig","useThemeClass","call","smallerSize","warnOnce","dynamicTagsLight","style","dynamicTagsProps","Object","assign","props","closable","type","Boolean","default","defaultValue","Array","value","inputStyle","String","inputProps","max","Number","tagStyle","renderTag","Function","onCreate","label","onUpdateValue","onChange","name","setup","process","env","NODE_ENV","undefined","mergedClsPrefixRef","inlineThemeDisabled","localeRef","formItem","mergedDisabledRef","inputValueRef","showInputRef","inputForceFocusedRef","inputInstRef","themeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","localizedAddRef","add","inputSizeRef","size","triggerDisabledRef","length","doChange","_onUpdateValue","nTriggerFormInput","nTriggerFormChange","handleCloseClick","index","tags","slice","splice","handleInputKeyUp","e","code","handleInputConfirm","externalValue","nextValue","push","handleInputBlur","handleAddClick","_a","focus","cssVarsRef","self","inputWidth","themeClassHandle","mergedClsPrefix","localizedAdd","inputSize","inputValue","showInput","inputForceFocused","mergedValue","mergedDisabled","triggerDisabled","mergedTheme","cssVars","themeClass","onRender","render","class","theme","peers","Space","themeOverrides","peerOverrides","itemStyle","round","color","$slots","map","tag","key","Tag","disabled","onClose","concat","input","submit","deactivate","placeholder","autosize","v","Input","onKeyup","onBlur","internalForceFocus","trigger","activate","dashed","Button","onClick","icon","clsPrefix"],"mappings":"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","sourcesContent":["import { h, defineComponent, ref, computed, nextTick, toRef, watchEffect } from 'vue';\nimport { useMergedState } from 'vooks';\nimport commonProps from '../../tag/src/common-props';\nimport { AddIcon } from '../../_internal/icons';\nimport { NButton } from '../../button';\nimport { NSpace } from '../../space';\nimport { NInput } from '../../input';\nimport { NTag } from '../../tag';\nimport { NBaseIcon } from '../../_internal';\nimport { useTheme, useFormItem, useLocale, useConfig, useThemeClass } from '../../_mixins';\nimport { call, smallerSize, warnOnce } from '../../_utils';\nimport { dynamicTagsLight } from '../styles';\nimport style from './styles/index.cssr';\nconst dynamicTagsProps = Object.assign(Object.assign(Object.assign({}, useTheme.props), commonProps), { closable: {\n        type: Boolean,\n        default: true\n    }, defaultValue: {\n        type: Array,\n        default: () => []\n    }, value: Array, inputStyle: [String, Object], inputProps: Object, max: Number, tagStyle: [String, Object], renderTag: Function, onCreate: {\n        type: Function,\n        default: (label) => label\n    }, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    // deprecated\n    onChange: [Function, Array] });\nexport default defineComponent({\n    name: 'DynamicTags',\n    props: dynamicTagsProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.onChange !== undefined) {\n                    warnOnce('dynamic-tags', '`on-change` is deprecated, please use `on-update:value` instead.');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const { localeRef } = useLocale('DynamicTags');\n        const formItem = useFormItem(props);\n        const { mergedDisabledRef } = formItem;\n        const inputValueRef = ref('');\n        const showInputRef = ref(false);\n        const inputForceFocusedRef = ref(true);\n        const inputInstRef = ref(null);\n        const themeRef = useTheme('DynamicTags', '-dynamic-tags', style, dynamicTagsLight, props, mergedClsPrefixRef);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const localizedAddRef = computed(() => {\n            return localeRef.value.add;\n        });\n        const inputSizeRef = computed(() => {\n            return smallerSize(props.size);\n        });\n        const triggerDisabledRef = computed(() => {\n            return (mergedDisabledRef.value ||\n                (!!props.max && mergedValueRef.value.length >= props.max));\n        });\n        function doChange(value) {\n            const { onChange, 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            const { nTriggerFormInput, nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n            nTriggerFormChange();\n        }\n        function handleCloseClick(index) {\n            const tags = mergedValueRef.value.slice(0);\n            tags.splice(index, 1);\n            doChange(tags);\n        }\n        function handleInputKeyUp(e) {\n            switch (e.code) {\n                case 'Enter':\n                case 'NumpadEnter':\n                    handleInputConfirm();\n            }\n        }\n        function handleInputConfirm(externalValue) {\n            const nextValue = externalValue !== null && externalValue !== void 0 ? externalValue : inputValueRef.value;\n            if (nextValue) {\n                const tags = mergedValueRef.value.slice(0);\n                tags.push(nextValue);\n                doChange(tags);\n            }\n            showInputRef.value = false;\n            inputForceFocusedRef.value = true;\n            inputValueRef.value = '';\n        }\n        function handleInputBlur() {\n            handleInputConfirm();\n        }\n        function handleAddClick() {\n            showInputRef.value = true;\n            void nextTick(() => {\n                var _a;\n                (_a = inputInstRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                inputForceFocusedRef.value = false;\n            });\n        }\n        const cssVarsRef = computed(() => {\n            const { self: { inputWidth } } = themeRef.value;\n            return {\n                '--n-input-width': inputWidth\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('dynamic-tags', undefined, cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            inputInstRef,\n            localizedAdd: localizedAddRef,\n            inputSize: inputSizeRef,\n            inputValue: inputValueRef,\n            showInput: showInputRef,\n            inputForceFocused: inputForceFocusedRef,\n            mergedValue: mergedValueRef,\n            mergedDisabled: mergedDisabledRef,\n            triggerDisabled: triggerDisabledRef,\n            handleInputKeyUp,\n            handleAddClick,\n            handleInputBlur,\n            handleCloseClick,\n            handleInputConfirm,\n            mergedTheme: themeRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { mergedTheme, cssVars, mergedClsPrefix, onRender, renderTag } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(NSpace, { class: [`${mergedClsPrefix}-dynamic-tags`, this.themeClass], size: \"small\", style: cssVars, theme: mergedTheme.peers.Space, themeOverrides: mergedTheme.peerOverrides.Space, itemStyle: \"display: flex;\" }, {\n            default: () => {\n                const { mergedTheme, tagStyle, type, round, size, color, closable, mergedDisabled, showInput, inputValue, inputStyle, inputSize, inputForceFocused, triggerDisabled, handleInputKeyUp, handleInputBlur, handleAddClick, handleCloseClick, handleInputConfirm, $slots } = this;\n                return this.mergedValue\n                    .map((tag, index) => renderTag ? (renderTag(tag, index)) : (h(NTag, { key: index, theme: mergedTheme.peers.Tag, themeOverrides: mergedTheme.peerOverrides.Tag, style: tagStyle, type: type, round: round, size: size, color: color, closable: closable, disabled: mergedDisabled, onClose: () => handleCloseClick(index) }, {\n                    default: () => (typeof tag === 'string' ? tag : tag.label)\n                })))\n                    .concat(showInput ? ($slots.input ? ($slots.input({\n                    submit: handleInputConfirm,\n                    deactivate: handleInputBlur\n                })) : (h(NInput, Object.assign({ placeholder: \"\", size: inputSize, style: inputStyle, autosize: true }, this.inputProps, { ref: \"inputInstRef\", value: inputValue, onUpdateValue: (v) => {\n                        this.inputValue = v;\n                    }, theme: mergedTheme.peers.Input, themeOverrides: mergedTheme.peerOverrides.Input, onKeyup: handleInputKeyUp, onBlur: handleInputBlur, internalForceFocus: inputForceFocused })))) : $slots.trigger ? ($slots.trigger({\n                    activate: handleAddClick,\n                    disabled: triggerDisabled\n                })) : (h(NButton, { dashed: true, disabled: triggerDisabled, theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: inputSize, onClick: handleAddClick }, {\n                    icon: () => (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => h(AddIcon, null) }))\n                })));\n            }\n        }));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}