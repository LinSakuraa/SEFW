{"ast":null,"code":"/**\n * Building blocks - partial configs\n */\n\n/**\n * A region that matches the size and position of the anchor horizontally\n */\nconst horizontalAnchorOverlay = {\n  horizontalDefaultPosition: \"center\",\n  horizontalPositioningMode: \"locktodefault\",\n  horizontalInset: false,\n  horizontalScaling: \"anchor\"\n};\n/**\n * Exported configs\n */\n\n/**\n * A region that always places itself above the anchor, has\n * a width to match the anchor, and is sized vertically by content\n *\n * @public\n */\n\nexport const FlyoutPosTop = Object.assign(Object.assign({}, horizontalAnchorOverlay), {\n  verticalDefaultPosition: \"top\",\n  verticalPositioningMode: \"locktodefault\",\n  verticalInset: false,\n  verticalScaling: \"content\"\n});\n/**\n * A region that always places itself below the anchor, has\n * a width to match the anchor, and is sized vertically by content\n *\n * @public\n */\n\nexport const FlyoutPosBottom = Object.assign(Object.assign({}, horizontalAnchorOverlay), {\n  verticalDefaultPosition: \"bottom\",\n  verticalPositioningMode: \"locktodefault\",\n  verticalInset: false,\n  verticalScaling: \"content\"\n});\n/**\n * A region that places itself above or below the anchor\n * based on available space, has a width to match the anchor,\n * and is sized vertically by content\n *\n * @public\n */\n\nexport const FlyoutPosTallest = Object.assign(Object.assign({}, horizontalAnchorOverlay), {\n  verticalPositioningMode: \"dynamic\",\n  verticalInset: false,\n  verticalScaling: \"content\"\n});\n/**\n * A region that always places itself above the anchor, has\n * a width to match the anchor, and is sized vertically by available space\n *\n * @public\n */\n\nexport const FlyoutPosTopFill = Object.assign(Object.assign({}, FlyoutPosTop), {\n  verticalScaling: \"fill\"\n});\n/**\n * A region that always places itself below the anchor, has\n * a width to match the anchor, and is sized vertically by available space\n *\n * @public\n */\n\nexport const FlyoutPosBottomFill = Object.assign(Object.assign({}, FlyoutPosBottom), {\n  verticalScaling: \"fill\"\n});\n/**\n * A region that places itself above or below the anchor\n * based on available space, has a width to match the anchor,\n * and is sized vertically by available space\n *\n * @public\n */\n\nexport const FlyoutPosTallestFill = Object.assign(Object.assign({}, FlyoutPosTallest), {\n  verticalScaling: \"fill\"\n});","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/anchored-region/anchored-region-config.js"],"names":["horizontalAnchorOverlay","horizontalDefaultPosition","horizontalPositioningMode","horizontalInset","horizontalScaling","FlyoutPosTop","Object","assign","verticalDefaultPosition","verticalPositioningMode","verticalInset","verticalScaling","FlyoutPosBottom","FlyoutPosTallest","FlyoutPosTopFill","FlyoutPosBottomFill","FlyoutPosTallestFill"],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA,MAAMA,uBAAuB,GAAG;AAC5BC,EAAAA,yBAAyB,EAAE,QADC;AAE5BC,EAAAA,yBAAyB,EAAE,eAFC;AAG5BC,EAAAA,eAAe,EAAE,KAHW;AAI5BC,EAAAA,iBAAiB,EAAE;AAJS,CAAhC;AAMA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,uBAAlB,CAAd,EAA0D;AAAEQ,EAAAA,uBAAuB,EAAE,KAA3B;AAAkCC,EAAAA,uBAAuB,EAAE,eAA3D;AAA4EC,EAAAA,aAAa,EAAE,KAA3F;AAAkGC,EAAAA,eAAe,EAAE;AAAnH,CAA1D,CAArB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,eAAe,GAAGN,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,uBAAlB,CAAd,EAA0D;AAAEQ,EAAAA,uBAAuB,EAAE,QAA3B;AAAqCC,EAAAA,uBAAuB,EAAE,eAA9D;AAA+EC,EAAAA,aAAa,EAAE,KAA9F;AAAqGC,EAAAA,eAAe,EAAE;AAAtH,CAA1D,CAAxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAME,gBAAgB,GAAGP,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,uBAAlB,CAAd,EAA0D;AAAES,EAAAA,uBAAuB,EAAE,SAA3B;AAAsCC,EAAAA,aAAa,EAAE,KAArD;AAA4DC,EAAAA,eAAe,EAAE;AAA7E,CAA1D,CAAzB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMG,gBAAgB,GAAGR,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBF,YAAlB,CAAd,EAA+C;AAAEM,EAAAA,eAAe,EAAE;AAAnB,CAA/C,CAAzB;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMI,mBAAmB,GAAGT,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBK,eAAlB,CAAd,EAAkD;AAAED,EAAAA,eAAe,EAAE;AAAnB,CAAlD,CAA5B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMK,oBAAoB,GAAGV,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBM,gBAAlB,CAAd,EAAmD;AAAEF,EAAAA,eAAe,EAAE;AAAnB,CAAnD,CAA7B","sourcesContent":["/**\n * Building blocks - partial configs\n */\n/**\n * A region that matches the size and position of the anchor horizontally\n */\nconst horizontalAnchorOverlay = {\n    horizontalDefaultPosition: \"center\",\n    horizontalPositioningMode: \"locktodefault\",\n    horizontalInset: false,\n    horizontalScaling: \"anchor\",\n};\n/**\n * Exported configs\n */\n/**\n * A region that always places itself above the anchor, has\n * a width to match the anchor, and is sized vertically by content\n *\n * @public\n */\nexport const FlyoutPosTop = Object.assign(Object.assign({}, horizontalAnchorOverlay), { verticalDefaultPosition: \"top\", verticalPositioningMode: \"locktodefault\", verticalInset: false, verticalScaling: \"content\" });\n/**\n * A region that always places itself below the anchor, has\n * a width to match the anchor, and is sized vertically by content\n *\n * @public\n */\nexport const FlyoutPosBottom = Object.assign(Object.assign({}, horizontalAnchorOverlay), { verticalDefaultPosition: \"bottom\", verticalPositioningMode: \"locktodefault\", verticalInset: false, verticalScaling: \"content\" });\n/**\n * A region that places itself above or below the anchor\n * based on available space, has a width to match the anchor,\n * and is sized vertically by content\n *\n * @public\n */\nexport const FlyoutPosTallest = Object.assign(Object.assign({}, horizontalAnchorOverlay), { verticalPositioningMode: \"dynamic\", verticalInset: false, verticalScaling: \"content\" });\n/**\n * A region that always places itself above the anchor, has\n * a width to match the anchor, and is sized vertically by available space\n *\n * @public\n */\nexport const FlyoutPosTopFill = Object.assign(Object.assign({}, FlyoutPosTop), { verticalScaling: \"fill\" });\n/**\n * A region that always places itself below the anchor, has\n * a width to match the anchor, and is sized vertically by available space\n *\n * @public\n */\nexport const FlyoutPosBottomFill = Object.assign(Object.assign({}, FlyoutPosBottom), { verticalScaling: \"fill\" });\n/**\n * A region that places itself above or below the anchor\n * based on available space, has a width to match the anchor,\n * and is sized vertically by available space\n *\n * @public\n */\nexport const FlyoutPosTallestFill = Object.assign(Object.assign({}, FlyoutPosTallest), { verticalScaling: \"fill\" });\n"]},"metadata":{},"sourceType":"module"}