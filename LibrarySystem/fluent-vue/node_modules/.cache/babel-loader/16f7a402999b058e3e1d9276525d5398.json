{"ast":null,"code":"import { computed, defineComponent, h } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { formatLength } from '../../_utils';\nimport { iconWrapperLight } from '../styles';\nimport style from './styles/index.cssr';\nconst iconWrapperProps = Object.assign(Object.assign({}, useTheme.props), {\n  size: {\n    type: Number,\n    default: 24\n  },\n  borderRadius: {\n    type: Number,\n    default: 6\n  },\n  color: String,\n  iconColor: String\n});\nexport const NIconWrapper = defineComponent({\n  name: 'IconWrapper',\n  props: iconWrapperProps,\n\n  setup(props, {\n    slots\n  }) {\n    const themeRef = useTheme('IconWrapper', '-icon-wrapper', style, iconWrapperLight, props);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          iconColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-color': color,\n        '--n-icon-color': iconColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('icon-wrapper', undefined, cssVarsRef, props) : undefined;\n    return () => {\n      const size = formatLength(props.size);\n      themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender();\n      return h(\"div\", {\n        class: [`${mergedClsPrefixRef.value}-icon-wrapper`, themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value],\n        style: [cssVarsRef === null || cssVarsRef === void 0 ? void 0 : cssVarsRef.value, {\n          height: size,\n          width: size,\n          borderRadius: formatLength(props.borderRadius),\n          backgroundColor: props.color,\n          color: props.iconColor\n        }]\n      }, slots);\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/icon-wrapper/src/IconWrapper.js"],"names":["computed","defineComponent","h","useConfig","useTheme","useThemeClass","formatLength","iconWrapperLight","style","iconWrapperProps","Object","assign","props","size","type","Number","default","borderRadius","color","String","iconColor","NIconWrapper","name","setup","slots","themeRef","mergedClsPrefixRef","inlineThemeDisabled","cssVarsRef","common","cubicBezierEaseInOut","self","value","themeClassHandle","undefined","onRender","class","themeClass","height","width","backgroundColor"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,eAAnB,EAAoCC,CAApC,QAA6C,KAA7C;AACA,SAASC,SAAT,EAAoBC,QAApB,EAA8BC,aAA9B,QAAmD,eAAnD;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,QAAQ,CAACQ,KAA3B,CAAd,EAAiD;AAAEC,EAAAA,IAAI,EAAE;AAC1EC,IAAAA,IAAI,EAAEC,MADoE;AAE1EC,IAAAA,OAAO,EAAE;AAFiE,GAAR;AAGnEC,EAAAA,YAAY,EAAE;AACbH,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAHqD;AAMnEE,EAAAA,KAAK,EAAEC,MAN4D;AAMpDC,EAAAA,SAAS,EAAED;AANyC,CAAjD,CAAzB;AAOA,OAAO,MAAME,YAAY,GAAGpB,eAAe,CAAC;AACxCqB,EAAAA,IAAI,EAAE,aADkC;AAExCV,EAAAA,KAAK,EAAEH,gBAFiC;;AAGxCc,EAAAA,KAAK,CAACX,KAAD,EAAQ;AAAEY,IAAAA;AAAF,GAAR,EAAmB;AACpB,UAAMC,QAAQ,GAAGrB,QAAQ,CAAC,aAAD,EAAgB,eAAhB,EAAiCI,KAAjC,EAAwCD,gBAAxC,EAA0DK,KAA1D,CAAzB;AACA,UAAM;AAAEc,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAA8CxB,SAAS,CAACS,KAAD,CAA7D;AACA,UAAMgB,UAAU,GAAG5B,QAAQ,CAAC,MAAM;AAC9B,YAAM;AAAE6B,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF,SAAV;AAAoCC,QAAAA,IAAI,EAAE;AAAEb,UAAAA,KAAF;AAASE,UAAAA;AAAT;AAA1C,UAAmEK,QAAQ,CAACO,KAAlF;AACA,aAAO;AACH,sBAAcF,oBADX;AAEH,qBAAaZ,KAFV;AAGH,0BAAkBE;AAHf,OAAP;AAKH,KAP0B,CAA3B;AAQA,UAAMa,gBAAgB,GAAGN,mBAAmB,GACtCtB,aAAa,CAAC,cAAD,EAAiB6B,SAAjB,EAA4BN,UAA5B,EAAwChB,KAAxC,CADyB,GAEtCsB,SAFN;AAGA,WAAO,MAAM;AACT,YAAMrB,IAAI,GAAGP,YAAY,CAACM,KAAK,CAACC,IAAP,CAAzB;AACAoB,MAAAA,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACE,QAAjB,EAApE;AACA,aAAQjC,CAAC,CAAC,KAAD,EAAQ;AAAEkC,QAAAA,KAAK,EAAE,CACjB,GAAEV,kBAAkB,CAACM,KAAM,eADV,EAElBC,gBAAgB,KAAK,IAArB,IAA6BA,gBAAgB,KAAK,KAAK,CAAvD,GAA2D,KAAK,CAAhE,GAAoEA,gBAAgB,CAACI,UAAjB,CAA4BL,KAF9E,CAAT;AAGVxB,QAAAA,KAAK,EAAE,CACNoB,UAAU,KAAK,IAAf,IAAuBA,UAAU,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,UAAU,CAACI,KAD7D,EAEN;AACIM,UAAAA,MAAM,EAAEzB,IADZ;AAEI0B,UAAAA,KAAK,EAAE1B,IAFX;AAGII,UAAAA,YAAY,EAAEX,YAAY,CAACM,KAAK,CAACK,YAAP,CAH9B;AAIIuB,UAAAA,eAAe,EAAE5B,KAAK,CAACM,KAJ3B;AAKIA,UAAAA,KAAK,EAAEN,KAAK,CAACQ;AALjB,SAFM;AAHG,OAAR,EAYAI,KAZA,CAAT;AAaH,KAhBD;AAiBH;;AAlCuC,CAAD,CAApC","sourcesContent":["import { computed, defineComponent, h } from 'vue';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { formatLength } from '../../_utils';\nimport { iconWrapperLight } from '../styles';\nimport style from './styles/index.cssr';\nconst iconWrapperProps = Object.assign(Object.assign({}, useTheme.props), { size: {\n        type: Number,\n        default: 24\n    }, borderRadius: {\n        type: Number,\n        default: 6\n    }, color: String, iconColor: String });\nexport const NIconWrapper = defineComponent({\n    name: 'IconWrapper',\n    props: iconWrapperProps,\n    setup(props, { slots }) {\n        const themeRef = useTheme('IconWrapper', '-icon-wrapper', style, iconWrapperLight, props);\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self: { color, iconColor } } = themeRef.value;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-color': color,\n                '--n-icon-color': iconColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('icon-wrapper', undefined, cssVarsRef, props)\n            : undefined;\n        return () => {\n            const size = formatLength(props.size);\n            themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender();\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefixRef.value}-icon-wrapper`,\n                    themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass.value\n                ], style: [\n                    cssVarsRef === null || cssVarsRef === void 0 ? void 0 : cssVarsRef.value,\n                    {\n                        height: size,\n                        width: size,\n                        borderRadius: formatLength(props.borderRadius),\n                        backgroundColor: props.color,\n                        color: props.iconColor\n                    }\n                ] }, slots));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}