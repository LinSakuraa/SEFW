{"ast":null,"code":"/* eslint-disable no-void */\n\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\nimport { mergeProps, computed, defineComponent, ref, onMounted, h, onActivated } from 'vue';\nimport { depx, pxfy, beforeNextFrameOnce } from 'seemly';\nimport { useMemo } from 'vooks';\nimport { c, cssrAnchorMetaName, FinweckTree } from '../../shared';\nimport VResizeObserver from '../../resize-observer/src';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nconst styles = c('.v-vl', {\n  maxHeight: 'inherit',\n  height: '100%',\n  overflow: 'auto',\n  minWidth: '1px' // a zero width container won't be scrollable\n\n}, [c('&:not(.v-vl--show-scrollbar)', {\n  scrollbarWidth: 'none'\n}, [c('&::-webkit-scrollbar, &::-webkit-scrollbar-track-piece, &::-webkit-scrollbar-thumb', {\n  width: 0,\n  height: 0,\n  display: 'none'\n})])]);\nexport default defineComponent({\n  name: 'VirtualList',\n  inheritAttrs: false,\n  props: {\n    showScrollbar: {\n      type: Boolean,\n      default: true\n    },\n    items: {\n      type: Array,\n      default: () => []\n    },\n    // it is suppose to be the min height\n    itemSize: {\n      type: Number,\n      required: true\n    },\n    itemResizable: Boolean,\n    itemsStyle: [String, Object],\n    visibleItemsTag: {\n      type: [String, Object],\n      default: 'div'\n    },\n    visibleItemsProps: Object,\n    ignoreItemResize: Boolean,\n    onScroll: Function,\n    onWheel: Function,\n    onResize: Function,\n    defaultScrollKey: [Number, String],\n    defaultScrollIndex: Number,\n    keyField: {\n      type: String,\n      default: 'key'\n    },\n    // Whether it is a good API?\n    // ResizeObserver + footer & header is not enough.\n    // Too complex for simple case\n    paddingTop: {\n      type: [Number, String],\n      default: 0\n    },\n    paddingBottom: {\n      type: [Number, String],\n      default: 0\n    }\n  },\n\n  setup(props) {\n    const ssrAdapter = useSsrAdapter();\n    styles.mount({\n      id: 'vueuc/virtual-list',\n      head: true,\n      anchorMetaName: cssrAnchorMetaName,\n      ssr: ssrAdapter\n    });\n    onMounted(() => {\n      const {\n        defaultScrollIndex,\n        defaultScrollKey\n      } = props;\n\n      if (defaultScrollIndex !== undefined && defaultScrollIndex !== null) {\n        scrollTo({\n          index: defaultScrollIndex\n        });\n      } else if (defaultScrollKey !== undefined && defaultScrollKey !== null) {\n        scrollTo({\n          key: defaultScrollKey\n        });\n      }\n    });\n    onActivated(() => {\n      scrollTo({\n        top: scrollTopRef.value\n      });\n    });\n    const keyIndexMapRef = computed(() => {\n      const map = new Map();\n      const {\n        keyField\n      } = props;\n      props.items.forEach((item, index) => {\n        map.set(item[keyField], index);\n      });\n      return map;\n    });\n    const listElRef = ref(null);\n    const listHeightRef = ref(undefined);\n    const keyToHeightOffset = new Map();\n    const finweckTreeRef = computed(() => {\n      const {\n        items,\n        itemSize,\n        keyField\n      } = props;\n      const ft = new FinweckTree(items.length, itemSize);\n      items.forEach((item, index) => {\n        const key = item[keyField];\n        const heightOffset = keyToHeightOffset.get(key);\n\n        if (heightOffset !== undefined) {\n          ft.add(index, heightOffset);\n        }\n      });\n      return ft;\n    });\n    const finweckTreeUpdateTrigger = ref(0);\n    const scrollTopRef = ref(0);\n    const startIndexRef = useMemo(() => {\n      return Math.max(finweckTreeRef.value.getBound(scrollTopRef.value - depx(props.paddingTop)) - 1, 0);\n    });\n    const viewportItemsRef = computed(() => {\n      const {\n        value: listHeight\n      } = listHeightRef;\n      if (listHeight === undefined) return [];\n      const {\n        items,\n        itemSize\n      } = props;\n      const startIndex = startIndexRef.value;\n      const endIndex = Math.min(startIndex + Math.ceil(listHeight / itemSize + 1), items.length - 1);\n      const viewportItems = [];\n\n      for (let i = startIndex; i <= endIndex; ++i) {\n        viewportItems.push(items[i]);\n      }\n\n      return viewportItems;\n    });\n\n    const scrollTo = options => {\n      const {\n        left,\n        top,\n        index,\n        key,\n        position,\n        behavior,\n        debounce = true\n      } = options;\n\n      if (left !== undefined || top !== undefined) {\n        scrollToPosition(left, top, behavior);\n      } else if (index !== undefined) {\n        scrollToIndex(index, behavior, debounce);\n      } else if (key !== undefined) {\n        const toIndex = keyIndexMapRef.value.get(key);\n        if (toIndex !== undefined) scrollToIndex(toIndex, behavior, debounce);\n      } else if (position === 'bottom') {\n        scrollToPosition(0, Number.MAX_SAFE_INTEGER, behavior);\n      } else if (position === 'top') {\n        scrollToPosition(0, 0, behavior);\n      }\n    };\n\n    function scrollToIndex(index, behavior, debounce) {\n      const {\n        value: ft\n      } = finweckTreeRef;\n      const targetTop = ft.sum(index) + depx(props.paddingTop);\n\n      if (!debounce) {\n        listElRef.value.scrollTo({\n          left: 0,\n          top: targetTop,\n          behavior\n        });\n      } else {\n        const {\n          scrollTop,\n          offsetHeight\n        } = listElRef.value;\n\n        if (targetTop > scrollTop) {\n          const itemSize = ft.get(index);\n\n          if (targetTop + itemSize <= scrollTop + offsetHeight) {// do nothing\n          } else {\n            listElRef.value.scrollTo({\n              left: 0,\n              top: targetTop + itemSize - offsetHeight,\n              behavior\n            });\n          }\n        } else {\n          listElRef.value.scrollTo({\n            left: 0,\n            top: targetTop,\n            behavior\n          });\n        }\n      }\n\n      lastScrollAnchorIndex = index;\n    }\n\n    function scrollToPosition(left, top, behavior) {\n      listElRef.value.scrollTo({\n        left,\n        top,\n        behavior\n      });\n    }\n\n    function handleItemResize(key, entry) {\n      var _a, _b, _c, _d;\n\n      if (props.ignoreItemResize) return;\n      if (isHideByVShow(entry.target)) return;\n      const {\n        value: ft\n      } = finweckTreeRef;\n      const index = keyIndexMapRef.value.get(key);\n      const previousHeight = ft.get(index);\n      const height = (_c = (_b = (_a = entry.borderBoxSize) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.blockSize) !== null && _c !== void 0 ? _c : entry.contentRect.height;\n      if (height === previousHeight) return; // height offset based on itemSize\n      // used when rebuild the finweck tree\n\n      const offset = height - props.itemSize;\n\n      if (offset === 0) {\n        keyToHeightOffset.delete(key);\n      } else {\n        keyToHeightOffset.set(key, height - props.itemSize);\n      } // delta height based on finweck tree data\n\n\n      const delta = height - previousHeight;\n      if (delta === 0) return;\n\n      if (lastAnchorIndex !== undefined && index <= lastAnchorIndex) {\n        (_d = listElRef.value) === null || _d === void 0 ? void 0 : _d.scrollBy(0, delta);\n      }\n\n      ft.add(index, delta);\n      finweckTreeUpdateTrigger.value++;\n    }\n\n    function handleListScroll(e) {\n      beforeNextFrameOnce(syncViewport);\n      const {\n        onScroll\n      } = props;\n      if (onScroll !== undefined) onScroll(e);\n    }\n\n    function handleListResize(entry) {\n      // List is HTMLElement\n      if (isHideByVShow(entry.target)) return; // If height is same, return\n\n      if (entry.contentRect.height === listHeightRef.value) return;\n      listHeightRef.value = entry.contentRect.height;\n      const {\n        onResize\n      } = props;\n      if (onResize !== undefined) onResize(entry);\n    }\n\n    let lastScrollAnchorIndex;\n    let lastAnchorIndex;\n\n    function syncViewport() {\n      const {\n        value: listEl\n      } = listElRef; // sometime ref el can be null\n      // https://github.com/TuSimple/naive-ui/issues/811\n\n      if (listEl == null) return;\n      lastAnchorIndex = lastScrollAnchorIndex !== null && lastScrollAnchorIndex !== void 0 ? lastScrollAnchorIndex : startIndexRef.value;\n      lastScrollAnchorIndex = undefined;\n      scrollTopRef.value = listElRef.value.scrollTop;\n    }\n\n    function isHideByVShow(el) {\n      let cursor = el;\n\n      while (cursor !== null) {\n        if (cursor.style.display === 'none') return true;\n        cursor = cursor.parentElement;\n      }\n\n      return false;\n    }\n\n    return {\n      listHeight: listHeightRef,\n      listStyle: {\n        overflow: 'auto'\n      },\n      keyToIndex: keyIndexMapRef,\n      itemsStyle: computed(() => {\n        const {\n          itemResizable\n        } = props;\n        const height = pxfy(finweckTreeRef.value.sum()); // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n\n        finweckTreeUpdateTrigger.value;\n        return [props.itemsStyle, {\n          boxSizing: 'content-box',\n          height: itemResizable ? '' : height,\n          minHeight: itemResizable ? height : '',\n          paddingTop: pxfy(props.paddingTop),\n          paddingBottom: pxfy(props.paddingBottom)\n        }];\n      }),\n      visibleItemsStyle: computed(() => {\n        // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n        finweckTreeUpdateTrigger.value;\n        return {\n          transform: `translateY(${pxfy(finweckTreeRef.value.sum(startIndexRef.value))})`\n        };\n      }),\n      viewportItems: viewportItemsRef,\n      listElRef,\n      itemsElRef: ref(null),\n      scrollTo,\n      handleListResize,\n      handleListScroll,\n      handleItemResize\n    };\n  },\n\n  render() {\n    const {\n      itemResizable,\n      keyField,\n      keyToIndex,\n      visibleItemsTag\n    } = this;\n    return h(VResizeObserver, {\n      onResize: this.handleListResize\n    }, {\n      default: () => {\n        var _a, _b;\n\n        return h('div', mergeProps(this.$attrs, {\n          class: ['v-vl', this.showScrollbar && 'v-vl--show-scrollbar'],\n          onScroll: this.handleListScroll,\n          onWheel: this.onWheel,\n          ref: 'listElRef'\n        }), [this.items.length !== 0 ? h('div', {\n          ref: 'itemsElRef',\n          class: 'v-vl-items',\n          style: this.itemsStyle\n        }, [h(visibleItemsTag, Object.assign({\n          class: 'v-vl-visible-items',\n          style: this.visibleItemsStyle\n        }, this.visibleItemsProps), {\n          default: () => this.viewportItems.map(item => {\n            const key = item[keyField];\n            const index = keyToIndex.get(key);\n            const itemVNode = this.$slots.default({\n              item,\n              index\n            })[0];\n\n            if (itemResizable) {\n              return h(VResizeObserver, {\n                key,\n                onResize: entry => this.handleItemResize(key, entry)\n              }, {\n                default: () => itemVNode\n              });\n            }\n\n            itemVNode.key = key;\n            return itemVNode;\n          })\n        })]) : (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)]);\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/vueuc/es/virtual-list/src/VirtualList.js"],"names":["mergeProps","computed","defineComponent","ref","onMounted","h","onActivated","depx","pxfy","beforeNextFrameOnce","useMemo","c","cssrAnchorMetaName","FinweckTree","VResizeObserver","useSsrAdapter","styles","maxHeight","height","overflow","minWidth","scrollbarWidth","width","display","name","inheritAttrs","props","showScrollbar","type","Boolean","default","items","Array","itemSize","Number","required","itemResizable","itemsStyle","String","Object","visibleItemsTag","visibleItemsProps","ignoreItemResize","onScroll","Function","onWheel","onResize","defaultScrollKey","defaultScrollIndex","keyField","paddingTop","paddingBottom","setup","ssrAdapter","mount","id","head","anchorMetaName","ssr","undefined","scrollTo","index","key","top","scrollTopRef","value","keyIndexMapRef","map","Map","forEach","item","set","listElRef","listHeightRef","keyToHeightOffset","finweckTreeRef","ft","length","heightOffset","get","add","finweckTreeUpdateTrigger","startIndexRef","Math","max","getBound","viewportItemsRef","listHeight","startIndex","endIndex","min","ceil","viewportItems","i","push","options","left","position","behavior","debounce","scrollToPosition","scrollToIndex","toIndex","MAX_SAFE_INTEGER","targetTop","sum","scrollTop","offsetHeight","lastScrollAnchorIndex","handleItemResize","entry","_a","_b","_c","_d","isHideByVShow","target","previousHeight","borderBoxSize","blockSize","contentRect","offset","delete","delta","lastAnchorIndex","scrollBy","handleListScroll","e","syncViewport","handleListResize","listEl","el","cursor","style","parentElement","listStyle","keyToIndex","boxSizing","minHeight","visibleItemsStyle","transform","itemsElRef","render","$attrs","class","assign","itemVNode","$slots","empty","call"],"mappings":"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","sourcesContent":["/* eslint-disable no-void */\n/* eslint-disable @typescript-eslint/restrict-plus-operands */\nimport { mergeProps, computed, defineComponent, ref, onMounted, h, onActivated } from 'vue';\nimport { depx, pxfy, beforeNextFrameOnce } from 'seemly';\nimport { useMemo } from 'vooks';\nimport { c, cssrAnchorMetaName, FinweckTree } from '../../shared';\nimport VResizeObserver from '../../resize-observer/src';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nconst styles = c('.v-vl', {\n    maxHeight: 'inherit',\n    height: '100%',\n    overflow: 'auto',\n    minWidth: '1px' // a zero width container won't be scrollable\n}, [\n    c('&:not(.v-vl--show-scrollbar)', {\n        scrollbarWidth: 'none'\n    }, [\n        c('&::-webkit-scrollbar, &::-webkit-scrollbar-track-piece, &::-webkit-scrollbar-thumb', {\n            width: 0,\n            height: 0,\n            display: 'none'\n        })\n    ])\n]);\nexport default defineComponent({\n    name: 'VirtualList',\n    inheritAttrs: false,\n    props: {\n        showScrollbar: {\n            type: Boolean,\n            default: true\n        },\n        items: {\n            type: Array,\n            default: () => []\n        },\n        // it is suppose to be the min height\n        itemSize: {\n            type: Number,\n            required: true\n        },\n        itemResizable: Boolean,\n        itemsStyle: [String, Object],\n        visibleItemsTag: {\n            type: [String, Object],\n            default: 'div'\n        },\n        visibleItemsProps: Object,\n        ignoreItemResize: Boolean,\n        onScroll: Function,\n        onWheel: Function,\n        onResize: Function,\n        defaultScrollKey: [Number, String],\n        defaultScrollIndex: Number,\n        keyField: {\n            type: String,\n            default: 'key'\n        },\n        // Whether it is a good API?\n        // ResizeObserver + footer & header is not enough.\n        // Too complex for simple case\n        paddingTop: {\n            type: [Number, String],\n            default: 0\n        },\n        paddingBottom: {\n            type: [Number, String],\n            default: 0\n        }\n    },\n    setup(props) {\n        const ssrAdapter = useSsrAdapter();\n        styles.mount({\n            id: 'vueuc/virtual-list',\n            head: true,\n            anchorMetaName: cssrAnchorMetaName,\n            ssr: ssrAdapter\n        });\n        onMounted(() => {\n            const { defaultScrollIndex, defaultScrollKey } = props;\n            if (defaultScrollIndex !== undefined && defaultScrollIndex !== null) {\n                scrollTo({ index: defaultScrollIndex });\n            }\n            else if (defaultScrollKey !== undefined && defaultScrollKey !== null) {\n                scrollTo({ key: defaultScrollKey });\n            }\n        });\n        onActivated(() => {\n            scrollTo({ top: scrollTopRef.value });\n        });\n        const keyIndexMapRef = computed(() => {\n            const map = new Map();\n            const { keyField } = props;\n            props.items.forEach((item, index) => {\n                map.set(item[keyField], index);\n            });\n            return map;\n        });\n        const listElRef = ref(null);\n        const listHeightRef = ref(undefined);\n        const keyToHeightOffset = new Map();\n        const finweckTreeRef = computed(() => {\n            const { items, itemSize, keyField } = props;\n            const ft = new FinweckTree(items.length, itemSize);\n            items.forEach((item, index) => {\n                const key = item[keyField];\n                const heightOffset = keyToHeightOffset.get(key);\n                if (heightOffset !== undefined) {\n                    ft.add(index, heightOffset);\n                }\n            });\n            return ft;\n        });\n        const finweckTreeUpdateTrigger = ref(0);\n        const scrollTopRef = ref(0);\n        const startIndexRef = useMemo(() => {\n            return Math.max(finweckTreeRef.value.getBound(scrollTopRef.value - depx(props.paddingTop)) - 1, 0);\n        });\n        const viewportItemsRef = computed(() => {\n            const { value: listHeight } = listHeightRef;\n            if (listHeight === undefined)\n                return [];\n            const { items, itemSize } = props;\n            const startIndex = startIndexRef.value;\n            const endIndex = Math.min(startIndex + Math.ceil(listHeight / itemSize + 1), items.length - 1);\n            const viewportItems = [];\n            for (let i = startIndex; i <= endIndex; ++i) {\n                viewportItems.push(items[i]);\n            }\n            return viewportItems;\n        });\n        const scrollTo = (options) => {\n            const { left, top, index, key, position, behavior, debounce = true } = options;\n            if (left !== undefined || top !== undefined) {\n                scrollToPosition(left, top, behavior);\n            }\n            else if (index !== undefined) {\n                scrollToIndex(index, behavior, debounce);\n            }\n            else if (key !== undefined) {\n                const toIndex = keyIndexMapRef.value.get(key);\n                if (toIndex !== undefined)\n                    scrollToIndex(toIndex, behavior, debounce);\n            }\n            else if (position === 'bottom') {\n                scrollToPosition(0, Number.MAX_SAFE_INTEGER, behavior);\n            }\n            else if (position === 'top') {\n                scrollToPosition(0, 0, behavior);\n            }\n        };\n        function scrollToIndex(index, behavior, debounce) {\n            const { value: ft } = finweckTreeRef;\n            const targetTop = ft.sum(index) + depx(props.paddingTop);\n            if (!debounce) {\n                listElRef.value.scrollTo({\n                    left: 0,\n                    top: targetTop,\n                    behavior\n                });\n            }\n            else {\n                const { scrollTop, offsetHeight } = listElRef.value;\n                if (targetTop > scrollTop) {\n                    const itemSize = ft.get(index);\n                    if (targetTop + itemSize <= scrollTop + offsetHeight) {\n                        // do nothing\n                    }\n                    else {\n                        listElRef.value.scrollTo({\n                            left: 0,\n                            top: targetTop + itemSize - offsetHeight,\n                            behavior\n                        });\n                    }\n                }\n                else {\n                    listElRef.value.scrollTo({\n                        left: 0,\n                        top: targetTop,\n                        behavior\n                    });\n                }\n            }\n            lastScrollAnchorIndex = index;\n        }\n        function scrollToPosition(left, top, behavior) {\n            listElRef.value.scrollTo({\n                left,\n                top,\n                behavior\n            });\n        }\n        function handleItemResize(key, entry) {\n            var _a, _b, _c, _d;\n            if (props.ignoreItemResize)\n                return;\n            if (isHideByVShow(entry.target))\n                return;\n            const { value: ft } = finweckTreeRef;\n            const index = keyIndexMapRef.value.get(key);\n            const previousHeight = ft.get(index);\n            const height = (_c = (_b = (_a = entry.borderBoxSize) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.blockSize) !== null && _c !== void 0 ? _c : entry.contentRect.height;\n            if (height === previousHeight)\n                return;\n            // height offset based on itemSize\n            // used when rebuild the finweck tree\n            const offset = height - props.itemSize;\n            if (offset === 0) {\n                keyToHeightOffset.delete(key);\n            }\n            else {\n                keyToHeightOffset.set(key, height - props.itemSize);\n            }\n            // delta height based on finweck tree data\n            const delta = height - previousHeight;\n            if (delta === 0)\n                return;\n            if (lastAnchorIndex !== undefined && index <= lastAnchorIndex) {\n                (_d = listElRef.value) === null || _d === void 0 ? void 0 : _d.scrollBy(0, delta);\n            }\n            ft.add(index, delta);\n            finweckTreeUpdateTrigger.value++;\n        }\n        function handleListScroll(e) {\n            beforeNextFrameOnce(syncViewport);\n            const { onScroll } = props;\n            if (onScroll !== undefined)\n                onScroll(e);\n        }\n        function handleListResize(entry) {\n            // List is HTMLElement\n            if (isHideByVShow(entry.target))\n                return;\n            // If height is same, return\n            if (entry.contentRect.height === listHeightRef.value)\n                return;\n            listHeightRef.value = entry.contentRect.height;\n            const { onResize } = props;\n            if (onResize !== undefined)\n                onResize(entry);\n        }\n        let lastScrollAnchorIndex;\n        let lastAnchorIndex;\n        function syncViewport() {\n            const { value: listEl } = listElRef;\n            // sometime ref el can be null\n            // https://github.com/TuSimple/naive-ui/issues/811\n            if (listEl == null)\n                return;\n            lastAnchorIndex = lastScrollAnchorIndex !== null && lastScrollAnchorIndex !== void 0 ? lastScrollAnchorIndex : startIndexRef.value;\n            lastScrollAnchorIndex = undefined;\n            scrollTopRef.value = listElRef.value.scrollTop;\n        }\n        function isHideByVShow(el) {\n            let cursor = el;\n            while (cursor !== null) {\n                if (cursor.style.display === 'none')\n                    return true;\n                cursor = cursor.parentElement;\n            }\n            return false;\n        }\n        return {\n            listHeight: listHeightRef,\n            listStyle: {\n                overflow: 'auto'\n            },\n            keyToIndex: keyIndexMapRef,\n            itemsStyle: computed(() => {\n                const { itemResizable } = props;\n                const height = pxfy(finweckTreeRef.value.sum());\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                finweckTreeUpdateTrigger.value;\n                return [\n                    props.itemsStyle,\n                    {\n                        boxSizing: 'content-box',\n                        height: itemResizable ? '' : height,\n                        minHeight: itemResizable ? height : '',\n                        paddingTop: pxfy(props.paddingTop),\n                        paddingBottom: pxfy(props.paddingBottom)\n                    }\n                ];\n            }),\n            visibleItemsStyle: computed(() => {\n                // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n                finweckTreeUpdateTrigger.value;\n                return {\n                    transform: `translateY(${pxfy(finweckTreeRef.value.sum(startIndexRef.value))})`\n                };\n            }),\n            viewportItems: viewportItemsRef,\n            listElRef,\n            itemsElRef: ref(null),\n            scrollTo,\n            handleListResize,\n            handleListScroll,\n            handleItemResize\n        };\n    },\n    render() {\n        const { itemResizable, keyField, keyToIndex, visibleItemsTag } = this;\n        return h(VResizeObserver, {\n            onResize: this.handleListResize\n        }, {\n            default: () => {\n                var _a, _b;\n                return h('div', mergeProps(this.$attrs, {\n                    class: ['v-vl', this.showScrollbar && 'v-vl--show-scrollbar'],\n                    onScroll: this.handleListScroll,\n                    onWheel: this.onWheel,\n                    ref: 'listElRef'\n                }), [\n                    this.items.length !== 0\n                        ? h('div', {\n                            ref: 'itemsElRef',\n                            class: 'v-vl-items',\n                            style: this.itemsStyle\n                        }, [\n                            h(visibleItemsTag, Object.assign({\n                                class: 'v-vl-visible-items',\n                                style: this.visibleItemsStyle\n                            }, this.visibleItemsProps), {\n                                default: () => this.viewportItems.map((item) => {\n                                    const key = item[keyField];\n                                    const index = keyToIndex.get(key);\n                                    const itemVNode = this.$slots.default({\n                                        item,\n                                        index\n                                    })[0];\n                                    if (itemResizable) {\n                                        return h(VResizeObserver, {\n                                            key,\n                                            onResize: (entry) => this.handleItemResize(key, entry)\n                                        }, {\n                                            default: () => itemVNode\n                                        });\n                                    }\n                                    itemVNode.key = key;\n                                    return itemVNode;\n                                })\n                            })\n                        ])\n                        : (_b = (_a = this.$slots).empty) === null || _b === void 0 ? void 0 : _b.call(_a)\n                ]);\n            }\n        });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}