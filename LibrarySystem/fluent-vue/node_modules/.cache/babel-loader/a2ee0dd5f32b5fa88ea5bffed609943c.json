{"ast":null,"code":"import commonVars from './_common';\nimport { buttonLight } from '../../button/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins';\nexport const self = vars => {\n  const {\n    textColor1,\n    textColor2,\n    modalColor,\n    closeColor,\n    closeColorHover,\n    closeColorPressed,\n    infoColor,\n    successColor,\n    warningColor,\n    errorColor,\n    primaryColor,\n    dividerColor,\n    borderRadius,\n    fontWeightStrong,\n    lineHeight,\n    fontSize\n  } = vars;\n  return Object.assign(Object.assign({}, commonVars), {\n    fontSize,\n    lineHeight,\n    border: `1px solid ${dividerColor}`,\n    titleTextColor: textColor1,\n    textColor: textColor2,\n    color: modalColor,\n    closeColor: closeColor,\n    closeColorHover: closeColorHover,\n    closeColorPressed: closeColorPressed,\n    iconColor: primaryColor,\n    iconColorInfo: infoColor,\n    iconColorSuccess: successColor,\n    iconColorWarning: warningColor,\n    iconColorError: errorColor,\n    borderRadius,\n    titleFontWeight: fontWeightStrong\n  });\n};\nconst dialogLight = createTheme({\n  name: 'Dialog',\n  common: commonLight,\n  peers: {\n    Button: buttonLight\n  },\n  self\n});\nexport default dialogLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dialog/styles/light.js"],"names":["commonVars","buttonLight","commonLight","createTheme","self","vars","textColor1","textColor2","modalColor","closeColor","closeColorHover","closeColorPressed","infoColor","successColor","warningColor","errorColor","primaryColor","dividerColor","borderRadius","fontWeightStrong","lineHeight","fontSize","Object","assign","border","titleTextColor","textColor","color","iconColor","iconColorInfo","iconColorSuccess","iconColorWarning","iconColorError","titleFontWeight","dialogLight","name","common","peers","Button"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,WAAvB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,UAAd;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA,UAAtC;AAAkDC,IAAAA,eAAlD;AAAmEC,IAAAA,iBAAnE;AAAsFC,IAAAA,SAAtF;AAAiGC,IAAAA,YAAjG;AAA+GC,IAAAA,YAA/G;AAA6HC,IAAAA,UAA7H;AAAyIC,IAAAA,YAAzI;AAAuJC,IAAAA,YAAvJ;AAAqKC,IAAAA,YAArK;AAAmLC,IAAAA,gBAAnL;AAAqMC,IAAAA,UAArM;AAAiNC,IAAAA;AAAjN,MAA8NhB,IAApO;AACA,SAAOiB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,UAAlB,CAAd,EAA6C;AAAEqB,IAAAA,QAAF;AAChDD,IAAAA,UADgD;AACpCI,IAAAA,MAAM,EAAG,aAAYP,YAAa,EADE;AACCQ,IAAAA,cAAc,EAAEnB,UADjB;AAC6BoB,IAAAA,SAAS,EAAEnB,UADxC;AACoDoB,IAAAA,KAAK,EAAEnB,UAD3D;AACuEC,IAAAA,UAAU,EAAEA,UADnF;AAC+FC,IAAAA,eAAe,EAAEA,eADhH;AACiIC,IAAAA,iBAAiB,EAAEA,iBADpJ;AACuKiB,IAAAA,SAAS,EAAEZ,YADlL;AACgMa,IAAAA,aAAa,EAAEjB,SAD/M;AAC0NkB,IAAAA,gBAAgB,EAAEjB,YAD5O;AAC0PkB,IAAAA,gBAAgB,EAAEjB,YAD5Q;AAC0RkB,IAAAA,cAAc,EAAEjB,UAD1S;AACsTG,IAAAA,YADtT;AACoUe,IAAAA,eAAe,EAAEd;AADrV,GAA7C,CAAP;AAEH,CAJM;AAKP,MAAMe,WAAW,GAAG/B,WAAW,CAAC;AAC5BgC,EAAAA,IAAI,EAAE,QADsB;AAE5BC,EAAAA,MAAM,EAAElC,WAFoB;AAG5BmC,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAErC;AADL,GAHqB;AAM5BG,EAAAA;AAN4B,CAAD,CAA/B;AAQA,eAAe8B,WAAf","sourcesContent":["import commonVars from './_common';\nimport { buttonLight } from '../../button/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins';\nexport const self = (vars) => {\n    const { textColor1, textColor2, modalColor, closeColor, closeColorHover, closeColorPressed, infoColor, successColor, warningColor, errorColor, primaryColor, dividerColor, borderRadius, fontWeightStrong, lineHeight, fontSize } = vars;\n    return Object.assign(Object.assign({}, commonVars), { fontSize,\n        lineHeight, border: `1px solid ${dividerColor}`, titleTextColor: textColor1, textColor: textColor2, color: modalColor, closeColor: closeColor, closeColorHover: closeColorHover, closeColorPressed: closeColorPressed, iconColor: primaryColor, iconColorInfo: infoColor, iconColorSuccess: successColor, iconColorWarning: warningColor, iconColorError: errorColor, borderRadius, titleFontWeight: fontWeightStrong });\n};\nconst dialogLight = createTheme({\n    name: 'Dialog',\n    common: commonLight,\n    peers: {\n        Button: buttonLight\n    },\n    self\n});\nexport default dialogLight;\n"]},"metadata":{},"sourceType":"module"}