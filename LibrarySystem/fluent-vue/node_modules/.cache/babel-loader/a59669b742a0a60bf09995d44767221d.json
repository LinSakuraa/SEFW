{"ast":null,"code":"import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyValue } from './utils';\nimport WordCount from './WordCount';\nimport style from './styles/input.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst inputProps = Object.assign(Object.assign({}, useTheme.props), {\n  bordered: {\n    type: Boolean,\n    default: undefined\n  },\n  type: {\n    type: String,\n    default: 'text'\n  },\n  placeholder: [Array, String],\n  defaultValue: {\n    type: [String, Array],\n    default: null\n  },\n  value: [String, Array],\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  size: String,\n  rows: {\n    type: [Number, String],\n    default: 3\n  },\n  round: Boolean,\n  minlength: [String, Number],\n  maxlength: [String, Number],\n  clearable: Boolean,\n  autosize: {\n    type: [Boolean, Object],\n    default: false\n  },\n  pair: Boolean,\n  separator: String,\n  readonly: {\n    type: [String, Boolean],\n    default: false\n  },\n  passivelyActivated: Boolean,\n  showPasswordOn: String,\n  stateful: {\n    type: Boolean,\n    default: true\n  },\n  autofocus: Boolean,\n  inputProps: Object,\n  resizable: {\n    type: Boolean,\n    default: true\n  },\n  showCount: Boolean,\n  loading: {\n    type: Boolean,\n    default: undefined\n  },\n  onMousedown: Function,\n  onKeydown: Function,\n  onKeyup: Function,\n  onInput: [Function, Array],\n  onFocus: [Function, Array],\n  onBlur: [Function, Array],\n  onClick: [Function, Array],\n  onChange: [Function, Array],\n  onClear: [Function, Array],\n  status: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array],\n\n  /** private */\n  textDecoration: [String, Array],\n  attrSize: {\n    type: Number,\n    default: 20\n  },\n  onInputBlur: [Function, Array],\n  onInputFocus: [Function, Array],\n  onDeactivate: [Function, Array],\n  onActivate: [Function, Array],\n  onWrapperFocus: [Function, Array],\n  onWrapperBlur: [Function, Array],\n  internalDeactivateOnEnter: Boolean,\n  internalForceFocus: Boolean,\n  internalLoadingBeforeSuffix: Boolean,\n\n  /** deprecated */\n  showPasswordToggle: Boolean\n});\nexport default defineComponent({\n  name: 'Input',\n  props: inputProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(() => {\n        if (props.showPasswordToggle) {\n          warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n        }\n      });\n    }\n\n    const {\n      mergedClsPrefixRef,\n      mergedBorderedRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef); // dom refs\n\n    const wrapperElRef = ref(null);\n    const textareaElRef = ref(null);\n    const textareaMirrorElRef = ref(null);\n    const inputMirrorElRef = ref(null);\n    const inputElRef = ref(null);\n    const inputEl2Ref = ref(null);\n    const textareaScrollbarInstRef = ref(null); // local\n\n    const {\n      localeRef\n    } = useLocale('Input'); // value\n\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef); // form-item\n\n    const formItem = useFormItem(props);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      mergedStatusRef\n    } = formItem; // states\n\n    const focusedRef = ref(false);\n    const hoverRef = ref(false);\n    const isComposingRef = ref(false);\n    const activatedRef = ref(false);\n    let syncSource = null; // placeholder\n\n    const mergedPlaceholderRef = computed(() => {\n      const {\n        placeholder,\n        pair\n      } = props;\n\n      if (pair) {\n        if (Array.isArray(placeholder)) {\n          return placeholder;\n        } else if (placeholder === undefined) {\n          return ['', ''];\n        }\n\n        return [placeholder, placeholder];\n      } else if (placeholder === undefined) {\n        return [localeRef.value.placeholder];\n      } else {\n        return [placeholder];\n      }\n    });\n    const showPlaceholder1Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && (isEmptyValue(mergedValue) || Array.isArray(mergedValue) && isEmptyValue(mergedValue[0])) && mergedPlaceholder[0];\n    });\n    const showPlaceholder2Ref = computed(() => {\n      const {\n        value: isComposing\n      } = isComposingRef;\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedPlaceholder\n      } = mergedPlaceholderRef;\n      return !isComposing && mergedPlaceholder[1] && (isEmptyValue(mergedValue) || Array.isArray(mergedValue) && isEmptyValue(mergedValue[1]));\n    }); // focus\n\n    const mergedFocusRef = useMemo(() => {\n      return props.internalForceFocus || focusedRef.value;\n    }); // clear\n\n    const showClearButton = useMemo(() => {\n      if (mergedDisabledRef.value || props.readonly || !props.clearable || !mergedFocusRef.value && !hoverRef.value) {\n        return false;\n      }\n\n      const {\n        value: mergedValue\n      } = mergedValueRef;\n      const {\n        value: mergedFocus\n      } = mergedFocusRef;\n\n      if (props.pair) {\n        return !!(Array.isArray(mergedValue) && (mergedValue[0] || mergedValue[1])) && (hoverRef.value || mergedFocus);\n      } else {\n        return !!mergedValue && (hoverRef.value || mergedFocus);\n      }\n    }); // passwordVisible\n\n    const mergedShowPasswordOnRef = computed(() => {\n      const {\n        showPasswordOn\n      } = props;\n\n      if (showPasswordOn) {\n        return showPasswordOn;\n      }\n\n      if (props.showPasswordToggle) return 'click';\n      return undefined;\n    });\n    const passwordVisibleRef = ref(false); // text-decoration\n\n    const textDecorationStyleRef = computed(() => {\n      const {\n        textDecoration\n      } = props;\n      if (!textDecoration) return ['', ''];\n\n      if (Array.isArray(textDecoration)) {\n        return textDecoration.map(v => ({\n          textDecoration: v\n        }));\n      }\n\n      return [{\n        textDecoration\n      }];\n    });\n    const textAreaScrollContainerWidthRef = ref(undefined); // textarea autosize\n\n    const updateTextAreaStyle = () => {\n      var _a, _b;\n\n      if (props.type === 'textarea') {\n        const {\n          autosize\n        } = props;\n\n        if (autosize) {\n          textAreaScrollContainerWidthRef.value = (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n        }\n\n        if (!textareaElRef.value) return;\n        if (typeof autosize === 'boolean') return;\n        const {\n          paddingTop: stylePaddingTop,\n          paddingBottom: stylePaddingBottom,\n          lineHeight: styleLineHeight\n        } = window.getComputedStyle(textareaElRef.value);\n        const paddingTop = Number(stylePaddingTop.slice(0, -2));\n        const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n        const lineHeight = Number(styleLineHeight.slice(0, -2));\n        const {\n          value: textareaMirrorEl\n        } = textareaMirrorElRef;\n        if (!textareaMirrorEl) return;\n\n        if (autosize.minRows) {\n          const minRows = Math.max(autosize.minRows, 1);\n          const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n          textareaMirrorEl.style.minHeight = styleMinHeight;\n        }\n\n        if (autosize.maxRows) {\n          const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n          textareaMirrorEl.style.maxHeight = styleMaxHeight;\n        }\n      }\n    }; // word count\n\n\n    const maxlengthRef = computed(() => {\n      const {\n        maxlength\n      } = props;\n      return maxlength === undefined ? undefined : Number(maxlength);\n    });\n    onMounted(() => {\n      // sync mirror if is not pair\n      const {\n        value\n      } = mergedValueRef;\n\n      if (!Array.isArray(value)) {\n        syncMirror(value);\n      }\n    }); // other methods\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const vm = getCurrentInstance().proxy;\n\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue,\n        onInput\n      } = props;\n      const {\n        nTriggerFormInput\n      } = formItem;\n      if (onUpdateValue) call(onUpdateValue, value);\n      if (_onUpdateValue) call(_onUpdateValue, value);\n      if (onInput) call(onInput, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormInput();\n    }\n\n    function doChange(value) {\n      const {\n        onChange\n      } = props;\n      const {\n        nTriggerFormChange\n      } = formItem;\n      if (onChange) call(onChange, value);\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n    }\n\n    function doBlur(e) {\n      const {\n        onBlur\n      } = props;\n      const {\n        nTriggerFormBlur\n      } = formItem;\n      if (onBlur) call(onBlur, e);\n      nTriggerFormBlur();\n    }\n\n    function doFocus(e) {\n      const {\n        onFocus\n      } = props;\n      const {\n        nTriggerFormFocus\n      } = formItem;\n      if (onFocus) call(onFocus, e);\n      nTriggerFormFocus();\n    }\n\n    function doClear(e) {\n      const {\n        onClear\n      } = props;\n      if (onClear) call(onClear, e);\n    }\n\n    function doUpdateValueBlur(e) {\n      const {\n        onInputBlur\n      } = props;\n      if (onInputBlur) call(onInputBlur, e);\n    }\n\n    function doUpdateValueFocus(e) {\n      const {\n        onInputFocus\n      } = props;\n      if (onInputFocus) call(onInputFocus, e);\n    }\n\n    function doDeactivate() {\n      const {\n        onDeactivate\n      } = props;\n      if (onDeactivate) call(onDeactivate);\n    }\n\n    function doActivate() {\n      const {\n        onActivate\n      } = props;\n      if (onActivate) call(onActivate);\n    }\n\n    function doClick(e) {\n      const {\n        onClick\n      } = props;\n      if (onClick) call(onClick, e);\n    }\n\n    function doWrapperFocus(e) {\n      const {\n        onWrapperFocus\n      } = props;\n      if (onWrapperFocus) call(onWrapperFocus, e);\n    }\n\n    function doWrapperBlur(e) {\n      const {\n        onWrapperBlur\n      } = props;\n      if (onWrapperBlur) call(onWrapperBlur, e);\n    } // methods\n\n\n    function handleCompositionStart() {\n      isComposingRef.value = true;\n    }\n\n    function handleCompositionEnd(e) {\n      isComposingRef.value = false;\n\n      if (e.target === inputEl2Ref.value) {\n        handleInput(e, 1);\n      } else {\n        handleInput(e, 0);\n      }\n    }\n\n    function handleInput(e, index = 0, event = 'input') {\n      const targetValue = e.target.value;\n      syncMirror(targetValue);\n\n      if (props.type === 'textarea') {\n        const {\n          value: textareaScrollbarInst\n        } = textareaScrollbarInstRef;\n\n        if (textareaScrollbarInst) {\n          textareaScrollbarInst.syncUnifiedContainer();\n        }\n      }\n\n      syncSource = targetValue;\n      if (isComposingRef.value) return;\n      const changedValue = targetValue;\n\n      if (!props.pair) {\n        event === 'input' ? doUpdateValue(changedValue) : doChange(changedValue);\n      } else {\n        let {\n          value\n        } = mergedValueRef;\n\n        if (!Array.isArray(value)) {\n          value = ['', ''];\n        } else {\n          value = [...value];\n        }\n\n        value[index] = changedValue;\n        event === 'input' ? doUpdateValue(value) : doChange(value);\n      } // force update to sync input's view with value\n      // if not set, after input, input value won't sync with dom input value\n\n\n      vm.$forceUpdate();\n    }\n\n    function handleInputBlur(e) {\n      doUpdateValueBlur(e);\n\n      if (e.relatedTarget === wrapperElRef.value) {\n        doDeactivate();\n      }\n\n      if (!(e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value))) {\n        activatedRef.value = false;\n      }\n\n      dealWithEvent(e, 'blur');\n    }\n\n    function handleInputFocus(e) {\n      doUpdateValueFocus(e);\n      focusedRef.value = true;\n      activatedRef.value = true;\n      doActivate();\n      dealWithEvent(e, 'focus');\n    }\n\n    function handleWrapperBlur(e) {\n      if (props.passivelyActivated) {\n        doWrapperBlur(e);\n        dealWithEvent(e, 'blur');\n      }\n    }\n\n    function handleWrapperFocus(e) {\n      if (props.passivelyActivated) {\n        focusedRef.value = true;\n        doWrapperFocus(e);\n        dealWithEvent(e, 'focus');\n      }\n    }\n\n    function dealWithEvent(e, type) {\n      if (e.relatedTarget !== null && (e.relatedTarget === inputElRef.value || e.relatedTarget === inputEl2Ref.value || e.relatedTarget === textareaElRef.value || e.relatedTarget === wrapperElRef.value)) {\n        /**\n         * activeElement transfer inside the input, do nothing\n         */\n      } else {\n        if (type === 'focus') {\n          doFocus(e);\n          focusedRef.value = true;\n        } else if (type === 'blur') {\n          doBlur(e);\n          focusedRef.value = false;\n        }\n      }\n    }\n\n    function handleChange(e, index) {\n      handleInput(e, index, 'change');\n    }\n\n    function handleClick(e) {\n      doClick(e);\n    }\n\n    function handleClear(e) {\n      doClear(e);\n\n      if (props.pair) {\n        doUpdateValue(['', '']);\n        doChange(['', '']);\n      } else {\n        doUpdateValue('');\n        doChange('');\n      }\n    }\n\n    function handleMouseDown(e) {\n      const {\n        onMousedown\n      } = props;\n      if (onMousedown) onMousedown(e);\n      const {\n        tagName\n      } = e.target;\n\n      if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n        if (props.resizable) {\n          const {\n            value: wrapperEl\n          } = wrapperElRef;\n\n          if (wrapperEl) {\n            const {\n              left,\n              top,\n              width,\n              height\n            } = wrapperEl.getBoundingClientRect();\n            const resizeHandleSize = 14;\n\n            if (left + width - resizeHandleSize < e.clientX && e.clientY < left + width && top + height - resizeHandleSize < e.clientY && e.clientY < top + height) {\n              // touching resize handle, just let it go.\n              // resize won't take focus, maybe there is a better way to do this.\n              // hope someone can figure out a better solution\n              return;\n            }\n          }\n        }\n\n        e.preventDefault();\n\n        if (!focusedRef.value) {\n          focus();\n        }\n      }\n    }\n\n    function handleMouseEnter() {\n      var _a;\n\n      hoverRef.value = true;\n\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n      }\n    }\n\n    function handleMouseLeave() {\n      var _a;\n\n      hoverRef.value = false;\n\n      if (props.type === 'textarea') {\n        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n      }\n    }\n\n    function handlePasswordToggleClick() {\n      if (mergedDisabledRef.value) return;\n      if (mergedShowPasswordOnRef.value !== 'click') return;\n      passwordVisibleRef.value = !passwordVisibleRef.value;\n    }\n\n    function handlePasswordToggleMousedown(e) {\n      if (mergedDisabledRef.value) return;\n      e.preventDefault();\n\n      const preventDefaultOnce = e => {\n        e.preventDefault();\n        off('mouseup', document, preventDefaultOnce);\n      };\n\n      on('mouseup', document, preventDefaultOnce);\n      if (mergedShowPasswordOnRef.value !== 'mousedown') return;\n      passwordVisibleRef.value = true;\n\n      const hidePassword = () => {\n        passwordVisibleRef.value = false;\n        off('mouseup', document, hidePassword);\n      };\n\n      on('mouseup', document, hidePassword);\n    }\n\n    function handleWrapperKeyDown(e) {\n      var _a;\n\n      (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n\n      switch (e.code) {\n        case 'Escape':\n          handleWrapperKeyDownEsc();\n          break;\n\n        case 'Enter':\n        case 'NumpadEnter':\n          handleWrapperKeyDownEnter(e);\n          break;\n      }\n    }\n\n    function handleWrapperKeyDownEnter(e) {\n      var _a, _b;\n\n      if (props.passivelyActivated) {\n        const {\n          value: focused\n        } = activatedRef;\n\n        if (focused) {\n          if (props.internalDeactivateOnEnter) {\n            handleWrapperKeyDownEsc();\n          }\n\n          return;\n        }\n\n        e.preventDefault();\n\n        if (props.type === 'textarea') {\n          (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        } else {\n          (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n      }\n    }\n\n    function handleWrapperKeyDownEsc() {\n      if (props.passivelyActivated) {\n        activatedRef.value = false;\n        void nextTick(() => {\n          var _a;\n\n          (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n        });\n      }\n    }\n\n    function focus() {\n      var _a, _b, _c;\n\n      if (mergedDisabledRef.value) return;\n\n      if (props.passivelyActivated) {\n        (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      } else {\n        (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n        (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n      }\n    }\n\n    function blur() {\n      var _a;\n\n      if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n        ;\n        document.activeElement.blur();\n      }\n    }\n\n    function select() {\n      var _a, _b;\n\n      (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n      (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n    }\n\n    function activate() {\n      if (mergedDisabledRef.value) return;\n      if (textareaElRef.value) textareaElRef.value.focus();else if (inputElRef.value) inputElRef.value.focus();\n    }\n\n    function deactivate() {\n      const {\n        value: wrapperEl\n      } = wrapperElRef;\n\n      if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) && wrapperEl !== document.activeElement) {\n        handleWrapperKeyDownEsc();\n      }\n    }\n\n    function syncMirror(value) {\n      const {\n        type,\n        pair,\n        autosize\n      } = props;\n\n      if (!pair && autosize) {\n        if (type === 'textarea') {\n          const {\n            value: textareaMirrorEl\n          } = textareaMirrorElRef;\n\n          if (textareaMirrorEl) {\n            textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n          }\n        } else {\n          const {\n            value: inputMirrorEl\n          } = inputMirrorElRef;\n\n          if (inputMirrorEl) {\n            if (value) {\n              inputMirrorEl.textContent = value;\n            } else {\n              inputMirrorEl.innerHTML = '&nbsp;';\n            }\n          }\n        }\n      }\n    }\n\n    function handleTextAreaMirrorResize() {\n      updateTextAreaStyle();\n    }\n\n    const placeholderStyleRef = ref({\n      top: '0'\n    });\n\n    function handleTextAreaScroll(e) {\n      var _a;\n\n      const {\n        scrollTop\n      } = e.target;\n      placeholderStyleRef.value.top = `${-scrollTop}px`;\n      (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n    }\n\n    let stopWatchMergedValue1 = null;\n    watchEffect(() => {\n      const {\n        autosize,\n        type\n      } = props;\n\n      if (autosize && type === 'textarea') {\n        stopWatchMergedValue1 = watch(mergedValueRef, value => {\n          if (!Array.isArray(value) && value !== syncSource) {\n            syncMirror(value);\n          }\n        });\n      } else {\n        stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n      }\n    });\n    let stopWatchMergedValue2 = null;\n    watchEffect(() => {\n      if (props.type === 'textarea') {\n        stopWatchMergedValue2 = watch(mergedValueRef, value => {\n          var _a;\n\n          if (!Array.isArray(value) && value !== syncSource) {\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n          }\n        });\n      } else {\n        stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n      }\n    });\n    provide(inputInjectionKey, {\n      mergedValueRef,\n      maxlengthRef,\n      mergedClsPrefixRef\n    });\n    const exposedProps = {\n      wrapperElRef,\n      inputElRef,\n      textareaElRef,\n      isCompositing: isComposingRef,\n      focus,\n      blur,\n      select,\n      deactivate,\n      activate\n    };\n    const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          color,\n          borderRadius,\n          textColor,\n          caretColor,\n          caretColorError,\n          caretColorWarning,\n          textDecorationColor,\n          border,\n          borderDisabled,\n          borderHover,\n          borderFocus,\n          placeholderColor,\n          placeholderColorDisabled,\n          lineHeightTextarea,\n          colorDisabled,\n          colorFocus,\n          textColorDisabled,\n          boxShadowFocus,\n          iconSize,\n          colorFocusWarning,\n          boxShadowFocusWarning,\n          borderWarning,\n          borderFocusWarning,\n          borderHoverWarning,\n          colorFocusError,\n          boxShadowFocusError,\n          borderError,\n          borderFocusError,\n          borderHoverError,\n          clearSize,\n          clearColor,\n          clearColorHover,\n          clearColorPressed,\n          iconColor,\n          iconColorDisabled,\n          suffixTextColor,\n          countTextColor,\n          iconColorHover,\n          iconColorPressed,\n          loadingColor,\n          loadingColorError,\n          loadingColorWarning,\n          [createKey('padding', size)]: padding,\n          [createKey('fontSize', size)]: fontSize,\n          [createKey('height', size)]: height\n        }\n      } = themeRef.value;\n      const {\n        left: paddingLeft,\n        right: paddingRight\n      } = getPadding(padding);\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-count-text-color': countTextColor,\n        '--n-color': color,\n        '--n-font-size': fontSize,\n        '--n-border-radius': borderRadius,\n        '--n-height': height,\n        '--n-padding-left': paddingLeft,\n        '--n-padding-right': paddingRight,\n        '--n-text-color': textColor,\n        '--n-caret-color': caretColor,\n        '--n-text-decoration-color': textDecorationColor,\n        '--n-border': border,\n        '--n-border-disabled': borderDisabled,\n        '--n-border-hover': borderHover,\n        '--n-border-focus': borderFocus,\n        '--n-placeholder-color': placeholderColor,\n        '--n-placeholder-color-disabled': placeholderColorDisabled,\n        '--n-icon-size': iconSize,\n        '--n-line-height-textarea': lineHeightTextarea,\n        '--n-color-disabled': colorDisabled,\n        '--n-color-focus': colorFocus,\n        '--n-text-color-disabled': textColorDisabled,\n        '--n-box-shadow-focus': boxShadowFocus,\n        '--n-loading-color': loadingColor,\n        // form warning\n        '--n-caret-color-warning': caretColorWarning,\n        '--n-color-focus-warning': colorFocusWarning,\n        '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n        '--n-border-warning': borderWarning,\n        '--n-border-focus-warning': borderFocusWarning,\n        '--n-border-hover-warning': borderHoverWarning,\n        '--n-loading-color-warning': loadingColorWarning,\n        // form error\n        '--n-caret-color-error': caretColorError,\n        '--n-color-focus-error': colorFocusError,\n        '--n-box-shadow-focus-error': boxShadowFocusError,\n        '--n-border-error': borderError,\n        '--n-border-focus-error': borderFocusError,\n        '--n-border-hover-error': borderHoverError,\n        '--n-loading-color-error': loadingColorError,\n        // clear-button\n        '--n-clear-color': clearColor,\n        '--n-clear-size': clearSize,\n        '--n-clear-color-hover': clearColorHover,\n        '--n-clear-color-pressed': clearColorPressed,\n        '--n-icon-color': iconColor,\n        '--n-icon-color-hover': iconColorHover,\n        '--n-icon-color-pressed': iconColorPressed,\n        '--n-icon-color-disabled': iconColorDisabled,\n        '--n-suffix-text-color': suffixTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('input', computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      return size[0];\n    }), cssVarsRef, props) : undefined;\n    return Object.assign(Object.assign({}, exposedProps), {\n      // DOM ref\n      wrapperElRef,\n      inputElRef,\n      inputMirrorElRef,\n      inputEl2Ref,\n      textareaElRef,\n      textareaMirrorElRef,\n      textareaScrollbarInstRef,\n      // value\n      rtlEnabled: rtlEnabledRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      passwordVisible: passwordVisibleRef,\n      mergedPlaceholder: mergedPlaceholderRef,\n      showPlaceholder1: showPlaceholder1Ref,\n      showPlaceholder2: showPlaceholder2Ref,\n      mergedFocus: mergedFocusRef,\n      isComposing: isComposingRef,\n      activated: activatedRef,\n      showClearButton,\n      mergedSize: mergedSizeRef,\n      mergedDisabled: mergedDisabledRef,\n      textDecorationStyle: textDecorationStyleRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedBordered: mergedBorderedRef,\n      mergedShowPasswordOn: mergedShowPasswordOnRef,\n      placeholderStyle: placeholderStyleRef,\n      mergedStatus: mergedStatusRef,\n      textAreaScrollContainerWidth: textAreaScrollContainerWidthRef,\n      // methods\n      handleTextAreaScroll,\n      handleCompositionStart,\n      handleCompositionEnd,\n      handleInput,\n      handleInputBlur,\n      handleInputFocus,\n      handleWrapperBlur,\n      handleWrapperFocus,\n      handleMouseEnter,\n      handleMouseLeave,\n      handleMouseDown,\n      handleChange,\n      handleClick,\n      handleClear,\n      handlePasswordToggleClick,\n      handlePasswordToggleMousedown,\n      handleWrapperKeyDown,\n      handleTextAreaMirrorResize,\n      getTextareaScrollContainer: () => {\n        return textareaElRef.value;\n      },\n      mergedTheme: themeRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedStatus,\n      themeClass,\n      onRender,\n      $slots\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"wrapperElRef\",\n      class: [`${mergedClsPrefix}-input`, themeClass, mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`, {\n        [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n        [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n        [`${mergedClsPrefix}-input--textarea`]: this.type === 'textarea',\n        [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n        [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n        [`${mergedClsPrefix}-input--round`]: this.round && !(this.type === 'textarea'),\n        [`${mergedClsPrefix}-input--pair`]: this.pair,\n        [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n        [`${mergedClsPrefix}-input--stateful`]: this.stateful\n      }],\n      style: this.cssVars,\n      tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated ? 0 : undefined,\n      onFocus: this.handleWrapperFocus,\n      onBlur: this.handleWrapperBlur,\n      onClick: this.handleClick,\n      onMousedown: this.handleMouseDown,\n      onMouseenter: this.handleMouseEnter,\n      onMouseleave: this.handleMouseLeave,\n      onCompositionstart: this.handleCompositionStart,\n      onCompositionend: this.handleCompositionEnd,\n      onKeyup: this.onKeyup,\n      onKeydown: this.handleWrapperKeyDown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, resolveWrappedSlot($slots.prefix, children => children && h(\"div\", {\n      class: `${mergedClsPrefix}-input__prefix`\n    }, children)), this.type === 'textarea' ? h(NScrollbar, {\n      ref: \"textareaScrollbarInstRef\",\n      class: `${mergedClsPrefix}-input__textarea`,\n      container: this.getTextareaScrollContainer,\n      triggerDisplayManually: true,\n      useUnifiedContainer: true\n    }, {\n      default: () => {\n        const {\n          textAreaScrollContainerWidth\n        } = this;\n        const scrollContainerWidthStyle = {\n          width: this.autosize && textAreaScrollContainerWidth && `${textAreaScrollContainerWidth}px`\n        };\n        return h(Fragment, null, h(\"textarea\", Object.assign({}, this.inputProps, {\n          ref: \"textareaElRef\",\n          class: `${mergedClsPrefix}-input__textarea-el`,\n          autofocus: this.autofocus,\n          rows: Number(this.rows),\n          placeholder: this.placeholder,\n          value: this.mergedValue,\n          disabled: this.mergedDisabled,\n          maxlength: this.maxlength,\n          minlength: this.minlength,\n          readonly: this.readonly,\n          tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n          style: [this.textDecorationStyle[0], scrollContainerWidthStyle],\n          onBlur: this.handleInputBlur,\n          onFocus: this.handleInputFocus,\n          onInput: this.handleInput,\n          onChange: this.handleChange,\n          onScroll: this.handleTextAreaScroll\n        })), this.showPlaceholder1 ? h(\"div\", {\n          class: `${mergedClsPrefix}-input__placeholder`,\n          style: [this.placeholderStyle, scrollContainerWidthStyle],\n          key: \"placeholder\"\n        }, this.mergedPlaceholder[0]) : null, this.autosize ? h(VResizeObserver, {\n          onResize: this.handleTextAreaMirrorResize\n        }, {\n          default: () => h(\"div\", {\n            ref: \"textareaMirrorElRef\",\n            class: `${mergedClsPrefix}-input__textarea-mirror`,\n            key: \"mirror\"\n          })\n        }) : null);\n      }\n    }) : h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", Object.assign({\n      type: this.type === 'password' && this.mergedShowPasswordOn && this.passwordVisible ? 'text' : this.type\n    }, this.inputProps, {\n      ref: \"inputElRef\",\n      class: `${mergedClsPrefix}-input__input-el`,\n      style: this.textDecorationStyle[0],\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[0],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[0] : this.mergedValue,\n      readonly: this.readonly,\n      autofocus: this.autofocus,\n      size: this.attrSize,\n      onBlur: this.handleInputBlur,\n      onFocus: this.handleInputFocus,\n      onInput: e => this.handleInput(e, 0),\n      onChange: e => this.handleChange(e, 0)\n    })), this.showPlaceholder1 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[0])) : null, this.autosize ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__input-mirror`,\n      key: \"mirror\",\n      ref: \"inputMirrorElRef\"\n    }, \"\\u00A0\") : null), !this.pair && resolveWrappedSlot($slots.suffix, children => {\n      return children || this.clearable || this.showCount || this.mergedShowPasswordOn || this.loading !== undefined ? h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [resolveWrappedSlot($slots.clear, children => {\n        return (this.clearable || children) && h(NBaseClear, {\n          clsPrefix: mergedClsPrefix,\n          show: this.showClearButton,\n          onClear: this.handleClear\n        }, {\n          default: () => children\n        });\n      }), !this.internalLoadingBeforeSuffix ? children : null, this.loading !== undefined ? h(NBaseSuffix, {\n        clsPrefix: mergedClsPrefix,\n        loading: this.loading,\n        showArrow: false,\n        showClear: false,\n        style: this.cssVars\n      }) : null, this.internalLoadingBeforeSuffix ? children : null, this.showCount && this.type !== 'textarea' ? h(WordCount, null, {\n        default: props => {\n          var _a;\n\n          return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n        }\n      }) : null, this.mergedShowPasswordOn && this.type === 'password' ? h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix,\n        class: `${mergedClsPrefix}-input__eye`,\n        onMousedown: this.handlePasswordToggleMousedown,\n        onClick: this.handlePasswordToggleClick\n      }, {\n        default: () => {\n          return this.passwordVisible ? resolveSlot($slots['password-visible-icon'], () => [h(EyeIcon, null)]) : resolveSlot($slots['password-invisible-icon'], () => [h(EyeOffIcon, null)]);\n        }\n      }) : null]) : null;\n    })), this.pair ? h(\"span\", {\n      class: `${mergedClsPrefix}-input__separator`\n    }, resolveSlot($slots.separator, () => [this.separator])) : null, this.pair ? h(\"div\", {\n      class: `${mergedClsPrefix}-input-wrapper`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-input__input`\n    }, h(\"input\", {\n      ref: \"inputEl2Ref\",\n      type: this.type,\n      class: `${mergedClsPrefix}-input__input-el`,\n      tabindex: this.passivelyActivated && !this.activated ? -1 : undefined,\n      placeholder: this.mergedPlaceholder[1],\n      disabled: this.mergedDisabled,\n      maxlength: this.maxlength,\n      minlength: this.minlength,\n      value: Array.isArray(this.mergedValue) ? this.mergedValue[1] : undefined,\n      readonly: this.readonly,\n      style: this.textDecorationStyle[1],\n      onBlur: this.handleInputBlur,\n      onFocus: this.handleInputFocus,\n      onInput: e => this.handleInput(e, 1),\n      onChange: e => this.handleChange(e, 1)\n    }), this.showPlaceholder2 ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__placeholder`\n    }, h(\"span\", null, this.mergedPlaceholder[1])) : null), resolveWrappedSlot($slots.suffix, children => {\n      return (this.clearable || children) && h(\"div\", {\n        class: `${mergedClsPrefix}-input__suffix`\n      }, [this.clearable && h(NBaseClear, {\n        clsPrefix: mergedClsPrefix,\n        show: this.showClearButton,\n        onClear: this.handleClear\n      }, {\n        default: () => {\n          var _a;\n\n          return (_a = $slots.clear) === null || _a === void 0 ? void 0 : _a.call($slots);\n        }\n      }), children]);\n    })) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__border`\n    }) : null, this.mergedBordered ? h(\"div\", {\n      class: `${mergedClsPrefix}-input__state-border`\n    }) : null, this.showCount && this.type === 'textarea' ? h(WordCount, null, {\n      default: props => {\n        var _a;\n\n        return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props);\n      }\n    }) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/input/src/Input.js"],"names":["h","computed","defineComponent","nextTick","ref","toRef","onMounted","getCurrentInstance","watch","watchEffect","provide","Fragment","useMergedState","useMemo","getPadding","VResizeObserver","off","on","EyeIcon","EyeOffIcon","NBaseClear","NBaseIcon","NBaseSuffix","NScrollbar","useTheme","useLocale","useFormItem","useConfig","useThemeClass","call","createKey","resolveSlot","resolveWrappedSlot","warnOnce","inputLight","inputInjectionKey","isEmptyValue","WordCount","style","useRtl","inputProps","Object","assign","props","bordered","type","Boolean","default","undefined","String","placeholder","Array","defaultValue","value","disabled","size","rows","Number","round","minlength","maxlength","clearable","autosize","pair","separator","readonly","passivelyActivated","showPasswordOn","stateful","autofocus","resizable","showCount","loading","onMousedown","Function","onKeydown","onKeyup","onInput","onFocus","onBlur","onClick","onChange","onClear","status","onUpdateValue","textDecoration","attrSize","onInputBlur","onInputFocus","onDeactivate","onActivate","onWrapperFocus","onWrapperBlur","internalDeactivateOnEnter","internalForceFocus","internalLoadingBeforeSuffix","showPasswordToggle","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","mergedBorderedRef","inlineThemeDisabled","mergedRtlRef","themeRef","wrapperElRef","textareaElRef","textareaMirrorElRef","inputMirrorElRef","inputElRef","inputEl2Ref","textareaScrollbarInstRef","localeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","formItem","mergedSizeRef","mergedDisabledRef","mergedStatusRef","focusedRef","hoverRef","isComposingRef","activatedRef","syncSource","mergedPlaceholderRef","isArray","showPlaceholder1Ref","isComposing","mergedValue","mergedPlaceholder","showPlaceholder2Ref","mergedFocusRef","showClearButton","mergedFocus","mergedShowPasswordOnRef","passwordVisibleRef","textDecorationStyleRef","map","v","textAreaScrollContainerWidthRef","updateTextAreaStyle","_a","_b","$el","offsetWidth","paddingTop","stylePaddingTop","paddingBottom","stylePaddingBottom","lineHeight","styleLineHeight","window","getComputedStyle","slice","textareaMirrorEl","minRows","Math","max","styleMinHeight","minHeight","maxRows","styleMaxHeight","maxHeight","maxlengthRef","syncMirror","vm","proxy","doUpdateValue","_onUpdateValue","nTriggerFormInput","doChange","nTriggerFormChange","doBlur","e","nTriggerFormBlur","doFocus","nTriggerFormFocus","doClear","doUpdateValueBlur","doUpdateValueFocus","doDeactivate","doActivate","doClick","doWrapperFocus","doWrapperBlur","handleCompositionStart","handleCompositionEnd","target","handleInput","index","event","targetValue","textareaScrollbarInst","syncUnifiedContainer","changedValue","$forceUpdate","handleInputBlur","relatedTarget","dealWithEvent","handleInputFocus","handleWrapperBlur","handleWrapperFocus","handleChange","handleClick","handleClear","handleMouseDown","tagName","wrapperEl","left","top","width","height","getBoundingClientRect","resizeHandleSize","clientX","clientY","preventDefault","focus","handleMouseEnter","handleMouseEnterWrapper","handleMouseLeave","handleMouseLeaveWrapper","handlePasswordToggleClick","handlePasswordToggleMousedown","preventDefaultOnce","document","hidePassword","handleWrapperKeyDown","code","handleWrapperKeyDownEsc","handleWrapperKeyDownEnter","focused","_c","blur","contains","activeElement","select","activate","deactivate","textContent","inputMirrorEl","innerHTML","handleTextAreaMirrorResize","placeholderStyleRef","handleTextAreaScroll","scrollTop","stopWatchMergedValue1","stopWatchMergedValue2","exposedProps","isCompositing","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","color","borderRadius","textColor","caretColor","caretColorError","caretColorWarning","textDecorationColor","border","borderDisabled","borderHover","borderFocus","placeholderColor","placeholderColorDisabled","lineHeightTextarea","colorDisabled","colorFocus","textColorDisabled","boxShadowFocus","iconSize","colorFocusWarning","boxShadowFocusWarning","borderWarning","borderFocusWarning","borderHoverWarning","colorFocusError","boxShadowFocusError","borderError","borderFocusError","borderHoverError","clearSize","clearColor","clearColorHover","clearColorPressed","iconColor","iconColorDisabled","suffixTextColor","countTextColor","iconColorHover","iconColorPressed","loadingColor","loadingColorError","loadingColorWarning","padding","fontSize","paddingLeft","right","paddingRight","themeClassHandle","rtlEnabled","uncontrolledValue","passwordVisible","showPlaceholder1","showPlaceholder2","activated","mergedSize","mergedDisabled","textDecorationStyle","mergedClsPrefix","mergedBordered","mergedShowPasswordOn","placeholderStyle","mergedStatus","textAreaScrollContainerWidth","getTextareaScrollContainer","mergedTheme","cssVars","themeClass","onRender","render","$slots","class","tabindex","onMouseenter","onMouseleave","onCompositionstart","onCompositionend","prefix","children","container","triggerDisplayManually","useUnifiedContainer","scrollContainerWidthStyle","onScroll","key","onResize","suffix","clear","clsPrefix","show","showArrow","showClear","count"],"mappings":"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","sourcesContent":["import { h, computed, defineComponent, nextTick, ref, toRef, onMounted, getCurrentInstance, watch, watchEffect, provide, Fragment } from 'vue';\nimport { useMergedState, useMemo } from 'vooks';\nimport { getPadding } from 'seemly';\nimport { VResizeObserver } from 'vueuc';\nimport { off, on } from 'evtd';\nimport { EyeIcon, EyeOffIcon } from '../../_internal/icons';\nimport { NBaseClear, NBaseIcon, NBaseSuffix, NScrollbar } from '../../_internal';\nimport { useTheme, useLocale, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { call, createKey, resolveSlot, resolveWrappedSlot, warnOnce } from '../../_utils';\nimport { inputLight } from '../styles';\nimport { inputInjectionKey } from './interface';\nimport { isEmptyValue } from './utils';\nimport WordCount from './WordCount';\nimport style from './styles/input.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nconst inputProps = Object.assign(Object.assign({}, useTheme.props), { bordered: {\n        type: Boolean,\n        default: undefined\n    }, type: {\n        type: String,\n        default: 'text'\n    }, placeholder: [Array, String], defaultValue: {\n        type: [String, Array],\n        default: null\n    }, value: [String, Array], disabled: {\n        type: Boolean,\n        default: undefined\n    }, size: String, rows: {\n        type: [Number, String],\n        default: 3\n    }, round: Boolean, minlength: [String, Number], maxlength: [String, Number], clearable: Boolean, autosize: {\n        type: [Boolean, Object],\n        default: false\n    }, pair: Boolean, separator: String, readonly: {\n        type: [String, Boolean],\n        default: false\n    }, passivelyActivated: Boolean, showPasswordOn: String, stateful: {\n        type: Boolean,\n        default: true\n    }, autofocus: Boolean, inputProps: Object, resizable: {\n        type: Boolean,\n        default: true\n    }, showCount: Boolean, loading: {\n        type: Boolean,\n        default: undefined\n    }, onMousedown: Function, onKeydown: Function, onKeyup: Function, onInput: [Function, Array], onFocus: [Function, Array], onBlur: [Function, Array], onClick: [Function, Array], onChange: [Function, Array], onClear: [Function, Array], status: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array], \n    /** private */\n    textDecoration: [String, Array], attrSize: {\n        type: Number,\n        default: 20\n    }, onInputBlur: [Function, Array], onInputFocus: [Function, Array], onDeactivate: [Function, Array], onActivate: [Function, Array], onWrapperFocus: [Function, Array], onWrapperBlur: [Function, Array], internalDeactivateOnEnter: Boolean, internalForceFocus: Boolean, internalLoadingBeforeSuffix: Boolean, \n    /** deprecated */\n    showPasswordToggle: Boolean });\nexport default defineComponent({\n    name: 'Input',\n    props: inputProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            watchEffect(() => {\n                if (props.showPasswordToggle) {\n                    warnOnce('input', '`show-password-toggle` is deprecated, please use `showPasswordOn=\"click\"` instead');\n                }\n            });\n        }\n        const { mergedClsPrefixRef, mergedBorderedRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Input', '-input', style, inputLight, props, mergedClsPrefixRef);\n        // dom refs\n        const wrapperElRef = ref(null);\n        const textareaElRef = ref(null);\n        const textareaMirrorElRef = ref(null);\n        const inputMirrorElRef = ref(null);\n        const inputElRef = ref(null);\n        const inputEl2Ref = ref(null);\n        const textareaScrollbarInstRef = ref(null);\n        // local\n        const { localeRef } = useLocale('Input');\n        // value\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        // form-item\n        const formItem = useFormItem(props);\n        const { mergedSizeRef, mergedDisabledRef, mergedStatusRef } = formItem;\n        // states\n        const focusedRef = ref(false);\n        const hoverRef = ref(false);\n        const isComposingRef = ref(false);\n        const activatedRef = ref(false);\n        let syncSource = null;\n        // placeholder\n        const mergedPlaceholderRef = computed(() => {\n            const { placeholder, pair } = props;\n            if (pair) {\n                if (Array.isArray(placeholder)) {\n                    return placeholder;\n                }\n                else if (placeholder === undefined) {\n                    return ['', ''];\n                }\n                return [placeholder, placeholder];\n            }\n            else if (placeholder === undefined) {\n                return [localeRef.value.placeholder];\n            }\n            else {\n                return [placeholder];\n            }\n        });\n        const showPlaceholder1Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                (isEmptyValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyValue(mergedValue[0]))) &&\n                mergedPlaceholder[0]);\n        });\n        const showPlaceholder2Ref = computed(() => {\n            const { value: isComposing } = isComposingRef;\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedPlaceholder } = mergedPlaceholderRef;\n            return (!isComposing &&\n                mergedPlaceholder[1] &&\n                (isEmptyValue(mergedValue) ||\n                    (Array.isArray(mergedValue) && isEmptyValue(mergedValue[1]))));\n        });\n        // focus\n        const mergedFocusRef = useMemo(() => {\n            return props.internalForceFocus || focusedRef.value;\n        });\n        // clear\n        const showClearButton = useMemo(() => {\n            if (mergedDisabledRef.value ||\n                props.readonly ||\n                !props.clearable ||\n                (!mergedFocusRef.value && !hoverRef.value)) {\n                return false;\n            }\n            const { value: mergedValue } = mergedValueRef;\n            const { value: mergedFocus } = mergedFocusRef;\n            if (props.pair) {\n                return (!!(Array.isArray(mergedValue) &&\n                    (mergedValue[0] || mergedValue[1])) &&\n                    (hoverRef.value || mergedFocus));\n            }\n            else {\n                return !!mergedValue && (hoverRef.value || mergedFocus);\n            }\n        });\n        // passwordVisible\n        const mergedShowPasswordOnRef = computed(() => {\n            const { showPasswordOn } = props;\n            if (showPasswordOn) {\n                return showPasswordOn;\n            }\n            if (props.showPasswordToggle)\n                return 'click';\n            return undefined;\n        });\n        const passwordVisibleRef = ref(false);\n        // text-decoration\n        const textDecorationStyleRef = computed(() => {\n            const { textDecoration } = props;\n            if (!textDecoration)\n                return ['', ''];\n            if (Array.isArray(textDecoration)) {\n                return textDecoration.map((v) => ({\n                    textDecoration: v\n                }));\n            }\n            return [\n                {\n                    textDecoration\n                }\n            ];\n        });\n        const textAreaScrollContainerWidthRef = ref(undefined);\n        // textarea autosize\n        const updateTextAreaStyle = () => {\n            var _a, _b;\n            if (props.type === 'textarea') {\n                const { autosize } = props;\n                if (autosize) {\n                    textAreaScrollContainerWidthRef.value =\n                        (_b = (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.$el) === null || _b === void 0 ? void 0 : _b.offsetWidth;\n                }\n                if (!textareaElRef.value)\n                    return;\n                if (typeof autosize === 'boolean')\n                    return;\n                const { paddingTop: stylePaddingTop, paddingBottom: stylePaddingBottom, lineHeight: styleLineHeight } = window.getComputedStyle(textareaElRef.value);\n                const paddingTop = Number(stylePaddingTop.slice(0, -2));\n                const paddingBottom = Number(stylePaddingBottom.slice(0, -2));\n                const lineHeight = Number(styleLineHeight.slice(0, -2));\n                const { value: textareaMirrorEl } = textareaMirrorElRef;\n                if (!textareaMirrorEl)\n                    return;\n                if (autosize.minRows) {\n                    const minRows = Math.max(autosize.minRows, 1);\n                    const styleMinHeight = `${paddingTop + paddingBottom + lineHeight * minRows}px`;\n                    textareaMirrorEl.style.minHeight = styleMinHeight;\n                }\n                if (autosize.maxRows) {\n                    const styleMaxHeight = `${paddingTop + paddingBottom + lineHeight * autosize.maxRows}px`;\n                    textareaMirrorEl.style.maxHeight = styleMaxHeight;\n                }\n            }\n        };\n        // word count\n        const maxlengthRef = computed(() => {\n            const { maxlength } = props;\n            return maxlength === undefined ? undefined : Number(maxlength);\n        });\n        onMounted(() => {\n            // sync mirror if is not pair\n            const { value } = mergedValueRef;\n            if (!Array.isArray(value)) {\n                syncMirror(value);\n            }\n        });\n        // other methods\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const vm = getCurrentInstance().proxy;\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue, onInput } = props;\n            const { nTriggerFormInput } = formItem;\n            if (onUpdateValue)\n                call(onUpdateValue, value);\n            if (_onUpdateValue)\n                call(_onUpdateValue, value);\n            if (onInput)\n                call(onInput, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormInput();\n        }\n        function doChange(value) {\n            const { onChange } = props;\n            const { nTriggerFormChange } = formItem;\n            if (onChange)\n                call(onChange, value);\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n        }\n        function doBlur(e) {\n            const { onBlur } = props;\n            const { nTriggerFormBlur } = formItem;\n            if (onBlur)\n                call(onBlur, e);\n            nTriggerFormBlur();\n        }\n        function doFocus(e) {\n            const { onFocus } = props;\n            const { nTriggerFormFocus } = formItem;\n            if (onFocus)\n                call(onFocus, e);\n            nTriggerFormFocus();\n        }\n        function doClear(e) {\n            const { onClear } = props;\n            if (onClear)\n                call(onClear, e);\n        }\n        function doUpdateValueBlur(e) {\n            const { onInputBlur } = props;\n            if (onInputBlur)\n                call(onInputBlur, e);\n        }\n        function doUpdateValueFocus(e) {\n            const { onInputFocus } = props;\n            if (onInputFocus)\n                call(onInputFocus, e);\n        }\n        function doDeactivate() {\n            const { onDeactivate } = props;\n            if (onDeactivate)\n                call(onDeactivate);\n        }\n        function doActivate() {\n            const { onActivate } = props;\n            if (onActivate)\n                call(onActivate);\n        }\n        function doClick(e) {\n            const { onClick } = props;\n            if (onClick)\n                call(onClick, e);\n        }\n        function doWrapperFocus(e) {\n            const { onWrapperFocus } = props;\n            if (onWrapperFocus)\n                call(onWrapperFocus, e);\n        }\n        function doWrapperBlur(e) {\n            const { onWrapperBlur } = props;\n            if (onWrapperBlur)\n                call(onWrapperBlur, e);\n        }\n        // methods\n        function handleCompositionStart() {\n            isComposingRef.value = true;\n        }\n        function handleCompositionEnd(e) {\n            isComposingRef.value = false;\n            if (e.target === inputEl2Ref.value) {\n                handleInput(e, 1);\n            }\n            else {\n                handleInput(e, 0);\n            }\n        }\n        function handleInput(e, index = 0, event = 'input') {\n            const targetValue = e.target.value;\n            syncMirror(targetValue);\n            if (props.type === 'textarea') {\n                const { value: textareaScrollbarInst } = textareaScrollbarInstRef;\n                if (textareaScrollbarInst) {\n                    textareaScrollbarInst.syncUnifiedContainer();\n                }\n            }\n            syncSource = targetValue;\n            if (isComposingRef.value)\n                return;\n            const changedValue = targetValue;\n            if (!props.pair) {\n                event === 'input' ? doUpdateValue(changedValue) : doChange(changedValue);\n            }\n            else {\n                let { value } = mergedValueRef;\n                if (!Array.isArray(value)) {\n                    value = ['', ''];\n                }\n                else {\n                    value = [...value];\n                }\n                value[index] = changedValue;\n                event === 'input' ? doUpdateValue(value) : doChange(value);\n            }\n            // force update to sync input's view with value\n            // if not set, after input, input value won't sync with dom input value\n            vm.$forceUpdate();\n        }\n        function handleInputBlur(e) {\n            doUpdateValueBlur(e);\n            if (e.relatedTarget === wrapperElRef.value) {\n                doDeactivate();\n            }\n            if (!(e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value))) {\n                activatedRef.value = false;\n            }\n            dealWithEvent(e, 'blur');\n        }\n        function handleInputFocus(e) {\n            doUpdateValueFocus(e);\n            focusedRef.value = true;\n            activatedRef.value = true;\n            doActivate();\n            dealWithEvent(e, 'focus');\n        }\n        function handleWrapperBlur(e) {\n            if (props.passivelyActivated) {\n                doWrapperBlur(e);\n                dealWithEvent(e, 'blur');\n            }\n        }\n        function handleWrapperFocus(e) {\n            if (props.passivelyActivated) {\n                focusedRef.value = true;\n                doWrapperFocus(e);\n                dealWithEvent(e, 'focus');\n            }\n        }\n        function dealWithEvent(e, type) {\n            if (e.relatedTarget !== null &&\n                (e.relatedTarget === inputElRef.value ||\n                    e.relatedTarget === inputEl2Ref.value ||\n                    e.relatedTarget === textareaElRef.value ||\n                    e.relatedTarget === wrapperElRef.value)) {\n                /**\n                 * activeElement transfer inside the input, do nothing\n                 */\n            }\n            else {\n                if (type === 'focus') {\n                    doFocus(e);\n                    focusedRef.value = true;\n                }\n                else if (type === 'blur') {\n                    doBlur(e);\n                    focusedRef.value = false;\n                }\n            }\n        }\n        function handleChange(e, index) {\n            handleInput(e, index, 'change');\n        }\n        function handleClick(e) {\n            doClick(e);\n        }\n        function handleClear(e) {\n            doClear(e);\n            if (props.pair) {\n                doUpdateValue(['', '']);\n                doChange(['', '']);\n            }\n            else {\n                doUpdateValue('');\n                doChange('');\n            }\n        }\n        function handleMouseDown(e) {\n            const { onMousedown } = props;\n            if (onMousedown)\n                onMousedown(e);\n            const { tagName } = e.target;\n            if (tagName !== 'INPUT' && tagName !== 'TEXTAREA') {\n                if (props.resizable) {\n                    const { value: wrapperEl } = wrapperElRef;\n                    if (wrapperEl) {\n                        const { left, top, width, height } = wrapperEl.getBoundingClientRect();\n                        const resizeHandleSize = 14;\n                        if (left + width - resizeHandleSize < e.clientX &&\n                            e.clientY < left + width &&\n                            top + height - resizeHandleSize < e.clientY &&\n                            e.clientY < top + height) {\n                            // touching resize handle, just let it go.\n                            // resize won't take focus, maybe there is a better way to do this.\n                            // hope someone can figure out a better solution\n                            return;\n                        }\n                    }\n                }\n                e.preventDefault();\n                if (!focusedRef.value) {\n                    focus();\n                }\n            }\n        }\n        function handleMouseEnter() {\n            var _a;\n            hoverRef.value = true;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseEnterWrapper();\n            }\n        }\n        function handleMouseLeave() {\n            var _a;\n            hoverRef.value = false;\n            if (props.type === 'textarea') {\n                (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.handleMouseLeaveWrapper();\n            }\n        }\n        function handlePasswordToggleClick() {\n            if (mergedDisabledRef.value)\n                return;\n            if (mergedShowPasswordOnRef.value !== 'click')\n                return;\n            passwordVisibleRef.value = !passwordVisibleRef.value;\n        }\n        function handlePasswordToggleMousedown(e) {\n            if (mergedDisabledRef.value)\n                return;\n            e.preventDefault();\n            const preventDefaultOnce = (e) => {\n                e.preventDefault();\n                off('mouseup', document, preventDefaultOnce);\n            };\n            on('mouseup', document, preventDefaultOnce);\n            if (mergedShowPasswordOnRef.value !== 'mousedown')\n                return;\n            passwordVisibleRef.value = true;\n            const hidePassword = () => {\n                passwordVisibleRef.value = false;\n                off('mouseup', document, hidePassword);\n            };\n            on('mouseup', document, hidePassword);\n        }\n        function handleWrapperKeyDown(e) {\n            var _a;\n            (_a = props.onKeydown) === null || _a === void 0 ? void 0 : _a.call(props, e);\n            switch (e.code) {\n                case 'Escape':\n                    handleWrapperKeyDownEsc();\n                    break;\n                case 'Enter':\n                case 'NumpadEnter':\n                    handleWrapperKeyDownEnter(e);\n                    break;\n            }\n        }\n        function handleWrapperKeyDownEnter(e) {\n            var _a, _b;\n            if (props.passivelyActivated) {\n                const { value: focused } = activatedRef;\n                if (focused) {\n                    if (props.internalDeactivateOnEnter) {\n                        handleWrapperKeyDownEsc();\n                    }\n                    return;\n                }\n                e.preventDefault();\n                if (props.type === 'textarea') {\n                    (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                }\n                else {\n                    (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                }\n            }\n        }\n        function handleWrapperKeyDownEsc() {\n            if (props.passivelyActivated) {\n                activatedRef.value = false;\n                void nextTick(() => {\n                    var _a;\n                    (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n                });\n            }\n        }\n        function focus() {\n            var _a, _b, _c;\n            if (mergedDisabledRef.value)\n                return;\n            if (props.passivelyActivated) {\n                (_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n            }\n            else {\n                (_b = textareaElRef.value) === null || _b === void 0 ? void 0 : _b.focus();\n                (_c = inputElRef.value) === null || _c === void 0 ? void 0 : _c.focus();\n            }\n        }\n        function blur() {\n            var _a;\n            if ((_a = wrapperElRef.value) === null || _a === void 0 ? void 0 : _a.contains(document.activeElement)) {\n                ;\n                document.activeElement.blur();\n            }\n        }\n        function select() {\n            var _a, _b;\n            (_a = textareaElRef.value) === null || _a === void 0 ? void 0 : _a.select();\n            (_b = inputElRef.value) === null || _b === void 0 ? void 0 : _b.select();\n        }\n        function activate() {\n            if (mergedDisabledRef.value)\n                return;\n            if (textareaElRef.value)\n                textareaElRef.value.focus();\n            else if (inputElRef.value)\n                inputElRef.value.focus();\n        }\n        function deactivate() {\n            const { value: wrapperEl } = wrapperElRef;\n            if ((wrapperEl === null || wrapperEl === void 0 ? void 0 : wrapperEl.contains(document.activeElement)) &&\n                wrapperEl !== document.activeElement) {\n                handleWrapperKeyDownEsc();\n            }\n        }\n        function syncMirror(value) {\n            const { type, pair, autosize } = props;\n            if (!pair && autosize) {\n                if (type === 'textarea') {\n                    const { value: textareaMirrorEl } = textareaMirrorElRef;\n                    if (textareaMirrorEl) {\n                        textareaMirrorEl.textContent = (value !== null && value !== void 0 ? value : '') + '\\r\\n';\n                    }\n                }\n                else {\n                    const { value: inputMirrorEl } = inputMirrorElRef;\n                    if (inputMirrorEl) {\n                        if (value) {\n                            inputMirrorEl.textContent = value;\n                        }\n                        else {\n                            inputMirrorEl.innerHTML = '&nbsp;';\n                        }\n                    }\n                }\n            }\n        }\n        function handleTextAreaMirrorResize() {\n            updateTextAreaStyle();\n        }\n        const placeholderStyleRef = ref({\n            top: '0'\n        });\n        function handleTextAreaScroll(e) {\n            var _a;\n            const { scrollTop } = e.target;\n            placeholderStyleRef.value.top = `${-scrollTop}px`;\n            (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n        }\n        let stopWatchMergedValue1 = null;\n        watchEffect(() => {\n            const { autosize, type } = props;\n            if (autosize && type === 'textarea') {\n                stopWatchMergedValue1 = watch(mergedValueRef, (value) => {\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        syncMirror(value);\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue1 === null || stopWatchMergedValue1 === void 0 ? void 0 : stopWatchMergedValue1();\n            }\n        });\n        let stopWatchMergedValue2 = null;\n        watchEffect(() => {\n            if (props.type === 'textarea') {\n                stopWatchMergedValue2 = watch(mergedValueRef, (value) => {\n                    var _a;\n                    if (!Array.isArray(value) && value !== syncSource) {\n                        (_a = textareaScrollbarInstRef.value) === null || _a === void 0 ? void 0 : _a.syncUnifiedContainer();\n                    }\n                });\n            }\n            else {\n                stopWatchMergedValue2 === null || stopWatchMergedValue2 === void 0 ? void 0 : stopWatchMergedValue2();\n            }\n        });\n        provide(inputInjectionKey, {\n            mergedValueRef,\n            maxlengthRef,\n            mergedClsPrefixRef\n        });\n        const exposedProps = {\n            wrapperElRef,\n            inputElRef,\n            textareaElRef,\n            isCompositing: isComposingRef,\n            focus,\n            blur,\n            select,\n            deactivate,\n            activate\n        };\n        const rtlEnabledRef = useRtl('Input', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: size } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { color, borderRadius, textColor, caretColor, caretColorError, caretColorWarning, textDecorationColor, border, borderDisabled, borderHover, borderFocus, placeholderColor, placeholderColorDisabled, lineHeightTextarea, colorDisabled, colorFocus, textColorDisabled, boxShadowFocus, iconSize, colorFocusWarning, boxShadowFocusWarning, borderWarning, borderFocusWarning, borderHoverWarning, colorFocusError, boxShadowFocusError, borderError, borderFocusError, borderHoverError, clearSize, clearColor, clearColorHover, clearColorPressed, iconColor, iconColorDisabled, suffixTextColor, countTextColor, iconColorHover, iconColorPressed, loadingColor, loadingColorError, loadingColorWarning, [createKey('padding', size)]: padding, [createKey('fontSize', size)]: fontSize, [createKey('height', size)]: height } } = themeRef.value;\n            const { left: paddingLeft, right: paddingRight } = getPadding(padding);\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-count-text-color': countTextColor,\n                '--n-color': color,\n                '--n-font-size': fontSize,\n                '--n-border-radius': borderRadius,\n                '--n-height': height,\n                '--n-padding-left': paddingLeft,\n                '--n-padding-right': paddingRight,\n                '--n-text-color': textColor,\n                '--n-caret-color': caretColor,\n                '--n-text-decoration-color': textDecorationColor,\n                '--n-border': border,\n                '--n-border-disabled': borderDisabled,\n                '--n-border-hover': borderHover,\n                '--n-border-focus': borderFocus,\n                '--n-placeholder-color': placeholderColor,\n                '--n-placeholder-color-disabled': placeholderColorDisabled,\n                '--n-icon-size': iconSize,\n                '--n-line-height-textarea': lineHeightTextarea,\n                '--n-color-disabled': colorDisabled,\n                '--n-color-focus': colorFocus,\n                '--n-text-color-disabled': textColorDisabled,\n                '--n-box-shadow-focus': boxShadowFocus,\n                '--n-loading-color': loadingColor,\n                // form warning\n                '--n-caret-color-warning': caretColorWarning,\n                '--n-color-focus-warning': colorFocusWarning,\n                '--n-box-shadow-focus-warning': boxShadowFocusWarning,\n                '--n-border-warning': borderWarning,\n                '--n-border-focus-warning': borderFocusWarning,\n                '--n-border-hover-warning': borderHoverWarning,\n                '--n-loading-color-warning': loadingColorWarning,\n                // form error\n                '--n-caret-color-error': caretColorError,\n                '--n-color-focus-error': colorFocusError,\n                '--n-box-shadow-focus-error': boxShadowFocusError,\n                '--n-border-error': borderError,\n                '--n-border-focus-error': borderFocusError,\n                '--n-border-hover-error': borderHoverError,\n                '--n-loading-color-error': loadingColorError,\n                // clear-button\n                '--n-clear-color': clearColor,\n                '--n-clear-size': clearSize,\n                '--n-clear-color-hover': clearColorHover,\n                '--n-clear-color-pressed': clearColorPressed,\n                '--n-icon-color': iconColor,\n                '--n-icon-color-hover': iconColorHover,\n                '--n-icon-color-pressed': iconColorPressed,\n                '--n-icon-color-disabled': iconColorDisabled,\n                '--n-suffix-text-color': suffixTextColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('input', computed(() => {\n                const { value: size } = mergedSizeRef;\n                return size[0];\n            }), cssVarsRef, props)\n            : undefined;\n        return Object.assign(Object.assign({}, exposedProps), { \n            // DOM ref\n            wrapperElRef,\n            inputElRef,\n            inputMirrorElRef,\n            inputEl2Ref,\n            textareaElRef,\n            textareaMirrorElRef,\n            textareaScrollbarInstRef, \n            // value\n            rtlEnabled: rtlEnabledRef, uncontrolledValue: uncontrolledValueRef, mergedValue: mergedValueRef, passwordVisible: passwordVisibleRef, mergedPlaceholder: mergedPlaceholderRef, showPlaceholder1: showPlaceholder1Ref, showPlaceholder2: showPlaceholder2Ref, mergedFocus: mergedFocusRef, isComposing: isComposingRef, activated: activatedRef, showClearButton, mergedSize: mergedSizeRef, mergedDisabled: mergedDisabledRef, textDecorationStyle: textDecorationStyleRef, mergedClsPrefix: mergedClsPrefixRef, mergedBordered: mergedBorderedRef, mergedShowPasswordOn: mergedShowPasswordOnRef, placeholderStyle: placeholderStyleRef, mergedStatus: mergedStatusRef, textAreaScrollContainerWidth: textAreaScrollContainerWidthRef, \n            // methods\n            handleTextAreaScroll,\n            handleCompositionStart,\n            handleCompositionEnd,\n            handleInput,\n            handleInputBlur,\n            handleInputFocus,\n            handleWrapperBlur,\n            handleWrapperFocus,\n            handleMouseEnter,\n            handleMouseLeave,\n            handleMouseDown,\n            handleChange,\n            handleClick,\n            handleClear,\n            handlePasswordToggleClick,\n            handlePasswordToggleMousedown,\n            handleWrapperKeyDown,\n            handleTextAreaMirrorResize, getTextareaScrollContainer: () => {\n                return textareaElRef.value;\n            }, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender });\n    },\n    render() {\n        const { mergedClsPrefix, mergedStatus, themeClass, onRender, $slots } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { ref: \"wrapperElRef\", class: [\n                `${mergedClsPrefix}-input`,\n                themeClass,\n                mergedStatus && `${mergedClsPrefix}-input--${mergedStatus}-status`,\n                {\n                    [`${mergedClsPrefix}-input--rtl`]: this.rtlEnabled,\n                    [`${mergedClsPrefix}-input--disabled`]: this.mergedDisabled,\n                    [`${mergedClsPrefix}-input--textarea`]: this.type === 'textarea',\n                    [`${mergedClsPrefix}-input--resizable`]: this.resizable && !this.autosize,\n                    [`${mergedClsPrefix}-input--autosize`]: this.autosize,\n                    [`${mergedClsPrefix}-input--round`]: this.round && !(this.type === 'textarea'),\n                    [`${mergedClsPrefix}-input--pair`]: this.pair,\n                    [`${mergedClsPrefix}-input--focus`]: this.mergedFocus,\n                    [`${mergedClsPrefix}-input--stateful`]: this.stateful\n                }\n            ], style: this.cssVars, tabindex: !this.mergedDisabled && this.passivelyActivated && !this.activated\n                ? 0\n                : undefined, onFocus: this.handleWrapperFocus, onBlur: this.handleWrapperBlur, onClick: this.handleClick, onMousedown: this.handleMouseDown, onMouseenter: this.handleMouseEnter, onMouseleave: this.handleMouseLeave, onCompositionstart: this.handleCompositionStart, onCompositionend: this.handleCompositionEnd, onKeyup: this.onKeyup, onKeydown: this.handleWrapperKeyDown },\n            h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                resolveWrappedSlot($slots.prefix, (children) => children && (h(\"div\", { class: `${mergedClsPrefix}-input__prefix` }, children))),\n                this.type === 'textarea' ? (h(NScrollbar, { ref: \"textareaScrollbarInstRef\", class: `${mergedClsPrefix}-input__textarea`, container: this.getTextareaScrollContainer, triggerDisplayManually: true, useUnifiedContainer: true }, {\n                    default: () => {\n                        const { textAreaScrollContainerWidth } = this;\n                        const scrollContainerWidthStyle = {\n                            width: this.autosize &&\n                                textAreaScrollContainerWidth &&\n                                `${textAreaScrollContainerWidth}px`\n                        };\n                        return (h(Fragment, null,\n                            h(\"textarea\", Object.assign({}, this.inputProps, { ref: \"textareaElRef\", class: `${mergedClsPrefix}-input__textarea-el`, autofocus: this.autofocus, rows: Number(this.rows), placeholder: this.placeholder, value: this.mergedValue, disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, readonly: this.readonly, tabindex: this.passivelyActivated && !this.activated\n                                    ? -1\n                                    : undefined, style: [\n                                    this.textDecorationStyle[0],\n                                    scrollContainerWidthStyle\n                                ], onBlur: this.handleInputBlur, onFocus: this.handleInputFocus, onInput: this.handleInput, onChange: this.handleChange, onScroll: this.handleTextAreaScroll })),\n                            this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder`, style: [\n                                    this.placeholderStyle,\n                                    scrollContainerWidthStyle\n                                ], key: \"placeholder\" }, this.mergedPlaceholder[0])) : null,\n                            this.autosize ? (h(VResizeObserver, { onResize: this.handleTextAreaMirrorResize }, {\n                                default: () => (h(\"div\", { ref: \"textareaMirrorElRef\", class: `${mergedClsPrefix}-input__textarea-mirror`, key: \"mirror\" }))\n                            })) : null));\n                    }\n                })) : (h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", Object.assign({ type: this.type === 'password' &&\n                            this.mergedShowPasswordOn &&\n                            this.passwordVisible\n                            ? 'text'\n                            : this.type }, this.inputProps, { ref: \"inputElRef\", class: `${mergedClsPrefix}-input__input-el`, style: this.textDecorationStyle[0], tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[0], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[0]\n                            : this.mergedValue, readonly: this.readonly, autofocus: this.autofocus, size: this.attrSize, onBlur: this.handleInputBlur, onFocus: this.handleInputFocus, onInput: (e) => this.handleInput(e, 0), onChange: (e) => this.handleChange(e, 0) })),\n                    this.showPlaceholder1 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[0]))) : null,\n                    this.autosize ? (h(\"div\", { class: `${mergedClsPrefix}-input__input-mirror`, key: \"mirror\", ref: \"inputMirrorElRef\" }, \"\\u00A0\")) : null)),\n                !this.pair &&\n                    resolveWrappedSlot($slots.suffix, (children) => {\n                        return children ||\n                            this.clearable ||\n                            this.showCount ||\n                            this.mergedShowPasswordOn ||\n                            this.loading !== undefined ? (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                            resolveWrappedSlot($slots.clear, (children) => {\n                                return ((this.clearable || children) && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, { default: () => children })));\n                            }),\n                            !this.internalLoadingBeforeSuffix ? children : null,\n                            this.loading !== undefined ? (h(NBaseSuffix, { clsPrefix: mergedClsPrefix, loading: this.loading, showArrow: false, showClear: false, style: this.cssVars })) : null,\n                            this.internalLoadingBeforeSuffix ? children : null,\n                            this.showCount && this.type !== 'textarea' ? (h(WordCount, null, {\n                                default: (props) => { var _a; return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props); }\n                            })) : null,\n                            this.mergedShowPasswordOn && this.type === 'password' ? (h(NBaseIcon, { clsPrefix: mergedClsPrefix, class: `${mergedClsPrefix}-input__eye`, onMousedown: this.handlePasswordToggleMousedown, onClick: this.handlePasswordToggleClick }, {\n                                default: () => {\n                                    return this.passwordVisible\n                                        ? resolveSlot($slots['password-visible-icon'], () => [h(EyeIcon, null)])\n                                        : resolveSlot($slots['password-invisible-icon'], () => [h(EyeOffIcon, null)]);\n                                }\n                            })) : null\n                        ])) : null;\n                    })),\n            this.pair ? (h(\"span\", { class: `${mergedClsPrefix}-input__separator` }, resolveSlot($slots.separator, () => [this.separator]))) : null,\n            this.pair ? (h(\"div\", { class: `${mergedClsPrefix}-input-wrapper` },\n                h(\"div\", { class: `${mergedClsPrefix}-input__input` },\n                    h(\"input\", { ref: \"inputEl2Ref\", type: this.type, class: `${mergedClsPrefix}-input__input-el`, tabindex: this.passivelyActivated && !this.activated ? -1 : undefined, placeholder: this.mergedPlaceholder[1], disabled: this.mergedDisabled, maxlength: this.maxlength, minlength: this.minlength, value: Array.isArray(this.mergedValue)\n                            ? this.mergedValue[1]\n                            : undefined, readonly: this.readonly, style: this.textDecorationStyle[1], onBlur: this.handleInputBlur, onFocus: this.handleInputFocus, onInput: (e) => this.handleInput(e, 1), onChange: (e) => this.handleChange(e, 1) }),\n                    this.showPlaceholder2 ? (h(\"div\", { class: `${mergedClsPrefix}-input__placeholder` },\n                        h(\"span\", null, this.mergedPlaceholder[1]))) : null),\n                resolveWrappedSlot($slots.suffix, (children) => {\n                    return ((this.clearable || children) && (h(\"div\", { class: `${mergedClsPrefix}-input__suffix` }, [\n                        this.clearable && (h(NBaseClear, { clsPrefix: mergedClsPrefix, show: this.showClearButton, onClear: this.handleClear }, { default: () => { var _a; return (_a = $slots.clear) === null || _a === void 0 ? void 0 : _a.call($slots); } })),\n                        children\n                    ])));\n                }))) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__border` })) : null,\n            this.mergedBordered ? (h(\"div\", { class: `${mergedClsPrefix}-input__state-border` })) : null,\n            this.showCount && this.type === 'textarea' ? (h(WordCount, null, { default: (props) => { var _a; return (_a = $slots.count) === null || _a === void 0 ? void 0 : _a.call($slots, props); } })) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}