{"ast":null,"code":"import { h, defineComponent, computed, ref, provide } from 'vue';\nimport { NScrollbar } from '../../_internal';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { layoutLight } from '../styles';\nimport style from './styles/layout.cssr';\nimport { positionProp } from './interface';\nimport { createInjectionKey } from '../../_utils';\nconst layoutProps = {\n  embedded: Boolean,\n  position: positionProp,\n  nativeScrollbar: {\n    type: Boolean,\n    default: true\n  },\n  scrollbarProps: Object,\n  onScroll: Function,\n  contentStyle: {\n    type: [String, Object],\n    default: ''\n  },\n  hasSider: Boolean,\n  siderPlacement: {\n    type: String,\n    default: 'left'\n  }\n};\nexport const layoutInjectionKey = createInjectionKey('n-layout'); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nexport function createLayoutComponent(isContent) {\n  return defineComponent({\n    name: isContent ? 'LayoutContent' : 'Layout',\n    props: Object.assign(Object.assign({}, useTheme.props), layoutProps),\n\n    setup(props) {\n      const scrollableElRef = ref(null);\n      const scrollbarInstRef = ref(null);\n      const {\n        mergedClsPrefixRef,\n        inlineThemeDisabled\n      } = useConfig(props);\n      const themeRef = useTheme('Layout', '-layout', style, layoutLight, props, mergedClsPrefixRef);\n\n      function scrollTo(options, y) {\n        if (props.nativeScrollbar) {\n          const {\n            value: scrollableEl\n          } = scrollableElRef;\n\n          if (scrollableEl) {\n            if (y === undefined) {\n              scrollableEl.scrollTo(options);\n            } else {\n              scrollableEl.scrollTo(options, y);\n            }\n          }\n        } else {\n          const {\n            value: scrollbarInst\n          } = scrollbarInstRef;\n\n          if (scrollbarInst) {\n            scrollbarInst.scrollTo(options, y);\n          }\n        }\n      }\n\n      provide(layoutInjectionKey, props);\n      const hasSiderStyle = {\n        display: 'flex',\n        flexWrap: 'nowrap',\n        width: '100%',\n        flexDirection: 'row'\n      };\n      const exposedMethods = {\n        scrollTo\n      };\n      const cssVarsRef = computed(() => {\n        const {\n          common: {\n            cubicBezierEaseInOut\n          },\n          self\n        } = themeRef.value;\n        return {\n          '--n-bezier': cubicBezierEaseInOut,\n          '--n-color': props.embedded ? self.colorEmbedded : self.color,\n          '--n-text-color': self.textColor\n        };\n      });\n      const themeClassHandle = inlineThemeDisabled ? useThemeClass('layout', undefined, cssVarsRef, props) : undefined;\n      return Object.assign({\n        mergedClsPrefix: mergedClsPrefixRef,\n        scrollableElRef,\n        scrollbarInstRef,\n        hasSiderStyle,\n        mergedTheme: themeRef,\n        cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n        themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n        onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n      }, exposedMethods);\n    },\n\n    render() {\n      var _a;\n\n      const {\n        mergedClsPrefix,\n        hasSider\n      } = this;\n      (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n      const hasSiderStyle = hasSider ? this.hasSiderStyle : undefined;\n      const layoutClass = [this.themeClass, isContent && `${mergedClsPrefix}-layout-content`, `${mergedClsPrefix}-layout`, `${mergedClsPrefix}-layout--${this.position}-positioned`];\n      return h(\"div\", {\n        class: layoutClass,\n        style: this.cssVars\n      }, this.nativeScrollbar ? h(\"div\", {\n        ref: \"scrollableElRef\",\n        class: `${mergedClsPrefix}-layout-scroll-container`,\n        style: [this.contentStyle, hasSiderStyle],\n        onScroll: this.onScroll\n      }, this.$slots) : h(NScrollbar, Object.assign({}, this.scrollbarProps, {\n        onScroll: this.onScroll,\n        ref: \"scrollbarInstRef\",\n        theme: this.mergedTheme.peers.Scrollbar,\n        themeOverrides: this.mergedTheme.peerOverrides.Scrollbar,\n        contentStyle: [this.contentStyle, hasSiderStyle]\n      }), this.$slots));\n    }\n\n  });\n}\nexport default createLayoutComponent(false);","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/layout/src/Layout.js"],"names":["h","defineComponent","computed","ref","provide","NScrollbar","useConfig","useTheme","useThemeClass","layoutLight","style","positionProp","createInjectionKey","layoutProps","embedded","Boolean","position","nativeScrollbar","type","default","scrollbarProps","Object","onScroll","Function","contentStyle","String","hasSider","siderPlacement","layoutInjectionKey","createLayoutComponent","isContent","name","props","assign","setup","scrollableElRef","scrollbarInstRef","mergedClsPrefixRef","inlineThemeDisabled","themeRef","scrollTo","options","y","value","scrollableEl","undefined","scrollbarInst","hasSiderStyle","display","flexWrap","width","flexDirection","exposedMethods","cssVarsRef","common","cubicBezierEaseInOut","self","colorEmbedded","color","textColor","themeClassHandle","mergedClsPrefix","mergedTheme","cssVars","themeClass","onRender","render","_a","call","layoutClass","class","$slots","theme","peers","Scrollbar","themeOverrides","peerOverrides"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, ref, provide } from 'vue';\nimport { NScrollbar } from '../../_internal';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { layoutLight } from '../styles';\nimport style from './styles/layout.cssr';\nimport { positionProp } from './interface';\nimport { createInjectionKey } from '../../_utils';\nconst layoutProps = {\n    embedded: Boolean,\n    position: positionProp,\n    nativeScrollbar: {\n        type: Boolean,\n        default: true\n    },\n    scrollbarProps: Object,\n    onScroll: Function,\n    contentStyle: {\n        type: [String, Object],\n        default: ''\n    },\n    hasSider: Boolean,\n    siderPlacement: {\n        type: String,\n        default: 'left'\n    }\n};\nexport const layoutInjectionKey = createInjectionKey('n-layout');\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function createLayoutComponent(isContent) {\n    return defineComponent({\n        name: isContent ? 'LayoutContent' : 'Layout',\n        props: Object.assign(Object.assign({}, useTheme.props), layoutProps),\n        setup(props) {\n            const scrollableElRef = ref(null);\n            const scrollbarInstRef = ref(null);\n            const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n            const themeRef = useTheme('Layout', '-layout', style, layoutLight, props, mergedClsPrefixRef);\n            function scrollTo(options, y) {\n                if (props.nativeScrollbar) {\n                    const { value: scrollableEl } = scrollableElRef;\n                    if (scrollableEl) {\n                        if (y === undefined) {\n                            scrollableEl.scrollTo(options);\n                        }\n                        else {\n                            scrollableEl.scrollTo(options, y);\n                        }\n                    }\n                }\n                else {\n                    const { value: scrollbarInst } = scrollbarInstRef;\n                    if (scrollbarInst) {\n                        scrollbarInst.scrollTo(options, y);\n                    }\n                }\n            }\n            provide(layoutInjectionKey, props);\n            const hasSiderStyle = {\n                display: 'flex',\n                flexWrap: 'nowrap',\n                width: '100%',\n                flexDirection: 'row'\n            };\n            const exposedMethods = {\n                scrollTo\n            };\n            const cssVarsRef = computed(() => {\n                const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n                return {\n                    '--n-bezier': cubicBezierEaseInOut,\n                    '--n-color': props.embedded ? self.colorEmbedded : self.color,\n                    '--n-text-color': self.textColor\n                };\n            });\n            const themeClassHandle = inlineThemeDisabled\n                ? useThemeClass('layout', undefined, cssVarsRef, props)\n                : undefined;\n            return Object.assign({ mergedClsPrefix: mergedClsPrefixRef, scrollableElRef,\n                scrollbarInstRef,\n                hasSiderStyle, mergedTheme: themeRef, cssVars: inlineThemeDisabled ? undefined : cssVarsRef, themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass, onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender }, exposedMethods);\n        },\n        render() {\n            var _a;\n            const { mergedClsPrefix, hasSider } = this;\n            (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n            const hasSiderStyle = hasSider ? this.hasSiderStyle : undefined;\n            const layoutClass = [\n                this.themeClass,\n                isContent && `${mergedClsPrefix}-layout-content`,\n                `${mergedClsPrefix}-layout`,\n                `${mergedClsPrefix}-layout--${this.position}-positioned`\n            ];\n            return (h(\"div\", { class: layoutClass, style: this.cssVars }, this.nativeScrollbar ? (h(\"div\", { ref: \"scrollableElRef\", class: `${mergedClsPrefix}-layout-scroll-container`, style: [this.contentStyle, hasSiderStyle], onScroll: this.onScroll }, this.$slots)) : (h(NScrollbar, Object.assign({}, this.scrollbarProps, { onScroll: this.onScroll, ref: \"scrollbarInstRef\", theme: this.mergedTheme.peers.Scrollbar, themeOverrides: this.mergedTheme.peerOverrides.Scrollbar, contentStyle: [this.contentStyle, hasSiderStyle] }), this.$slots))));\n        }\n    });\n}\nexport default createLayoutComponent(false);\n"]},"metadata":{},"sourceType":"module"}