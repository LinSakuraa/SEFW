{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { DesignToken, display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { bodyFont, controlCornerRadius, designUnit, focusStrokeOuter, focusStrokeWidth, layerCornerRadius, neutralFillLayerAltRest, neutralFillLayerRecipe, neutralFillLayerRest, neutralFillStealthRecipe, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight } from '../../design-tokens';\nimport { heightNumber } from '../../styles/size';\nconst neutralFillStealthRestOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-rest-on-neutral-fill-layer-rest').withDefault(target => {\n  const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n  const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n  return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).rest;\n});\nconst neutralFillStealthHoverOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-hover-on-neutral-fill-layer-rest').withDefault(target => {\n  const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n  const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n  return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).hover;\n});\nconst neutralFillStealthActiveOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-active-on-neutral-fill-layer-rest').withDefault(target => {\n  const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n  const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n  return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).active;\n});\nexport const accordionItemStyles = (context, definition) => css`\n    ${display('flex')} :host {\n      box-sizing: border-box;\n      font-family: ${bodyFont};\n      flex-direction: column;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      background: ${neutralFillLayerRest};\n      color: ${neutralForegroundRest};\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-radius: calc(${layerCornerRadius} * 1px);\n    }\n\n    .region {\n      display: none;\n      padding: calc(${designUnit} * 2 * 1px);\n      background: ${neutralFillLayerAltRest};\n    }\n\n    .heading {\n      display: grid;\n      position: relative;\n      grid-template-columns: auto 1fr auto auto;\n      align-items: center;\n    }\n\n    .button {\n      appearance: none;\n      border: none;\n      background: none;\n      grid-column: 2;\n      grid-row: 1;\n      outline: none;\n      margin: calc(${designUnit} * 3 * 1px) 0;\n      padding: 0 calc(${designUnit} * 2 * 1px);\n      text-align: left;\n      color: inherit;\n      cursor: pointer;\n      font-family: inherit;\n    }\n\n    .button::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      cursor: pointer;\n    }\n\n    .button:${focusVisible}::before {\n      outline: none;\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      border-radius: calc(${layerCornerRadius} * 1px);\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(.expanded) .button:${focusVisible}::before {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    :host(.expanded) .region {\n      display: block;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-bottom-left-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n      border-bottom-right-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n    }\n\n    .icon {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 4;\n      pointer-events: none;\n      background: ${neutralFillStealthRestOnNeutralFillLayerRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      fill: currentcolor;\n      width: calc(${heightNumber} * 1px);\n      height: calc(${heightNumber} * 1px);\n      margin: calc(${designUnit} * 2 * 1px);\n    }\n\n    .heading:hover .icon {\n      background: ${neutralFillStealthHoverOnNeutralFillLayerRest};\n    }\n\n    .heading:active .icon {\n      background: ${neutralFillStealthActiveOnNeutralFillLayerRest};\n    }\n\n    slot[name='collapsed-icon'] {\n      display: flex;\n    }\n\n    :host(.expanded) slot[name='collapsed-icon'] {\n      display: none;\n    }\n\n    slot[name='expanded-icon'] {\n      display: none;\n    }\n\n    :host(.expanded) slot[name='expanded-icon'] {\n      display: flex;\n    }\n\n    .start {\n      display: flex;\n      align-items: center;\n      padding-inline-start: calc(${designUnit} * 2 * 1px);\n      justify-content: center;\n      grid-column: 1;\n    }\n\n    .end {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 3;\n    }\n\n    .icon,\n    .start,\n    .end {\n      position: relative;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        .button:${focusVisible}::before {\n          border-color: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight};\n        }\n        .icon {\n          fill: ${SystemColors.ButtonText};\n        }\n      `));","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/accordion/accordion-item/accordion-item.styles.js"],"names":["css","DesignToken","display","focusVisible","forcedColorsStylesheetBehavior","SystemColors","bodyFont","controlCornerRadius","designUnit","focusStrokeOuter","focusStrokeWidth","layerCornerRadius","neutralFillLayerAltRest","neutralFillLayerRecipe","neutralFillLayerRest","neutralFillStealthRecipe","neutralForegroundRest","neutralStrokeLayerRest","strokeWidth","typeRampBaseFontSize","typeRampBaseLineHeight","heightNumber","neutralFillStealthRestOnNeutralFillLayerRest","create","withDefault","target","baseRecipe","getValueFor","buttonRecipe","evaluate","rest","neutralFillStealthHoverOnNeutralFillLayerRest","hover","neutralFillStealthActiveOnNeutralFillLayerRest","active","accordionItemStyles","context","definition","withBehaviors","Highlight","ButtonText"],"mappings":"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","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { DesignToken, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { bodyFont, controlCornerRadius, designUnit, focusStrokeOuter, focusStrokeWidth, layerCornerRadius, neutralFillLayerAltRest, neutralFillLayerRecipe, neutralFillLayerRest, neutralFillStealthRecipe, neutralForegroundRest, neutralStrokeLayerRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../../design-tokens';\nimport { heightNumber } from '../../styles/size';\nconst neutralFillStealthRestOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-rest-on-neutral-fill-layer-rest').withDefault((target) => {\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).rest;\n});\nconst neutralFillStealthHoverOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-hover-on-neutral-fill-layer-rest').withDefault((target) => {\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).hover;\n});\nconst neutralFillStealthActiveOnNeutralFillLayerRest = DesignToken.create('neutral-fill-stealth-active-on-neutral-fill-layer-rest').withDefault((target) => {\n    const baseRecipe = neutralFillLayerRecipe.getValueFor(target);\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, baseRecipe.evaluate(target).rest).active;\n});\nexport const accordionItemStyles = (context, definition) => css `\n    ${display('flex')} :host {\n      box-sizing: border-box;\n      font-family: ${bodyFont};\n      flex-direction: column;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      background: ${neutralFillLayerRest};\n      color: ${neutralForegroundRest};\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-radius: calc(${layerCornerRadius} * 1px);\n    }\n\n    .region {\n      display: none;\n      padding: calc(${designUnit} * 2 * 1px);\n      background: ${neutralFillLayerAltRest};\n    }\n\n    .heading {\n      display: grid;\n      position: relative;\n      grid-template-columns: auto 1fr auto auto;\n      align-items: center;\n    }\n\n    .button {\n      appearance: none;\n      border: none;\n      background: none;\n      grid-column: 2;\n      grid-row: 1;\n      outline: none;\n      margin: calc(${designUnit} * 3 * 1px) 0;\n      padding: 0 calc(${designUnit} * 2 * 1px);\n      text-align: left;\n      color: inherit;\n      cursor: pointer;\n      font-family: inherit;\n    }\n\n    .button::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      cursor: pointer;\n    }\n\n    .button:${focusVisible}::before {\n      outline: none;\n      border: calc(${strokeWidth} * 1px) solid ${focusStrokeOuter};\n      border-radius: calc(${layerCornerRadius} * 1px);\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter};\n    }\n\n    :host(.expanded) .button:${focusVisible}::before {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n\n    :host(.expanded) .region {\n      display: block;\n      border-top: calc(${strokeWidth} * 1px) solid ${neutralStrokeLayerRest};\n      border-bottom-left-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n      border-bottom-right-radius: calc((${layerCornerRadius} - ${strokeWidth}) * 1px);\n    }\n\n    .icon {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 4;\n      pointer-events: none;\n      background: ${neutralFillStealthRestOnNeutralFillLayerRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      fill: currentcolor;\n      width: calc(${heightNumber} * 1px);\n      height: calc(${heightNumber} * 1px);\n      margin: calc(${designUnit} * 2 * 1px);\n    }\n\n    .heading:hover .icon {\n      background: ${neutralFillStealthHoverOnNeutralFillLayerRest};\n    }\n\n    .heading:active .icon {\n      background: ${neutralFillStealthActiveOnNeutralFillLayerRest};\n    }\n\n    slot[name='collapsed-icon'] {\n      display: flex;\n    }\n\n    :host(.expanded) slot[name='collapsed-icon'] {\n      display: none;\n    }\n\n    slot[name='expanded-icon'] {\n      display: none;\n    }\n\n    :host(.expanded) slot[name='expanded-icon'] {\n      display: flex;\n    }\n\n    .start {\n      display: flex;\n      align-items: center;\n      padding-inline-start: calc(${designUnit} * 2 * 1px);\n      justify-content: center;\n      grid-column: 1;\n    }\n\n    .end {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      grid-column: 3;\n    }\n\n    .icon,\n    .start,\n    .end {\n      position: relative;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        .button:${focusVisible}::before {\n          border-color: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight};\n        }\n        .icon {\n          fill: ${SystemColors.ButtonText};\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}