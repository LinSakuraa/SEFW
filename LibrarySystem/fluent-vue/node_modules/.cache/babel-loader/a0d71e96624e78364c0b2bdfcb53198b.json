{"ast":null,"code":"import { FAST } from \"../platform\";\nimport { Observable } from \"../observation/observable\";\nimport { ElementStyles } from \"../styles/element-styles\";\nimport { AttributeDefinition } from \"./attributes\";\nconst defaultShadowOptions = {\n  mode: \"open\"\n};\nconst defaultElementOptions = {};\nconst fastRegistry = FAST.getById(4\n/* elementRegistry */\n, () => {\n  const typeToDefinition = new Map();\n  return Object.freeze({\n    register(definition) {\n      if (typeToDefinition.has(definition.type)) {\n        return false;\n      }\n\n      typeToDefinition.set(definition.type, definition);\n      return true;\n    },\n\n    getByType(key) {\n      return typeToDefinition.get(key);\n    }\n\n  });\n});\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\n\nexport class FASTElementDefinition {\n  /**\n   * Creates an instance of FASTElementDefinition.\n   * @param type - The type this definition is being created for.\n   * @param nameOrConfig - The name of the element to define or a config object\n   * that describes the element to define.\n   */\n  constructor(type, nameOrConfig = type.definition) {\n    if (typeof nameOrConfig === \"string\") {\n      nameOrConfig = {\n        name: nameOrConfig\n      };\n    }\n\n    this.type = type;\n    this.name = nameOrConfig.name;\n    this.template = nameOrConfig.template;\n    const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n    const observedAttributes = new Array(attributes.length);\n    const propertyLookup = {};\n    const attributeLookup = {};\n\n    for (let i = 0, ii = attributes.length; i < ii; ++i) {\n      const current = attributes[i];\n      observedAttributes[i] = current.attribute;\n      propertyLookup[current.name] = current;\n      attributeLookup[current.attribute] = current;\n    }\n\n    this.attributes = attributes;\n    this.observedAttributes = observedAttributes;\n    this.propertyLookup = propertyLookup;\n    this.attributeLookup = attributeLookup;\n    this.shadowOptions = nameOrConfig.shadowOptions === void 0 ? defaultShadowOptions : nameOrConfig.shadowOptions === null ? void 0 : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n    this.elementOptions = nameOrConfig.elementOptions === void 0 ? defaultElementOptions : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n    this.styles = nameOrConfig.styles === void 0 ? void 0 : Array.isArray(nameOrConfig.styles) ? ElementStyles.create(nameOrConfig.styles) : nameOrConfig.styles instanceof ElementStyles ? nameOrConfig.styles : ElementStyles.create([nameOrConfig.styles]);\n  }\n  /**\n   * Indicates if this element has been defined in at least one registry.\n   */\n\n\n  get isDefined() {\n    return !!fastRegistry.getByType(this.type);\n  }\n  /**\n   * Defines a custom element based on this definition.\n   * @param registry - The element registry to define the element in.\n   */\n\n\n  define(registry = customElements) {\n    const type = this.type;\n\n    if (fastRegistry.register(this)) {\n      const attributes = this.attributes;\n      const proto = type.prototype;\n\n      for (let i = 0, ii = attributes.length; i < ii; ++i) {\n        Observable.defineProperty(proto, attributes[i]);\n      }\n\n      Reflect.defineProperty(type, \"observedAttributes\", {\n        value: this.observedAttributes,\n        enumerable: true\n      });\n    }\n\n    if (!registry.get(this.name)) {\n      registry.define(this.name, type, this.elementOptions);\n    }\n\n    return this;\n  }\n\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\n\nFASTElementDefinition.forType = fastRegistry.getByType;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-element/dist/esm/components/fast-definitions.js"],"names":["FAST","Observable","ElementStyles","AttributeDefinition","defaultShadowOptions","mode","defaultElementOptions","fastRegistry","getById","typeToDefinition","Map","Object","freeze","register","definition","has","type","set","getByType","key","get","FASTElementDefinition","constructor","nameOrConfig","name","template","attributes","collect","observedAttributes","Array","length","propertyLookup","attributeLookup","i","ii","current","attribute","shadowOptions","assign","elementOptions","styles","isArray","create","isDefined","define","registry","customElements","proto","prototype","defineProperty","Reflect","value","enumerable","forType"],"mappings":"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","sourcesContent":["import { FAST } from \"../platform\";\nimport { Observable } from \"../observation/observable\";\nimport { ElementStyles } from \"../styles/element-styles\";\nimport { AttributeDefinition } from \"./attributes\";\nconst defaultShadowOptions = { mode: \"open\" };\nconst defaultElementOptions = {};\nconst fastRegistry = FAST.getById(4 /* elementRegistry */, () => {\n    const typeToDefinition = new Map();\n    return Object.freeze({\n        register(definition) {\n            if (typeToDefinition.has(definition.type)) {\n                return false;\n            }\n            typeToDefinition.set(definition.type, definition);\n            return true;\n        },\n        getByType(key) {\n            return typeToDefinition.get(key);\n        },\n    });\n});\n/**\n * Defines metadata for a FASTElement.\n * @public\n */\nexport class FASTElementDefinition {\n    /**\n     * Creates an instance of FASTElementDefinition.\n     * @param type - The type this definition is being created for.\n     * @param nameOrConfig - The name of the element to define or a config object\n     * that describes the element to define.\n     */\n    constructor(type, nameOrConfig = type.definition) {\n        if (typeof nameOrConfig === \"string\") {\n            nameOrConfig = { name: nameOrConfig };\n        }\n        this.type = type;\n        this.name = nameOrConfig.name;\n        this.template = nameOrConfig.template;\n        const attributes = AttributeDefinition.collect(type, nameOrConfig.attributes);\n        const observedAttributes = new Array(attributes.length);\n        const propertyLookup = {};\n        const attributeLookup = {};\n        for (let i = 0, ii = attributes.length; i < ii; ++i) {\n            const current = attributes[i];\n            observedAttributes[i] = current.attribute;\n            propertyLookup[current.name] = current;\n            attributeLookup[current.attribute] = current;\n        }\n        this.attributes = attributes;\n        this.observedAttributes = observedAttributes;\n        this.propertyLookup = propertyLookup;\n        this.attributeLookup = attributeLookup;\n        this.shadowOptions =\n            nameOrConfig.shadowOptions === void 0\n                ? defaultShadowOptions\n                : nameOrConfig.shadowOptions === null\n                    ? void 0\n                    : Object.assign(Object.assign({}, defaultShadowOptions), nameOrConfig.shadowOptions);\n        this.elementOptions =\n            nameOrConfig.elementOptions === void 0\n                ? defaultElementOptions\n                : Object.assign(Object.assign({}, defaultElementOptions), nameOrConfig.elementOptions);\n        this.styles =\n            nameOrConfig.styles === void 0\n                ? void 0\n                : Array.isArray(nameOrConfig.styles)\n                    ? ElementStyles.create(nameOrConfig.styles)\n                    : nameOrConfig.styles instanceof ElementStyles\n                        ? nameOrConfig.styles\n                        : ElementStyles.create([nameOrConfig.styles]);\n    }\n    /**\n     * Indicates if this element has been defined in at least one registry.\n     */\n    get isDefined() {\n        return !!fastRegistry.getByType(this.type);\n    }\n    /**\n     * Defines a custom element based on this definition.\n     * @param registry - The element registry to define the element in.\n     */\n    define(registry = customElements) {\n        const type = this.type;\n        if (fastRegistry.register(this)) {\n            const attributes = this.attributes;\n            const proto = type.prototype;\n            for (let i = 0, ii = attributes.length; i < ii; ++i) {\n                Observable.defineProperty(proto, attributes[i]);\n            }\n            Reflect.defineProperty(type, \"observedAttributes\", {\n                value: this.observedAttributes,\n                enumerable: true,\n            });\n        }\n        if (!registry.get(this.name)) {\n            registry.define(this.name, type, this.elementOptions);\n        }\n        return this;\n    }\n}\n/**\n * Gets the element definition associated with the specified type.\n * @param type - The custom element type to retrieve the definition for.\n */\nFASTElementDefinition.forType = fastRegistry.getByType;\n"]},"metadata":{},"sourceType":"module"}