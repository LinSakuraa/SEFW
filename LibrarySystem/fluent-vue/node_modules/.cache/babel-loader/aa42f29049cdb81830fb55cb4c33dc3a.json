{"ast":null,"code":"import { h, defineComponent, computed, provide, ref, toRef } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { useTheme, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { getSlot, warn, createKey, call, flatten } from '../../_utils';\nimport { radioLight } from '../styles';\nimport { radioGroupInjectionKey } from './use-radio';\nimport style from './styles/radio-group.cssr';\nimport useRtl from '../../_mixins/use-rtl';\n\nfunction mapSlot(defaultSlot, value, clsPrefix) {\n  var _a;\n\n  const children = [];\n  let isButtonGroup = false;\n\n  for (let i = 0; i < defaultSlot.length; ++i) {\n    const wrappedInstance = defaultSlot[i];\n    const name = (_a = wrappedInstance.type) === null || _a === void 0 ? void 0 : _a.name;\n\n    if (name === 'RadioButton') {\n      isButtonGroup = true;\n    }\n\n    if (process.env.NODE_ENV !== 'production' && isButtonGroup && name !== 'RadioButton') {\n      warn('radio-group', '`n-radio-group` in button mode only takes `n-radio-button` as children.');\n      continue;\n    }\n\n    const instanceProps = wrappedInstance.props;\n\n    if (name !== 'RadioButton') {\n      children.push(wrappedInstance);\n      continue;\n    }\n\n    if (i === 0) {\n      children.push(wrappedInstance);\n    } else {\n      const lastInstanceProps = children[children.length - 1].props;\n      const lastInstanceChecked = value === lastInstanceProps.value;\n      const lastInstanceDisabled = lastInstanceProps.disabled;\n      const currentInstanceChecked = value === instanceProps.value;\n      const currentInstanceDisabled = instanceProps.disabled;\n      /**\n       * Priority of button splitor:\n       * !disabled  checked >\n       *  disabled  checked >\n       * !disabled !checked >\n       *  disabled !checked\n       */\n\n      const lastInstancePriority = (lastInstanceChecked ? 2 : 0) + (!lastInstanceDisabled ? 1 : 0);\n      const currentInstancePriority = (currentInstanceChecked ? 2 : 0) + (!currentInstanceDisabled ? 1 : 0);\n      const lastInstanceClass = {\n        [`${clsPrefix}-radio-group__splitor--disabled`]: lastInstanceDisabled,\n        [`${clsPrefix}-radio-group__splitor--checked`]: lastInstanceChecked\n      };\n      const currentInstanceClass = {\n        [`${clsPrefix}-radio-group__splitor--disabled`]: currentInstanceDisabled,\n        [`${clsPrefix}-radio-group__splitor--checked`]: currentInstanceChecked\n      };\n      const splitorClass = lastInstancePriority < currentInstancePriority ? currentInstanceClass : lastInstanceClass;\n      children.push(h(\"div\", {\n        class: [`${clsPrefix}-radio-group__splitor`, splitorClass]\n      }), wrappedInstance);\n    }\n  }\n\n  return {\n    children,\n    isButtonGroup\n  };\n}\n\nconst radioGroupProps = Object.assign(Object.assign({}, useTheme.props), {\n  name: String,\n  value: [String, Number],\n  defaultValue: {\n    type: [String, Number],\n    default: null\n  },\n  size: String,\n  disabled: {\n    type: Boolean,\n    default: undefined\n  },\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'RadioGroup',\n  props: radioGroupProps,\n\n  setup(props) {\n    const selfElRef = ref(null);\n    const {\n      mergedSizeRef,\n      mergedDisabledRef,\n      nTriggerFormChange,\n      nTriggerFormInput,\n      nTriggerFormBlur,\n      nTriggerFormFocus\n    } = useFormItem(props);\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled,\n      mergedRtlRef\n    } = useConfig(props);\n    const themeRef = useTheme('Radio', '-radio-group', style, radioLight, props, mergedClsPrefixRef);\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n\n    function doUpdateValue(value) {\n      const {\n        onUpdateValue,\n        'onUpdate:value': _onUpdateValue\n      } = props;\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value);\n      }\n\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n\n    function handleFocusin(e) {\n      const {\n        value: selfEl\n      } = selfElRef;\n      if (!selfEl) return;\n      if (selfEl.contains(e.relatedTarget)) return;\n      nTriggerFormFocus();\n    }\n\n    function handleFocusout(e) {\n      const {\n        value: selfEl\n      } = selfElRef;\n      if (!selfEl) return;\n      if (selfEl.contains(e.relatedTarget)) return;\n      nTriggerFormBlur();\n    }\n\n    provide(radioGroupInjectionKey, {\n      mergedClsPrefixRef,\n      nameRef: toRef(props, 'name'),\n      valueRef: mergedValueRef,\n      disabledRef: mergedDisabledRef,\n      mergedSizeRef,\n      doUpdateValue\n    });\n    const rtlEnabledRef = useRtl('Radio', mergedRtlRef, mergedClsPrefixRef);\n    const cssVarsRef = computed(() => {\n      const {\n        value: size\n      } = mergedSizeRef;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          buttonBorderColor,\n          buttonBorderColorActive,\n          buttonBorderRadius,\n          buttonBoxShadow,\n          buttonBoxShadowFocus,\n          buttonBoxShadowHover,\n          buttonColorActive,\n          buttonTextColor,\n          buttonTextColorActive,\n          buttonTextColorHover,\n          opacityDisabled,\n          [createKey('buttonHeight', size)]: height,\n          [createKey('fontSize', size)]: fontSize\n        }\n      } = themeRef.value;\n      return {\n        '--n-font-size': fontSize,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-button-border-color': buttonBorderColor,\n        '--n-button-border-color-active': buttonBorderColorActive,\n        '--n-button-border-radius': buttonBorderRadius,\n        '--n-button-box-shadow': buttonBoxShadow,\n        '--n-button-box-shadow-focus': buttonBoxShadowFocus,\n        '--n-button-box-shadow-hover': buttonBoxShadowHover,\n        '--n-button-color-active': buttonColorActive,\n        '--n-button-text-color': buttonTextColor,\n        '--n-button-text-color-hover': buttonTextColorHover,\n        '--n-button-text-color-active': buttonTextColorActive,\n        '--n-height': height,\n        '--n-opacity-disabled': opacityDisabled\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('radio-group', computed(() => mergedSizeRef.value[0]), cssVarsRef, props) : undefined;\n    return {\n      selfElRef,\n      rtlEnabled: rtlEnabledRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: mergedValueRef,\n      handleFocusout,\n      handleFocusin,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    var _a;\n\n    const {\n      mergedValue,\n      mergedClsPrefix,\n      handleFocusin,\n      handleFocusout\n    } = this;\n    const {\n      children,\n      isButtonGroup\n    } = mapSlot(flatten(getSlot(this)), mergedValue, mergedClsPrefix);\n    (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n    return h(\"div\", {\n      onFocusin: handleFocusin,\n      onFocusout: handleFocusout,\n      ref: \"selfElRef\",\n      class: [`${mergedClsPrefix}-radio-group`, this.rtlEnabled && `${mergedClsPrefix}-radio-group--rtl`, this.themeClass, isButtonGroup && `${mergedClsPrefix}-radio-group--button-group`],\n      style: this.cssVars\n    }, children);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/radio/src/RadioGroup.js"],"names":["h","defineComponent","computed","provide","ref","toRef","useMergedState","useTheme","useFormItem","useConfig","useThemeClass","getSlot","warn","createKey","call","flatten","radioLight","radioGroupInjectionKey","style","useRtl","mapSlot","defaultSlot","value","clsPrefix","_a","children","isButtonGroup","i","length","wrappedInstance","name","type","process","env","NODE_ENV","instanceProps","props","push","lastInstanceProps","lastInstanceChecked","lastInstanceDisabled","disabled","currentInstanceChecked","currentInstanceDisabled","lastInstancePriority","currentInstancePriority","lastInstanceClass","currentInstanceClass","splitorClass","class","radioGroupProps","Object","assign","String","Number","defaultValue","default","size","Boolean","undefined","Function","Array","onUpdateValue","setup","selfElRef","mergedSizeRef","mergedDisabledRef","nTriggerFormChange","nTriggerFormInput","nTriggerFormBlur","nTriggerFormFocus","mergedClsPrefixRef","inlineThemeDisabled","mergedRtlRef","themeRef","uncontrolledValueRef","controlledValueRef","mergedValueRef","doUpdateValue","_onUpdateValue","handleFocusin","e","selfEl","contains","relatedTarget","handleFocusout","nameRef","valueRef","disabledRef","rtlEnabledRef","cssVarsRef","common","cubicBezierEaseInOut","self","buttonBorderColor","buttonBorderColorActive","buttonBorderRadius","buttonBoxShadow","buttonBoxShadowFocus","buttonBoxShadowHover","buttonColorActive","buttonTextColor","buttonTextColorActive","buttonTextColorHover","opacityDisabled","height","fontSize","themeClassHandle","rtlEnabled","mergedClsPrefix","mergedValue","cssVars","themeClass","onRender","render","onFocusin","onFocusout"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, provide, ref, toRef } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { useTheme, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { getSlot, warn, createKey, call, flatten } from '../../_utils';\nimport { radioLight } from '../styles';\nimport { radioGroupInjectionKey } from './use-radio';\nimport style from './styles/radio-group.cssr';\nimport useRtl from '../../_mixins/use-rtl';\nfunction mapSlot(defaultSlot, value, clsPrefix) {\n    var _a;\n    const children = [];\n    let isButtonGroup = false;\n    for (let i = 0; i < defaultSlot.length; ++i) {\n        const wrappedInstance = defaultSlot[i];\n        const name = (_a = wrappedInstance.type) === null || _a === void 0 ? void 0 : _a.name;\n        if (name === 'RadioButton') {\n            isButtonGroup = true;\n        }\n        if (process.env.NODE_ENV !== 'production' && isButtonGroup && name !== 'RadioButton') {\n            warn('radio-group', '`n-radio-group` in button mode only takes `n-radio-button` as children.');\n            continue;\n        }\n        const instanceProps = wrappedInstance.props;\n        if (name !== 'RadioButton') {\n            children.push(wrappedInstance);\n            continue;\n        }\n        if (i === 0) {\n            children.push(wrappedInstance);\n        }\n        else {\n            const lastInstanceProps = children[children.length - 1]\n                .props;\n            const lastInstanceChecked = value === lastInstanceProps.value;\n            const lastInstanceDisabled = lastInstanceProps.disabled;\n            const currentInstanceChecked = value === instanceProps.value;\n            const currentInstanceDisabled = instanceProps.disabled;\n            /**\n             * Priority of button splitor:\n             * !disabled  checked >\n             *  disabled  checked >\n             * !disabled !checked >\n             *  disabled !checked\n             */\n            const lastInstancePriority = (lastInstanceChecked ? 2 : 0) + (!lastInstanceDisabled ? 1 : 0);\n            const currentInstancePriority = (currentInstanceChecked ? 2 : 0) + (!currentInstanceDisabled ? 1 : 0);\n            const lastInstanceClass = {\n                [`${clsPrefix}-radio-group__splitor--disabled`]: lastInstanceDisabled,\n                [`${clsPrefix}-radio-group__splitor--checked`]: lastInstanceChecked\n            };\n            const currentInstanceClass = {\n                [`${clsPrefix}-radio-group__splitor--disabled`]: currentInstanceDisabled,\n                [`${clsPrefix}-radio-group__splitor--checked`]: currentInstanceChecked\n            };\n            const splitorClass = lastInstancePriority < currentInstancePriority\n                ? currentInstanceClass\n                : lastInstanceClass;\n            children.push(h(\"div\", { class: [`${clsPrefix}-radio-group__splitor`, splitorClass] }), wrappedInstance);\n        }\n    }\n    return {\n        children,\n        isButtonGroup\n    };\n}\nconst radioGroupProps = Object.assign(Object.assign({}, useTheme.props), { name: String, value: [String, Number], defaultValue: {\n        type: [String, Number],\n        default: null\n    }, size: String, disabled: {\n        type: Boolean,\n        default: undefined\n    }, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'RadioGroup',\n    props: radioGroupProps,\n    setup(props) {\n        const selfElRef = ref(null);\n        const { mergedSizeRef, mergedDisabledRef, nTriggerFormChange, nTriggerFormInput, nTriggerFormBlur, nTriggerFormFocus } = useFormItem(props);\n        const { mergedClsPrefixRef, inlineThemeDisabled, mergedRtlRef } = useConfig(props);\n        const themeRef = useTheme('Radio', '-radio-group', style, radioLight, props, mergedClsPrefixRef);\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        function doUpdateValue(value) {\n            const { onUpdateValue, 'onUpdate:value': _onUpdateValue } = props;\n            if (onUpdateValue) {\n                call(onUpdateValue, value);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function handleFocusin(e) {\n            const { value: selfEl } = selfElRef;\n            if (!selfEl)\n                return;\n            if (selfEl.contains(e.relatedTarget))\n                return;\n            nTriggerFormFocus();\n        }\n        function handleFocusout(e) {\n            const { value: selfEl } = selfElRef;\n            if (!selfEl)\n                return;\n            if (selfEl.contains(e.relatedTarget))\n                return;\n            nTriggerFormBlur();\n        }\n        provide(radioGroupInjectionKey, {\n            mergedClsPrefixRef,\n            nameRef: toRef(props, 'name'),\n            valueRef: mergedValueRef,\n            disabledRef: mergedDisabledRef,\n            mergedSizeRef,\n            doUpdateValue\n        });\n        const rtlEnabledRef = useRtl('Radio', mergedRtlRef, mergedClsPrefixRef);\n        const cssVarsRef = computed(() => {\n            const { value: size } = mergedSizeRef;\n            const { common: { cubicBezierEaseInOut }, self: { buttonBorderColor, buttonBorderColorActive, buttonBorderRadius, buttonBoxShadow, buttonBoxShadowFocus, buttonBoxShadowHover, buttonColorActive, buttonTextColor, buttonTextColorActive, buttonTextColorHover, opacityDisabled, [createKey('buttonHeight', size)]: height, [createKey('fontSize', size)]: fontSize } } = themeRef.value;\n            return {\n                '--n-font-size': fontSize,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-button-border-color': buttonBorderColor,\n                '--n-button-border-color-active': buttonBorderColorActive,\n                '--n-button-border-radius': buttonBorderRadius,\n                '--n-button-box-shadow': buttonBoxShadow,\n                '--n-button-box-shadow-focus': buttonBoxShadowFocus,\n                '--n-button-box-shadow-hover': buttonBoxShadowHover,\n                '--n-button-color-active': buttonColorActive,\n                '--n-button-text-color': buttonTextColor,\n                '--n-button-text-color-hover': buttonTextColorHover,\n                '--n-button-text-color-active': buttonTextColorActive,\n                '--n-height': height,\n                '--n-opacity-disabled': opacityDisabled\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('radio-group', computed(() => mergedSizeRef.value[0]), cssVarsRef, props)\n            : undefined;\n        return {\n            selfElRef,\n            rtlEnabled: rtlEnabledRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedValue: mergedValueRef,\n            handleFocusout,\n            handleFocusin,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        var _a;\n        const { mergedValue, mergedClsPrefix, handleFocusin, handleFocusout } = this;\n        const { children, isButtonGroup } = mapSlot(flatten(getSlot(this)), mergedValue, mergedClsPrefix);\n        (_a = this.onRender) === null || _a === void 0 ? void 0 : _a.call(this);\n        return (h(\"div\", { onFocusin: handleFocusin, onFocusout: handleFocusout, ref: \"selfElRef\", class: [\n                `${mergedClsPrefix}-radio-group`,\n                this.rtlEnabled && `${mergedClsPrefix}-radio-group--rtl`,\n                this.themeClass,\n                isButtonGroup && `${mergedClsPrefix}-radio-group--button-group`\n            ], style: this.cssVars }, children));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}