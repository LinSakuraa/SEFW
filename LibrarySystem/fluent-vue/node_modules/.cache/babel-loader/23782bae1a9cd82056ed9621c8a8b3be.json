{"ast":null,"code":"import { inject, computed } from 'vue';\nimport { menuInjectionKey, submenuInjectionKey, menuItemGroupInjectionKey } from './context';\nconst ICON_MARGIN_RIGHT = 8;\nexport function useMenuChild(props) {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const NMenu = inject(menuInjectionKey);\n  const {\n    props: menuProps,\n    mergedCollapsedRef\n  } = NMenu;\n  const NSubmenu = inject(submenuInjectionKey, null);\n  const NMenuOptionGroup = inject(menuItemGroupInjectionKey, null);\n  const horizontalRef = computed(() => {\n    return menuProps.mode === 'horizontal';\n  });\n  const dropdownPlacementRef = computed(() => {\n    if (horizontalRef.value) {\n      return menuProps.dropdownPlacement;\n    }\n\n    if ('tmNodes' in props) return 'right-start';\n    return 'right';\n  });\n  const maxIconSizeRef = computed(() => {\n    var _a;\n\n    return Math.max((_a = menuProps.collapsedIconSize) !== null && _a !== void 0 ? _a : menuProps.iconSize, menuProps.iconSize);\n  });\n  const activeIconSizeRef = computed(() => {\n    var _a;\n\n    if (!horizontalRef.value && props.root && mergedCollapsedRef.value) {\n      return (_a = menuProps.collapsedIconSize) !== null && _a !== void 0 ? _a : menuProps.iconSize;\n    } else {\n      return menuProps.iconSize;\n    }\n  });\n  const paddingLeftRef = computed(() => {\n    if (horizontalRef.value) return undefined;\n    const {\n      collapsedWidth,\n      indent,\n      rootIndent\n    } = menuProps;\n    const {\n      root,\n      isGroup\n    } = props;\n    const mergedRootIndent = rootIndent === undefined ? indent : rootIndent;\n\n    if (root) {\n      if (mergedCollapsedRef.value) {\n        return collapsedWidth / 2 - maxIconSizeRef.value / 2;\n      }\n\n      return mergedRootIndent;\n    }\n\n    if (NMenuOptionGroup) {\n      return indent / 2 + NMenuOptionGroup.paddingLeftRef.value;\n    }\n\n    if (NSubmenu) {\n      return (isGroup ? indent / 2 : indent) + NSubmenu.paddingLeftRef.value;\n    }\n\n    return undefined;\n  });\n  const iconMarginRightRef = computed(() => {\n    const {\n      collapsedWidth,\n      indent,\n      rootIndent\n    } = menuProps;\n    const {\n      value: maxIconSize\n    } = maxIconSizeRef;\n    const {\n      root\n    } = props;\n    if (horizontalRef.value) return ICON_MARGIN_RIGHT;\n    if (!root) return ICON_MARGIN_RIGHT;\n    if (!mergedCollapsedRef.value) return ICON_MARGIN_RIGHT;\n    const mergedRootIndent = rootIndent === undefined ? indent : rootIndent;\n    return mergedRootIndent + maxIconSize + ICON_MARGIN_RIGHT - (collapsedWidth + maxIconSize) / 2;\n  });\n  return {\n    dropdownPlacement: dropdownPlacementRef,\n    activeIconSize: activeIconSizeRef,\n    maxIconSize: maxIconSizeRef,\n    paddingLeft: paddingLeftRef,\n    iconMarginRight: iconMarginRightRef,\n    NMenu,\n    NSubmenu\n  };\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/menu/src/use-menu-child.js"],"names":["inject","computed","menuInjectionKey","submenuInjectionKey","menuItemGroupInjectionKey","ICON_MARGIN_RIGHT","useMenuChild","props","NMenu","menuProps","mergedCollapsedRef","NSubmenu","NMenuOptionGroup","horizontalRef","mode","dropdownPlacementRef","value","dropdownPlacement","maxIconSizeRef","_a","Math","max","collapsedIconSize","iconSize","activeIconSizeRef","root","paddingLeftRef","undefined","collapsedWidth","indent","rootIndent","isGroup","mergedRootIndent","iconMarginRightRef","maxIconSize","activeIconSize","paddingLeft","iconMarginRight"],"mappings":"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","sourcesContent":["import { inject, computed } from 'vue';\nimport { menuInjectionKey, submenuInjectionKey, menuItemGroupInjectionKey } from './context';\nconst ICON_MARGIN_RIGHT = 8;\nexport function useMenuChild(props) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const NMenu = inject(menuInjectionKey);\n    const { props: menuProps, mergedCollapsedRef } = NMenu;\n    const NSubmenu = inject(submenuInjectionKey, null);\n    const NMenuOptionGroup = inject(menuItemGroupInjectionKey, null);\n    const horizontalRef = computed(() => {\n        return menuProps.mode === 'horizontal';\n    });\n    const dropdownPlacementRef = computed(() => {\n        if (horizontalRef.value) {\n            return menuProps.dropdownPlacement;\n        }\n        if ('tmNodes' in props)\n            return 'right-start';\n        return 'right';\n    });\n    const maxIconSizeRef = computed(() => {\n        var _a;\n        return Math.max((_a = menuProps.collapsedIconSize) !== null && _a !== void 0 ? _a : menuProps.iconSize, menuProps.iconSize);\n    });\n    const activeIconSizeRef = computed(() => {\n        var _a;\n        if (!horizontalRef.value && props.root && mergedCollapsedRef.value) {\n            return (_a = menuProps.collapsedIconSize) !== null && _a !== void 0 ? _a : menuProps.iconSize;\n        }\n        else {\n            return menuProps.iconSize;\n        }\n    });\n    const paddingLeftRef = computed(() => {\n        if (horizontalRef.value)\n            return undefined;\n        const { collapsedWidth, indent, rootIndent } = menuProps;\n        const { root, isGroup } = props;\n        const mergedRootIndent = rootIndent === undefined ? indent : rootIndent;\n        if (root) {\n            if (mergedCollapsedRef.value) {\n                return collapsedWidth / 2 - maxIconSizeRef.value / 2;\n            }\n            return mergedRootIndent;\n        }\n        if (NMenuOptionGroup) {\n            return indent / 2 + NMenuOptionGroup.paddingLeftRef.value;\n        }\n        if (NSubmenu) {\n            return ((isGroup ? indent / 2 : indent) +\n                NSubmenu.paddingLeftRef.value);\n        }\n        return undefined;\n    });\n    const iconMarginRightRef = computed(() => {\n        const { collapsedWidth, indent, rootIndent } = menuProps;\n        const { value: maxIconSize } = maxIconSizeRef;\n        const { root } = props;\n        if (horizontalRef.value)\n            return ICON_MARGIN_RIGHT;\n        if (!root)\n            return ICON_MARGIN_RIGHT;\n        if (!mergedCollapsedRef.value)\n            return ICON_MARGIN_RIGHT;\n        const mergedRootIndent = rootIndent === undefined ? indent : rootIndent;\n        return (mergedRootIndent +\n            maxIconSize +\n            ICON_MARGIN_RIGHT -\n            (collapsedWidth + maxIconSize) / 2);\n    });\n    return {\n        dropdownPlacement: dropdownPlacementRef,\n        activeIconSize: activeIconSizeRef,\n        maxIconSize: maxIconSizeRef,\n        paddingLeft: paddingLeftRef,\n        iconMarginRight: iconMarginRightRef,\n        NMenu,\n        NSubmenu\n    };\n}\n"]},"metadata":{},"sourceType":"module"}