{"ast":null,"code":"import { composite } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { createTheme } from '../../_mixins';\nexport const self = vars => {\n  const {\n    baseColor,\n    textColor2,\n    bodyColor,\n    cardColor,\n    dividerColor,\n    actionColor,\n    scrollbarColor,\n    scrollbarColorHover,\n    invertedColor\n  } = vars;\n  return {\n    textColor: textColor2,\n    textColorInverted: '#FFF',\n    color: bodyColor,\n    colorEmbedded: actionColor,\n    headerColor: cardColor,\n    headerColorInverted: invertedColor,\n    footerColor: actionColor,\n    footerColorInverted: invertedColor,\n    headerBorderColor: dividerColor,\n    headerBorderColorInverted: invertedColor,\n    footerBorderColor: dividerColor,\n    footerBorderColorInverted: invertedColor,\n    siderBorderColor: dividerColor,\n    siderBorderColorInverted: invertedColor,\n    siderColor: cardColor,\n    siderColorInverted: invertedColor,\n    siderToggleButtonBorder: `1px solid ${dividerColor}`,\n    siderToggleButtonColor: baseColor,\n    siderToggleButtonIconColor: textColor2,\n    siderToggleButtonIconColorInverted: textColor2,\n    siderToggleBarColor: composite(bodyColor, scrollbarColor),\n    siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n    // hack for inverted background\n    __invertScrollbar: 'true'\n  };\n};\nconst layoutLight = createTheme({\n  name: 'Layout',\n  common: commonLight,\n  peers: {\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default layoutLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/layout/styles/light.js"],"names":["composite","commonLight","scrollbarLight","createTheme","self","vars","baseColor","textColor2","bodyColor","cardColor","dividerColor","actionColor","scrollbarColor","scrollbarColorHover","invertedColor","textColor","textColorInverted","color","colorEmbedded","headerColor","headerColorInverted","footerColor","footerColorInverted","headerBorderColor","headerBorderColorInverted","footerBorderColor","footerBorderColorInverted","siderBorderColor","siderBorderColorInverted","siderColor","siderColorInverted","siderToggleButtonBorder","siderToggleButtonColor","siderToggleButtonIconColor","siderToggleButtonIconColorInverted","siderToggleBarColor","siderToggleBarColorHover","__invertScrollbar","layoutLight","name","common","peers","Scrollbar"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAC1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA,SAAzB;AAAoCC,IAAAA,SAApC;AAA+CC,IAAAA,YAA/C;AAA6DC,IAAAA,WAA7D;AAA0EC,IAAAA,cAA1E;AAA0FC,IAAAA,mBAA1F;AAA+GC,IAAAA;AAA/G,MAAiIT,IAAvI;AACA,SAAO;AACHU,IAAAA,SAAS,EAAER,UADR;AAEHS,IAAAA,iBAAiB,EAAE,MAFhB;AAGHC,IAAAA,KAAK,EAAET,SAHJ;AAIHU,IAAAA,aAAa,EAAEP,WAJZ;AAKHQ,IAAAA,WAAW,EAAEV,SALV;AAMHW,IAAAA,mBAAmB,EAAEN,aANlB;AAOHO,IAAAA,WAAW,EAAEV,WAPV;AAQHW,IAAAA,mBAAmB,EAAER,aARlB;AASHS,IAAAA,iBAAiB,EAAEb,YAThB;AAUHc,IAAAA,yBAAyB,EAAEV,aAVxB;AAWHW,IAAAA,iBAAiB,EAAEf,YAXhB;AAYHgB,IAAAA,yBAAyB,EAAEZ,aAZxB;AAaHa,IAAAA,gBAAgB,EAAEjB,YAbf;AAcHkB,IAAAA,wBAAwB,EAAEd,aAdvB;AAeHe,IAAAA,UAAU,EAAEpB,SAfT;AAgBHqB,IAAAA,kBAAkB,EAAEhB,aAhBjB;AAiBHiB,IAAAA,uBAAuB,EAAG,aAAYrB,YAAa,EAjBhD;AAkBHsB,IAAAA,sBAAsB,EAAE1B,SAlBrB;AAmBH2B,IAAAA,0BAA0B,EAAE1B,UAnBzB;AAoBH2B,IAAAA,kCAAkC,EAAE3B,UApBjC;AAqBH4B,IAAAA,mBAAmB,EAAEnC,SAAS,CAACQ,SAAD,EAAYI,cAAZ,CArB3B;AAsBHwB,IAAAA,wBAAwB,EAAEpC,SAAS,CAACQ,SAAD,EAAYK,mBAAZ,CAtBhC;AAuBH;AACAwB,IAAAA,iBAAiB,EAAE;AAxBhB,GAAP;AA0BH,CA5BM;AA6BP,MAAMC,WAAW,GAAGnC,WAAW,CAAC;AAC5BoC,EAAAA,IAAI,EAAE,QADsB;AAE5BC,EAAAA,MAAM,EAAEvC,WAFoB;AAG5BwC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAExC;AADR,GAHqB;AAM5BE,EAAAA;AAN4B,CAAD,CAA/B;AAQA,eAAekC,WAAf","sourcesContent":["import { composite } from 'seemly';\nimport { commonLight } from '../../_styles/common';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { createTheme } from '../../_mixins';\nexport const self = (vars) => {\n    const { baseColor, textColor2, bodyColor, cardColor, dividerColor, actionColor, scrollbarColor, scrollbarColorHover, invertedColor } = vars;\n    return {\n        textColor: textColor2,\n        textColorInverted: '#FFF',\n        color: bodyColor,\n        colorEmbedded: actionColor,\n        headerColor: cardColor,\n        headerColorInverted: invertedColor,\n        footerColor: actionColor,\n        footerColorInverted: invertedColor,\n        headerBorderColor: dividerColor,\n        headerBorderColorInverted: invertedColor,\n        footerBorderColor: dividerColor,\n        footerBorderColorInverted: invertedColor,\n        siderBorderColor: dividerColor,\n        siderBorderColorInverted: invertedColor,\n        siderColor: cardColor,\n        siderColorInverted: invertedColor,\n        siderToggleButtonBorder: `1px solid ${dividerColor}`,\n        siderToggleButtonColor: baseColor,\n        siderToggleButtonIconColor: textColor2,\n        siderToggleButtonIconColorInverted: textColor2,\n        siderToggleBarColor: composite(bodyColor, scrollbarColor),\n        siderToggleBarColorHover: composite(bodyColor, scrollbarColorHover),\n        // hack for inverted background\n        __invertScrollbar: 'true'\n    };\n};\nconst layoutLight = createTheme({\n    name: 'Layout',\n    common: commonLight,\n    peers: {\n        Scrollbar: scrollbarLight\n    },\n    self\n});\nexport default layoutLight;\n"]},"metadata":{},"sourceType":"module"}