{"ast":null,"code":"import { changeColor } from 'seemly';\nimport { checkboxLight } from '../../checkbox/styles';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins/use-theme';\nexport const self = vars => {\n  const {\n    borderRadiusSmall,\n    hoverColor,\n    pressedColor,\n    primaryColor,\n    textColor3,\n    textColor2,\n    textColorDisabled,\n    fontSize\n  } = vars;\n  return {\n    fontSize,\n    nodeBorderRadius: borderRadiusSmall,\n    nodeColorHover: hoverColor,\n    nodeColorPressed: pressedColor,\n    nodeColorActive: changeColor(primaryColor, {\n      alpha: 0.1\n    }),\n    arrowColor: textColor3,\n    nodeTextColor: textColor2,\n    nodeTextColorDisabled: textColorDisabled,\n    loadingColor: primaryColor,\n    dropMarkColor: primaryColor\n  };\n};\nconst treeLight = createTheme({\n  name: 'Tree',\n  common: commonLight,\n  peers: {\n    Checkbox: checkboxLight,\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default treeLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tree/styles/light.js"],"names":["changeColor","checkboxLight","scrollbarLight","commonLight","createTheme","self","vars","borderRadiusSmall","hoverColor","pressedColor","primaryColor","textColor3","textColor2","textColorDisabled","fontSize","nodeBorderRadius","nodeColorHover","nodeColorPressed","nodeColorActive","alpha","arrowColor","nodeTextColor","nodeTextColorDisabled","loadingColor","dropMarkColor","treeLight","name","common","peers","Checkbox","Scrollbar"],"mappings":"AAAA,SAASA,WAAT,QAA4B,QAA5B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAC1B,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA,UAArB;AAAiCC,IAAAA,YAAjC;AAA+CC,IAAAA,YAA/C;AAA6DC,IAAAA,UAA7D;AAAyEC,IAAAA,UAAzE;AAAqFC,IAAAA,iBAArF;AAAwGC,IAAAA;AAAxG,MAAqHR,IAA3H;AACA,SAAO;AACHQ,IAAAA,QADG;AAEHC,IAAAA,gBAAgB,EAAER,iBAFf;AAGHS,IAAAA,cAAc,EAAER,UAHb;AAIHS,IAAAA,gBAAgB,EAAER,YAJf;AAKHS,IAAAA,eAAe,EAAElB,WAAW,CAACU,YAAD,EAAe;AAAES,MAAAA,KAAK,EAAE;AAAT,KAAf,CALzB;AAMHC,IAAAA,UAAU,EAAET,UANT;AAOHU,IAAAA,aAAa,EAAET,UAPZ;AAQHU,IAAAA,qBAAqB,EAAET,iBARpB;AASHU,IAAAA,YAAY,EAAEb,YATX;AAUHc,IAAAA,aAAa,EAAEd;AAVZ,GAAP;AAYH,CAdM;AAeP,MAAMe,SAAS,GAAGrB,WAAW,CAAC;AAC1BsB,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,MAAM,EAAExB,WAFkB;AAG1ByB,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE5B,aADP;AAEH6B,IAAAA,SAAS,EAAE5B;AAFR,GAHmB;AAO1BG,EAAAA;AAP0B,CAAD,CAA7B;AASA,eAAeoB,SAAf","sourcesContent":["import { changeColor } from 'seemly';\nimport { checkboxLight } from '../../checkbox/styles';\nimport { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins/use-theme';\nexport const self = (vars) => {\n    const { borderRadiusSmall, hoverColor, pressedColor, primaryColor, textColor3, textColor2, textColorDisabled, fontSize } = vars;\n    return {\n        fontSize,\n        nodeBorderRadius: borderRadiusSmall,\n        nodeColorHover: hoverColor,\n        nodeColorPressed: pressedColor,\n        nodeColorActive: changeColor(primaryColor, { alpha: 0.1 }),\n        arrowColor: textColor3,\n        nodeTextColor: textColor2,\n        nodeTextColorDisabled: textColorDisabled,\n        loadingColor: primaryColor,\n        dropMarkColor: primaryColor\n    };\n};\nconst treeLight = createTheme({\n    name: 'Tree',\n    common: commonLight,\n    peers: {\n        Checkbox: checkboxLight,\n        Scrollbar: scrollbarLight\n    },\n    self\n});\nexport default treeLight;\n"]},"metadata":{},"sourceType":"module"}