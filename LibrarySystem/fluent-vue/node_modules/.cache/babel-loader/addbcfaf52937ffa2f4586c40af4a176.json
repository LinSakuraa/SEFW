{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles';\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, designUnit, disabledOpacity, fillColor, focusStrokeOuter, foregroundOnAccentActive, foregroundOnAccentHover, foregroundOnAccentRest, neutralFillInputAltActive, neutralFillInputAltFocus, neutralFillInputAltHover, neutralFillInputAltRest, neutralForegroundRest, neutralStrokeStrongActive, neutralStrokeStrongHover, neutralStrokeStrongRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight } from '../design-tokens';\nexport const switchStyles = (context, definition) => css`\n    :host([hidden]) {\n      display: none;\n    }\n\n    ${display('inline-flex')} :host {\n      align-items: center;\n      outline: none;\n      font-family: ${bodyFont};\n      ${\n/*\n * Chromium likes to select label text or the default slot when\n * the checkbox is clicked. Maybe there is a better solution here?\n */\n''} user-select: none;\n    }\n\n    :host(.disabled) {\n      opacity: ${disabledOpacity};\n    }\n\n    :host(.disabled) .label,\n    :host(.readonly) .label,\n    :host(.disabled) .switch,\n    :host(.readonly) .switch,\n    :host(.disabled) .status-message,\n    :host(.readonly) .status-message {\n      cursor: ${disabledCursor};\n    }\n\n    .switch {\n      position: relative;\n      outline: none;\n      box-sizing: border-box;\n      width: calc(((${heightNumber} / 2) + ${designUnit}) * 2px);\n      height: calc(((${heightNumber} / 2) + ${designUnit}) * 1px);\n      background: ${neutralFillInputAltRest};\n      border-radius: calc(${heightNumber} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeStrongRest};\n      cursor: pointer;\n    }\n\n    :host(:not(.disabled):hover) .switch {\n      background: ${neutralFillInputAltHover};\n      border-color: ${neutralStrokeStrongHover};\n    }\n\n    :host(:not(.disabled):active) .switch {\n      background: ${neutralFillInputAltActive};\n      border-color: ${neutralStrokeStrongActive};\n    }\n\n    :host(:${focusVisible}) .switch {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      background: ${neutralFillInputAltFocus};\n      border-color: ${focusStrokeOuter};\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):hover) .switch {\n      background: ${accentFillHover};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):active) .switch {\n      background: ${accentFillActive};\n      border-color: transparent;\n    }\n\n    slot[name='switch'] {\n      position: absolute;\n      display: flex;\n      border: 1px solid transparent; /* Spacing included in the transform reference box */\n      fill: ${neutralForegroundRest};\n      transition: all 0.2s ease-in-out;\n    }\n\n    .status-message {\n      color: ${neutralForegroundRest};\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n    }\n\n    .label__hidden {\n      display: none;\n      visibility: hidden;\n    }\n\n    .label {\n      color: ${neutralForegroundRest};\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n      cursor: pointer;\n    }\n\n    ::slotted([slot=\"checked-message\"]),\n    ::slotted([slot=\"unchecked-message\"]) {\n        margin-inline-start: calc(${designUnit} * 2px + 2px);\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n    }\n\n    :host(.checked) .switch slot[name='switch'] {\n      fill: ${foregroundOnAccentRest};\n      filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.15));\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover {\n      background: ${accentFillHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover slot[name='switch'] {\n      fill: ${foregroundOnAccentHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active {\n      background: ${accentFillActive};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active slot[name='switch'] {\n      fill: ${foregroundOnAccentActive};\n    }\n\n    :host(.checked:${focusVisible}:not(.disabled)) .switch {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      border-color: transparent;\n    }\n\n    .unchecked-message {\n      display: block;\n    }\n\n    .checked-message {\n      display: none;\n    }\n\n    :host(.checked) .unchecked-message {\n      display: none;\n    }\n\n    :host(.checked) .checked-message {\n      display: block;\n    }\n  `.withBehaviors(new DirectionalStyleSheetBehavior(css`\n        slot[name='switch'] {\n          left: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          left: 100%;\n          transform: translateX(-100%);\n        }\n      `, css`\n        slot[name='switch'] {\n          right: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          right: 100%;\n          transform: translateX(100%);\n        }\n      `), forcedColorsStylesheetBehavior(css`\n        :host(:not(.disabled)) .switch slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.FieldText};\n        }\n        .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.FieldText};\n        }\n        :host(.checked) .switch {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(:not(.disabled):hover) .switch ,\n        :host(:not(.disabled):active) .switch,\n        :host(.checked:not(.disabled):hover) .switch {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(.checked:not(.disabled)) .switch slot[name=\"switch\"] {\n          fill: ${SystemColors.HighlightText};\n        }\n        :host(.checked:not(.disabled):hover) .switch slot[name='switch'] {\n          fill: ${SystemColors.Highlight};\n        }\n        :host(:${focusVisible}) .switch {\n          forced-color-adjust: none;\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 1px ${SystemColors.Highlight}, 0 0 0 3px ${SystemColors.FieldText};\n        }\n        :host(.checked:${focusVisible}:not(.disabled)) .switch {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n          border-color: ${SystemColors.Field};\n        }\n        :host(.disabled) {\n          opacity: 1;\n        }\n        :host(.disabled) slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.GrayText};\n        }\n        :host(.disabled) .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.GrayText};\n        }\n        .status-message,\n        .label {\n          color: ${SystemColors.FieldText};\n        }\n      `));","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/switch/switch.styles.js"],"names":["css","SystemColors","disabledCursor","display","focusVisible","forcedColorsStylesheetBehavior","DirectionalStyleSheetBehavior","heightNumber","accentFillActive","accentFillHover","accentFillRest","bodyFont","designUnit","disabledOpacity","fillColor","focusStrokeOuter","foregroundOnAccentActive","foregroundOnAccentHover","foregroundOnAccentRest","neutralFillInputAltActive","neutralFillInputAltFocus","neutralFillInputAltHover","neutralFillInputAltRest","neutralForegroundRest","neutralStrokeStrongActive","neutralStrokeStrongHover","neutralStrokeStrongRest","strokeWidth","typeRampBaseFontSize","typeRampBaseLineHeight","switchStyles","context","definition","withBehaviors","FieldText","Field","Highlight","HighlightText","GrayText"],"mappings":"AAAA,SAASA,GAAT,QAAoB,yBAApB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,cAAT,EAAyBC,OAAzB,EAAkCC,YAAlC,EAAgDC,8BAAhD,QAAuF,4BAAvF;AACA,SAASC,6BAAT,EAAwCC,YAAxC,QAA4D,WAA5D;AACA,SAASC,gBAAT,EAA2BC,eAA3B,EAA4CC,cAA5C,EAA4DC,QAA5D,EAAsEC,UAAtE,EAAkFC,eAAlF,EAAmGC,SAAnG,EAA8GC,gBAA9G,EAAgIC,wBAAhI,EAA0JC,uBAA1J,EAAmLC,sBAAnL,EAA2MC,yBAA3M,EAAsOC,wBAAtO,EAAgQC,wBAAhQ,EAA0RC,uBAA1R,EAAmTC,qBAAnT,EAA0UC,yBAA1U,EAAqWC,wBAArW,EAA+XC,uBAA/X,EAAwZC,WAAxZ,EAAqaC,oBAAra,EAA2bC,sBAA3b,QAA0d,kBAA1d;AACA,OAAO,MAAMC,YAAY,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyBhC,GAAK;AAC1D;AACA;AACA;AACA;AACA,MAAMG,OAAO,CAAC,aAAD,CAAgB;AAC7B;AACA;AACA,qBAAqBQ,QAAS;AAC9B;AACA;AACA;AACA;AACA;AAAI,EAAG;AACP;AACA;AACA;AACA,iBAAiBE,eAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgBX,cAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBK,YAAa,WAAUK,UAAW;AACxD,uBAAuBL,YAAa,WAAUK,UAAW;AACzD,oBAAoBU,uBAAwB;AAC5C,4BAA4Bf,YAAa;AACzC,qBAAqBoB,WAAY,iBAAgBD,uBAAwB;AACzE;AACA;AACA;AACA;AACA,oBAAoBL,wBAAyB;AAC7C,sBAAsBI,wBAAyB;AAC/C;AACA;AACA;AACA,oBAAoBN,yBAA0B;AAC9C,sBAAsBK,yBAA0B;AAChD;AACA;AACA,aAAapB,YAAa;AAC1B,8BAA8BU,SAAU,eAAcC,gBAAiB;AACvE,oBAAoBK,wBAAyB;AAC7C,sBAAsBL,gBAAiB;AACvC;AACA;AACA;AACA,oBAAoBL,cAAe;AACnC;AACA;AACA;AACA;AACA,oBAAoBD,eAAgB;AACpC;AACA;AACA;AACA;AACA,oBAAoBD,gBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAce,qBAAsB;AACpC;AACA;AACA;AACA;AACA,eAAeA,qBAAsB;AACrC;AACA,mBAAmBK,oBAAqB;AACxC,qBAAqBC,sBAAuB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAeN,qBAAsB;AACrC,mBAAmBK,oBAAqB;AACxC,qBAAqBC,sBAAuB;AAC5C,gCAAgCjB,UAAW;AAC3C;AACA;AACA;AACA;AACA;AACA,oCAAoCA,UAAW;AAC/C;AACA;AACA;AACA,oBAAoBF,cAAe;AACnC;AACA;AACA;AACA,cAAcQ,sBAAuB;AACrC;AACA;AACA;AACA;AACA,oBAAoBT,eAAgB;AACpC;AACA;AACA;AACA,cAAcQ,uBAAwB;AACtC;AACA;AACA;AACA,oBAAoBT,gBAAiB;AACrC;AACA;AACA;AACA,cAAcQ,wBAAyB;AACvC;AACA;AACA,qBAAqBZ,YAAa;AAClC,8BAA8BU,SAAU,eAAcC,gBAAiB;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAtJqD,CAsJjDkB,aAtJiD,CAsJnC,IAAI3B,6BAAJ,CAAkCN,GAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OATkB,EASTA,GAAK;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAlBkB,CAtJmC,EAwK3CK,8BAA8B,CAACL,GAAK;AAC9C;AACA;AACA,kBAAkBC,YAAY,CAACiC,SAAU;AACzC;AACA;AACA,wBAAwBjC,YAAY,CAACkC,KAAM;AAC3C,0BAA0BlC,YAAY,CAACiC,SAAU;AACjD;AACA;AACA,wBAAwBjC,YAAY,CAACmC,SAAU;AAC/C,0BAA0BnC,YAAY,CAACmC,SAAU;AACjD;AACA;AACA;AACA;AACA,wBAAwBnC,YAAY,CAACoC,aAAc;AACnD,0BAA0BpC,YAAY,CAACmC,SAAU;AACjD;AACA;AACA,kBAAkBnC,YAAY,CAACoC,aAAc;AAC7C;AACA;AACA,kBAAkBpC,YAAY,CAACmC,SAAU;AACzC;AACA,iBAAiBhC,YAAa;AAC9B;AACA,wBAAwBH,YAAY,CAACkC,KAAM;AAC3C,0BAA0BlC,YAAY,CAACmC,SAAU;AACjD,kCAAkCnC,YAAY,CAACmC,SAAU,eAAcnC,YAAY,CAACiC,SAAU;AAC9F;AACA,yBAAyB9B,YAAa;AACtC;AACA,wBAAwBH,YAAY,CAACmC,SAAU;AAC/C,kCAAkCnC,YAAY,CAACkC,KAAM,eAAclC,YAAY,CAACiC,SAAU;AAC1F,0BAA0BjC,YAAY,CAACkC,KAAM;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBlC,YAAY,CAACqC,QAAS;AACxC;AACA;AACA,wBAAwBrC,YAAY,CAACkC,KAAM;AAC3C,0BAA0BlC,YAAY,CAACqC,QAAS;AAChD;AACA;AACA;AACA,mBAAmBrC,YAAY,CAACiC,SAAU;AAC1C;AACA,OApDwC,CAxKa,CAA9C","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { disabledCursor, display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { DirectionalStyleSheetBehavior, heightNumber } from '../styles';\nimport { accentFillActive, accentFillHover, accentFillRest, bodyFont, designUnit, disabledOpacity, fillColor, focusStrokeOuter, foregroundOnAccentActive, foregroundOnAccentHover, foregroundOnAccentRest, neutralFillInputAltActive, neutralFillInputAltFocus, neutralFillInputAltHover, neutralFillInputAltRest, neutralForegroundRest, neutralStrokeStrongActive, neutralStrokeStrongHover, neutralStrokeStrongRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../design-tokens';\nexport const switchStyles = (context, definition) => css `\n    :host([hidden]) {\n      display: none;\n    }\n\n    ${display('inline-flex')} :host {\n      align-items: center;\n      outline: none;\n      font-family: ${bodyFont};\n      ${\n/*\n * Chromium likes to select label text or the default slot when\n * the checkbox is clicked. Maybe there is a better solution here?\n */ ''} user-select: none;\n    }\n\n    :host(.disabled) {\n      opacity: ${disabledOpacity};\n    }\n\n    :host(.disabled) .label,\n    :host(.readonly) .label,\n    :host(.disabled) .switch,\n    :host(.readonly) .switch,\n    :host(.disabled) .status-message,\n    :host(.readonly) .status-message {\n      cursor: ${disabledCursor};\n    }\n\n    .switch {\n      position: relative;\n      outline: none;\n      box-sizing: border-box;\n      width: calc(((${heightNumber} / 2) + ${designUnit}) * 2px);\n      height: calc(((${heightNumber} / 2) + ${designUnit}) * 1px);\n      background: ${neutralFillInputAltRest};\n      border-radius: calc(${heightNumber} * 1px);\n      border: calc(${strokeWidth} * 1px) solid ${neutralStrokeStrongRest};\n      cursor: pointer;\n    }\n\n    :host(:not(.disabled):hover) .switch {\n      background: ${neutralFillInputAltHover};\n      border-color: ${neutralStrokeStrongHover};\n    }\n\n    :host(:not(.disabled):active) .switch {\n      background: ${neutralFillInputAltActive};\n      border-color: ${neutralStrokeStrongActive};\n    }\n\n    :host(:${focusVisible}) .switch {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      background: ${neutralFillInputAltFocus};\n      border-color: ${focusStrokeOuter};\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):hover) .switch {\n      background: ${accentFillHover};\n      border-color: transparent;\n    }\n\n    :host(.checked:not(.disabled):active) .switch {\n      background: ${accentFillActive};\n      border-color: transparent;\n    }\n\n    slot[name='switch'] {\n      position: absolute;\n      display: flex;\n      border: 1px solid transparent; /* Spacing included in the transform reference box */\n      fill: ${neutralForegroundRest};\n      transition: all 0.2s ease-in-out;\n    }\n\n    .status-message {\n      color: ${neutralForegroundRest};\n      cursor: pointer;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n    }\n\n    .label__hidden {\n      display: none;\n      visibility: hidden;\n    }\n\n    .label {\n      color: ${neutralForegroundRest};\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      margin-inline-end: calc(${designUnit} * 2px + 2px);\n      cursor: pointer;\n    }\n\n    ::slotted([slot=\"checked-message\"]),\n    ::slotted([slot=\"unchecked-message\"]) {\n        margin-inline-start: calc(${designUnit} * 2px + 2px);\n    }\n\n    :host(.checked) .switch {\n      background: ${accentFillRest};\n    }\n\n    :host(.checked) .switch slot[name='switch'] {\n      fill: ${foregroundOnAccentRest};\n      filter: drop-shadow(0px 1px 1px rgba(0, 0, 0, 0.15));\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover {\n      background: ${accentFillHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:hover slot[name='switch'] {\n      fill: ${foregroundOnAccentHover};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active {\n      background: ${accentFillActive};\n    }\n\n    :host(.checked:not(.disabled)) .switch:active slot[name='switch'] {\n      fill: ${foregroundOnAccentActive};\n    }\n\n    :host(.checked:${focusVisible}:not(.disabled)) .switch {\n      box-shadow: 0 0 0 1px ${fillColor}, 0 0 0 3px ${focusStrokeOuter};\n      border-color: transparent;\n    }\n\n    .unchecked-message {\n      display: block;\n    }\n\n    .checked-message {\n      display: none;\n    }\n\n    :host(.checked) .unchecked-message {\n      display: none;\n    }\n\n    :host(.checked) .checked-message {\n      display: block;\n    }\n  `.withBehaviors(new DirectionalStyleSheetBehavior(css `\n        slot[name='switch'] {\n          left: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          left: 100%;\n          transform: translateX(-100%);\n        }\n      `, css `\n        slot[name='switch'] {\n          right: 0;\n        }\n\n        :host(.checked) slot[name='switch'] {\n          right: 100%;\n          transform: translateX(100%);\n        }\n      `), forcedColorsStylesheetBehavior(css `\n        :host(:not(.disabled)) .switch slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.FieldText};\n        }\n        .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.FieldText};\n        }\n        :host(.checked) .switch {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(:not(.disabled):hover) .switch ,\n        :host(:not(.disabled):active) .switch,\n        :host(.checked:not(.disabled):hover) .switch {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.Highlight};\n        }\n        :host(.checked:not(.disabled)) .switch slot[name=\"switch\"] {\n          fill: ${SystemColors.HighlightText};\n        }\n        :host(.checked:not(.disabled):hover) .switch slot[name='switch'] {\n          fill: ${SystemColors.Highlight};\n        }\n        :host(:${focusVisible}) .switch {\n          forced-color-adjust: none;\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 1px ${SystemColors.Highlight}, 0 0 0 3px ${SystemColors.FieldText};\n        }\n        :host(.checked:${focusVisible}:not(.disabled)) .switch {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 1px ${SystemColors.Field}, 0 0 0 3px ${SystemColors.FieldText};\n          border-color: ${SystemColors.Field};\n        }\n        :host(.disabled) {\n          opacity: 1;\n        }\n        :host(.disabled) slot[name='switch'] {\n          forced-color-adjust: none;\n          fill: ${SystemColors.GrayText};\n        }\n        :host(.disabled) .switch {\n          background: ${SystemColors.Field};\n          border-color: ${SystemColors.GrayText};\n        }\n        .status-message,\n        .label {\n          color: ${SystemColors.FieldText};\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}