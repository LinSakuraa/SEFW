{"ast":null,"code":"import { h, toRef, ref, computed, defineComponent, renderList } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { NBaseIcon } from '../../_internal';\nimport { useTheme, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { call, color2Class, createKey } from '../../_utils';\nimport { rateLight } from '../styles';\nimport style from './styles/index.cssr';\nimport StarIcon from './StarIcon';\nconst rateProps = Object.assign(Object.assign({}, useTheme.props), {\n  allowHalf: Boolean,\n  count: {\n    type: Number,\n    default: 5\n  },\n  value: Number,\n  defaultValue: {\n    type: Number,\n    default: 0\n  },\n  readonly: Boolean,\n  size: {\n    type: [String, Number],\n    default: 'medium'\n  },\n  color: String,\n  'onUpdate:value': [Function, Array],\n  onUpdateValue: [Function, Array]\n});\nexport default defineComponent({\n  name: 'Rate',\n  props: rateProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Rate', '-rate', style, rateLight, props, mergedClsPrefixRef);\n    const controlledValueRef = toRef(props, 'value');\n    const uncontrolledValueRef = ref(props.defaultValue);\n    const hoverIndexRef = ref(null);\n    const formItem = useFormItem(props);\n\n    function doUpdateValue(value) {\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue\n      } = props;\n      const {\n        nTriggerFormChange,\n        nTriggerFormInput\n      } = formItem;\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value);\n      }\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value);\n      }\n\n      uncontrolledValueRef.value = value;\n      nTriggerFormChange();\n      nTriggerFormInput();\n    }\n\n    function getDerivedValue(index, e) {\n      if (props.allowHalf) {\n        if (e.offsetX >= Math.floor(e.currentTarget.offsetWidth / 2)) {\n          return index + 1;\n        } else {\n          return index + 0.5;\n        }\n      } else {\n        return index + 1;\n      }\n    }\n\n    function handleMouseMove(index, e) {\n      hoverIndexRef.value = getDerivedValue(index, e);\n    }\n\n    function handleMouseLeave() {\n      hoverIndexRef.value = null;\n    }\n\n    function handleClick(index, e) {\n      doUpdateValue(getDerivedValue(index, e));\n    }\n\n    const mergedSizeRef = computed(() => {\n      const {\n        size\n      } = props;\n      const {\n        self\n      } = themeRef.value;\n\n      if (typeof size === 'number') {\n        return `${size}px`;\n      } else {\n        return self[createKey('size', size)];\n      }\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self\n      } = themeRef.value;\n      const {\n        itemColor,\n        itemColorActive\n      } = self;\n      return {\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-item-color': itemColor,\n        '--n-item-color-active': props.color || itemColorActive,\n        '--n-item-size': mergedSizeRef.value\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('rate', computed(() => {\n      const size = mergedSizeRef.value;\n      const {\n        color\n      } = props;\n      let hash = '';\n\n      if (size) {\n        hash += size[0];\n      }\n\n      if (color) {\n        hash += color2Class(color);\n      }\n\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedValue: useMergedState(controlledValueRef, uncontrolledValueRef),\n      hoverIndex: hoverIndexRef,\n      handleMouseMove,\n      handleClick,\n      handleMouseLeave,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      readonly,\n      hoverIndex,\n      mergedValue,\n      mergedClsPrefix,\n      onRender,\n      $slots: {\n        default: defaultSlot\n      }\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-rate`, {\n        [`${mergedClsPrefix}-rate--readonly`]: readonly\n      }, this.themeClass],\n      style: this.cssVars,\n      onMouseleave: this.handleMouseLeave\n    }, renderList(this.count, (_, index) => {\n      const icon = defaultSlot ? defaultSlot() : h(NBaseIcon, {\n        clsPrefix: mergedClsPrefix\n      }, {\n        default: () => StarIcon\n      });\n      const fullStarActive = hoverIndex !== null ? index + 1 <= hoverIndex : index + 1 <= mergedValue;\n      return h(\"div\", {\n        key: index,\n        class: [`${mergedClsPrefix}-rate__item`, fullStarActive && `${mergedClsPrefix}-rate__item--active`],\n        onClick: readonly ? undefined : e => {\n          this.handleClick(index, e);\n        },\n        onMousemove: readonly ? undefined : e => {\n          this.handleMouseMove(index, e);\n        }\n      }, icon, this.allowHalf ? h(\"div\", {\n        class: [`${mergedClsPrefix}-rate__half`, {\n          [`${mergedClsPrefix}-rate__half--active`]: !fullStarActive && hoverIndex !== null ? index + 0.5 <= hoverIndex : index + 0.5 <= mergedValue\n        }]\n      }, icon) : null);\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/rate/src/Rate.js"],"names":["h","toRef","ref","computed","defineComponent","renderList","useMergedState","NBaseIcon","useTheme","useFormItem","useConfig","useThemeClass","call","color2Class","createKey","rateLight","style","StarIcon","rateProps","Object","assign","props","allowHalf","Boolean","count","type","Number","default","value","defaultValue","readonly","size","String","color","Function","Array","onUpdateValue","name","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","controlledValueRef","uncontrolledValueRef","hoverIndexRef","formItem","doUpdateValue","_onUpdateValue","nTriggerFormChange","nTriggerFormInput","getDerivedValue","index","e","offsetX","Math","floor","currentTarget","offsetWidth","handleMouseMove","handleMouseLeave","handleClick","mergedSizeRef","self","cssVarsRef","common","cubicBezierEaseInOut","itemColor","itemColorActive","themeClassHandle","hash","undefined","mergedClsPrefix","mergedValue","hoverIndex","cssVars","themeClass","onRender","render","$slots","defaultSlot","class","onMouseleave","_","icon","clsPrefix","fullStarActive","key","onClick","onMousemove"],"mappings":"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","sourcesContent":["import { h, toRef, ref, computed, defineComponent, renderList } from 'vue';\nimport { useMergedState } from 'vooks';\nimport { NBaseIcon } from '../../_internal';\nimport { useTheme, useFormItem, useConfig, useThemeClass } from '../../_mixins';\nimport { call, color2Class, createKey } from '../../_utils';\nimport { rateLight } from '../styles';\nimport style from './styles/index.cssr';\nimport StarIcon from './StarIcon';\nconst rateProps = Object.assign(Object.assign({}, useTheme.props), { allowHalf: Boolean, count: {\n        type: Number,\n        default: 5\n    }, value: Number, defaultValue: {\n        type: Number,\n        default: 0\n    }, readonly: Boolean, size: {\n        type: [String, Number],\n        default: 'medium'\n    }, color: String, 'onUpdate:value': [Function, Array], onUpdateValue: [Function, Array] });\nexport default defineComponent({\n    name: 'Rate',\n    props: rateProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Rate', '-rate', style, rateLight, props, mergedClsPrefixRef);\n        const controlledValueRef = toRef(props, 'value');\n        const uncontrolledValueRef = ref(props.defaultValue);\n        const hoverIndexRef = ref(null);\n        const formItem = useFormItem(props);\n        function doUpdateValue(value) {\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue } = props;\n            const { nTriggerFormChange, nTriggerFormInput } = formItem;\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value);\n            }\n            if (onUpdateValue) {\n                call(onUpdateValue, value);\n            }\n            uncontrolledValueRef.value = value;\n            nTriggerFormChange();\n            nTriggerFormInput();\n        }\n        function getDerivedValue(index, e) {\n            if (props.allowHalf) {\n                if (e.offsetX >=\n                    Math.floor(e.currentTarget.offsetWidth / 2)) {\n                    return index + 1;\n                }\n                else {\n                    return index + 0.5;\n                }\n            }\n            else {\n                return index + 1;\n            }\n        }\n        function handleMouseMove(index, e) {\n            hoverIndexRef.value = getDerivedValue(index, e);\n        }\n        function handleMouseLeave() {\n            hoverIndexRef.value = null;\n        }\n        function handleClick(index, e) {\n            doUpdateValue(getDerivedValue(index, e));\n        }\n        const mergedSizeRef = computed(() => {\n            const { size } = props;\n            const { self } = themeRef.value;\n            if (typeof size === 'number') {\n                return `${size}px`;\n            }\n            else {\n                return self[createKey('size', size)];\n            }\n        });\n        const cssVarsRef = computed(() => {\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { itemColor, itemColorActive } = self;\n            return {\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-item-color': itemColor,\n                '--n-item-color-active': props.color || itemColorActive,\n                '--n-item-size': mergedSizeRef.value\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('rate', computed(() => {\n                const size = mergedSizeRef.value;\n                const { color } = props;\n                let hash = '';\n                if (size) {\n                    hash += size[0];\n                }\n                if (color) {\n                    hash += color2Class(color);\n                }\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedValue: useMergedState(controlledValueRef, uncontrolledValueRef),\n            hoverIndex: hoverIndexRef,\n            handleMouseMove,\n            handleClick,\n            handleMouseLeave,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { readonly, hoverIndex, mergedValue, mergedClsPrefix, onRender, $slots: { default: defaultSlot } } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [\n                `${mergedClsPrefix}-rate`,\n                {\n                    [`${mergedClsPrefix}-rate--readonly`]: readonly\n                },\n                this.themeClass\n            ], style: this.cssVars, onMouseleave: this.handleMouseLeave }, renderList(this.count, (_, index) => {\n            const icon = defaultSlot ? (defaultSlot()) : (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => StarIcon }));\n            const fullStarActive = hoverIndex !== null\n                ? index + 1 <= hoverIndex\n                : index + 1 <= mergedValue;\n            return (h(\"div\", { key: index, class: [\n                    `${mergedClsPrefix}-rate__item`,\n                    fullStarActive && `${mergedClsPrefix}-rate__item--active`\n                ], onClick: readonly\n                    ? undefined\n                    : (e) => {\n                        this.handleClick(index, e);\n                    }, onMousemove: readonly\n                    ? undefined\n                    : (e) => {\n                        this.handleMouseMove(index, e);\n                    } },\n                icon,\n                this.allowHalf ? (h(\"div\", { class: [\n                        `${mergedClsPrefix}-rate__half`,\n                        {\n                            [`${mergedClsPrefix}-rate__half--active`]: !fullStarActive && hoverIndex !== null\n                                ? index + 0.5 <= hoverIndex\n                                : index + 0.5 <= mergedValue\n                        }\n                    ] }, icon)) : null));\n        })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}