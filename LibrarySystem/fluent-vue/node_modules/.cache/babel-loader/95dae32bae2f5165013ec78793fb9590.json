{"ast":null,"code":"import { Fragment, h, ref, Teleport, defineComponent, provide, nextTick } from 'vue';\nimport { useIsMounted } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport NLoadingBar from './LoadingBar';\nimport { loadingBarApiInjectionKey, loadingBarProviderInjectionKey } from './context';\nconst loadingBarProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: {\n    type: [String, Object],\n    default: undefined\n  },\n  loadingBarStyle: {\n    type: Object\n  }\n});\nexport default defineComponent({\n  name: 'LoadingBarProvider',\n  props: loadingBarProps,\n\n  setup(props) {\n    const isMountedRef = useIsMounted();\n    const loadingBarRef = ref(null);\n    const methods = {\n      start() {\n        var _a;\n\n        if (isMountedRef.value) {\n          (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.start();\n        } else {\n          void nextTick(() => {\n            var _a;\n\n            (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.start();\n          });\n        }\n      },\n\n      error() {\n        var _a;\n\n        if (isMountedRef.value) {\n          (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.error();\n        } else {\n          void nextTick(() => {\n            var _a;\n\n            (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.error();\n          });\n        }\n      },\n\n      finish() {\n        var _a;\n\n        if (isMountedRef.value) {\n          (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.finish();\n        } else {\n          void nextTick(() => {\n            var _a;\n\n            (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.finish();\n          });\n        }\n      }\n\n    };\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    provide(loadingBarApiInjectionKey, methods);\n    provide(loadingBarProviderInjectionKey, {\n      props,\n      mergedClsPrefixRef\n    });\n    return Object.assign(methods, {\n      loadingBarRef\n    });\n  },\n\n  render() {\n    var _a, _b, _c;\n\n    return h(Fragment, null, h(Teleport, {\n      to: (_a = this.to) !== null && _a !== void 0 ? _a : 'body'\n    }, h(NLoadingBar, {\n      ref: \"loadingBarRef\"\n    })), (_c = (_b = this.$slots).default) === null || _c === void 0 ? void 0 : _c.call(_b));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/loading-bar/src/LoadingBarProvider.js"],"names":["Fragment","h","ref","Teleport","defineComponent","provide","nextTick","useIsMounted","useConfig","useTheme","NLoadingBar","loadingBarApiInjectionKey","loadingBarProviderInjectionKey","loadingBarProps","Object","assign","props","to","type","String","default","undefined","loadingBarStyle","name","setup","isMountedRef","loadingBarRef","methods","start","_a","value","error","finish","mergedClsPrefixRef","render","_b","_c","$slots","call"],"mappings":"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","sourcesContent":["import { Fragment, h, ref, Teleport, defineComponent, provide, nextTick } from 'vue';\nimport { useIsMounted } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport NLoadingBar from './LoadingBar';\nimport { loadingBarApiInjectionKey, loadingBarProviderInjectionKey } from './context';\nconst loadingBarProps = Object.assign(Object.assign({}, useTheme.props), { to: {\n        type: [String, Object],\n        default: undefined\n    }, loadingBarStyle: {\n        type: Object\n    } });\nexport default defineComponent({\n    name: 'LoadingBarProvider',\n    props: loadingBarProps,\n    setup(props) {\n        const isMountedRef = useIsMounted();\n        const loadingBarRef = ref(null);\n        const methods = {\n            start() {\n                var _a;\n                if (isMountedRef.value) {\n                    (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.start();\n                }\n                else {\n                    void nextTick(() => {\n                        var _a;\n                        (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.start();\n                    });\n                }\n            },\n            error() {\n                var _a;\n                if (isMountedRef.value) {\n                    (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.error();\n                }\n                else {\n                    void nextTick(() => {\n                        var _a;\n                        (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.error();\n                    });\n                }\n            },\n            finish() {\n                var _a;\n                if (isMountedRef.value) {\n                    (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.finish();\n                }\n                else {\n                    void nextTick(() => {\n                        var _a;\n                        (_a = loadingBarRef.value) === null || _a === void 0 ? void 0 : _a.finish();\n                    });\n                }\n            }\n        };\n        const { mergedClsPrefixRef } = useConfig(props);\n        provide(loadingBarApiInjectionKey, methods);\n        provide(loadingBarProviderInjectionKey, {\n            props,\n            mergedClsPrefixRef\n        });\n        return Object.assign(methods, {\n            loadingBarRef\n        });\n    },\n    render() {\n        var _a, _b, _c;\n        return (h(Fragment, null,\n            h(Teleport, { to: (_a = this.to) !== null && _a !== void 0 ? _a : 'body' },\n                h(NLoadingBar, { ref: \"loadingBarRef\" })), (_c = (_b = this.$slots).default) === null || _c === void 0 ? void 0 :\n            _c.call(_b)));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}