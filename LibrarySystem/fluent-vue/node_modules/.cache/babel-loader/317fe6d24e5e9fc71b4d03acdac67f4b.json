{"ast":null,"code":"import { defineComponent, h, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nexport default defineComponent({\n  name: 'DropdownGroupHeader',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    },\n    tmNode: {\n      type: Object,\n      required: true\n    }\n  },\n\n  setup() {\n    const {\n      showIconRef,\n      hasSubmenuRef // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(dropdownMenuInjectionKey); // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    const {\n      renderLabelRef,\n      labelFieldRef\n    } = inject(dropdownInjectionKey);\n    return {\n      labelField: labelFieldRef,\n      showIcon: showIconRef,\n      hasSubmenu: hasSubmenuRef,\n      renderLabel: renderLabelRef\n    };\n  },\n\n  render() {\n    var _a;\n\n    const {\n      clsPrefix,\n      hasSubmenu,\n      showIcon,\n      renderLabel\n    } = this;\n    const {\n      rawNode\n    } = this.tmNode;\n    return h(\"div\", {\n      class: `${clsPrefix}-dropdown-option`\n    }, h(\"div\", {\n      class: `${clsPrefix}-dropdown-option-body ${clsPrefix}-dropdown-option-body--group`\n    }, h(\"div\", {\n      \"data-dropdown-option\": true,\n      class: [`${clsPrefix}-dropdown-option-body__prefix`, showIcon && `${clsPrefix}-dropdown-option-body__prefix--show-icon`]\n    }, render(rawNode.icon)), h(\"div\", {\n      class: `${clsPrefix}-dropdown-option-body__label`,\n      \"data-dropdown-option\": true\n    }, renderLabel ? renderLabel(rawNode) : render((_a = rawNode.title) !== null && _a !== void 0 ? _a : rawNode[this.labelField])), h(\"div\", {\n      class: [`${clsPrefix}-dropdown-option-body__suffix`, hasSubmenu && `${clsPrefix}-dropdown-option-body__suffix--has-submenu`],\n      \"data-dropdown-option\": true\n    })));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/dropdown/src/DropdownGroupHeader.js"],"names":["defineComponent","h","inject","render","dropdownInjectionKey","dropdownMenuInjectionKey","name","props","clsPrefix","type","String","required","tmNode","Object","setup","showIconRef","hasSubmenuRef","renderLabelRef","labelFieldRef","labelField","showIcon","hasSubmenu","renderLabel","_a","rawNode","class","icon","title"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,CAA1B,EAA6BC,MAA7B,QAA2C,KAA3C;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,oBAAT,EAA+BC,wBAA/B,QAA+D,WAA/D;AACA,eAAeL,eAAe,CAAC;AAC3BM,EAAAA,IAAI,EAAE,qBADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE;AACPC,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,QAAQ,EAAE;AAFH,KADR;AAKHC,IAAAA,MAAM,EAAE;AACJH,MAAAA,IAAI,EAAEI,MADF;AAEJF,MAAAA,QAAQ,EAAE;AAFN;AALL,GAFoB;;AAY3BG,EAAAA,KAAK,GAAG;AACJ,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA,aAAf,CACN;;AADM,QAEDd,MAAM,CAACG,wBAAD,CAFX,CADI,CAIJ;;AACA,UAAM;AAAEY,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAoChB,MAAM,CAACE,oBAAD,CAAhD;AACA,WAAO;AACHe,MAAAA,UAAU,EAAED,aADT;AAEHE,MAAAA,QAAQ,EAAEL,WAFP;AAGHM,MAAAA,UAAU,EAAEL,aAHT;AAIHM,MAAAA,WAAW,EAAEL;AAJV,KAAP;AAMH,GAxB0B;;AAyB3Bd,EAAAA,MAAM,GAAG;AACL,QAAIoB,EAAJ;;AACA,UAAM;AAAEf,MAAAA,SAAF;AAAaa,MAAAA,UAAb;AAAyBD,MAAAA,QAAzB;AAAmCE,MAAAA;AAAnC,QAAmD,IAAzD;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAc,KAAKZ,MAAzB;AACA,WAAQX,CAAC,CAAC,KAAD,EAAQ;AAAEwB,MAAAA,KAAK,EAAG,GAAEjB,SAAU;AAAtB,KAAR,EACLP,CAAC,CAAC,KAAD,EAAQ;AAAEwB,MAAAA,KAAK,EAAG,GAAEjB,SAAU,yBAAwBA,SAAU;AAAxD,KAAR,EACGP,CAAC,CAAC,KAAD,EAAQ;AAAE,8BAAwB,IAA1B;AAAgCwB,MAAAA,KAAK,EAAE,CACvC,GAAEjB,SAAU,+BAD2B,EAExCY,QAAQ,IAAK,GAAEZ,SAAU,0CAFe;AAAvC,KAAR,EAGQL,MAAM,CAACqB,OAAO,CAACE,IAAT,CAHd,CADJ,EAKGzB,CAAC,CAAC,KAAD,EAAQ;AAAEwB,MAAAA,KAAK,EAAG,GAAEjB,SAAU,8BAAtB;AAAqD,8BAAwB;AAA7E,KAAR,EAA6Fc,WAAW,GACnGA,WAAW,CAACE,OAAD,CADwF,GAEnGrB,MAAM,CAAC,CAACoB,EAAE,GAAGC,OAAO,CAACG,KAAd,MAAyB,IAAzB,IAAiCJ,EAAE,KAAK,KAAK,CAA7C,GAAiDA,EAAjD,GAAsDC,OAAO,CAAC,KAAKL,UAAN,CAA9D,CAFX,CALJ,EAQGlB,CAAC,CAAC,KAAD,EAAQ;AAAEwB,MAAAA,KAAK,EAAE,CACT,GAAEjB,SAAU,+BADH,EAEVa,UAAU,IACL,GAAEb,SAAU,4CAHP,CAAT;AAIF,8BAAwB;AAJtB,KAAR,CARJ,CADI,CAAT;AAcH;;AA3C0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, h, inject } from 'vue';\nimport { render } from '../../_utils';\nimport { dropdownInjectionKey, dropdownMenuInjectionKey } from './context';\nexport default defineComponent({\n    name: 'DropdownGroupHeader',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        },\n        tmNode: {\n            type: Object,\n            required: true\n        }\n    },\n    setup() {\n        const { showIconRef, hasSubmenuRef\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dropdownMenuInjectionKey);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const { renderLabelRef, labelFieldRef } = inject(dropdownInjectionKey);\n        return {\n            labelField: labelFieldRef,\n            showIcon: showIconRef,\n            hasSubmenu: hasSubmenuRef,\n            renderLabel: renderLabelRef\n        };\n    },\n    render() {\n        var _a;\n        const { clsPrefix, hasSubmenu, showIcon, renderLabel } = this;\n        const { rawNode } = this.tmNode;\n        return (h(\"div\", { class: `${clsPrefix}-dropdown-option` },\n            h(\"div\", { class: `${clsPrefix}-dropdown-option-body ${clsPrefix}-dropdown-option-body--group` },\n                h(\"div\", { \"data-dropdown-option\": true, class: [\n                        `${clsPrefix}-dropdown-option-body__prefix`,\n                        showIcon && `${clsPrefix}-dropdown-option-body__prefix--show-icon`\n                    ] }, render(rawNode.icon)),\n                h(\"div\", { class: `${clsPrefix}-dropdown-option-body__label`, \"data-dropdown-option\": true }, renderLabel\n                    ? renderLabel(rawNode)\n                    : render((_a = rawNode.title) !== null && _a !== void 0 ? _a : rawNode[this.labelField])),\n                h(\"div\", { class: [\n                        `${clsPrefix}-dropdown-option-body__suffix`,\n                        hasSubmenu &&\n                            `${clsPrefix}-dropdown-option-body__suffix--has-submenu`\n                    ], \"data-dropdown-option\": true }))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}