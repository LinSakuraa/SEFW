{"ast":null,"code":"/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { computed } from 'vue';\nimport { getHours, getMinutes, getSeconds } from 'date-fns';\nexport function uniCalendarValidation(props, mergedValueRef) {\n  // date, datetime\n  const timePickerValidatorRef = computed(() => {\n    const {\n      isTimeDisabled\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n    if (value === null || Array.isArray(value)) return undefined;\n    return isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value);\n  });\n  const isHourDisabledRef = computed(() => {\n    var _a;\n\n    return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isHourDisabled;\n  });\n  const isMinuteDisabledRef = computed(() => {\n    var _a;\n\n    return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled;\n  });\n  const isSecondDisabledRef = computed(() => {\n    var _a;\n\n    return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isSecondDisabled;\n  });\n  const isDateInvalidRef = computed(() => {\n    const {\n      type,\n      isDateDisabled\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || Array.isArray(value) || !['date', 'datetime'].includes(type) || !isDateDisabled) {\n      return false;\n    }\n\n    return isDateDisabled(value);\n  });\n  const isTimeInvalidRef = computed(() => {\n    const {\n      type\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || !(type !== 'datetime') || Array.isArray(value)) {\n      return false;\n    }\n\n    const time = new Date(value);\n    const hour = time.getHours();\n    const minute = time.getMinutes();\n    const second = time.getMinutes();\n    return (isHourDisabledRef.value ? isHourDisabledRef.value(hour) : false) || (isMinuteDisabledRef.value ? isMinuteDisabledRef.value(minute, hour) : false) || (isSecondDisabledRef.value ? isSecondDisabledRef.value(second, minute, hour) : false);\n  });\n  const isDateTimeInvalidRef = computed(() => {\n    return isDateInvalidRef.value || isTimeInvalidRef.value;\n  });\n  const isValueInvalidRef = computed(() => {\n    const {\n      type\n    } = props;\n    if (type === 'date') return isDateInvalidRef.value;\n    if (type === 'datetime') return isDateTimeInvalidRef.value;\n    return false;\n  });\n  return {\n    // date & datetime\n    isValueInvalidRef,\n    isDateInvalidRef,\n    // datetime only\n    isTimeInvalidRef,\n    isDateTimeInvalidRef,\n    isHourDisabledRef,\n    isMinuteDisabledRef,\n    isSecondDisabledRef\n  };\n}\nexport function dualCalendarValidation(props, mergedValueRef) {\n  // daterange, datetimerange\n  const timePickerValidatorRef = computed(() => {\n    const {\n      isTimeDisabled\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (!Array.isArray(value) || !isTimeDisabled) {\n      return [undefined, undefined];\n    }\n\n    return [isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value[0], 'start', value), isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value[1], 'end', value)];\n  });\n  const timeValidator = {\n    isStartHourDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isHourDisabled;\n    }),\n    isEndHourDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isHourDisabled;\n    }),\n    isStartMinuteDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled;\n    }),\n    isEndMinuteDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled;\n    }),\n    isStartSecondDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isSecondDisabled;\n    }),\n    isEndSecondDisabledRef: computed(() => {\n      var _a;\n\n      return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isSecondDisabled;\n    })\n  };\n  const isStartDateInvalidRef = computed(() => {\n    const {\n      type,\n      isDateDisabled\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || !Array.isArray(value) || !['daterange', 'datetimerange'].includes(type) || !isDateDisabled) {\n      return false;\n    }\n\n    return isDateDisabled(value[0], 'start', value);\n  });\n  const isEndDateInvalidRef = computed(() => {\n    const {\n      type,\n      isDateDisabled\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || !Array.isArray(value) || !['daterange', 'datetimerange'].includes(type) || !isDateDisabled) {\n      return false;\n    }\n\n    return isDateDisabled(value[1], 'end', value);\n  });\n  const isStartTimeInvalidRef = computed(() => {\n    const {\n      type\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || !Array.isArray(value) || type !== 'datetimerange') {\n      return false;\n    }\n\n    const startHours = getHours(value[0]);\n    const startMinutes = getMinutes(value[0]);\n    const startSeconds = getSeconds(value[0]);\n    const {\n      isStartHourDisabledRef,\n      isStartMinuteDisabledRef,\n      isStartSecondDisabledRef\n    } = timeValidator;\n    const startTimeInvalid = (isStartHourDisabledRef.value ? isStartHourDisabledRef.value(startHours) : false) || (isStartMinuteDisabledRef.value ? isStartMinuteDisabledRef.value(startMinutes, startHours) : false) || (isStartSecondDisabledRef.value ? isStartSecondDisabledRef.value(startSeconds, startMinutes, startHours) : false);\n    return startTimeInvalid;\n  });\n  const isEndTimeInvalidRef = computed(() => {\n    const {\n      type\n    } = props;\n    const {\n      value\n    } = mergedValueRef;\n\n    if (value === null || !Array.isArray(value) || type !== 'datetimerange') {\n      return false;\n    }\n\n    const endHours = getHours(value[1]);\n    const endMinutes = getMinutes(value[1]);\n    const endSeconds = getSeconds(value[1]);\n    const {\n      isEndHourDisabledRef,\n      isEndMinuteDisabledRef,\n      isEndSecondDisabledRef\n    } = timeValidator;\n    const endTimeInvalid = (isEndHourDisabledRef.value ? isEndHourDisabledRef.value(endHours) : false) || (isEndMinuteDisabledRef.value ? isEndMinuteDisabledRef.value(endMinutes, endHours) : false) || (isEndSecondDisabledRef.value ? isEndSecondDisabledRef.value(endSeconds, endMinutes, endHours) : false);\n    return endTimeInvalid;\n  });\n  const isStartValueInvalidRef = computed(() => {\n    return isStartDateInvalidRef.value || isStartTimeInvalidRef.value;\n  });\n  const isEndValueInvalidRef = computed(() => {\n    return isEndDateInvalidRef.value || isEndTimeInvalidRef.value;\n  });\n  const isRangeInvalidRef = computed(() => {\n    return isStartValueInvalidRef.value || isEndValueInvalidRef.value;\n  });\n  return Object.assign(Object.assign({}, timeValidator), {\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef\n  });\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/validation-utils.js"],"names":["computed","getHours","getMinutes","getSeconds","uniCalendarValidation","props","mergedValueRef","timePickerValidatorRef","isTimeDisabled","value","Array","isArray","undefined","isHourDisabledRef","_a","isHourDisabled","isMinuteDisabledRef","isMinuteDisabled","isSecondDisabledRef","isSecondDisabled","isDateInvalidRef","type","isDateDisabled","includes","isTimeInvalidRef","time","Date","hour","minute","second","isDateTimeInvalidRef","isValueInvalidRef","dualCalendarValidation","timeValidator","isStartHourDisabledRef","isEndHourDisabledRef","isStartMinuteDisabledRef","isEndMinuteDisabledRef","isStartSecondDisabledRef","isEndSecondDisabledRef","isStartDateInvalidRef","isEndDateInvalidRef","isStartTimeInvalidRef","startHours","startMinutes","startSeconds","startTimeInvalid","isEndTimeInvalidRef","endHours","endMinutes","endSeconds","endTimeInvalid","isStartValueInvalidRef","isEndValueInvalidRef","isRangeInvalidRef","Object","assign"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,UAA/B,QAAiD,UAAjD;AACA,OAAO,SAASC,qBAAT,CAA+BC,KAA/B,EAAsCC,cAAtC,EAAsD;AACzD;AACA,QAAMC,sBAAsB,GAAGP,QAAQ,CAAC,MAAM;AAC1C,UAAM;AAAEQ,MAAAA;AAAF,QAAqBH,KAA3B;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;AACA,QAAIG,KAAK,KAAK,IAAV,IAAkBC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAtB,EACI,OAAOG,SAAP;AACJ,WAAOJ,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,KAAD,CAArF;AACH,GANsC,CAAvC;AAOA,QAAMI,iBAAiB,GAAGb,QAAQ,CAAC,MAAM;AACrC,QAAIc,EAAJ;;AACA,WAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAA7B,MAAwC,IAAxC,IAAgDK,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACC,cAAnF;AACH,GAHiC,CAAlC;AAIA,QAAMC,mBAAmB,GAAGhB,QAAQ,CAAC,MAAM;AACvC,QAAIc,EAAJ;;AACA,WAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAA7B,MAAwC,IAAxC,IAAgDK,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACG,gBAAnF;AACH,GAHmC,CAApC;AAIA,QAAMC,mBAAmB,GAAGlB,QAAQ,CAAC,MAAM;AACvC,QAAIc,EAAJ;;AACA,WAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAA7B,MAAwC,IAAxC,IAAgDK,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACK,gBAAnF;AACH,GAHmC,CAApC;AAIA,QAAMC,gBAAgB,GAAGpB,QAAQ,CAAC,MAAM;AACpC,UAAM;AAAEqB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA2BjB,KAAjC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IACAC,KAAK,CAACC,OAAN,CAAcF,KAAd,CADA,IAEA,CAAC,CAAC,MAAD,EAAS,UAAT,EAAqBc,QAArB,CAA8BF,IAA9B,CAFD,IAGA,CAACC,cAHL,EAGqB;AACjB,aAAO,KAAP;AACH;;AACD,WAAOA,cAAc,CAACb,KAAD,CAArB;AACH,GAVgC,CAAjC;AAWA,QAAMe,gBAAgB,GAAGxB,QAAQ,CAAC,MAAM;AACpC,UAAM;AAAEqB,MAAAA;AAAF,QAAWhB,KAAjB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IAAkB,EAAEY,IAAI,KAAK,UAAX,CAAlB,IAA4CX,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAhD,EAAsE;AAClE,aAAO,KAAP;AACH;;AACD,UAAMgB,IAAI,GAAG,IAAIC,IAAJ,CAASjB,KAAT,CAAb;AACA,UAAMkB,IAAI,GAAGF,IAAI,CAACxB,QAAL,EAAb;AACA,UAAM2B,MAAM,GAAGH,IAAI,CAACvB,UAAL,EAAf;AACA,UAAM2B,MAAM,GAAGJ,IAAI,CAACvB,UAAL,EAAf;AACA,WAAQ,CAACW,iBAAiB,CAACJ,KAAlB,GAA0BI,iBAAiB,CAACJ,KAAlB,CAAwBkB,IAAxB,CAA1B,GAA0D,KAA3D,MACHX,mBAAmB,CAACP,KAApB,GACKO,mBAAmB,CAACP,KAApB,CAA0BmB,MAA1B,EAAkCD,IAAlC,CADL,GAEK,KAHF,MAIHT,mBAAmB,CAACT,KAApB,GACKS,mBAAmB,CAACT,KAApB,CAA0BoB,MAA1B,EAAkCD,MAAlC,EAA0CD,IAA1C,CADL,GAEK,KANF,CAAR;AAOH,GAjBgC,CAAjC;AAkBA,QAAMG,oBAAoB,GAAG9B,QAAQ,CAAC,MAAM;AACxC,WAAOoB,gBAAgB,CAACX,KAAjB,IAA0Be,gBAAgB,CAACf,KAAlD;AACH,GAFoC,CAArC;AAGA,QAAMsB,iBAAiB,GAAG/B,QAAQ,CAAC,MAAM;AACrC,UAAM;AAAEqB,MAAAA;AAAF,QAAWhB,KAAjB;AACA,QAAIgB,IAAI,KAAK,MAAb,EACI,OAAOD,gBAAgB,CAACX,KAAxB;AACJ,QAAIY,IAAI,KAAK,UAAb,EACI,OAAOS,oBAAoB,CAACrB,KAA5B;AACJ,WAAO,KAAP;AACH,GAPiC,CAAlC;AAQA,SAAO;AACH;AACAsB,IAAAA,iBAFG;AAGHX,IAAAA,gBAHG;AAIH;AACAI,IAAAA,gBALG;AAMHM,IAAAA,oBANG;AAOHjB,IAAAA,iBAPG;AAQHG,IAAAA,mBARG;AASHE,IAAAA;AATG,GAAP;AAWH;AACD,OAAO,SAASc,sBAAT,CAAgC3B,KAAhC,EAAuCC,cAAvC,EAAuD;AAC1D;AACA,QAAMC,sBAAsB,GAAGP,QAAQ,CAAC,MAAM;AAC1C,UAAM;AAAEQ,MAAAA;AAAF,QAAqBH,KAA3B;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAI,CAACI,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAD,IAAyB,CAACD,cAA9B,EAA8C;AAC1C,aAAO,CAACI,SAAD,EAAYA,SAAZ,CAAP;AACH;;AACD,WAAO,CACHJ,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,KAAK,CAAC,CAAD,CAAN,EAAW,OAAX,EAAoBA,KAApB,CAD3E,EAEHD,cAAc,KAAK,IAAnB,IAA2BA,cAAc,KAAK,KAAK,CAAnD,GAAuD,KAAK,CAA5D,GAAgEA,cAAc,CAACC,KAAK,CAAC,CAAD,CAAN,EAAW,KAAX,EAAkBA,KAAlB,CAF3E,CAAP;AAIH,GAVsC,CAAvC;AAWA,QAAMwB,aAAa,GAAG;AAClBC,IAAAA,sBAAsB,EAAElC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACC,cAAtF;AAAuG,KAAxH,CADd;AAElBoB,IAAAA,oBAAoB,EAAEnC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACC,cAAtF;AAAuG,KAAxH,CAFZ;AAGlBqB,IAAAA,wBAAwB,EAAEpC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACG,gBAAtF;AAAyG,KAA1H,CAHhB;AAIlBoB,IAAAA,sBAAsB,EAAErC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACG,gBAAtF;AAAyG,KAA1H,CAJd;AAKlBqB,IAAAA,wBAAwB,EAAEtC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACK,gBAAtF;AAAyG,KAA1H,CALhB;AAMlBoB,IAAAA,sBAAsB,EAAEvC,QAAQ,CAAC,MAAM;AAAE,UAAIc,EAAJ;;AAAQ,aAAO,CAACA,EAAE,GAAGP,sBAAsB,CAACE,KAAvB,CAA6B,CAA7B,CAAN,MAA2C,IAA3C,IAAmDK,EAAE,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,EAAE,CAACK,gBAAtF;AAAyG,KAA1H;AANd,GAAtB;AAQA,QAAMqB,qBAAqB,GAAGxC,QAAQ,CAAC,MAAM;AACzC,UAAM;AAAEqB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA2BjB,KAAjC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IACA,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CADD,IAEA,CAAC,CAAC,WAAD,EAAc,eAAd,EAA+Bc,QAA/B,CAAwCF,IAAxC,CAFD,IAGA,CAACC,cAHL,EAGqB;AACjB,aAAO,KAAP;AACH;;AACD,WAAOA,cAAc,CAACb,KAAK,CAAC,CAAD,CAAN,EAAW,OAAX,EAAoBA,KAApB,CAArB;AACH,GAVqC,CAAtC;AAWA,QAAMgC,mBAAmB,GAAGzC,QAAQ,CAAC,MAAM;AACvC,UAAM;AAAEqB,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAA2BjB,KAAjC;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IACA,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CADD,IAEA,CAAC,CAAC,WAAD,EAAc,eAAd,EAA+Bc,QAA/B,CAAwCF,IAAxC,CAFD,IAGA,CAACC,cAHL,EAGqB;AACjB,aAAO,KAAP;AACH;;AACD,WAAOA,cAAc,CAACb,KAAK,CAAC,CAAD,CAAN,EAAW,KAAX,EAAkBA,KAAlB,CAArB;AACH,GAVmC,CAApC;AAWA,QAAMiC,qBAAqB,GAAG1C,QAAQ,CAAC,MAAM;AACzC,UAAM;AAAEqB,MAAAA;AAAF,QAAWhB,KAAjB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IAAkB,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAnB,IAA2CY,IAAI,KAAK,eAAxD,EAAyE;AACrE,aAAO,KAAP;AACH;;AACD,UAAMsB,UAAU,GAAG1C,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAA3B;AACA,UAAMmC,YAAY,GAAG1C,UAAU,CAACO,KAAK,CAAC,CAAD,CAAN,CAA/B;AACA,UAAMoC,YAAY,GAAG1C,UAAU,CAACM,KAAK,CAAC,CAAD,CAAN,CAA/B;AACA,UAAM;AAAEyB,MAAAA,sBAAF;AAA0BE,MAAAA,wBAA1B;AAAoDE,MAAAA;AAApD,QAAiFL,aAAvF;AACA,UAAMa,gBAAgB,GAAG,CAACZ,sBAAsB,CAACzB,KAAvB,GACpByB,sBAAsB,CAACzB,KAAvB,CAA6BkC,UAA7B,CADoB,GAEpB,KAFmB,MAGpBP,wBAAwB,CAAC3B,KAAzB,GACK2B,wBAAwB,CAAC3B,KAAzB,CAA+BmC,YAA/B,EAA6CD,UAA7C,CADL,GAEK,KALe,MAMpBL,wBAAwB,CAAC7B,KAAzB,GACK6B,wBAAwB,CAAC7B,KAAzB,CAA+BoC,YAA/B,EAA6CD,YAA7C,EAA2DD,UAA3D,CADL,GAEK,KARe,CAAzB;AASA,WAAOG,gBAAP;AACH,GApBqC,CAAtC;AAqBA,QAAMC,mBAAmB,GAAG/C,QAAQ,CAAC,MAAM;AACvC,UAAM;AAAEqB,MAAAA;AAAF,QAAWhB,KAAjB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAYH,cAAlB;;AACA,QAAIG,KAAK,KAAK,IAAV,IAAkB,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAnB,IAA2CY,IAAI,KAAK,eAAxD,EAAyE;AACrE,aAAO,KAAP;AACH;;AACD,UAAM2B,QAAQ,GAAG/C,QAAQ,CAACQ,KAAK,CAAC,CAAD,CAAN,CAAzB;AACA,UAAMwC,UAAU,GAAG/C,UAAU,CAACO,KAAK,CAAC,CAAD,CAAN,CAA7B;AACA,UAAMyC,UAAU,GAAG/C,UAAU,CAACM,KAAK,CAAC,CAAD,CAAN,CAA7B;AACA,UAAM;AAAE0B,MAAAA,oBAAF;AAAwBE,MAAAA,sBAAxB;AAAgDE,MAAAA;AAAhD,QAA2EN,aAAjF;AACA,UAAMkB,cAAc,GAAG,CAAChB,oBAAoB,CAAC1B,KAArB,GAClB0B,oBAAoB,CAAC1B,KAArB,CAA2BuC,QAA3B,CADkB,GAElB,KAFiB,MAGlBX,sBAAsB,CAAC5B,KAAvB,GACK4B,sBAAsB,CAAC5B,KAAvB,CAA6BwC,UAA7B,EAAyCD,QAAzC,CADL,GAEK,KALa,MAMlBT,sBAAsB,CAAC9B,KAAvB,GACK8B,sBAAsB,CAAC9B,KAAvB,CAA6ByC,UAA7B,EAAyCD,UAAzC,EAAqDD,QAArD,CADL,GAEK,KARa,CAAvB;AASA,WAAOG,cAAP;AACH,GApBmC,CAApC;AAqBA,QAAMC,sBAAsB,GAAGpD,QAAQ,CAAC,MAAM;AAC1C,WAAOwC,qBAAqB,CAAC/B,KAAtB,IAA+BiC,qBAAqB,CAACjC,KAA5D;AACH,GAFsC,CAAvC;AAGA,QAAM4C,oBAAoB,GAAGrD,QAAQ,CAAC,MAAM;AACxC,WAAOyC,mBAAmB,CAAChC,KAApB,IAA6BsC,mBAAmB,CAACtC,KAAxD;AACH,GAFoC,CAArC;AAGA,QAAM6C,iBAAiB,GAAGtD,QAAQ,CAAC,MAAM;AACrC,WAAOoD,sBAAsB,CAAC3C,KAAvB,IAAgC4C,oBAAoB,CAAC5C,KAA5D;AACH,GAFiC,CAAlC;AAGA,SAAO8C,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBvB,aAAlB,CAAd,EAAgD;AAAEO,IAAAA,qBAAF;AACnDC,IAAAA,mBADmD;AAEnDC,IAAAA,qBAFmD;AAGnDK,IAAAA,mBAHmD;AAInDK,IAAAA,sBAJmD;AAKnDC,IAAAA,oBALmD;AAMnDC,IAAAA;AANmD,GAAhD,CAAP;AAOH","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { computed } from 'vue';\nimport { getHours, getMinutes, getSeconds } from 'date-fns';\nexport function uniCalendarValidation(props, mergedValueRef) {\n    // date, datetime\n    const timePickerValidatorRef = computed(() => {\n        const { isTimeDisabled } = props;\n        const { value } = mergedValueRef;\n        if (value === null || Array.isArray(value))\n            return undefined;\n        return isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value);\n    });\n    const isHourDisabledRef = computed(() => {\n        var _a;\n        return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isHourDisabled;\n    });\n    const isMinuteDisabledRef = computed(() => {\n        var _a;\n        return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled;\n    });\n    const isSecondDisabledRef = computed(() => {\n        var _a;\n        return (_a = timePickerValidatorRef.value) === null || _a === void 0 ? void 0 : _a.isSecondDisabled;\n    });\n    const isDateInvalidRef = computed(() => {\n        const { type, isDateDisabled } = props;\n        const { value } = mergedValueRef;\n        if (value === null ||\n            Array.isArray(value) ||\n            !['date', 'datetime'].includes(type) ||\n            !isDateDisabled) {\n            return false;\n        }\n        return isDateDisabled(value);\n    });\n    const isTimeInvalidRef = computed(() => {\n        const { type } = props;\n        const { value } = mergedValueRef;\n        if (value === null || !(type !== 'datetime') || Array.isArray(value)) {\n            return false;\n        }\n        const time = new Date(value);\n        const hour = time.getHours();\n        const minute = time.getMinutes();\n        const second = time.getMinutes();\n        return ((isHourDisabledRef.value ? isHourDisabledRef.value(hour) : false) ||\n            (isMinuteDisabledRef.value\n                ? isMinuteDisabledRef.value(minute, hour)\n                : false) ||\n            (isSecondDisabledRef.value\n                ? isSecondDisabledRef.value(second, minute, hour)\n                : false));\n    });\n    const isDateTimeInvalidRef = computed(() => {\n        return isDateInvalidRef.value || isTimeInvalidRef.value;\n    });\n    const isValueInvalidRef = computed(() => {\n        const { type } = props;\n        if (type === 'date')\n            return isDateInvalidRef.value;\n        if (type === 'datetime')\n            return isDateTimeInvalidRef.value;\n        return false;\n    });\n    return {\n        // date & datetime\n        isValueInvalidRef,\n        isDateInvalidRef,\n        // datetime only\n        isTimeInvalidRef,\n        isDateTimeInvalidRef,\n        isHourDisabledRef,\n        isMinuteDisabledRef,\n        isSecondDisabledRef\n    };\n}\nexport function dualCalendarValidation(props, mergedValueRef) {\n    // daterange, datetimerange\n    const timePickerValidatorRef = computed(() => {\n        const { isTimeDisabled } = props;\n        const { value } = mergedValueRef;\n        if (!Array.isArray(value) || !isTimeDisabled) {\n            return [undefined, undefined];\n        }\n        return [\n            isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value[0], 'start', value),\n            isTimeDisabled === null || isTimeDisabled === void 0 ? void 0 : isTimeDisabled(value[1], 'end', value)\n        ];\n    });\n    const timeValidator = {\n        isStartHourDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isHourDisabled; }),\n        isEndHourDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isHourDisabled; }),\n        isStartMinuteDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled; }),\n        isEndMinuteDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isMinuteDisabled; }),\n        isStartSecondDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[0]) === null || _a === void 0 ? void 0 : _a.isSecondDisabled; }),\n        isEndSecondDisabledRef: computed(() => { var _a; return (_a = timePickerValidatorRef.value[1]) === null || _a === void 0 ? void 0 : _a.isSecondDisabled; })\n    };\n    const isStartDateInvalidRef = computed(() => {\n        const { type, isDateDisabled } = props;\n        const { value } = mergedValueRef;\n        if (value === null ||\n            !Array.isArray(value) ||\n            !['daterange', 'datetimerange'].includes(type) ||\n            !isDateDisabled) {\n            return false;\n        }\n        return isDateDisabled(value[0], 'start', value);\n    });\n    const isEndDateInvalidRef = computed(() => {\n        const { type, isDateDisabled } = props;\n        const { value } = mergedValueRef;\n        if (value === null ||\n            !Array.isArray(value) ||\n            !['daterange', 'datetimerange'].includes(type) ||\n            !isDateDisabled) {\n            return false;\n        }\n        return isDateDisabled(value[1], 'end', value);\n    });\n    const isStartTimeInvalidRef = computed(() => {\n        const { type } = props;\n        const { value } = mergedValueRef;\n        if (value === null || !Array.isArray(value) || type !== 'datetimerange') {\n            return false;\n        }\n        const startHours = getHours(value[0]);\n        const startMinutes = getMinutes(value[0]);\n        const startSeconds = getSeconds(value[0]);\n        const { isStartHourDisabledRef, isStartMinuteDisabledRef, isStartSecondDisabledRef } = timeValidator;\n        const startTimeInvalid = (isStartHourDisabledRef.value\n            ? isStartHourDisabledRef.value(startHours)\n            : false) ||\n            (isStartMinuteDisabledRef.value\n                ? isStartMinuteDisabledRef.value(startMinutes, startHours)\n                : false) ||\n            (isStartSecondDisabledRef.value\n                ? isStartSecondDisabledRef.value(startSeconds, startMinutes, startHours)\n                : false);\n        return startTimeInvalid;\n    });\n    const isEndTimeInvalidRef = computed(() => {\n        const { type } = props;\n        const { value } = mergedValueRef;\n        if (value === null || !Array.isArray(value) || type !== 'datetimerange') {\n            return false;\n        }\n        const endHours = getHours(value[1]);\n        const endMinutes = getMinutes(value[1]);\n        const endSeconds = getSeconds(value[1]);\n        const { isEndHourDisabledRef, isEndMinuteDisabledRef, isEndSecondDisabledRef } = timeValidator;\n        const endTimeInvalid = (isEndHourDisabledRef.value\n            ? isEndHourDisabledRef.value(endHours)\n            : false) ||\n            (isEndMinuteDisabledRef.value\n                ? isEndMinuteDisabledRef.value(endMinutes, endHours)\n                : false) ||\n            (isEndSecondDisabledRef.value\n                ? isEndSecondDisabledRef.value(endSeconds, endMinutes, endHours)\n                : false);\n        return endTimeInvalid;\n    });\n    const isStartValueInvalidRef = computed(() => {\n        return isStartDateInvalidRef.value || isStartTimeInvalidRef.value;\n    });\n    const isEndValueInvalidRef = computed(() => {\n        return isEndDateInvalidRef.value || isEndTimeInvalidRef.value;\n    });\n    const isRangeInvalidRef = computed(() => {\n        return isStartValueInvalidRef.value || isEndValueInvalidRef.value;\n    });\n    return Object.assign(Object.assign({}, timeValidator), { isStartDateInvalidRef,\n        isEndDateInvalidRef,\n        isStartTimeInvalidRef,\n        isEndTimeInvalidRef,\n        isStartValueInvalidRef,\n        isEndValueInvalidRef,\n        isRangeInvalidRef });\n}\n"]},"metadata":{},"sourceType":"module"}