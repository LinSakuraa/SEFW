{"ast":null,"code":"import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport default function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n  if (!rtlStateRef) return undefined;\n  const ssrAdapter = useSsrAdapter();\n  const componentRtlStateRef = computed(() => {\n    const {\n      value: rtlState\n    } = rtlStateRef;\n\n    if (!rtlState) {\n      return undefined;\n    }\n\n    const componentRtlState = rtlState[mountId];\n\n    if (!componentRtlState) {\n      return undefined;\n    }\n\n    return componentRtlState;\n  });\n\n  const mountStyle = () => {\n    watchEffect(() => {\n      const {\n        value: clsPrefix\n      } = clsPrefixRef;\n      const id = `${clsPrefix}${mountId}Rtl`; // if it already exists, we only need to watch clsPrefix, although in most\n      // of time it's unnecessary... However we can at least listen less\n      // handlers, which is great.\n\n      if (exists(id, ssrAdapter)) return;\n      const {\n        value: componentRtlState\n      } = componentRtlStateRef;\n      if (!componentRtlState) return;\n      componentRtlState.style.mount({\n        id,\n        head: true,\n        anchorMetaName: cssrAnchorMetaName,\n        props: {\n          bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n        },\n        ssr: ssrAdapter\n      });\n    });\n  };\n\n  if (ssrAdapter) {\n    mountStyle();\n  } else {\n    onBeforeMount(mountStyle);\n  }\n\n  return componentRtlStateRef;\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/_mixins/use-rtl.js"],"names":["onBeforeMount","watchEffect","computed","exists","useSsrAdapter","cssrAnchorMetaName","useRtl","mountId","rtlStateRef","clsPrefixRef","undefined","ssrAdapter","componentRtlStateRef","value","rtlState","componentRtlState","mountStyle","clsPrefix","id","style","mount","head","anchorMetaName","props","bPrefix","ssr"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,EAAqCC,QAArC,QAAqD,KAArD;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,kBAAT,QAAmC,UAAnC;AACA,eAAe,SAASC,MAAT,CAAgBC,OAAhB,EAAyBC,WAAzB,EAAsCC,YAAtC,EAAoD;AAC/D,MAAI,CAACD,WAAL,EACI,OAAOE,SAAP;AACJ,QAAMC,UAAU,GAAGP,aAAa,EAAhC;AACA,QAAMQ,oBAAoB,GAAGV,QAAQ,CAAC,MAAM;AACxC,UAAM;AAAEW,MAAAA,KAAK,EAAEC;AAAT,QAAsBN,WAA5B;;AACA,QAAI,CAACM,QAAL,EAAe;AACX,aAAOJ,SAAP;AACH;;AACD,UAAMK,iBAAiB,GAAGD,QAAQ,CAACP,OAAD,CAAlC;;AACA,QAAI,CAACQ,iBAAL,EAAwB;AACpB,aAAOL,SAAP;AACH;;AACD,WAAOK,iBAAP;AACH,GAVoC,CAArC;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrBf,IAAAA,WAAW,CAAC,MAAM;AACd,YAAM;AAAEY,QAAAA,KAAK,EAAEI;AAAT,UAAuBR,YAA7B;AACA,YAAMS,EAAE,GAAI,GAAED,SAAU,GAAEV,OAAQ,KAAlC,CAFc,CAGd;AACA;AACA;;AACA,UAAIJ,MAAM,CAACe,EAAD,EAAKP,UAAL,CAAV,EACI;AACJ,YAAM;AAAEE,QAAAA,KAAK,EAAEE;AAAT,UAA+BH,oBAArC;AACA,UAAI,CAACG,iBAAL,EACI;AACJA,MAAAA,iBAAiB,CAACI,KAAlB,CAAwBC,KAAxB,CAA8B;AAC1BF,QAAAA,EAD0B;AAE1BG,QAAAA,IAAI,EAAE,IAFoB;AAG1BC,QAAAA,cAAc,EAAEjB,kBAHU;AAI1BkB,QAAAA,KAAK,EAAE;AACHC,UAAAA,OAAO,EAAEP,SAAS,GAAI,IAAGA,SAAU,GAAjB,GAAsBP;AADrC,SAJmB;AAO1Be,QAAAA,GAAG,EAAEd;AAPqB,OAA9B;AASH,KApBU,CAAX;AAqBH,GAtBD;;AAuBA,MAAIA,UAAJ,EAAgB;AACZK,IAAAA,UAAU;AACb,GAFD,MAGK;AACDhB,IAAAA,aAAa,CAACgB,UAAD,CAAb;AACH;;AACD,SAAOJ,oBAAP;AACH","sourcesContent":["import { onBeforeMount, watchEffect, computed } from 'vue';\nimport { exists } from 'css-render';\nimport { useSsrAdapter } from '@css-render/vue3-ssr';\nimport { cssrAnchorMetaName } from './common';\nexport default function useRtl(mountId, rtlStateRef, clsPrefixRef) {\n    if (!rtlStateRef)\n        return undefined;\n    const ssrAdapter = useSsrAdapter();\n    const componentRtlStateRef = computed(() => {\n        const { value: rtlState } = rtlStateRef;\n        if (!rtlState) {\n            return undefined;\n        }\n        const componentRtlState = rtlState[mountId];\n        if (!componentRtlState) {\n            return undefined;\n        }\n        return componentRtlState;\n    });\n    const mountStyle = () => {\n        watchEffect(() => {\n            const { value: clsPrefix } = clsPrefixRef;\n            const id = `${clsPrefix}${mountId}Rtl`;\n            // if it already exists, we only need to watch clsPrefix, although in most\n            // of time it's unnecessary... However we can at least listen less\n            // handlers, which is great.\n            if (exists(id, ssrAdapter))\n                return;\n            const { value: componentRtlState } = componentRtlStateRef;\n            if (!componentRtlState)\n                return;\n            componentRtlState.style.mount({\n                id,\n                head: true,\n                anchorMetaName: cssrAnchorMetaName,\n                props: {\n                    bPrefix: clsPrefix ? `.${clsPrefix}-` : undefined\n                },\n                ssr: ssrAdapter\n            });\n        });\n    };\n    if (ssrAdapter) {\n        mountStyle();\n    }\n    else {\n        onBeforeMount(mountStyle);\n    }\n    return componentRtlStateRef;\n}\n"]},"metadata":{},"sourceType":"module"}