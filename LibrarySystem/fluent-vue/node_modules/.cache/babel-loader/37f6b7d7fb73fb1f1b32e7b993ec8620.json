{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { attr } from '@microsoft/fast-element';\nimport { Anchor as FoundationAnchor, anchorTemplate as template } from '@microsoft/fast-foundation';\nimport { anchorStyles as styles } from './anchor.styles';\n/**\n * The Fluent version of Anchor\n * @internal\n */\n\nexport class Anchor extends FoundationAnchor {\n  appearanceChanged(oldValue, newValue) {\n    if (oldValue !== newValue) {\n      this.classList.add(newValue);\n      this.classList.remove(oldValue);\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  connectedCallback() {\n    super.connectedCallback();\n\n    if (!this.appearance) {\n      this.appearance = 'neutral';\n    }\n  }\n  /**\n   * Applies 'icon-only' class when there is only an SVG in the default slot\n   *\n   * @internal\n   */\n\n\n  defaultSlottedContentChanged() {\n    const slottedElements = this.defaultSlottedContent.filter(x => x.nodeType === Node.ELEMENT_NODE);\n\n    if (slottedElements.length === 1 && slottedElements[0] instanceof SVGElement) {\n      this.control.classList.add('icon-only');\n    } else {\n      this.control.classList.remove('icon-only');\n    }\n  }\n\n}\n\n__decorate([attr], Anchor.prototype, \"appearance\", void 0);\n/**\n * Styles for Anchor\n * @public\n */\n\n\nexport const anchorStyles = styles;\n/**\n * The Fluent Anchor Element. Implements {@link @microsoft/fast-foundation#Anchor},\n * {@link @microsoft/fast-foundation#anchorTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-anchor\\>\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\n\nexport const fluentAnchor = Anchor.compose({\n  baseName: 'anchor',\n  baseClass: FoundationAnchor,\n  template,\n  styles,\n  shadowOptions: {\n    delegatesFocus: true\n  }\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/anchor/index.js"],"names":["__decorate","attr","Anchor","FoundationAnchor","anchorTemplate","template","anchorStyles","styles","appearanceChanged","oldValue","newValue","classList","add","remove","connectedCallback","appearance","defaultSlottedContentChanged","slottedElements","defaultSlottedContent","filter","x","nodeType","Node","ELEMENT_NODE","length","SVGElement","control","prototype","fluentAnchor","compose","baseName","baseClass","shadowOptions","delegatesFocus"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,yBAArB;AACA,SAASC,MAAM,IAAIC,gBAAnB,EAAqCC,cAAc,IAAIC,QAAvD,QAAuE,4BAAvE;AACA,SAASC,YAAY,IAAIC,MAAzB,QAAuC,iBAAvC;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAML,MAAN,SAAqBC,gBAArB,CAAsC;AACzCK,EAAAA,iBAAiB,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAClC,QAAID,QAAQ,KAAKC,QAAjB,EAA2B;AACvB,WAAKC,SAAL,CAAeC,GAAf,CAAmBF,QAAnB;AACA,WAAKC,SAAL,CAAeE,MAAf,CAAsBJ,QAAtB;AACH;AACJ;AACD;AACJ;AACA;;;AACIK,EAAAA,iBAAiB,GAAG;AAChB,UAAMA,iBAAN;;AACA,QAAI,CAAC,KAAKC,UAAV,EAAsB;AAClB,WAAKA,UAAL,GAAkB,SAAlB;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;;;AACIC,EAAAA,4BAA4B,GAAG;AAC3B,UAAMC,eAAe,GAAG,KAAKC,qBAAL,CAA2BC,MAA3B,CAAkCC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAeC,IAAI,CAACC,YAA3D,CAAxB;;AACA,QAAIN,eAAe,CAACO,MAAhB,KAA2B,CAA3B,IAAgCP,eAAe,CAAC,CAAD,CAAf,YAA8BQ,UAAlE,EAA8E;AAC1E,WAAKC,OAAL,CAAaf,SAAb,CAAuBC,GAAvB,CAA2B,WAA3B;AACH,KAFD,MAGK;AACD,WAAKc,OAAL,CAAaf,SAAb,CAAuBE,MAAvB,CAA8B,WAA9B;AACH;AACJ;;AA7BwC;;AA+B7Cb,UAAU,CAAC,CACPC,IADO,CAAD,EAEPC,MAAM,CAACyB,SAFA,EAEW,YAFX,EAEyB,KAAK,CAF9B,CAAV;AAGA;AACA;AACA;AACA;;;AACA,OAAO,MAAMrB,YAAY,GAAGC,MAArB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMqB,YAAY,GAAG1B,MAAM,CAAC2B,OAAP,CAAe;AACvCC,EAAAA,QAAQ,EAAE,QAD6B;AAEvCC,EAAAA,SAAS,EAAE5B,gBAF4B;AAGvCE,EAAAA,QAHuC;AAIvCE,EAAAA,MAJuC;AAKvCyB,EAAAA,aAAa,EAAE;AACXC,IAAAA,cAAc,EAAE;AADL;AALwB,CAAf,CAArB","sourcesContent":["import { __decorate } from \"tslib\";\nimport { attr } from '@microsoft/fast-element';\nimport { Anchor as FoundationAnchor, anchorTemplate as template } from '@microsoft/fast-foundation';\nimport { anchorStyles as styles } from './anchor.styles';\n/**\n * The Fluent version of Anchor\n * @internal\n */\nexport class Anchor extends FoundationAnchor {\n    appearanceChanged(oldValue, newValue) {\n        if (oldValue !== newValue) {\n            this.classList.add(newValue);\n            this.classList.remove(oldValue);\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        if (!this.appearance) {\n            this.appearance = 'neutral';\n        }\n    }\n    /**\n     * Applies 'icon-only' class when there is only an SVG in the default slot\n     *\n     * @internal\n     */\n    defaultSlottedContentChanged() {\n        const slottedElements = this.defaultSlottedContent.filter(x => x.nodeType === Node.ELEMENT_NODE);\n        if (slottedElements.length === 1 && slottedElements[0] instanceof SVGElement) {\n            this.control.classList.add('icon-only');\n        }\n        else {\n            this.control.classList.remove('icon-only');\n        }\n    }\n}\n__decorate([\n    attr\n], Anchor.prototype, \"appearance\", void 0);\n/**\n * Styles for Anchor\n * @public\n */\nexport const anchorStyles = styles;\n/**\n * The Fluent Anchor Element. Implements {@link @microsoft/fast-foundation#Anchor},\n * {@link @microsoft/fast-foundation#anchorTemplate}\n *\n *\n * @public\n * @remarks\n * HTML Element: \\<fluent-anchor\\>\n *\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/ShadowRoot/delegatesFocus | delegatesFocus}\n */\nexport const fluentAnchor = Anchor.compose({\n    baseName: 'anchor',\n    baseClass: FoundationAnchor,\n    template,\n    styles,\n    shadowOptions: {\n        delegatesFocus: true,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}