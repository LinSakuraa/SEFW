{"ast":null,"code":"import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(NumberField:class)} component.\n * @public\n */\n\nexport const numberFieldTemplate = (context, definition) => html`\n    <template class=\"${x => x.readOnly ? \"readonly\" : \"\"}\">\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length ? \"label\" : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <div class=\"root\" part=\"root\">\n            ${startSlotTemplate(context, definition)}\n            <input\n                class=\"control\"\n                part=\"control\"\n                id=\"control\"\n                @input=\"${x => x.handleTextInput()}\"\n                @change=\"${x => x.handleChange()}\"\n                @keydown=\"${(x, c) => x.handleKeyDown(c.event)}\"\n                @blur=\"${(x, c) => x.handleBlur()}\"\n                ?autofocus=\"${x => x.autofocus}\"\n                ?disabled=\"${x => x.disabled}\"\n                list=\"${x => x.list}\"\n                maxlength=\"${x => x.maxlength}\"\n                minlength=\"${x => x.minlength}\"\n                placeholder=\"${x => x.placeholder}\"\n                ?readonly=\"${x => x.readOnly}\"\n                ?required=\"${x => x.required}\"\n                size=\"${x => x.size}\"\n                type=\"text\"\n                inputmode=\"numeric\"\n                min=\"${x => x.min}\"\n                max=\"${x => x.max}\"\n                step=\"${x => x.step}\"\n                aria-atomic=\"${x => x.ariaAtomic}\"\n                aria-busy=\"${x => x.ariaBusy}\"\n                aria-controls=\"${x => x.ariaControls}\"\n                aria-current=\"${x => x.ariaCurrent}\"\n                aria-describedby=\"${x => x.ariaDescribedby}\"\n                aria-details=\"${x => x.ariaDetails}\"\n                aria-disabled=\"${x => x.ariaDisabled}\"\n                aria-errormessage=\"${x => x.ariaErrormessage}\"\n                aria-flowto=\"${x => x.ariaFlowto}\"\n                aria-haspopup=\"${x => x.ariaHaspopup}\"\n                aria-hidden=\"${x => x.ariaHidden}\"\n                aria-invalid=\"${x => x.ariaInvalid}\"\n                aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                aria-label=\"${x => x.ariaLabel}\"\n                aria-labelledby=\"${x => x.ariaLabelledby}\"\n                aria-live=\"${x => x.ariaLive}\"\n                aria-owns=\"${x => x.ariaOwns}\"\n                aria-relevant=\"${x => x.ariaRelevant}\"\n                aria-roledescription=\"${x => x.ariaRoledescription}\"\n                ${ref(\"control\")}\n            />\n            ${when(x => !x.hideStep && !x.readOnly && !x.disabled, html`\n                    <div class=\"controls\" part=\"controls\">\n                        <div class=\"step-up\" part=\"step-up\" @click=\"${x => x.stepUp()}\">\n                            <slot name=\"step-up-glyph\">\n                                ${definition.stepUpGlyph || \"\"}\n                            </slot>\n                        </div>\n                        <div\n                            class=\"step-down\"\n                            part=\"step-down\"\n                            @click=\"${x => x.stepDown()}\"\n                        >\n                            <slot name=\"step-down-glyph\">\n                                ${definition.stepDownGlyph || \"\"}\n                            </slot>\n                        </div>\n                    </div>\n                `)}\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/number-field/number-field.template.js"],"names":["html","ref","slotted","when","endSlotTemplate","startSlotTemplate","numberFieldTemplate","context","definition","x","readOnly","defaultSlottedNodes","length","handleTextInput","handleChange","c","handleKeyDown","event","handleBlur","autofocus","disabled","list","maxlength","minlength","placeholder","required","size","min","max","step","ariaAtomic","ariaBusy","ariaControls","ariaCurrent","ariaDescribedby","ariaDetails","ariaDisabled","ariaErrormessage","ariaFlowto","ariaHaspopup","ariaHidden","ariaInvalid","ariaKeyshortcuts","ariaLabel","ariaLabelledby","ariaLive","ariaOwns","ariaRelevant","ariaRoledescription","hideStep","stepUp","stepUpGlyph","stepDown","stepDownGlyph"],"mappings":"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","sourcesContent":["import { html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(NumberField:class)} component.\n * @public\n */\nexport const numberFieldTemplate = (context, definition) => html `\n    <template class=\"${x => (x.readOnly ? \"readonly\" : \"\")}\">\n        <label\n            part=\"label\"\n            for=\"control\"\n            class=\"${x => x.defaultSlottedNodes && x.defaultSlottedNodes.length\n    ? \"label\"\n    : \"label label__hidden\"}\"\n        >\n            <slot ${slotted(\"defaultSlottedNodes\")}></slot>\n        </label>\n        <div class=\"root\" part=\"root\">\n            ${startSlotTemplate(context, definition)}\n            <input\n                class=\"control\"\n                part=\"control\"\n                id=\"control\"\n                @input=\"${x => x.handleTextInput()}\"\n                @change=\"${x => x.handleChange()}\"\n                @keydown=\"${(x, c) => x.handleKeyDown(c.event)}\"\n                @blur=\"${(x, c) => x.handleBlur()}\"\n                ?autofocus=\"${x => x.autofocus}\"\n                ?disabled=\"${x => x.disabled}\"\n                list=\"${x => x.list}\"\n                maxlength=\"${x => x.maxlength}\"\n                minlength=\"${x => x.minlength}\"\n                placeholder=\"${x => x.placeholder}\"\n                ?readonly=\"${x => x.readOnly}\"\n                ?required=\"${x => x.required}\"\n                size=\"${x => x.size}\"\n                type=\"text\"\n                inputmode=\"numeric\"\n                min=\"${x => x.min}\"\n                max=\"${x => x.max}\"\n                step=\"${x => x.step}\"\n                aria-atomic=\"${x => x.ariaAtomic}\"\n                aria-busy=\"${x => x.ariaBusy}\"\n                aria-controls=\"${x => x.ariaControls}\"\n                aria-current=\"${x => x.ariaCurrent}\"\n                aria-describedby=\"${x => x.ariaDescribedby}\"\n                aria-details=\"${x => x.ariaDetails}\"\n                aria-disabled=\"${x => x.ariaDisabled}\"\n                aria-errormessage=\"${x => x.ariaErrormessage}\"\n                aria-flowto=\"${x => x.ariaFlowto}\"\n                aria-haspopup=\"${x => x.ariaHaspopup}\"\n                aria-hidden=\"${x => x.ariaHidden}\"\n                aria-invalid=\"${x => x.ariaInvalid}\"\n                aria-keyshortcuts=\"${x => x.ariaKeyshortcuts}\"\n                aria-label=\"${x => x.ariaLabel}\"\n                aria-labelledby=\"${x => x.ariaLabelledby}\"\n                aria-live=\"${x => x.ariaLive}\"\n                aria-owns=\"${x => x.ariaOwns}\"\n                aria-relevant=\"${x => x.ariaRelevant}\"\n                aria-roledescription=\"${x => x.ariaRoledescription}\"\n                ${ref(\"control\")}\n            />\n            ${when(x => !x.hideStep && !x.readOnly && !x.disabled, html `\n                    <div class=\"controls\" part=\"controls\">\n                        <div class=\"step-up\" part=\"step-up\" @click=\"${x => x.stepUp()}\">\n                            <slot name=\"step-up-glyph\">\n                                ${definition.stepUpGlyph || \"\"}\n                            </slot>\n                        </div>\n                        <div\n                            class=\"step-down\"\n                            part=\"step-down\"\n                            @click=\"${x => x.stepDown()}\"\n                        >\n                            <slot name=\"step-down-glyph\">\n                                ${definition.stepDownGlyph || \"\"}\n                            </slot>\n                        </div>\n                    </div>\n                `)}\n            ${endSlotTemplate(context, definition)}\n        </div>\n    </template>\n`;\n"]},"metadata":{},"sourceType":"module"}