{"ast":null,"code":"import { children, elements, html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TreeItem:class)} component.\n * @public\n */\n\nexport const treeItemTemplate = (context, definition) => html`\n    <template\n        role=\"treeitem\"\n        slot=\"${x => x.isNestedItem() ? \"item\" : void 0}\"\n        tabindex=\"-1\"\n        class=\"${x => x.expanded ? \"expanded\" : \"\"} ${x => x.selected ? \"selected\" : \"\"} ${x => x.nested ? \"nested\" : \"\"}\n            ${x => x.disabled ? \"disabled\" : \"\"}\"\n        aria-expanded=\"${x => x.childItems && x.childItemLength() > 0 ? x.expanded : void 0}\"\n        aria-selected=\"${x => x.selected}\"\n        aria-disabled=\"${x => x.disabled}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        ${children({\n  property: \"childItems\",\n  filter: elements()\n})}\n    >\n        <div class=\"positioning-region\" part=\"positioning-region\">\n            <div class=\"content-region\" part=\"content-region\">\n                ${when(x => x.childItems && x.childItemLength() > 0, html`\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"expand-collapse-button\"\n                            part=\"expand-collapse-button\"\n                            @click=\"${(x, c) => x.handleExpandCollapseButtonClick(c.event)}\"\n                            ${ref(\"expandCollapseButton\")}\n                        >\n                            <slot name=\"expand-collapse-glyph\">\n                                ${definition.expandCollapseGlyph || \"\"}\n                            </slot>\n                        </div>\n                    `)}\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            </div>\n        </div>\n        ${when(x => x.childItems && x.childItemLength() > 0 && (x.expanded || x.renderCollapsedChildren), html`\n                <div role=\"group\" class=\"items\" part=\"items\">\n                    <slot name=\"item\" ${slotted(\"items\")}></slot>\n                </div>\n            `)}\n    </template>\n`;","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/tree-item/tree-item.template.js"],"names":["children","elements","html","ref","slotted","when","endSlotTemplate","startSlotTemplate","treeItemTemplate","context","definition","x","isNestedItem","expanded","selected","nested","disabled","childItems","childItemLength","c","handleFocus","event","handleBlur","property","filter","handleExpandCollapseButtonClick","expandCollapseGlyph","renderCollapsedChildren"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,QAAnB,EAA6BC,IAA7B,EAAmCC,GAAnC,EAAwCC,OAAxC,EAAiDC,IAAjD,QAA6D,yBAA7D;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,uBAAnD;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyBR,IAAM;AAC/D;AACA;AACA,gBAAgBS,CAAC,IAAKA,CAAC,CAACC,YAAF,KAAmB,MAAnB,GAA4B,KAAK,CAAG;AAC1D;AACA,iBAAiBD,CAAC,IAAKA,CAAC,CAACE,QAAF,GAAa,UAAb,GAA0B,EAAI,IAAGF,CAAC,IAAIA,CAAC,CAACG,QAAF,GAAa,UAAb,GAA0B,EAAG,IAAGH,CAAC,IAAKA,CAAC,CAACI,MAAF,GAAW,QAAX,GAAsB,EAAI;AAC7H,cAAcJ,CAAC,IAAKA,CAAC,CAACK,QAAF,GAAa,UAAb,GAA0B,EAAI;AAClD,yBAAyBL,CAAC,IAAIA,CAAC,CAACM,UAAF,IAAgBN,CAAC,CAACO,eAAF,KAAsB,CAAtC,GAA0CP,CAAC,CAACE,QAA5C,GAAuD,KAAK,CAAE;AAC5F,yBAAyBF,CAAC,IAAIA,CAAC,CAACG,QAAS;AACzC,yBAAyBH,CAAC,IAAIA,CAAC,CAACK,QAAS;AACzC,oBAAoB,CAACL,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,CAACS,WAAF,CAAcD,CAAC,CAACE,KAAhB,CAAuB;AACrD,qBAAqB,CAACV,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,CAACW,UAAF,CAAaH,CAAC,CAACE,KAAf,CAAsB;AACrD,UAAUrB,QAAQ,CAAC;AACfuB,EAAAA,QAAQ,EAAE,YADK;AAEfC,EAAAA,MAAM,EAAEvB,QAAQ;AAFD,CAAD,CAGf;AACH;AACA;AACA;AACA,kBAAkBI,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACM,UAAF,IAAgBN,CAAC,CAACO,eAAF,KAAsB,CAA5C,EAA+ChB,IAAM;AAC3E;AACA;AACA;AACA;AACA,sCAAsC,CAACS,CAAD,EAAIQ,CAAJ,KAAUR,CAAC,CAACc,+BAAF,CAAkCN,CAAC,CAACE,KAApC,CAA2C;AAC3F,8BAA8BlB,GAAG,CAAC,sBAAD,CAAyB;AAC1D;AACA;AACA,kCAAkCO,UAAU,CAACgB,mBAAX,IAAkC,EAAG;AACvE;AACA;AACA,qBAZsB,CAYC;AACvB,kBAAkBnB,iBAAiB,CAACE,OAAD,EAAUC,UAAV,CAAsB;AACzD;AACA,kBAAkBJ,eAAe,CAACG,OAAD,EAAUC,UAAV,CAAsB;AACvD;AACA;AACA,UAAUL,IAAI,CAACM,CAAC,IAAIA,CAAC,CAACM,UAAF,IAChBN,CAAC,CAACO,eAAF,KAAsB,CADN,KAEfP,CAAC,CAACE,QAAF,IAAcF,CAAC,CAACgB,uBAFD,CAAN,EAEiCzB,IAAM;AACrD;AACA,wCAAwCE,OAAO,CAAC,OAAD,CAAU;AACzD;AACA,aANc,CAMC;AACf;AACA,CA7CO","sourcesContent":["import { children, elements, html, ref, slotted, when } from \"@microsoft/fast-element\";\nimport { endSlotTemplate, startSlotTemplate } from \"../patterns/start-end\";\n/**\n * The template for the {@link @microsoft/fast-foundation#(TreeItem:class)} component.\n * @public\n */\nexport const treeItemTemplate = (context, definition) => html `\n    <template\n        role=\"treeitem\"\n        slot=\"${x => (x.isNestedItem() ? \"item\" : void 0)}\"\n        tabindex=\"-1\"\n        class=\"${x => (x.expanded ? \"expanded\" : \"\")} ${x => x.selected ? \"selected\" : \"\"} ${x => (x.nested ? \"nested\" : \"\")}\n            ${x => (x.disabled ? \"disabled\" : \"\")}\"\n        aria-expanded=\"${x => x.childItems && x.childItemLength() > 0 ? x.expanded : void 0}\"\n        aria-selected=\"${x => x.selected}\"\n        aria-disabled=\"${x => x.disabled}\"\n        @focusin=\"${(x, c) => x.handleFocus(c.event)}\"\n        @focusout=\"${(x, c) => x.handleBlur(c.event)}\"\n        ${children({\n    property: \"childItems\",\n    filter: elements(),\n})}\n    >\n        <div class=\"positioning-region\" part=\"positioning-region\">\n            <div class=\"content-region\" part=\"content-region\">\n                ${when(x => x.childItems && x.childItemLength() > 0, html `\n                        <div\n                            aria-hidden=\"true\"\n                            class=\"expand-collapse-button\"\n                            part=\"expand-collapse-button\"\n                            @click=\"${(x, c) => x.handleExpandCollapseButtonClick(c.event)}\"\n                            ${ref(\"expandCollapseButton\")}\n                        >\n                            <slot name=\"expand-collapse-glyph\">\n                                ${definition.expandCollapseGlyph || \"\"}\n                            </slot>\n                        </div>\n                    `)}\n                ${startSlotTemplate(context, definition)}\n                <slot></slot>\n                ${endSlotTemplate(context, definition)}\n            </div>\n        </div>\n        ${when(x => x.childItems &&\n    x.childItemLength() > 0 &&\n    (x.expanded || x.renderCollapsedChildren), html `\n                <div role=\"group\" class=\"items\" part=\"items\">\n                    <slot name=\"item\" ${slotted(\"items\")}></slot>\n                </div>\n            `)}\n    </template>\n`;\n"]},"metadata":{},"sourceType":"module"}