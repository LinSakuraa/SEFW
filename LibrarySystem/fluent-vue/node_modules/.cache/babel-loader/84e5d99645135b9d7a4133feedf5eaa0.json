{"ast":null,"code":"import { h, ref, toRef, computed, defineComponent, provide, inject, watchEffect } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useCompitable, useMergedState } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call } from '../../_utils';\nimport { itemRenderer } from './utils';\nimport { menuLight } from '../styles';\nimport style from './styles/index.cssr';\nimport { layoutSiderInjectionKey } from '../../layout/src/interface';\nimport { useCheckDeprecated } from './useCheckDeprecated';\nimport { menuInjectionKey } from './context';\nconst menuProps = Object.assign(Object.assign({}, useTheme.props), {\n  options: {\n    type: Array,\n    default: () => []\n  },\n  collapsed: {\n    type: Boolean,\n    default: undefined\n  },\n  collapsedWidth: {\n    type: Number,\n    default: 48\n  },\n  iconSize: {\n    type: Number,\n    default: 20\n  },\n  collapsedIconSize: {\n    type: Number,\n    default: 24\n  },\n  rootIndent: Number,\n  indent: {\n    type: Number,\n    default: 32\n  },\n  labelField: {\n    type: String,\n    default: 'label'\n  },\n  keyField: {\n    type: String,\n    default: 'key'\n  },\n  childrenField: {\n    type: String,\n    default: 'children'\n  },\n  defaultExpandAll: Boolean,\n  defaultExpandedKeys: Array,\n  expandedKeys: Array,\n  value: [String, Number],\n  defaultValue: {\n    type: [String, Number],\n    default: null\n  },\n  mode: {\n    type: String,\n    default: 'vertical'\n  },\n  watchProps: {\n    type: Array,\n    default: undefined\n  },\n  disabled: Boolean,\n  inverted: Boolean,\n  'onUpdate:expandedKeys': [Function, Array],\n  onUpdateExpandedKeys: [Function, Array],\n  onUpdateValue: [Function, Array],\n  'onUpdate:value': [Function, Array],\n  expandIcon: Function,\n  renderIcon: Function,\n  renderLabel: Function,\n  renderExtra: Function,\n\n  /** TODO: deprecate it */\n  dropdownPlacement: {\n    type: String,\n    default: 'bottom'\n  },\n  dropdownProps: Object,\n  accordion: Boolean,\n  // deprecated\n  items: Array,\n  onOpenNamesChange: [Function, Array],\n  onSelect: [Function, Array],\n  onExpandedNamesChange: [Function, Array],\n  expandedNames: Array,\n  defaultExpandedNames: Array\n});\nexport default defineComponent({\n  name: 'Menu',\n  props: menuProps,\n\n  setup(props) {\n    if (process.env.NODE_ENV !== 'production') {\n      useCheckDeprecated(props);\n    }\n\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Menu', '-menu', style, menuLight, props, mergedClsPrefixRef);\n    const layoutSider = inject(layoutSiderInjectionKey, null);\n    const mergedCollapsedRef = computed(() => {\n      var _a;\n\n      const {\n        collapsed\n      } = props;\n      if (collapsed !== undefined) return collapsed;\n\n      if (layoutSider) {\n        const {\n          collapseModeRef,\n          collapsedRef\n        } = layoutSider;\n\n        if (collapseModeRef.value === 'width') {\n          return (_a = collapsedRef.value) !== null && _a !== void 0 ? _a : false;\n        }\n      }\n\n      return false;\n    });\n    const treeMateRef = computed(() => {\n      const {\n        keyField,\n        childrenField\n      } = props;\n      return createTreeMate(props.items || props.options, {\n        getChildren(node) {\n          return node[childrenField];\n        },\n\n        getKey(node) {\n          var _a;\n\n          return (_a = node[keyField]) !== null && _a !== void 0 ? _a : node.name;\n        }\n\n      });\n    });\n    const treeKeysLevelOneRef = computed(() => new Set(treeMateRef.value.treeNodes.map(e => e.key)));\n    const {\n      watchProps\n    } = props;\n    const uncontrolledValueRef = ref(null);\n\n    if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultValue')) {\n      watchEffect(() => {\n        uncontrolledValueRef.value = props.defaultValue;\n      });\n    } else {\n      uncontrolledValueRef.value = props.defaultValue;\n    }\n\n    const controlledValueRef = toRef(props, 'value');\n    const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n    const uncontrolledExpandedKeysRef = ref([]);\n\n    const initUncontrolledExpandedKeys = () => {\n      uncontrolledExpandedKeysRef.value = props.defaultExpandAll ? treeMateRef.value.getNonLeafKeys() : props.defaultExpandedNames || props.defaultExpandedKeys || treeMateRef.value.getPath(mergedValueRef.value, {\n        includeSelf: false\n      }).keyPath;\n    };\n\n    if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultExpandedKeys')) {\n      watchEffect(initUncontrolledExpandedKeys);\n    } else {\n      initUncontrolledExpandedKeys();\n    }\n\n    const controlledExpandedKeysRef = useCompitable(props, ['expandedNames', 'expandedKeys']);\n    const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n    const tmNodesRef = computed(() => treeMateRef.value.treeNodes);\n    const activePathRef = computed(() => {\n      return treeMateRef.value.getPath(mergedValueRef.value).keyPath;\n    });\n    provide(menuInjectionKey, {\n      props,\n      mergedCollapsedRef,\n      mergedThemeRef: themeRef,\n      mergedValueRef,\n      mergedExpandedKeysRef,\n      activePathRef,\n      mergedClsPrefixRef,\n      isHorizontalRef: computed(() => props.mode === 'horizontal'),\n      invertedRef: toRef(props, 'inverted'),\n      doSelect,\n      toggleExpand\n    });\n\n    function doSelect(value, item) {\n      const {\n        'onUpdate:value': _onUpdateValue,\n        onUpdateValue,\n        onSelect\n      } = props;\n\n      if (onUpdateValue) {\n        call(onUpdateValue, value, item);\n      }\n\n      if (_onUpdateValue) {\n        call(_onUpdateValue, value, item);\n      }\n\n      if (onSelect) {\n        call(onSelect, value, item);\n      }\n\n      uncontrolledValueRef.value = value;\n    }\n\n    function doUpdateExpandedKeys(value) {\n      const {\n        'onUpdate:expandedKeys': _onUpdateExpandedKeys,\n        onUpdateExpandedKeys,\n        onExpandedNamesChange,\n        onOpenNamesChange\n      } = props;\n\n      if (_onUpdateExpandedKeys) {\n        call(_onUpdateExpandedKeys, value);\n      }\n\n      if (onUpdateExpandedKeys) {\n        call(onUpdateExpandedKeys, value);\n      } // deprecated\n\n\n      if (onExpandedNamesChange) {\n        call(onExpandedNamesChange, value);\n      }\n\n      if (onOpenNamesChange) {\n        call(onOpenNamesChange, value);\n      }\n\n      uncontrolledExpandedKeysRef.value = value;\n    }\n\n    function toggleExpand(key) {\n      const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n      const index = currentExpandedKeys.findIndex(expanededKey => expanededKey === key);\n\n      if (~index) {\n        currentExpandedKeys.splice(index, 1);\n      } else {\n        if (props.accordion) {\n          if (treeKeysLevelOneRef.value.has(key)) {\n            const closeKeyIndex = currentExpandedKeys.findIndex(e => treeKeysLevelOneRef.value.has(e));\n\n            if (closeKeyIndex > -1) {\n              currentExpandedKeys.splice(closeKeyIndex, 1);\n            }\n          }\n        }\n\n        currentExpandedKeys.push(key);\n      }\n\n      doUpdateExpandedKeys(currentExpandedKeys);\n    }\n\n    const showOption = key => {\n      const selectedKeyPath = treeMateRef.value.getPath(key !== null && key !== void 0 ? key : mergedValueRef.value, {\n        includeSelf: false\n      }).keyPath;\n      if (!selectedKeyPath.length) return;\n      const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n      const nextExpandedKeys = new Set([...currentExpandedKeys, ...selectedKeyPath]);\n\n      if (props.accordion) {\n        treeKeysLevelOneRef.value.forEach(firstLevelKey => {\n          if (nextExpandedKeys.has(firstLevelKey) && !selectedKeyPath.includes(firstLevelKey)) {\n            nextExpandedKeys.delete(firstLevelKey);\n          }\n        });\n      }\n\n      doUpdateExpandedKeys(Array.from(nextExpandedKeys));\n    };\n\n    const cssVarsRef = computed(() => {\n      const {\n        inverted\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self\n      } = themeRef.value;\n      const {\n        borderRadius,\n        borderColorHorizontal,\n        fontSize,\n        itemHeight,\n        dividerColor\n      } = self;\n      const vars = {\n        '--n-divider-color': dividerColor,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-font-size': fontSize,\n        '--n-border-color-horizontal': borderColorHorizontal,\n        '--n-border-radius': borderRadius,\n        '--n-item-height': itemHeight\n      };\n\n      if (inverted) {\n        vars['--n-group-text-color'] = self.groupTextColorInverted;\n        vars['--n-color'] = self.colorInverted;\n        vars['--n-item-text-color'] = self.itemTextColorInverted;\n        vars['--n-item-text-color-hover'] = self.itemTextColorHoverInverted;\n        vars['--n-item-text-color-active'] = self.itemTextColorActiveInverted;\n        vars['--n-item-text-color-child-active'] = self.itemTextColorChildActiveInverted;\n        vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHoverInverted;\n        vars['--n-item-icon-color'] = self.itemIconColorInverted;\n        vars['--n-item-icon-color-hover'] = self.itemIconColorHoverInverted;\n        vars['--n-item-icon-color-active'] = self.itemIconColorActiveInverted;\n        vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHoverInverted;\n        vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActiveInverted;\n        vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsedInverted;\n        vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontalInverted;\n        vars['--n-item-text-color-hover-horizontal'] = self.itemTextColorHoverHorizontalInverted;\n        vars['--n-item-text-color-active-horizontal'] = self.itemTextColorActiveHorizontalInverted;\n        vars['--n-item-text-color-child-active-horizontal'] = self.itemTextColorChildActiveHorizontalInverted;\n        vars['--n-item-text-color-active-hover-horizontal'] = self.itemTextColorActiveHoverHorizontalInverted;\n        vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontalInverted;\n        vars['--n-item-icon-color-hover-horizontal'] = self.itemIconColorHoverHorizontalInverted;\n        vars['--n-item-icon-color-active-horizontal'] = self.itemIconColorActiveHorizontalInverted;\n        vars['--n-item-icon-color-active-hover-horizontal'] = self.itemIconColorActiveHoverHorizontalInverted;\n        vars['--n-item-icon-color-child-active-horizontal'] = self.itemIconColorChildActiveHorizontalInverted;\n        vars['--n-arrow-color'] = self.arrowColorInverted;\n        vars['--n-arrow-color-hover'] = self.arrowColorHoverInverted;\n        vars['--n-arrow-color-active'] = self.arrowColorActiveInverted;\n        vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHoverInverted;\n        vars['--n-arrow-color-child-active'] = self.arrowColorChildActiveInverted;\n        vars['--n-item-color-hover'] = self.itemColorHoverInverted;\n        vars['--n-item-color-active'] = self.itemColorActiveInverted;\n        vars['--n-item-color-active-hover'] = self.itemColorActiveHoverInverted;\n        vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsedInverted;\n      } else {\n        vars['--n-group-text-color'] = self.groupTextColor;\n        vars['--n-color'] = self.color;\n        vars['--n-item-text-color'] = self.itemTextColor;\n        vars['--n-item-text-color-hover'] = self.itemTextColorHover;\n        vars['--n-item-text-color-active'] = self.itemTextColorActive;\n        vars['--n-item-text-color-child-active'] = self.itemTextColorChildActive;\n        vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHover;\n        vars['--n-item-icon-color'] = self.itemIconColor;\n        vars['--n-item-icon-color-hover'] = self.itemIconColorHover;\n        vars['--n-item-icon-color-active'] = self.itemIconColorActive;\n        vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHover;\n        vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActive;\n        vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsed;\n        vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontal;\n        vars['--n-item-text-color-hover-horizontal'] = self.itemTextColorHoverHorizontal;\n        vars['--n-item-text-color-active-horizontal'] = self.itemTextColorActiveHorizontal;\n        vars['--n-item-text-color-child-active-horizontal'] = self.itemTextColorChildActiveHorizontal;\n        vars['--n-item-text-color-active-hover-horizontal'] = self.itemTextColorActiveHoverHorizontal;\n        vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontal;\n        vars['--n-item-icon-color-hover-horizontal'] = self.itemIconColorHoverHorizontal;\n        vars['--n-item-icon-color-active-horizontal'] = self.itemIconColorActiveHorizontal;\n        vars['--n-item-icon-color-active-hover-horizontal'] = self.itemIconColorActiveHoverHorizontal;\n        vars['--n-item-icon-color-child-active-horizontal'] = self.itemIconColorChildActiveHorizontal;\n        vars['--n-arrow-color'] = self.arrowColor;\n        vars['--n-arrow-color-hover'] = self.arrowColorHover;\n        vars['--n-arrow-color-active'] = self.arrowColorActive;\n        vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHover;\n        vars['--n-arrow-color-child-active'] = self.arrowColorChildActive;\n        vars['--n-item-color-hover'] = self.itemColorHover;\n        vars['--n-item-color-active'] = self.itemColorActive;\n        vars['--n-item-color-active-hover'] = self.itemColorActiveHover;\n        vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsed;\n      }\n\n      return vars;\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('menu', computed(() => props.inverted ? 'a' : 'b'), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      controlledExpandedKeys: controlledExpandedKeysRef,\n      uncontrolledExpanededKeys: uncontrolledExpandedKeysRef,\n      mergedExpandedKeys: mergedExpandedKeysRef,\n      uncontrolledValue: uncontrolledValueRef,\n      mergedValue: mergedValueRef,\n      activePath: activePathRef,\n      tmNodes: tmNodesRef,\n      mergedTheme: themeRef,\n      mergedCollapsed: mergedCollapsedRef,\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n      showOption\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mode,\n      themeClass,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      role: mode === 'horizontal' ? 'menubar' : 'menu',\n      class: [`${mergedClsPrefix}-menu`, themeClass, `${mergedClsPrefix}-menu--${mode}`, this.mergedCollapsed && `${mergedClsPrefix}-menu--collapsed`],\n      style: this.cssVars\n    }, this.tmNodes.map(tmNode => itemRenderer(tmNode, this.$props)));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/menu/src/Menu.js"],"names":["h","ref","toRef","computed","defineComponent","provide","inject","watchEffect","createTreeMate","useCompitable","useMergedState","useConfig","useTheme","useThemeClass","call","itemRenderer","menuLight","style","layoutSiderInjectionKey","useCheckDeprecated","menuInjectionKey","menuProps","Object","assign","props","options","type","Array","default","collapsed","Boolean","undefined","collapsedWidth","Number","iconSize","collapsedIconSize","rootIndent","indent","labelField","String","keyField","childrenField","defaultExpandAll","defaultExpandedKeys","expandedKeys","value","defaultValue","mode","watchProps","disabled","inverted","Function","onUpdateExpandedKeys","onUpdateValue","expandIcon","renderIcon","renderLabel","renderExtra","dropdownPlacement","dropdownProps","accordion","items","onOpenNamesChange","onSelect","onExpandedNamesChange","expandedNames","defaultExpandedNames","name","setup","process","env","NODE_ENV","mergedClsPrefixRef","inlineThemeDisabled","themeRef","layoutSider","mergedCollapsedRef","_a","collapseModeRef","collapsedRef","treeMateRef","getChildren","node","getKey","treeKeysLevelOneRef","Set","treeNodes","map","e","key","uncontrolledValueRef","includes","controlledValueRef","mergedValueRef","uncontrolledExpandedKeysRef","initUncontrolledExpandedKeys","getNonLeafKeys","getPath","includeSelf","keyPath","controlledExpandedKeysRef","mergedExpandedKeysRef","tmNodesRef","activePathRef","mergedThemeRef","isHorizontalRef","invertedRef","doSelect","toggleExpand","item","_onUpdateValue","doUpdateExpandedKeys","_onUpdateExpandedKeys","currentExpandedKeys","from","index","findIndex","expanededKey","splice","has","closeKeyIndex","push","showOption","selectedKeyPath","length","nextExpandedKeys","forEach","firstLevelKey","delete","cssVarsRef","common","cubicBezierEaseInOut","self","borderRadius","borderColorHorizontal","fontSize","itemHeight","dividerColor","vars","groupTextColorInverted","colorInverted","itemTextColorInverted","itemTextColorHoverInverted","itemTextColorActiveInverted","itemTextColorChildActiveInverted","itemTextColorActiveHoverInverted","itemIconColorInverted","itemIconColorHoverInverted","itemIconColorActiveInverted","itemIconColorActiveHoverInverted","itemIconColorChildActiveInverted","itemIconColorCollapsedInverted","itemTextColorHorizontalInverted","itemTextColorHoverHorizontalInverted","itemTextColorActiveHorizontalInverted","itemTextColorChildActiveHorizontalInverted","itemTextColorActiveHoverHorizontalInverted","itemIconColorHorizontalInverted","itemIconColorHoverHorizontalInverted","itemIconColorActiveHorizontalInverted","itemIconColorActiveHoverHorizontalInverted","itemIconColorChildActiveHorizontalInverted","arrowColorInverted","arrowColorHoverInverted","arrowColorActiveInverted","arrowColorActiveHoverInverted","arrowColorChildActiveInverted","itemColorHoverInverted","itemColorActiveInverted","itemColorActiveHoverInverted","itemColorActiveCollapsedInverted","groupTextColor","color","itemTextColor","itemTextColorHover","itemTextColorActive","itemTextColorChildActive","itemTextColorActiveHover","itemIconColor","itemIconColorHover","itemIconColorActive","itemIconColorActiveHover","itemIconColorChildActive","itemIconColorCollapsed","itemTextColorHorizontal","itemTextColorHoverHorizontal","itemTextColorActiveHorizontal","itemTextColorChildActiveHorizontal","itemTextColorActiveHoverHorizontal","itemIconColorHorizontal","itemIconColorHoverHorizontal","itemIconColorActiveHorizontal","itemIconColorActiveHoverHorizontal","itemIconColorChildActiveHorizontal","arrowColor","arrowColorHover","arrowColorActive","arrowColorActiveHover","arrowColorChildActive","itemColorHover","itemColorActive","itemColorActiveHover","itemColorActiveCollapsed","themeClassHandle","mergedClsPrefix","controlledExpandedKeys","uncontrolledExpanededKeys","mergedExpandedKeys","uncontrolledValue","mergedValue","activePath","tmNodes","mergedTheme","mergedCollapsed","cssVars","themeClass","onRender","render","role","class","tmNode","$props"],"mappings":"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","sourcesContent":["import { h, ref, toRef, computed, defineComponent, provide, inject, watchEffect } from 'vue';\nimport { createTreeMate } from 'treemate';\nimport { useCompitable, useMergedState } from 'vooks';\nimport { useConfig, useTheme, useThemeClass } from '../../_mixins';\nimport { call } from '../../_utils';\nimport { itemRenderer } from './utils';\nimport { menuLight } from '../styles';\nimport style from './styles/index.cssr';\nimport { layoutSiderInjectionKey } from '../../layout/src/interface';\nimport { useCheckDeprecated } from './useCheckDeprecated';\nimport { menuInjectionKey } from './context';\nconst menuProps = Object.assign(Object.assign({}, useTheme.props), { options: {\n        type: Array,\n        default: () => []\n    }, collapsed: {\n        type: Boolean,\n        default: undefined\n    }, collapsedWidth: {\n        type: Number,\n        default: 48\n    }, iconSize: {\n        type: Number,\n        default: 20\n    }, collapsedIconSize: {\n        type: Number,\n        default: 24\n    }, rootIndent: Number, indent: {\n        type: Number,\n        default: 32\n    }, labelField: {\n        type: String,\n        default: 'label'\n    }, keyField: {\n        type: String,\n        default: 'key'\n    }, childrenField: {\n        type: String,\n        default: 'children'\n    }, defaultExpandAll: Boolean, defaultExpandedKeys: Array, expandedKeys: Array, value: [String, Number], defaultValue: {\n        type: [String, Number],\n        default: null\n    }, mode: {\n        type: String,\n        default: 'vertical'\n    }, watchProps: {\n        type: Array,\n        default: undefined\n    }, disabled: Boolean, inverted: Boolean, 'onUpdate:expandedKeys': [Function, Array], onUpdateExpandedKeys: [Function, Array], onUpdateValue: [Function, Array], 'onUpdate:value': [Function, Array], expandIcon: Function, renderIcon: Function, renderLabel: Function, renderExtra: Function, \n    /** TODO: deprecate it */\n    dropdownPlacement: {\n        type: String,\n        default: 'bottom'\n    }, dropdownProps: Object, accordion: Boolean, \n    // deprecated\n    items: Array, onOpenNamesChange: [Function, Array], onSelect: [Function, Array], onExpandedNamesChange: [Function, Array], expandedNames: Array, defaultExpandedNames: Array });\nexport default defineComponent({\n    name: 'Menu',\n    props: menuProps,\n    setup(props) {\n        if (process.env.NODE_ENV !== 'production') {\n            useCheckDeprecated(props);\n        }\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Menu', '-menu', style, menuLight, props, mergedClsPrefixRef);\n        const layoutSider = inject(layoutSiderInjectionKey, null);\n        const mergedCollapsedRef = computed(() => {\n            var _a;\n            const { collapsed } = props;\n            if (collapsed !== undefined)\n                return collapsed;\n            if (layoutSider) {\n                const { collapseModeRef, collapsedRef } = layoutSider;\n                if (collapseModeRef.value === 'width') {\n                    return (_a = collapsedRef.value) !== null && _a !== void 0 ? _a : false;\n                }\n            }\n            return false;\n        });\n        const treeMateRef = computed(() => {\n            const { keyField, childrenField } = props;\n            return createTreeMate(props.items || props.options, {\n                getChildren(node) {\n                    return node[childrenField];\n                },\n                getKey(node) {\n                    var _a;\n                    return (_a = node[keyField]) !== null && _a !== void 0 ? _a : node.name;\n                }\n            });\n        });\n        const treeKeysLevelOneRef = computed(() => new Set(treeMateRef.value.treeNodes.map((e) => e.key)));\n        const { watchProps } = props;\n        const uncontrolledValueRef = ref(null);\n        if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultValue')) {\n            watchEffect(() => {\n                uncontrolledValueRef.value = props.defaultValue;\n            });\n        }\n        else {\n            uncontrolledValueRef.value = props.defaultValue;\n        }\n        const controlledValueRef = toRef(props, 'value');\n        const mergedValueRef = useMergedState(controlledValueRef, uncontrolledValueRef);\n        const uncontrolledExpandedKeysRef = ref([]);\n        const initUncontrolledExpandedKeys = () => {\n            uncontrolledExpandedKeysRef.value = props.defaultExpandAll\n                ? treeMateRef.value.getNonLeafKeys()\n                : props.defaultExpandedNames ||\n                    props.defaultExpandedKeys ||\n                    treeMateRef.value.getPath(mergedValueRef.value, {\n                        includeSelf: false\n                    }).keyPath;\n        };\n        if (watchProps === null || watchProps === void 0 ? void 0 : watchProps.includes('defaultExpandedKeys')) {\n            watchEffect(initUncontrolledExpandedKeys);\n        }\n        else {\n            initUncontrolledExpandedKeys();\n        }\n        const controlledExpandedKeysRef = useCompitable(props, [\n            'expandedNames',\n            'expandedKeys'\n        ]);\n        const mergedExpandedKeysRef = useMergedState(controlledExpandedKeysRef, uncontrolledExpandedKeysRef);\n        const tmNodesRef = computed(() => treeMateRef.value.treeNodes);\n        const activePathRef = computed(() => {\n            return treeMateRef.value.getPath(mergedValueRef.value).keyPath;\n        });\n        provide(menuInjectionKey, {\n            props,\n            mergedCollapsedRef,\n            mergedThemeRef: themeRef,\n            mergedValueRef,\n            mergedExpandedKeysRef,\n            activePathRef,\n            mergedClsPrefixRef,\n            isHorizontalRef: computed(() => props.mode === 'horizontal'),\n            invertedRef: toRef(props, 'inverted'),\n            doSelect,\n            toggleExpand\n        });\n        function doSelect(value, item) {\n            const { 'onUpdate:value': _onUpdateValue, onUpdateValue, onSelect } = props;\n            if (onUpdateValue) {\n                call(onUpdateValue, value, item);\n            }\n            if (_onUpdateValue) {\n                call(_onUpdateValue, value, item);\n            }\n            if (onSelect) {\n                call(onSelect, value, item);\n            }\n            uncontrolledValueRef.value = value;\n        }\n        function doUpdateExpandedKeys(value) {\n            const { 'onUpdate:expandedKeys': _onUpdateExpandedKeys, onUpdateExpandedKeys, onExpandedNamesChange, onOpenNamesChange } = props;\n            if (_onUpdateExpandedKeys) {\n                call(_onUpdateExpandedKeys, value);\n            }\n            if (onUpdateExpandedKeys) {\n                call(onUpdateExpandedKeys, value);\n            }\n            // deprecated\n            if (onExpandedNamesChange) {\n                call(onExpandedNamesChange, value);\n            }\n            if (onOpenNamesChange) {\n                call(onOpenNamesChange, value);\n            }\n            uncontrolledExpandedKeysRef.value = value;\n        }\n        function toggleExpand(key) {\n            const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n            const index = currentExpandedKeys.findIndex((expanededKey) => expanededKey === key);\n            if (~index) {\n                currentExpandedKeys.splice(index, 1);\n            }\n            else {\n                if (props.accordion) {\n                    if (treeKeysLevelOneRef.value.has(key)) {\n                        const closeKeyIndex = currentExpandedKeys.findIndex((e) => treeKeysLevelOneRef.value.has(e));\n                        if (closeKeyIndex > -1) {\n                            currentExpandedKeys.splice(closeKeyIndex, 1);\n                        }\n                    }\n                }\n                currentExpandedKeys.push(key);\n            }\n            doUpdateExpandedKeys(currentExpandedKeys);\n        }\n        const showOption = (key) => {\n            const selectedKeyPath = treeMateRef.value.getPath(key !== null && key !== void 0 ? key : mergedValueRef.value, {\n                includeSelf: false\n            }).keyPath;\n            if (!selectedKeyPath.length)\n                return;\n            const currentExpandedKeys = Array.from(mergedExpandedKeysRef.value);\n            const nextExpandedKeys = new Set([\n                ...currentExpandedKeys,\n                ...selectedKeyPath\n            ]);\n            if (props.accordion) {\n                treeKeysLevelOneRef.value.forEach((firstLevelKey) => {\n                    if (nextExpandedKeys.has(firstLevelKey) &&\n                        !selectedKeyPath.includes(firstLevelKey)) {\n                        nextExpandedKeys.delete(firstLevelKey);\n                    }\n                });\n            }\n            doUpdateExpandedKeys(Array.from(nextExpandedKeys));\n        };\n        const cssVarsRef = computed(() => {\n            const { inverted } = props;\n            const { common: { cubicBezierEaseInOut }, self } = themeRef.value;\n            const { borderRadius, borderColorHorizontal, fontSize, itemHeight, dividerColor } = self;\n            const vars = {\n                '--n-divider-color': dividerColor,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-font-size': fontSize,\n                '--n-border-color-horizontal': borderColorHorizontal,\n                '--n-border-radius': borderRadius,\n                '--n-item-height': itemHeight\n            };\n            if (inverted) {\n                vars['--n-group-text-color'] = self.groupTextColorInverted;\n                vars['--n-color'] = self.colorInverted;\n                vars['--n-item-text-color'] = self.itemTextColorInverted;\n                vars['--n-item-text-color-hover'] = self.itemTextColorHoverInverted;\n                vars['--n-item-text-color-active'] = self.itemTextColorActiveInverted;\n                vars['--n-item-text-color-child-active'] =\n                    self.itemTextColorChildActiveInverted;\n                vars['--n-item-text-color-active-hover'] =\n                    self.itemTextColorActiveHoverInverted;\n                vars['--n-item-icon-color'] = self.itemIconColorInverted;\n                vars['--n-item-icon-color-hover'] = self.itemIconColorHoverInverted;\n                vars['--n-item-icon-color-active'] = self.itemIconColorActiveInverted;\n                vars['--n-item-icon-color-active-hover'] =\n                    self.itemIconColorActiveHoverInverted;\n                vars['--n-item-icon-color-child-active'] =\n                    self.itemIconColorChildActiveInverted;\n                vars['--n-item-icon-color-collapsed'] =\n                    self.itemIconColorCollapsedInverted;\n                vars['--n-item-text-color-horizontal'] =\n                    self.itemTextColorHorizontalInverted;\n                vars['--n-item-text-color-hover-horizontal'] =\n                    self.itemTextColorHoverHorizontalInverted;\n                vars['--n-item-text-color-active-horizontal'] =\n                    self.itemTextColorActiveHorizontalInverted;\n                vars['--n-item-text-color-child-active-horizontal'] =\n                    self.itemTextColorChildActiveHorizontalInverted;\n                vars['--n-item-text-color-active-hover-horizontal'] =\n                    self.itemTextColorActiveHoverHorizontalInverted;\n                vars['--n-item-icon-color-horizontal'] =\n                    self.itemIconColorHorizontalInverted;\n                vars['--n-item-icon-color-hover-horizontal'] =\n                    self.itemIconColorHoverHorizontalInverted;\n                vars['--n-item-icon-color-active-horizontal'] =\n                    self.itemIconColorActiveHorizontalInverted;\n                vars['--n-item-icon-color-active-hover-horizontal'] =\n                    self.itemIconColorActiveHoverHorizontalInverted;\n                vars['--n-item-icon-color-child-active-horizontal'] =\n                    self.itemIconColorChildActiveHorizontalInverted;\n                vars['--n-arrow-color'] = self.arrowColorInverted;\n                vars['--n-arrow-color-hover'] = self.arrowColorHoverInverted;\n                vars['--n-arrow-color-active'] = self.arrowColorActiveInverted;\n                vars['--n-arrow-color-active-hover'] =\n                    self.arrowColorActiveHoverInverted;\n                vars['--n-arrow-color-child-active'] =\n                    self.arrowColorChildActiveInverted;\n                vars['--n-item-color-hover'] = self.itemColorHoverInverted;\n                vars['--n-item-color-active'] = self.itemColorActiveInverted;\n                vars['--n-item-color-active-hover'] = self.itemColorActiveHoverInverted;\n                vars['--n-item-color-active-collapsed'] =\n                    self.itemColorActiveCollapsedInverted;\n            }\n            else {\n                vars['--n-group-text-color'] = self.groupTextColor;\n                vars['--n-color'] = self.color;\n                vars['--n-item-text-color'] = self.itemTextColor;\n                vars['--n-item-text-color-hover'] = self.itemTextColorHover;\n                vars['--n-item-text-color-active'] = self.itemTextColorActive;\n                vars['--n-item-text-color-child-active'] = self.itemTextColorChildActive;\n                vars['--n-item-text-color-active-hover'] = self.itemTextColorActiveHover;\n                vars['--n-item-icon-color'] = self.itemIconColor;\n                vars['--n-item-icon-color-hover'] = self.itemIconColorHover;\n                vars['--n-item-icon-color-active'] = self.itemIconColorActive;\n                vars['--n-item-icon-color-active-hover'] = self.itemIconColorActiveHover;\n                vars['--n-item-icon-color-child-active'] = self.itemIconColorChildActive;\n                vars['--n-item-icon-color-collapsed'] = self.itemIconColorCollapsed;\n                vars['--n-item-text-color-horizontal'] = self.itemTextColorHorizontal;\n                vars['--n-item-text-color-hover-horizontal'] =\n                    self.itemTextColorHoverHorizontal;\n                vars['--n-item-text-color-active-horizontal'] =\n                    self.itemTextColorActiveHorizontal;\n                vars['--n-item-text-color-child-active-horizontal'] =\n                    self.itemTextColorChildActiveHorizontal;\n                vars['--n-item-text-color-active-hover-horizontal'] =\n                    self.itemTextColorActiveHoverHorizontal;\n                vars['--n-item-icon-color-horizontal'] = self.itemIconColorHorizontal;\n                vars['--n-item-icon-color-hover-horizontal'] =\n                    self.itemIconColorHoverHorizontal;\n                vars['--n-item-icon-color-active-horizontal'] =\n                    self.itemIconColorActiveHorizontal;\n                vars['--n-item-icon-color-active-hover-horizontal'] =\n                    self.itemIconColorActiveHoverHorizontal;\n                vars['--n-item-icon-color-child-active-horizontal'] =\n                    self.itemIconColorChildActiveHorizontal;\n                vars['--n-arrow-color'] = self.arrowColor;\n                vars['--n-arrow-color-hover'] = self.arrowColorHover;\n                vars['--n-arrow-color-active'] = self.arrowColorActive;\n                vars['--n-arrow-color-active-hover'] = self.arrowColorActiveHover;\n                vars['--n-arrow-color-child-active'] = self.arrowColorChildActive;\n                vars['--n-item-color-hover'] = self.itemColorHover;\n                vars['--n-item-color-active'] = self.itemColorActive;\n                vars['--n-item-color-active-hover'] = self.itemColorActiveHover;\n                vars['--n-item-color-active-collapsed'] = self.itemColorActiveCollapsed;\n            }\n            return vars;\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('menu', computed(() => (props.inverted ? 'a' : 'b')), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            controlledExpandedKeys: controlledExpandedKeysRef,\n            uncontrolledExpanededKeys: uncontrolledExpandedKeysRef,\n            mergedExpandedKeys: mergedExpandedKeysRef,\n            uncontrolledValue: uncontrolledValueRef,\n            mergedValue: mergedValueRef,\n            activePath: activePathRef,\n            tmNodes: tmNodesRef,\n            mergedTheme: themeRef,\n            mergedCollapsed: mergedCollapsedRef,\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender,\n            showOption\n        };\n    },\n    render() {\n        const { mergedClsPrefix, mode, themeClass, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { role: mode === 'horizontal' ? 'menubar' : 'menu', class: [\n                `${mergedClsPrefix}-menu`,\n                themeClass,\n                `${mergedClsPrefix}-menu--${mode}`,\n                this.mergedCollapsed && `${mergedClsPrefix}-menu--collapsed`\n            ], style: this.cssVars }, this.tmNodes.map((tmNode) => itemRenderer(tmNode, this.$props))));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}