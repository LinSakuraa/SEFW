{"ast":null,"code":"import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { warnOnce } from '../../_utils';\nimport { watermarkLight } from '../styles';\nimport style from './styles/index.cssr';\n\nfunction getRatio(context) {\n  if (!context) {\n    return 1;\n  }\n\n  const backingStore = context.backingStorePixelRatio || context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio || context.backingStorePixelRatio || 1;\n  return (window.devicePixelRatio || 1) / backingStore;\n}\n\nconst watermarkProps = Object.assign(Object.assign({}, useTheme.props), {\n  debug: Boolean,\n  cross: Boolean,\n  fullscreen: Boolean,\n  width: {\n    type: Number,\n    default: 32\n  },\n  height: {\n    type: Number,\n    default: 32\n  },\n  zIndex: {\n    type: Number,\n    default: 10\n  },\n  xGap: {\n    type: Number,\n    default: 0\n  },\n  yGap: {\n    type: Number,\n    default: 0\n  },\n  yOffset: {\n    type: Number,\n    default: 0\n  },\n  xOffset: {\n    type: Number,\n    default: 0\n  },\n  rotate: {\n    type: Number,\n    default: 0\n  },\n  image: String,\n  imageOpacity: {\n    type: Number,\n    default: 1\n  },\n  imageHeight: Number,\n  imageWidth: Number,\n  content: String,\n  selectable: {\n    type: Boolean,\n    default: true\n  },\n  fontSize: {\n    type: Number,\n    default: 14\n  },\n  fontFamily: String,\n  fontStyle: {\n    type: String,\n    default: 'normal'\n  },\n  fontVariant: {\n    type: String,\n    default: ''\n  },\n  fontWeight: {\n    type: Number,\n    default: 400\n  },\n  fontColor: {\n    type: String,\n    default: 'rgba(128, 128, 128, .3)'\n  },\n  fontStretch: {\n    type: String,\n    default: ''\n  },\n  lineHeight: {\n    type: Number,\n    default: 14\n  }\n});\nexport default defineComponent({\n  name: 'Watermark',\n  props: watermarkProps,\n\n  setup(props, {\n    slots\n  }) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props);\n    const base64UrlRef = ref('');\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const fontsReadyRef = ref(false);\n    onFontsReady(() => fontsReadyRef.value = true);\n    watchEffect(() => {\n      void fontsReadyRef.value;\n      const ratio = getRatio(ctx);\n      const {\n        xGap,\n        yGap,\n        width,\n        height,\n        yOffset,\n        xOffset,\n        rotate,\n        image,\n        content,\n        fontColor,\n        fontStyle,\n        fontVariant,\n        fontStretch,\n        fontWeight,\n        fontFamily,\n        fontSize,\n        lineHeight,\n        debug\n      } = props;\n      const canvasWidth = (xGap + width) * ratio;\n      const canvasHeight = (yGap + height) * ratio;\n      const canvasOffsetLeft = xOffset * ratio;\n      const canvasOffsetTop = yOffset * ratio;\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n\n      if (ctx) {\n        ctx.translate(0, 0);\n        const markWidth = width * ratio;\n        const markHeight = height * ratio;\n\n        if (debug) {\n          ctx.strokeStyle = 'grey';\n          ctx.strokeRect(0, 0, markWidth, markHeight);\n        }\n\n        ctx.rotate(rotate * (Math.PI / 180));\n\n        if (image) {\n          const img = new Image();\n          img.crossOrigin = 'anonymous';\n          img.referrerPolicy = 'no-referrer';\n          img.src = image;\n\n          img.onload = () => {\n            ctx.globalAlpha = props.imageOpacity;\n            const {\n              imageWidth,\n              imageHeight\n            } = props;\n            ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth || (imageHeight ? img.width * imageHeight / img.height : img.width)) * ratio, (props.imageHeight || (imageWidth ? img.height * imageWidth / img.width : img.height)) * ratio);\n            base64UrlRef.value = canvas.toDataURL();\n          };\n        } else if (content) {\n          if (debug) {\n            ctx.strokeStyle = 'green';\n            ctx.strokeRect(0, 0, markWidth, markHeight);\n          }\n\n          ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n          ctx.fillStyle = fontColor;\n          ctx.fillText(content, canvasOffsetLeft, canvasOffsetTop + lineHeight * ratio);\n          base64UrlRef.value = canvas.toDataURL();\n        }\n      } else {\n        warnOnce('watermark', 'Canvas is not supported in the browser.');\n      }\n    });\n    return () => {\n      var _a;\n\n      const watarmarkNode = h(\"div\", {\n        class: [`${mergedClsPrefixRef.value}-watermark`, props.fullscreen && `${mergedClsPrefixRef.value}-watermark--fullscreen`],\n        style: {\n          zIndex: props.zIndex,\n          backgroundSize: `${props.xGap + props.width}px`,\n          backgroundPosition: props.cross ? `${props.width / 2}px ${props.height / 2}px, 0 0` : '',\n          backgroundImage: props.cross ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})` : `url(${base64UrlRef.value})`\n        }\n      });\n      if (props.fullscreen) return watarmarkNode;\n      return h(\"div\", {\n        class: [`${mergedClsPrefixRef.value}-watermark-container`, props.selectable && `${mergedClsPrefixRef.value}-watermark-container--selectable`]\n      }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots), watarmarkNode);\n    };\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/watermark/src/Watermark.js"],"names":["h","defineComponent","ref","watchEffect","onFontsReady","useConfig","useTheme","warnOnce","watermarkLight","style","getRatio","context","backingStore","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","window","devicePixelRatio","watermarkProps","Object","assign","props","debug","Boolean","cross","fullscreen","width","type","Number","default","height","zIndex","xGap","yGap","yOffset","xOffset","rotate","image","String","imageOpacity","imageHeight","imageWidth","content","selectable","fontSize","fontFamily","fontStyle","fontVariant","fontWeight","fontColor","fontStretch","lineHeight","name","setup","slots","mergedClsPrefixRef","themeRef","base64UrlRef","canvas","document","createElement","ctx","getContext","fontsReadyRef","value","ratio","canvasWidth","canvasHeight","canvasOffsetLeft","canvasOffsetTop","translate","markWidth","markHeight","strokeStyle","strokeRect","Math","PI","img","Image","crossOrigin","referrerPolicy","src","onload","globalAlpha","drawImage","toDataURL","font","self","fillStyle","fillText","_a","watarmarkNode","class","backgroundSize","backgroundPosition","backgroundImage","call"],"mappings":"AAAA,SAASA,CAAT,EAAYC,eAAZ,EAA6BC,GAA7B,EAAkCC,WAAlC,QAAqD,KAArD;AACA,SAASC,YAAT,QAA6B,OAA7B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,eAApC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AACA,SAASC,QAAT,CAAkBC,OAAlB,EAA2B;AACvB,MAAI,CAACA,OAAL,EAAc;AACV,WAAO,CAAP;AACH;;AACD,QAAMC,YAAY,GAAGD,OAAO,CAACE,sBAAR,IACjBF,OAAO,CAACG,4BADS,IAEjBH,OAAO,CAACI,yBAFS,IAGjBJ,OAAO,CAACK,wBAHS,IAIjBL,OAAO,CAACM,uBAJS,IAKjBN,OAAO,CAACE,sBALS,IAMjB,CANJ;AAOA,SAAO,CAACK,MAAM,CAACC,gBAAP,IAA2B,CAA5B,IAAiCP,YAAxC;AACH;;AACD,MAAMQ,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,QAAQ,CAACiB,KAA3B,CAAd,EAAiD;AAAEC,EAAAA,KAAK,EAAEC,OAAT;AAAkBC,EAAAA,KAAK,EAAED,OAAzB;AAAkCE,EAAAA,UAAU,EAAEF,OAA9C;AAAuDG,EAAAA,KAAK,EAAE;AAC9HC,IAAAA,IAAI,EAAEC,MADwH;AAE9HC,IAAAA,OAAO,EAAE;AAFqH,GAA9D;AAGjEC,EAAAA,MAAM,EAAE;AACPH,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GAHyD;AAMjEE,EAAAA,MAAM,EAAE;AACPJ,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GANyD;AASjEG,EAAAA,IAAI,EAAE;AACLL,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAT2D;AAYjEI,EAAAA,IAAI,EAAE;AACLN,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAZ2D;AAejEK,EAAAA,OAAO,EAAE;AACRP,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,OAAO,EAAE;AAFD,GAfwD;AAkBjEM,EAAAA,OAAO,EAAE;AACRR,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,OAAO,EAAE;AAFD,GAlBwD;AAqBjEO,EAAAA,MAAM,EAAE;AACPT,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GArByD;AAwBjEQ,EAAAA,KAAK,EAAEC,MAxB0D;AAwBlDC,EAAAA,YAAY,EAAE;AAAEZ,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,OAAO,EAAE;AAAzB,GAxBoC;AAwBNW,EAAAA,WAAW,EAAEZ,MAxBP;AAwBea,EAAAA,UAAU,EAAEb,MAxB3B;AAwBmCc,EAAAA,OAAO,EAAEJ,MAxB5C;AAwBoDK,EAAAA,UAAU,EAAE;AAChIhB,IAAAA,IAAI,EAAEJ,OAD0H;AAEhIM,IAAAA,OAAO,EAAE;AAFuH,GAxBhE;AA2BjEe,EAAAA,QAAQ,EAAE;AACTjB,IAAAA,IAAI,EAAEC,MADG;AAETC,IAAAA,OAAO,EAAE;AAFA,GA3BuD;AA8BjEgB,EAAAA,UAAU,EAAEP,MA9BqD;AA8B7CQ,EAAAA,SAAS,EAAE;AAC9BnB,IAAAA,IAAI,EAAEW,MADwB;AAE9BT,IAAAA,OAAO,EAAE;AAFqB,GA9BkC;AAiCjEkB,EAAAA,WAAW,EAAE;AACZpB,IAAAA,IAAI,EAAEW,MADM;AAEZT,IAAAA,OAAO,EAAE;AAFG,GAjCoD;AAoCjEmB,EAAAA,UAAU,EAAE;AACXrB,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,OAAO,EAAE;AAFE,GApCqD;AAuCjEoB,EAAAA,SAAS,EAAE;AACVtB,IAAAA,IAAI,EAAEW,MADI;AAEVT,IAAAA,OAAO,EAAE;AAFC,GAvCsD;AA0CjEqB,EAAAA,WAAW,EAAE;AACZvB,IAAAA,IAAI,EAAEW,MADM;AAEZT,IAAAA,OAAO,EAAE;AAFG,GA1CoD;AA6CjEsB,EAAAA,UAAU,EAAE;AACXxB,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,OAAO,EAAE;AAFE;AA7CqD,CAAjD,CAAvB;AAiDA,eAAe9B,eAAe,CAAC;AAC3BqD,EAAAA,IAAI,EAAE,WADqB;AAE3B/B,EAAAA,KAAK,EAAEH,cAFoB;;AAG3BmC,EAAAA,KAAK,CAAChC,KAAD,EAAQ;AAAEiC,IAAAA;AAAF,GAAR,EAAmB;AACpB,UAAM;AAAEC,MAAAA;AAAF,QAAyBpD,SAAS,CAACkB,KAAD,CAAxC;AACA,UAAMmC,QAAQ,GAAGpD,QAAQ,CAAC,WAAD,EAAc,YAAd,EAA4BG,KAA5B,EAAmCD,cAAnC,EAAmDe,KAAnD,CAAzB;AACA,UAAMoC,YAAY,GAAGzD,GAAG,CAAC,EAAD,CAAxB;AACA,UAAM0D,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACA,UAAMC,GAAG,GAAGH,MAAM,CAACI,UAAP,CAAkB,IAAlB,CAAZ;AACA,UAAMC,aAAa,GAAG/D,GAAG,CAAC,KAAD,CAAzB;AACAE,IAAAA,YAAY,CAAC,MAAO6D,aAAa,CAACC,KAAd,GAAsB,IAA9B,CAAZ;AACA/D,IAAAA,WAAW,CAAC,MAAM;AACd,WAAK8D,aAAa,CAACC,KAAnB;AACA,YAAMC,KAAK,GAAGzD,QAAQ,CAACqD,GAAD,CAAtB;AACA,YAAM;AAAE7B,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcP,QAAAA,KAAd;AAAqBI,QAAAA,MAArB;AAA6BI,QAAAA,OAA7B;AAAsCC,QAAAA,OAAtC;AAA+CC,QAAAA,MAA/C;AAAuDC,QAAAA,KAAvD;AAA8DK,QAAAA,OAA9D;AAAuEO,QAAAA,SAAvE;AAAkFH,QAAAA,SAAlF;AAA6FC,QAAAA,WAA7F;AAA0GG,QAAAA,WAA1G;AAAuHF,QAAAA,UAAvH;AAAmIH,QAAAA,UAAnI;AAA+ID,QAAAA,QAA/I;AAAyJO,QAAAA,UAAzJ;AAAqK7B,QAAAA;AAArK,UAA+KD,KAArL;AACA,YAAM6C,WAAW,GAAG,CAAClC,IAAI,GAAGN,KAAR,IAAiBuC,KAArC;AACA,YAAME,YAAY,GAAG,CAAClC,IAAI,GAAGH,MAAR,IAAkBmC,KAAvC;AACA,YAAMG,gBAAgB,GAAGjC,OAAO,GAAG8B,KAAnC;AACA,YAAMI,eAAe,GAAGnC,OAAO,GAAG+B,KAAlC;AACAP,MAAAA,MAAM,CAAChC,KAAP,GAAewC,WAAf;AACAR,MAAAA,MAAM,CAAC5B,MAAP,GAAgBqC,YAAhB;;AACA,UAAIN,GAAJ,EAAS;AACLA,QAAAA,GAAG,CAACS,SAAJ,CAAc,CAAd,EAAiB,CAAjB;AACA,cAAMC,SAAS,GAAG7C,KAAK,GAAGuC,KAA1B;AACA,cAAMO,UAAU,GAAG1C,MAAM,GAAGmC,KAA5B;;AACA,YAAI3C,KAAJ,EAAW;AACPuC,UAAAA,GAAG,CAACY,WAAJ,GAAkB,MAAlB;AACAZ,UAAAA,GAAG,CAACa,UAAJ,CAAe,CAAf,EAAkB,CAAlB,EAAqBH,SAArB,EAAgCC,UAAhC;AACH;;AACDX,QAAAA,GAAG,CAACzB,MAAJ,CAAWA,MAAM,IAAIuC,IAAI,CAACC,EAAL,GAAU,GAAd,CAAjB;;AACA,YAAIvC,KAAJ,EAAW;AACP,gBAAMwC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,UAAAA,GAAG,CAACE,WAAJ,GAAkB,WAAlB;AACAF,UAAAA,GAAG,CAACG,cAAJ,GAAqB,aAArB;AACAH,UAAAA,GAAG,CAACI,GAAJ,GAAU5C,KAAV;;AACAwC,UAAAA,GAAG,CAACK,MAAJ,GAAa,MAAM;AACfrB,YAAAA,GAAG,CAACsB,WAAJ,GAAkB9D,KAAK,CAACkB,YAAxB;AACA,kBAAM;AAAEE,cAAAA,UAAF;AAAcD,cAAAA;AAAd,gBAA8BnB,KAApC;AACAwC,YAAAA,GAAG,CAACuB,SAAJ,CAAcP,GAAd,EAAmBT,gBAAnB,EAAqCC,eAArC,EAAsD,CAAChD,KAAK,CAACoB,UAAN,KAClDD,WAAW,GACLqC,GAAG,CAACnD,KAAJ,GAAYc,WAAb,GAA4BqC,GAAG,CAAC/C,MAD1B,GAEN+C,GAAG,CAACnD,KAHyC,CAAD,IAG9BuC,KAHxB,EAG+B,CAAC5C,KAAK,CAACmB,WAAN,KAC3BC,UAAU,GACJoC,GAAG,CAAC/C,MAAJ,GAAaW,UAAd,GAA4BoC,GAAG,CAACnD,KAD3B,GAELmD,GAAG,CAAC/C,MAHkB,CAAD,IAGNmC,KANzB;AAOAR,YAAAA,YAAY,CAACO,KAAb,GAAqBN,MAAM,CAAC2B,SAAP,EAArB;AACH,WAXD;AAYH,SAjBD,MAkBK,IAAI3C,OAAJ,EAAa;AACd,cAAIpB,KAAJ,EAAW;AACPuC,YAAAA,GAAG,CAACY,WAAJ,GAAkB,OAAlB;AACAZ,YAAAA,GAAG,CAACa,UAAJ,CAAe,CAAf,EAAkB,CAAlB,EAAqBH,SAArB,EAAgCC,UAAhC;AACH;;AACDX,UAAAA,GAAG,CAACyB,IAAJ,GAAY,GAAExC,SAAU,IAAGC,WAAY,IAAGC,UAAW,IAAGE,WAAY,IAAGN,QAAQ,GAAGqB,KAAM,MAAKd,UAAU,GAAGc,KAAM,MAAKpB,UAAU,IAAIW,QAAQ,CAACQ,KAAT,CAAeuB,IAAf,CAAoB1C,UAAW,EAAlK;AACAgB,UAAAA,GAAG,CAAC2B,SAAJ,GAAgBvC,SAAhB;AACAY,UAAAA,GAAG,CAAC4B,QAAJ,CAAa/C,OAAb,EAAsB0B,gBAAtB,EAAwCC,eAAe,GAAGlB,UAAU,GAAGc,KAAvE;AACAR,UAAAA,YAAY,CAACO,KAAb,GAAqBN,MAAM,CAAC2B,SAAP,EAArB;AACH;AACJ,OArCD,MAsCK;AACDhF,QAAAA,QAAQ,CAAC,WAAD,EAAc,yCAAd,CAAR;AACH;AACJ,KAnDU,CAAX;AAoDA,WAAO,MAAM;AACT,UAAIqF,EAAJ;;AACA,YAAMC,aAAa,GAAI7F,CAAC,CAAC,KAAD,EAAQ;AAAE8F,QAAAA,KAAK,EAAE,CAChC,GAAErC,kBAAkB,CAACS,KAAM,YADK,EAEjC3C,KAAK,CAACI,UAAN,IACK,GAAE8B,kBAAkB,CAACS,KAAM,wBAHC,CAAT;AAIzBzD,QAAAA,KAAK,EAAE;AACNwB,UAAAA,MAAM,EAAEV,KAAK,CAACU,MADR;AAEN8D,UAAAA,cAAc,EAAG,GAAExE,KAAK,CAACW,IAAN,GAAaX,KAAK,CAACK,KAAM,IAFtC;AAGNoE,UAAAA,kBAAkB,EAAEzE,KAAK,CAACG,KAAN,GACb,GAAEH,KAAK,CAACK,KAAN,GAAc,CAAE,MAAKL,KAAK,CAACS,MAAN,GAAe,CAAE,SAD3B,GAEd,EALA;AAMNiE,UAAAA,eAAe,EAAE1E,KAAK,CAACG,KAAN,GACV,OAAMiC,YAAY,CAACO,KAAM,UAASP,YAAY,CAACO,KAAM,GAD3C,GAEV,OAAMP,YAAY,CAACO,KAAM;AAR1B;AAJkB,OAAR,CAAxB;AAcA,UAAI3C,KAAK,CAACI,UAAV,EACI,OAAOkE,aAAP;AACJ,aAAQ7F,CAAC,CAAC,KAAD,EAAQ;AAAE8F,QAAAA,KAAK,EAAE,CACjB,GAAErC,kBAAkB,CAACS,KAAM,sBADV,EAElB3C,KAAK,CAACsB,UAAN,IACK,GAAEY,kBAAkB,CAACS,KAAM,kCAHd;AAAT,OAAR,EAIA,CAAC0B,EAAE,GAAGpC,KAAK,CAACzB,OAAZ,MAAyB,IAAzB,IAAiC6D,EAAE,KAAK,KAAK,CAA7C,GAAiD,KAAK,CAAtD,GACLA,EAAE,CAACM,IAAH,CAAQ1C,KAAR,CALK,EAMLqC,aANK,CAAT;AAOH,KAzBD;AA0BH;;AAzF0B,CAAD,CAA9B","sourcesContent":["import { h, defineComponent, ref, watchEffect } from 'vue';\nimport { onFontsReady } from 'vooks';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { warnOnce } from '../../_utils';\nimport { watermarkLight } from '../styles';\nimport style from './styles/index.cssr';\nfunction getRatio(context) {\n    if (!context) {\n        return 1;\n    }\n    const backingStore = context.backingStorePixelRatio ||\n        context.webkitBackingStorePixelRatio ||\n        context.mozBackingStorePixelRatio ||\n        context.msBackingStorePixelRatio ||\n        context.oBackingStorePixelRatio ||\n        context.backingStorePixelRatio ||\n        1;\n    return (window.devicePixelRatio || 1) / backingStore;\n}\nconst watermarkProps = Object.assign(Object.assign({}, useTheme.props), { debug: Boolean, cross: Boolean, fullscreen: Boolean, width: {\n        type: Number,\n        default: 32\n    }, height: {\n        type: Number,\n        default: 32\n    }, zIndex: {\n        type: Number,\n        default: 10\n    }, xGap: {\n        type: Number,\n        default: 0\n    }, yGap: {\n        type: Number,\n        default: 0\n    }, yOffset: {\n        type: Number,\n        default: 0\n    }, xOffset: {\n        type: Number,\n        default: 0\n    }, rotate: {\n        type: Number,\n        default: 0\n    }, image: String, imageOpacity: { type: Number, default: 1 }, imageHeight: Number, imageWidth: Number, content: String, selectable: {\n        type: Boolean,\n        default: true\n    }, fontSize: {\n        type: Number,\n        default: 14\n    }, fontFamily: String, fontStyle: {\n        type: String,\n        default: 'normal'\n    }, fontVariant: {\n        type: String,\n        default: ''\n    }, fontWeight: {\n        type: Number,\n        default: 400\n    }, fontColor: {\n        type: String,\n        default: 'rgba(128, 128, 128, .3)'\n    }, fontStretch: {\n        type: String,\n        default: ''\n    }, lineHeight: {\n        type: Number,\n        default: 14\n    } });\nexport default defineComponent({\n    name: 'Watermark',\n    props: watermarkProps,\n    setup(props, { slots }) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const themeRef = useTheme('Watermark', '-watermark', style, watermarkLight, props);\n        const base64UrlRef = ref('');\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        const fontsReadyRef = ref(false);\n        onFontsReady(() => (fontsReadyRef.value = true));\n        watchEffect(() => {\n            void fontsReadyRef.value;\n            const ratio = getRatio(ctx);\n            const { xGap, yGap, width, height, yOffset, xOffset, rotate, image, content, fontColor, fontStyle, fontVariant, fontStretch, fontWeight, fontFamily, fontSize, lineHeight, debug } = props;\n            const canvasWidth = (xGap + width) * ratio;\n            const canvasHeight = (yGap + height) * ratio;\n            const canvasOffsetLeft = xOffset * ratio;\n            const canvasOffsetTop = yOffset * ratio;\n            canvas.width = canvasWidth;\n            canvas.height = canvasHeight;\n            if (ctx) {\n                ctx.translate(0, 0);\n                const markWidth = width * ratio;\n                const markHeight = height * ratio;\n                if (debug) {\n                    ctx.strokeStyle = 'grey';\n                    ctx.strokeRect(0, 0, markWidth, markHeight);\n                }\n                ctx.rotate(rotate * (Math.PI / 180));\n                if (image) {\n                    const img = new Image();\n                    img.crossOrigin = 'anonymous';\n                    img.referrerPolicy = 'no-referrer';\n                    img.src = image;\n                    img.onload = () => {\n                        ctx.globalAlpha = props.imageOpacity;\n                        const { imageWidth, imageHeight } = props;\n                        ctx.drawImage(img, canvasOffsetLeft, canvasOffsetTop, (props.imageWidth ||\n                            (imageHeight\n                                ? (img.width * imageHeight) / img.height\n                                : img.width)) * ratio, (props.imageHeight ||\n                            (imageWidth\n                                ? (img.height * imageWidth) / img.width\n                                : img.height)) * ratio);\n                        base64UrlRef.value = canvas.toDataURL();\n                    };\n                }\n                else if (content) {\n                    if (debug) {\n                        ctx.strokeStyle = 'green';\n                        ctx.strokeRect(0, 0, markWidth, markHeight);\n                    }\n                    ctx.font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontStretch} ${fontSize * ratio}px/${lineHeight * ratio}px ${fontFamily || themeRef.value.self.fontFamily}`;\n                    ctx.fillStyle = fontColor;\n                    ctx.fillText(content, canvasOffsetLeft, canvasOffsetTop + lineHeight * ratio);\n                    base64UrlRef.value = canvas.toDataURL();\n                }\n            }\n            else {\n                warnOnce('watermark', 'Canvas is not supported in the browser.');\n            }\n        });\n        return () => {\n            var _a;\n            const watarmarkNode = (h(\"div\", { class: [\n                    `${mergedClsPrefixRef.value}-watermark`,\n                    props.fullscreen &&\n                        `${mergedClsPrefixRef.value}-watermark--fullscreen`\n                ], style: {\n                    zIndex: props.zIndex,\n                    backgroundSize: `${props.xGap + props.width}px`,\n                    backgroundPosition: props.cross\n                        ? `${props.width / 2}px ${props.height / 2}px, 0 0`\n                        : '',\n                    backgroundImage: props.cross\n                        ? `url(${base64UrlRef.value}), url(${base64UrlRef.value})`\n                        : `url(${base64UrlRef.value})`\n                } }));\n            if (props.fullscreen)\n                return watarmarkNode;\n            return (h(\"div\", { class: [\n                    `${mergedClsPrefixRef.value}-watermark-container`,\n                    props.selectable &&\n                        `${mergedClsPrefixRef.value}-watermark-container--selectable`\n                ] }, (_a = slots.default) === null || _a === void 0 ? void 0 :\n                _a.call(slots),\n                watarmarkNode));\n        };\n    }\n});\n"]},"metadata":{},"sourceType":"module"}