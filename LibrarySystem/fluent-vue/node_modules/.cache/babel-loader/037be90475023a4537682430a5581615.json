{"ast":null,"code":"import { html, ref } from \"@microsoft/fast-element\";\n/**\n * A mixin class implementing start and end elements.\n * These are generally used to decorate text elements with icons or other visual indicators.\n * @public\n */\n\nexport class StartEnd {\n  handleStartContentChange() {\n    this.startContainer.classList.toggle(\"start\", this.start.assignedNodes().length > 0);\n  }\n\n  handleEndContentChange() {\n    this.endContainer.classList.toggle(\"end\", this.end.assignedNodes().length > 0);\n  }\n\n}\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n */\n\nexport const endSlotTemplate = (context, definition) => html`\n    <span\n        part=\"end\"\n        ${ref(\"endContainer\")}\n        class=${x => definition.end ? \"end\" : void 0}\n    >\n        <slot name=\"end\" ${ref(\"end\")} @slotchange=\"${x => x.handleEndContentChange()}\">\n            ${definition.end || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n */\n\nexport const startSlotTemplate = (context, definition) => html`\n    <span\n        part=\"start\"\n        ${ref(\"startContainer\")}\n        class=\"${x => definition.start ? \"start\" : void 0}\"\n    >\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        >\n            ${definition.start || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use endSlotTemplate\n */\n\nexport const endTemplate = html`\n    <span part=\"end\" ${ref(\"endContainer\")}>\n        <slot\n            name=\"end\"\n            ${ref(\"end\")}\n            @slotchange=\"${x => x.handleEndContentChange()}\"\n        ></slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use startSlotTemplate\n */\n\nexport const startTemplate = html`\n    <span part=\"start\" ${ref(\"startContainer\")}>\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        ></slot>\n    </span>\n`;","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/patterns/start-end.js"],"names":["html","ref","StartEnd","handleStartContentChange","startContainer","classList","toggle","start","assignedNodes","length","handleEndContentChange","endContainer","end","endSlotTemplate","context","definition","x","startSlotTemplate","endTemplate","startTemplate"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,yBAA1B;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,QAAN,CAAe;AAClBC,EAAAA,wBAAwB,GAAG;AACvB,SAAKC,cAAL,CAAoBC,SAApB,CAA8BC,MAA9B,CAAqC,OAArC,EAA8C,KAAKC,KAAL,CAAWC,aAAX,GAA2BC,MAA3B,GAAoC,CAAlF;AACH;;AACDC,EAAAA,sBAAsB,GAAG;AACrB,SAAKC,YAAL,CAAkBN,SAAlB,CAA4BC,MAA5B,CAAmC,KAAnC,EAA0C,KAAKM,GAAL,CAASJ,aAAT,GAAyBC,MAAzB,GAAkC,CAA5E;AACH;;AANiB;AAQtB;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMI,eAAe,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyBf,IAAM;AAC9D;AACA;AACA,UAAUC,GAAG,CAAC,cAAD,CAAiB;AAC9B,gBAAgBe,CAAC,IAAKD,UAAU,CAACH,GAAX,GAAiB,KAAjB,GAAyB,KAAK,CAAG;AACvD;AACA,2BAA2BX,GAAG,CAAC,KAAD,CAAQ,iBAAgBe,CAAC,IAAIA,CAAC,CAACN,sBAAF,EAA2B;AACtF,cAAcK,UAAU,CAACH,GAAX,IAAkB,EAAG;AACnC;AACA;AACA,CAVO;AAWP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMK,iBAAiB,GAAG,CAACH,OAAD,EAAUC,UAAV,KAAyBf,IAAM;AAChE;AACA;AACA,UAAUC,GAAG,CAAC,gBAAD,CAAmB;AAChC,iBAAiBe,CAAC,IAAKD,UAAU,CAACR,KAAX,GAAmB,OAAnB,GAA6B,KAAK,CAAG;AAC5D;AACA;AACA;AACA,cAAcN,GAAG,CAAC,OAAD,CAAU;AAC3B,2BAA2Be,CAAC,IAAIA,CAAC,CAACb,wBAAF,EAA6B;AAC7D;AACA,cAAcY,UAAU,CAACR,KAAX,IAAoB,EAAG;AACrC;AACA;AACA,CAdO;AAeP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMW,WAAW,GAAGlB,IAAM;AACjC,uBAAuBC,GAAG,CAAC,cAAD,CAAiB;AAC3C;AACA;AACA,cAAcA,GAAG,CAAC,KAAD,CAAQ;AACzB,2BAA2Be,CAAC,IAAIA,CAAC,CAACN,sBAAF,EAA2B;AAC3D;AACA;AACA,CARO;AASP;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMS,aAAa,GAAGnB,IAAM;AACnC,yBAAyBC,GAAG,CAAC,gBAAD,CAAmB;AAC/C;AACA;AACA,cAAcA,GAAG,CAAC,OAAD,CAAU;AAC3B,2BAA2Be,CAAC,IAAIA,CAAC,CAACb,wBAAF,EAA6B;AAC7D;AACA;AACA,CARO","sourcesContent":["import { html, ref } from \"@microsoft/fast-element\";\n/**\n * A mixin class implementing start and end elements.\n * These are generally used to decorate text elements with icons or other visual indicators.\n * @public\n */\nexport class StartEnd {\n    handleStartContentChange() {\n        this.startContainer.classList.toggle(\"start\", this.start.assignedNodes().length > 0);\n    }\n    handleEndContentChange() {\n        this.endContainer.classList.toggle(\"end\", this.end.assignedNodes().length > 0);\n    }\n}\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const endSlotTemplate = (context, definition) => html `\n    <span\n        part=\"end\"\n        ${ref(\"endContainer\")}\n        class=${x => (definition.end ? \"end\" : void 0)}\n    >\n        <slot name=\"end\" ${ref(\"end\")} @slotchange=\"${x => x.handleEndContentChange()}\">\n            ${definition.end || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n */\nexport const startSlotTemplate = (context, definition) => html `\n    <span\n        part=\"start\"\n        ${ref(\"startContainer\")}\n        class=\"${x => (definition.start ? \"start\" : void 0)}\"\n    >\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        >\n            ${definition.start || \"\"}\n        </slot>\n    </span>\n`;\n/**\n * The template for the end element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use endSlotTemplate\n */\nexport const endTemplate = html `\n    <span part=\"end\" ${ref(\"endContainer\")}>\n        <slot\n            name=\"end\"\n            ${ref(\"end\")}\n            @slotchange=\"${x => x.handleEndContentChange()}\"\n        ></slot>\n    </span>\n`;\n/**\n * The template for the start element.\n * For use with {@link StartEnd}\n *\n * @public\n * @deprecated - use startSlotTemplate\n */\nexport const startTemplate = html `\n    <span part=\"start\" ${ref(\"startContainer\")}>\n        <slot\n            name=\"start\"\n            ${ref(\"start\")}\n            @slotchange=\"${x => x.handleStartContentChange()}\"\n        ></slot>\n    </span>\n`;\n"]},"metadata":{},"sourceType":"module"}