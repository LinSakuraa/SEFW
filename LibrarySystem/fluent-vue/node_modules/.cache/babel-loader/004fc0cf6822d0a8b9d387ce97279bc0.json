{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { designUnit, fillColor, focusStrokeWidth, neutralStrokeFocus, strokeWidth } from '../design-tokens';\nexport const toolbarStyles = (context, definition) => css`\n    ${display('inline-flex')} :host {\n      --toolbar-item-gap: calc(${designUnit} * 1px);\n      background: ${fillColor};\n      fill: currentcolor;\n      padding: var(--toolbar-item-gap);\n      box-sizing: border-box;\n      align-items: center;\n    }\n\n    :host(${focusVisible}) {\n      outline: calc(${strokeWidth} * 1px) solid ${neutralStrokeFocus};\n    }\n\n    .positioning-region {\n      align-items: center;\n      display: inline-flex;\n      flex-flow: row wrap;\n      justify-content: flex-start;\n      flex-grow: 1;\n    }\n\n    :host([orientation='vertical']) .positioning-region {\n      flex-direction: column;\n      align-items: start;\n    }\n\n    ::slotted(:not([slot])) {\n      flex: 0 0 auto;\n      margin: 0 var(--toolbar-item-gap);\n    }\n\n    :host([orientation='vertical']) ::slotted(:not([slot])) {\n      margin: var(--toolbar-item-gap) 0;\n    }\n\n    :host([orientation='vertical']) {\n      display: inline-flex;\n      flex-direction: column;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      align-items: center;\n    }\n\n    .end {\n      margin-inline-start: auto;\n    }\n\n    .start__hidden,\n    .end__hidden {\n      display: none;\n    }\n\n    ::slotted(svg) {\n      ${\n/* Glyph size is temporary - replace when adaptive typography is figured out */\n''}\n      width: 16px;\n      height: 16px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host(:${focusVisible}) {\n          box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${SystemColors.Highlight};\n          color: ${SystemColors.ButtonText};\n          forced-color-adjust: none;\n        }\n      `));","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/toolbar/toolbar.styles.js"],"names":["css","display","focusVisible","forcedColorsStylesheetBehavior","SystemColors","designUnit","fillColor","focusStrokeWidth","neutralStrokeFocus","strokeWidth","toolbarStyles","context","definition","withBehaviors","Highlight","ButtonText"],"mappings":"AAAA,SAASA,GAAT,QAAoB,yBAApB;AACA,SAASC,OAAT,EAAkBC,YAAlB,EAAgCC,8BAAhC,QAAuE,4BAAvE;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,gBAAhC,EAAkDC,kBAAlD,EAAsEC,WAAtE,QAAyF,kBAAzF;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,OAAD,EAAUC,UAAV,KAAyBZ,GAAK;AAC3D,MAAMC,OAAO,CAAC,aAAD,CAAgB;AAC7B,iCAAiCI,UAAW;AAC5C,oBAAoBC,SAAU;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,YAAYJ,YAAa;AACzB,sBAAsBO,WAAY,iBAAgBD,kBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAS;AAA+E,EAAG;AAC3F;AACA;AACA;AACA,GA7DsD,CA6DlDK,aA7DkD,CA6DpCV,8BAA8B,CAACH,GAAK;AACtD,iBAAiBE,YAAa;AAC9B,mCAAmCK,gBAAiB,WAAUH,YAAY,CAACU,SAAU;AACrF,mBAAmBV,YAAY,CAACW,UAAW;AAC3C;AACA;AACA,OANgD,CA7DM,CAA/C","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { designUnit, fillColor, focusStrokeWidth, neutralStrokeFocus, strokeWidth } from '../design-tokens';\nexport const toolbarStyles = (context, definition) => css `\n    ${display('inline-flex')} :host {\n      --toolbar-item-gap: calc(${designUnit} * 1px);\n      background: ${fillColor};\n      fill: currentcolor;\n      padding: var(--toolbar-item-gap);\n      box-sizing: border-box;\n      align-items: center;\n    }\n\n    :host(${focusVisible}) {\n      outline: calc(${strokeWidth} * 1px) solid ${neutralStrokeFocus};\n    }\n\n    .positioning-region {\n      align-items: center;\n      display: inline-flex;\n      flex-flow: row wrap;\n      justify-content: flex-start;\n      flex-grow: 1;\n    }\n\n    :host([orientation='vertical']) .positioning-region {\n      flex-direction: column;\n      align-items: start;\n    }\n\n    ::slotted(:not([slot])) {\n      flex: 0 0 auto;\n      margin: 0 var(--toolbar-item-gap);\n    }\n\n    :host([orientation='vertical']) ::slotted(:not([slot])) {\n      margin: var(--toolbar-item-gap) 0;\n    }\n\n    :host([orientation='vertical']) {\n      display: inline-flex;\n      flex-direction: column;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      align-items: center;\n    }\n\n    .end {\n      margin-inline-start: auto;\n    }\n\n    .start__hidden,\n    .end__hidden {\n      display: none;\n    }\n\n    ::slotted(svg) {\n      ${ /* Glyph size is temporary - replace when adaptive typography is figured out */''}\n      width: 16px;\n      height: 16px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host(:${focusVisible}) {\n          box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${SystemColors.Highlight};\n          color: ${SystemColors.ButtonText};\n          forced-color-adjust: none;\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}