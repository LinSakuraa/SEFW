{"ast":null,"code":"import { on, off } from 'evtd';\nconst ctxKey = '@@coContext';\nconst clickoutside = {\n  mounted(el, {\n    value,\n    modifiers\n  }) {\n    el[ctxKey] = {\n      handler: undefined\n    };\n\n    if (typeof value === 'function') {\n      el[ctxKey].handler = value;\n      on('clickoutside', el, value, {\n        capture: modifiers.capture\n      });\n    }\n  },\n\n  updated(el, {\n    value,\n    modifiers\n  }) {\n    const ctx = el[ctxKey];\n\n    if (typeof value === 'function') {\n      if (ctx.handler) {\n        if (ctx.handler !== value) {\n          off('clickoutside', el, ctx.handler, {\n            capture: modifiers.capture\n          });\n          ctx.handler = value;\n          on('clickoutside', el, value, {\n            capture: modifiers.capture\n          });\n        }\n      } else {\n        el[ctxKey].handler = value;\n        on('clickoutside', el, value, {\n          capture: modifiers.capture\n        });\n      }\n    } else {\n      if (ctx.handler) {\n        off('clickoutside', el, ctx.handler, {\n          capture: modifiers.capture\n        });\n        ctx.handler = undefined;\n      }\n    }\n  },\n\n  unmounted(el, {\n    modifiers\n  }) {\n    const {\n      handler\n    } = el[ctxKey];\n\n    if (handler) {\n      off('clickoutside', el, handler, {\n        capture: modifiers.capture\n      });\n    }\n\n    el[ctxKey].handler = undefined;\n  }\n\n};\nexport default clickoutside;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/vdirs/es/clickoutside.js"],"names":["on","off","ctxKey","clickoutside","mounted","el","value","modifiers","handler","undefined","capture","updated","ctx","unmounted"],"mappings":"AAAA,SAASA,EAAT,EAAaC,GAAb,QAAwB,MAAxB;AACA,MAAMC,MAAM,GAAG,aAAf;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,CAACC,EAAD,EAAK;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAL,EAA2B;AAC9BF,IAAAA,EAAE,CAACH,MAAD,CAAF,GAAa;AACTM,MAAAA,OAAO,EAAEC;AADA,KAAb;;AAGA,QAAI,OAAOH,KAAP,KAAiB,UAArB,EAAiC;AAC7BD,MAAAA,EAAE,CAACH,MAAD,CAAF,CAAWM,OAAX,GAAqBF,KAArB;AACAN,MAAAA,EAAE,CAAC,cAAD,EAAiBK,EAAjB,EAAqBC,KAArB,EAA4B;AAC1BI,QAAAA,OAAO,EAAEH,SAAS,CAACG;AADO,OAA5B,CAAF;AAGH;AACJ,GAXgB;;AAYjBC,EAAAA,OAAO,CAACN,EAAD,EAAK;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAL,EAA2B;AAC9B,UAAMK,GAAG,GAAGP,EAAE,CAACH,MAAD,CAAd;;AACA,QAAI,OAAOI,KAAP,KAAiB,UAArB,EAAiC;AAC7B,UAAIM,GAAG,CAACJ,OAAR,EAAiB;AACb,YAAII,GAAG,CAACJ,OAAJ,KAAgBF,KAApB,EAA2B;AACvBL,UAAAA,GAAG,CAAC,cAAD,EAAiBI,EAAjB,EAAqBO,GAAG,CAACJ,OAAzB,EAAkC;AACjCE,YAAAA,OAAO,EAAEH,SAAS,CAACG;AADc,WAAlC,CAAH;AAGAE,UAAAA,GAAG,CAACJ,OAAJ,GAAcF,KAAd;AACAN,UAAAA,EAAE,CAAC,cAAD,EAAiBK,EAAjB,EAAqBC,KAArB,EAA4B;AAC1BI,YAAAA,OAAO,EAAEH,SAAS,CAACG;AADO,WAA5B,CAAF;AAGH;AACJ,OAVD,MAWK;AACDL,QAAAA,EAAE,CAACH,MAAD,CAAF,CAAWM,OAAX,GAAqBF,KAArB;AACAN,QAAAA,EAAE,CAAC,cAAD,EAAiBK,EAAjB,EAAqBC,KAArB,EAA4B;AAC1BI,UAAAA,OAAO,EAAEH,SAAS,CAACG;AADO,SAA5B,CAAF;AAGH;AACJ,KAlBD,MAmBK;AACD,UAAIE,GAAG,CAACJ,OAAR,EAAiB;AACbP,QAAAA,GAAG,CAAC,cAAD,EAAiBI,EAAjB,EAAqBO,GAAG,CAACJ,OAAzB,EAAkC;AACjCE,UAAAA,OAAO,EAAEH,SAAS,CAACG;AADc,SAAlC,CAAH;AAGAE,QAAAA,GAAG,CAACJ,OAAJ,GAAcC,SAAd;AACH;AACJ;AACJ,GAzCgB;;AA0CjBI,EAAAA,SAAS,CAACR,EAAD,EAAK;AAAEE,IAAAA;AAAF,GAAL,EAAoB;AACzB,UAAM;AAAEC,MAAAA;AAAF,QAAcH,EAAE,CAACH,MAAD,CAAtB;;AACA,QAAIM,OAAJ,EAAa;AACTP,MAAAA,GAAG,CAAC,cAAD,EAAiBI,EAAjB,EAAqBG,OAArB,EAA8B;AAC7BE,QAAAA,OAAO,EAAEH,SAAS,CAACG;AADU,OAA9B,CAAH;AAGH;;AACDL,IAAAA,EAAE,CAACH,MAAD,CAAF,CAAWM,OAAX,GAAqBC,SAArB;AACH;;AAlDgB,CAArB;AAoDA,eAAeN,YAAf","sourcesContent":["import { on, off } from 'evtd';\nconst ctxKey = '@@coContext';\nconst clickoutside = {\n    mounted(el, { value, modifiers }) {\n        el[ctxKey] = {\n            handler: undefined\n        };\n        if (typeof value === 'function') {\n            el[ctxKey].handler = value;\n            on('clickoutside', el, value, {\n                capture: modifiers.capture\n            });\n        }\n    },\n    updated(el, { value, modifiers }) {\n        const ctx = el[ctxKey];\n        if (typeof value === 'function') {\n            if (ctx.handler) {\n                if (ctx.handler !== value) {\n                    off('clickoutside', el, ctx.handler, {\n                        capture: modifiers.capture\n                    });\n                    ctx.handler = value;\n                    on('clickoutside', el, value, {\n                        capture: modifiers.capture\n                    });\n                }\n            }\n            else {\n                el[ctxKey].handler = value;\n                on('clickoutside', el, value, {\n                    capture: modifiers.capture\n                });\n            }\n        }\n        else {\n            if (ctx.handler) {\n                off('clickoutside', el, ctx.handler, {\n                    capture: modifiers.capture\n                });\n                ctx.handler = undefined;\n            }\n        }\n    },\n    unmounted(el, { modifiers }) {\n        const { handler } = el[ctxKey];\n        if (handler) {\n            off('clickoutside', el, handler, {\n                capture: modifiers.capture\n            });\n        }\n        el[ctxKey].handler = undefined;\n    }\n};\nexport default clickoutside;\n"]},"metadata":{},"sourceType":"module"}