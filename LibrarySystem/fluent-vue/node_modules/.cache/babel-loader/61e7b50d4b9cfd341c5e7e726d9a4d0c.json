{"ast":null,"code":"import { h, defineComponent, computed, inject } from 'vue';\nimport { configProviderInjectionKey } from '../../config-provider/src/context';\nimport { EmptyIcon } from '../../_internal/icons';\nimport { useConfig, useLocale, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey } from '../../_utils';\nimport { NBaseIcon } from '../../_internal';\nimport { emptyLight } from '../styles';\nimport style from './styles/index.cssr';\nconst emptyProps = Object.assign(Object.assign({}, useTheme.props), {\n  description: String,\n  showDescription: {\n    type: Boolean,\n    default: true\n  },\n  showIcon: {\n    type: Boolean,\n    default: true\n  },\n  size: {\n    type: String,\n    default: 'medium'\n  },\n  renderIcon: Function\n});\nexport default defineComponent({\n  name: 'Empty',\n  props: emptyProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef,\n      inlineThemeDisabled\n    } = useConfig(props);\n    const themeRef = useTheme('Empty', '-empty', style, emptyLight, props, mergedClsPrefixRef);\n    const {\n      localeRef\n    } = useLocale('Empty');\n    const NConfigProvider = inject(configProviderInjectionKey, null);\n    const mergedDescriptionRef = computed(() => {\n      var _a, _b, _c;\n\n      return (_a = props.description) !== null && _a !== void 0 ? _a : (_c = (_b = NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedComponentPropsRef.value) === null || _b === void 0 ? void 0 : _b.Empty) === null || _c === void 0 ? void 0 : _c.description;\n    });\n    const mergedRenderIconRef = computed(() => {\n      var _a, _b;\n\n      return ((_b = (_a = NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.Empty) === null || _b === void 0 ? void 0 : _b.renderIcon) || (() => h(EmptyIcon, null));\n    });\n    const cssVarsRef = computed(() => {\n      const {\n        size\n      } = props;\n      const {\n        common: {\n          cubicBezierEaseInOut\n        },\n        self: {\n          [createKey('iconSize', size)]: iconSize,\n          [createKey('fontSize', size)]: fontSize,\n          textColor,\n          iconColor,\n          extraTextColor\n        }\n      } = themeRef.value;\n      return {\n        '--n-icon-size': iconSize,\n        '--n-font-size': fontSize,\n        '--n-bezier': cubicBezierEaseInOut,\n        '--n-text-color': textColor,\n        '--n-icon-color': iconColor,\n        '--n-extra-text-color': extraTextColor\n      };\n    });\n    const themeClassHandle = inlineThemeDisabled ? useThemeClass('empty', computed(() => {\n      let hash = '';\n      const {\n        size\n      } = props;\n      hash += size[0];\n      return hash;\n    }), cssVarsRef, props) : undefined;\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedRenderIcon: mergedRenderIconRef,\n      localizedDescription: computed(() => {\n        return mergedDescriptionRef.value || localeRef.value.description;\n      }),\n      cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n      themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n      onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n    };\n  },\n\n  render() {\n    const {\n      $slots,\n      mergedClsPrefix,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      class: [`${mergedClsPrefix}-empty`, this.themeClass],\n      style: this.cssVars\n    }, this.showIcon ? h(\"div\", {\n      class: `${mergedClsPrefix}-empty__icon`\n    }, $slots.icon ? $slots.icon() : h(NBaseIcon, {\n      clsPrefix: mergedClsPrefix\n    }, {\n      default: this.mergedRenderIcon\n    })) : null, this.showDescription ? h(\"div\", {\n      class: `${mergedClsPrefix}-empty__description`\n    }, $slots.default ? $slots.default() : this.localizedDescription) : null, $slots.extra ? h(\"div\", {\n      class: `${mergedClsPrefix}-empty__extra`\n    }, $slots.extra()) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/empty/src/Empty.js"],"names":["h","defineComponent","computed","inject","configProviderInjectionKey","EmptyIcon","useConfig","useLocale","useTheme","useThemeClass","createKey","NBaseIcon","emptyLight","style","emptyProps","Object","assign","props","description","String","showDescription","type","Boolean","default","showIcon","size","renderIcon","Function","name","setup","mergedClsPrefixRef","inlineThemeDisabled","themeRef","localeRef","NConfigProvider","mergedDescriptionRef","_a","_b","_c","mergedComponentPropsRef","value","Empty","mergedRenderIconRef","cssVarsRef","common","cubicBezierEaseInOut","self","iconSize","fontSize","textColor","iconColor","extraTextColor","themeClassHandle","hash","undefined","mergedClsPrefix","mergedRenderIcon","localizedDescription","cssVars","themeClass","onRender","render","$slots","class","icon","clsPrefix","extra"],"mappings":"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","sourcesContent":["import { h, defineComponent, computed, inject } from 'vue';\nimport { configProviderInjectionKey } from '../../config-provider/src/context';\nimport { EmptyIcon } from '../../_internal/icons';\nimport { useConfig, useLocale, useTheme, useThemeClass } from '../../_mixins';\nimport { createKey } from '../../_utils';\nimport { NBaseIcon } from '../../_internal';\nimport { emptyLight } from '../styles';\nimport style from './styles/index.cssr';\nconst emptyProps = Object.assign(Object.assign({}, useTheme.props), { description: String, showDescription: {\n        type: Boolean,\n        default: true\n    }, showIcon: {\n        type: Boolean,\n        default: true\n    }, size: {\n        type: String,\n        default: 'medium'\n    }, renderIcon: Function });\nexport default defineComponent({\n    name: 'Empty',\n    props: emptyProps,\n    setup(props) {\n        const { mergedClsPrefixRef, inlineThemeDisabled } = useConfig(props);\n        const themeRef = useTheme('Empty', '-empty', style, emptyLight, props, mergedClsPrefixRef);\n        const { localeRef } = useLocale('Empty');\n        const NConfigProvider = inject(configProviderInjectionKey, null);\n        const mergedDescriptionRef = computed(() => {\n            var _a, _b, _c;\n            return ((_a = props.description) !== null && _a !== void 0 ? _a : (_c = (_b = NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedComponentPropsRef.value) === null || _b === void 0 ? void 0 : _b.Empty) === null || _c === void 0 ? void 0 : _c.description);\n        });\n        const mergedRenderIconRef = computed(() => {\n            var _a, _b;\n            return ((_b = (_a = NConfigProvider === null || NConfigProvider === void 0 ? void 0 : NConfigProvider.mergedComponentPropsRef.value) === null || _a === void 0 ? void 0 : _a.Empty) === null || _b === void 0 ? void 0 : _b.renderIcon) ||\n                (() => h(EmptyIcon, null));\n        });\n        const cssVarsRef = computed(() => {\n            const { size } = props;\n            const { common: { cubicBezierEaseInOut }, self: { [createKey('iconSize', size)]: iconSize, [createKey('fontSize', size)]: fontSize, textColor, iconColor, extraTextColor } } = themeRef.value;\n            return {\n                '--n-icon-size': iconSize,\n                '--n-font-size': fontSize,\n                '--n-bezier': cubicBezierEaseInOut,\n                '--n-text-color': textColor,\n                '--n-icon-color': iconColor,\n                '--n-extra-text-color': extraTextColor\n            };\n        });\n        const themeClassHandle = inlineThemeDisabled\n            ? useThemeClass('empty', computed(() => {\n                let hash = '';\n                const { size } = props;\n                hash += size[0];\n                return hash;\n            }), cssVarsRef, props)\n            : undefined;\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedRenderIcon: mergedRenderIconRef,\n            localizedDescription: computed(() => {\n                return mergedDescriptionRef.value || localeRef.value.description;\n            }),\n            cssVars: inlineThemeDisabled ? undefined : cssVarsRef,\n            themeClass: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.themeClass,\n            onRender: themeClassHandle === null || themeClassHandle === void 0 ? void 0 : themeClassHandle.onRender\n        };\n    },\n    render() {\n        const { $slots, mergedClsPrefix, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { class: [`${mergedClsPrefix}-empty`, this.themeClass], style: this.cssVars },\n            this.showIcon ? (h(\"div\", { class: `${mergedClsPrefix}-empty__icon` }, $slots.icon ? ($slots.icon()) : (h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: this.mergedRenderIcon })))) : null,\n            this.showDescription ? (h(\"div\", { class: `${mergedClsPrefix}-empty__description` }, $slots.default ? $slots.default() : this.localizedDescription)) : null,\n            $slots.extra ? (h(\"div\", { class: `${mergedClsPrefix}-empty__extra` }, $slots.extra())) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}