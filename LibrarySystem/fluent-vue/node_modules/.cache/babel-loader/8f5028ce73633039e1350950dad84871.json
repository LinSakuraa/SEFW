{"ast":null,"code":"/**\n * Returns the index of the last element in the array where predicate is true, and -1 otherwise.\n *\n * @param array - the array to test\n * @param predicate - find calls predicate once for each element of the array, in descending order, until it finds one where predicate returns true. If such an element is found, findLastIndex immediately returns that element index. Otherwise, findIndex returns -1.\n */\nexport function findLastIndex(array, predicate) {\n  let k = array.length;\n\n  while (k--) {\n    if (predicate(array[k], k, array)) {\n      return k;\n    }\n  }\n\n  return -1;\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-web-utilities/dist/array.js"],"names":["findLastIndex","array","predicate","k","length"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,aAAT,CAAuBC,KAAvB,EAA8BC,SAA9B,EAAyC;AAC5C,MAAIC,CAAC,GAAGF,KAAK,CAACG,MAAd;;AACA,SAAOD,CAAC,EAAR,EAAY;AACR,QAAID,SAAS,CAACD,KAAK,CAACE,CAAD,CAAN,EAAWA,CAAX,EAAcF,KAAd,CAAb,EAAmC;AAC/B,aAAOE,CAAP;AACH;AACJ;;AACD,SAAO,CAAC,CAAR;AACH","sourcesContent":["/**\n * Returns the index of the last element in the array where predicate is true, and -1 otherwise.\n *\n * @param array - the array to test\n * @param predicate - find calls predicate once for each element of the array, in descending order, until it finds one where predicate returns true. If such an element is found, findLastIndex immediately returns that element index. Otherwise, findIndex returns -1.\n */\nexport function findLastIndex(array, predicate) {\n    let k = array.length;\n    while (k--) {\n        if (predicate(array[k], k, array)) {\n            return k;\n        }\n    }\n    return -1;\n}\n"]},"metadata":{},"sourceType":"module"}