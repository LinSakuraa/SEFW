{"ast":null,"code":"import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime } from 'date-fns';\nimport { getDefaultTime, dateArray, strictParse } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), {\n  actions: {\n    type: Array,\n    default: () => ['clear', 'confirm']\n  }\n}); // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nfunction useDualCalendar(props, type = 'datetime') {\n  const {\n    isDateDisabledRef,\n    isStartHourDisabledRef,\n    isEndHourDisabledRef,\n    isStartMinuteDisabledRef,\n    isEndMinuteDisabledRef,\n    isStartSecondDisabledRef,\n    isEndSecondDisabledRef,\n    isStartDateInvalidRef,\n    isEndDateInvalidRef,\n    isStartTimeInvalidRef,\n    isEndTimeInvalidRef,\n    isStartValueInvalidRef,\n    isEndValueInvalidRef,\n    isRangeInvalidRef,\n    localeRef,\n    rangesRef,\n    closeOnSelectRef,\n    updateValueOnCloseRef,\n    firstDayOfWeekRef,\n    datePickerSlots // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n  } = inject(datePickerInjectionKey);\n  const validation = {\n    isDateDisabled: isDateDisabledRef,\n    isStartHourDisabled: isStartHourDisabledRef,\n    isEndHourDisabled: isEndHourDisabledRef,\n    isStartMinuteDisabled: isStartMinuteDisabledRef,\n    isEndMinuteDisabled: isEndMinuteDisabledRef,\n    isStartSecondDisabled: isStartSecondDisabledRef,\n    isEndSecondDisabled: isEndSecondDisabledRef,\n    isStartDateInvalid: isStartDateInvalidRef,\n    isEndDateInvalid: isEndDateInvalidRef,\n    isStartTimeInvalid: isStartTimeInvalidRef,\n    isEndTimeInvalid: isEndTimeInvalidRef,\n    isStartValueInvalid: isStartValueInvalidRef,\n    isEndValueInvalid: isEndValueInvalidRef,\n    isRangeInvalid: isRangeInvalidRef\n  };\n  const panelCommon = usePanelCommon(props);\n  const startDatesElRef = ref(null);\n  const endDatesElRef = ref(null);\n  const startCalendarDateTimeRef = ref(Date.now());\n  const endCalendarDateTimeRef = ref(getTime(addMonths(Date.now(), 1)));\n  const nowRef = ref(Date.now());\n  const isSelectingRef = ref(false);\n  const memorizedStartDateTimeRef = ref(0);\n  const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n  const {\n    value\n  } = props;\n  const startDateInput = ref(Array.isArray(value) ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n  const endDateInputRef = ref(Array.isArray(value) ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value) : '');\n\n  if (Array.isArray(value)) {\n    syncCalendarTimeWithValue(value);\n  } // derived computed\n\n\n  const selectingPhaseRef = computed(() => {\n    if (isSelectingRef.value) return 'end';else return 'start';\n  });\n  const startDateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const endDateArrayRef = computed(() => {\n    var _a;\n\n    return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n  });\n  const weekdaysRef = computed(() => {\n    return startDateArrayRef.value.slice(0, 7).map(dateItem => {\n      const {\n        ts\n      } = dateItem;\n      return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n    });\n  });\n  const startCalendarMonthRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarMonthRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startCalendarYearRef = computed(() => {\n    return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const endCalendarYearRef = computed(() => {\n    return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n  });\n  const startTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[0];\n    return null;\n  });\n  const endTimeValueRef = computed(() => {\n    const {\n      value\n    } = props;\n    if (Array.isArray(value)) return value[1];\n    return null;\n  });\n  const shortcutsRef = computed(() => {\n    const {\n      shortcuts\n    } = props;\n    return shortcuts || rangesRef.value;\n  });\n  watch(computed(() => props.value), value => {\n    if (value !== null && Array.isArray(value)) {\n      const [startMoment, endMoment] = value;\n      startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n      endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n\n      if (!isSelectingRef.value) {\n        syncCalendarTimeWithValue(value);\n      }\n    } else {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n    }\n  });\n\n  function handleCalendarChange(value, oldValue) {\n    if (getYear(value) !== getYear(oldValue) || getMonth(value) !== getMonth(oldValue)) {\n      panelCommon.disableTransitionOneTick();\n    }\n  }\n\n  watch(startCalendarDateTimeRef, handleCalendarChange);\n  watch(endCalendarDateTimeRef, handleCalendarChange); // change calendar\n\n  function adjustCalendarTimes(byStartCalendarTime) {\n    const startTime = startOfMonth(startCalendarDateTimeRef.value);\n    const endTime = startOfMonth(endCalendarDateTimeRef.value);\n\n    if (startTime >= endTime) {\n      if (byStartCalendarTime) {\n        endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n      } else {\n        startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n      }\n    }\n  }\n\n  function startCalendarNextYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarPrevYear() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarNextMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(true);\n  }\n\n  function startCalendarPrevMonth() {\n    startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(true);\n  }\n\n  function endCalendarNextYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarPrevYear() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarNextMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n    adjustCalendarTimes(false);\n  }\n\n  function endCalendarPrevMonth() {\n    endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n    adjustCalendarTimes(false);\n  }\n\n  function onUpdateStartCalendarValue(value) {\n    startCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(true);\n  }\n\n  function onUpdateEndCalendarValue(value) {\n    endCalendarDateTimeRef.value = value;\n    adjustCalendarTimes(false);\n  } // The function is used on date panel, not the date-picker value validation\n\n\n  function mergedIsDateDisabled(ts) {\n    const isDateDisabled = isDateDisabledRef.value;\n    if (!isDateDisabled) return false;\n    if (!Array.isArray(props.value)) return isDateDisabled(ts, 'start', null);\n\n    if (selectingPhaseRef.value === 'start') {\n      // before you really start to select\n      return isDateDisabled(ts, 'start', null);\n    } else {\n      const {\n        value: memorizedStartDateTime\n      } = memorizedStartDateTimeRef; // after you starting to select\n\n      if (ts < memorizedStartDateTimeRef.value) {\n        return isDateDisabled(ts, 'start', [memorizedStartDateTime, memorizedStartDateTime]);\n      } else {\n        return isDateDisabled(ts, 'end', [memorizedStartDateTime, memorizedStartDateTime]);\n      }\n    }\n  }\n\n  function resetSelectingStatus(e) {\n    var _a, _b;\n\n    if (((_a = startDatesElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target)) || ((_b = endDatesElRef.value) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {// do nothing\n    } else {\n      isSelectingRef.value = false;\n    }\n  }\n\n  function syncCalendarTimeWithValue(value) {\n    if (value === null) return;\n    const [startMoment, endMoment] = value;\n    startCalendarDateTimeRef.value = startMoment;\n\n    if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n    } else {\n      endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n    }\n  }\n\n  function handleDateClick(dateItem) {\n    if (mergedIsDateDisabled(dateItem.ts)) {\n      return;\n    }\n\n    if (!isSelectingRef.value) {\n      isSelectingRef.value = true;\n      memorizedStartDateTimeRef.value = dateItem.ts;\n      changeStartEndTime(dateItem.ts);\n    } else {\n      isSelectingRef.value = false;\n\n      if (closeOnSelectRef.value && type === 'daterange') {\n        if (updateValueOnCloseRef.value) {\n          closeCalendar();\n        } else {\n          handleConfirmClick();\n        }\n      }\n    }\n  }\n\n  function handleDateMouseEnter(dateItem) {\n    if (isSelectingRef.value) {\n      if (mergedIsDateDisabled(dateItem.ts)) return;\n\n      if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n        changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts);\n      } else {\n        changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value);\n      }\n    }\n  }\n\n  function handleConfirmClick() {\n    if (isRangeInvalidRef.value) {\n      return;\n    }\n\n    panelCommon.doConfirm();\n    closeCalendar();\n  }\n\n  function closeCalendar() {\n    isSelectingRef.value = false;\n\n    if (props.active) {\n      panelCommon.doClose();\n    }\n  }\n\n  function changeStartDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], false);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], false);\n    }\n  }\n\n  function changeEndDateTime(time) {\n    if (typeof time !== 'number') {\n      time = getTime(time);\n    }\n\n    if (props.value === null) {\n      panelCommon.doUpdateValue([time, time], false);\n    } else if (Array.isArray(props.value)) {\n      panelCommon.doUpdateValue([Math.min(props.value[0], time), time], false);\n    }\n  }\n\n  function changeStartEndTime(startTime, endTime) {\n    if (endTime === undefined) endTime = startTime;\n\n    if (typeof startTime !== 'number') {\n      startTime = getTime(startTime);\n    }\n\n    let startDefaultTime;\n    let endDefaultTime;\n\n    if (type === 'datetimerange') {\n      const {\n        defaultTime\n      } = props;\n\n      if (Array.isArray(defaultTime)) {\n        startDefaultTime = getDefaultTime(defaultTime[0]);\n        endDefaultTime = getDefaultTime(defaultTime[1]);\n      } else {\n        startDefaultTime = getDefaultTime(defaultTime);\n        endDefaultTime = startDefaultTime;\n      }\n    }\n\n    if (startDefaultTime) {\n      startTime = getTime(set(startTime, startDefaultTime));\n    }\n\n    if (endDefaultTime) {\n      endTime = getTime(set(endTime, endDefaultTime));\n    }\n\n    panelCommon.doUpdateValue([startTime, endTime], false);\n  }\n\n  function sanitizeValue(datetime) {\n    if (type === 'datetimerange') {\n      return getTime(startOfSecond(datetime));\n    } else {\n      // daterange\n      return getTime(startOfDay(datetime));\n    }\n  }\n\n  function handleStartDateInput(value) {\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (!props.value) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      startDateInput.value = value;\n    }\n  }\n\n  function handleEndDateInput(value) {\n    /** strict check when input */\n    const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n\n    if (isValid(date)) {\n      if (props.value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(props.value)) {\n        const newValue = set(props.value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      endDateInputRef.value = value;\n    }\n  }\n\n  function handleStartDateInputBlur() {\n    const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[0], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeStartDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n\n  function handleEndDateInputBlur() {\n    const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n    const {\n      value\n    } = props;\n\n    if (isValid(date)) {\n      if (value === null) {\n        const newValue = set(new Date(), {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      } else if (Array.isArray(value)) {\n        const newValue = set(value[1], {\n          year: getYear(date),\n          month: getMonth(date),\n          date: getDate(date)\n        });\n        changeEndDateTime(sanitizeValue(getTime(newValue)));\n      }\n    } else {\n      refreshDisplayDateString();\n    }\n  }\n\n  function refreshDisplayDateString(times) {\n    // If not selected, display nothing,\n    // else update datetime related string\n    const {\n      value\n    } = props;\n\n    if (value === null || !Array.isArray(value)) {\n      startDateInput.value = '';\n      endDateInputRef.value = '';\n      return;\n    }\n\n    if (times === undefined) {\n      times = value;\n    }\n\n    startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n  }\n\n  function handleStartTimePickerChange(value) {\n    if (value === null) return;\n    changeStartDateTime(value);\n  }\n\n  function handleEndTimePickerChange(value) {\n    if (value === null) return;\n    changeEndDateTime(value);\n  }\n\n  function handleRangeShortcutMouseenter(shortcut) {\n    panelCommon.cachePendingValue();\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(...shortcutValue);\n  }\n\n  function handleRangeShortcutClick(shortcut) {\n    const shortcutValue = panelCommon.getShortcutValue(shortcut);\n    if (!Array.isArray(shortcutValue)) return;\n    changeStartEndTime(...shortcutValue);\n    panelCommon.clearPendingValue();\n    handleConfirmClick();\n  }\n\n  return Object.assign(Object.assign(Object.assign({\n    startDatesElRef,\n    endDatesElRef,\n    resetSelectingStatus,\n    handleDateClick,\n    handleDateMouseEnter,\n    handleConfirmClick,\n    startCalendarPrevYear,\n    startCalendarPrevMonth,\n    startCalendarNextYear,\n    startCalendarNextMonth,\n    endCalendarPrevYear,\n    endCalendarPrevMonth,\n    endCalendarNextMonth,\n    endCalendarNextYear,\n    mergedIsDateDisabled,\n    changeStartEndTime,\n    ranges: rangesRef,\n    startCalendarMonth: startCalendarMonthRef,\n    startCalendarYear: startCalendarYearRef,\n    endCalendarMonth: endCalendarMonthRef,\n    endCalendarYear: endCalendarYearRef,\n    weekdays: weekdaysRef,\n    startDateArray: startDateArrayRef,\n    endDateArray: endDateArrayRef,\n    handleRangeShortcutMouseenter,\n    handleRangeShortcutClick\n  }, panelCommon), validation), {\n    // datetimerangeonly\n    startDateDisplayString: startDateInput,\n    endDateInput: endDateInputRef,\n    timePickerSize: panelCommon.timePickerSize,\n    startTimeValue: startTimeValueRef,\n    endTimeValue: endTimeValueRef,\n    handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus,\n    handleStartTimePickerChange,\n    handleEndTimePickerChange,\n    handleStartDateInput,\n    handleStartDateInputBlur,\n    handleEndDateInput,\n    handleEndDateInputBlur,\n    datePickerSlots,\n    shortcuts: shortcutsRef,\n    startCalendarDateTime: startCalendarDateTimeRef,\n    endCalendarDateTime: endCalendarDateTimeRef,\n    onUpdateStartCalendarValue,\n    onUpdateEndCalendarValue\n  });\n}\n\nexport { useDualCalendar, useDualCalendarProps };","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/panel/use-dual-calendar.js"],"names":["inject","computed","watch","ref","addMonths","format","getYear","getMonth","startOfMonth","isValid","startOfSecond","startOfDay","set","getDate","getTime","getDefaultTime","dateArray","strictParse","datePickerInjectionKey","usePanelCommon","usePanelCommonProps","useDualCalendarProps","Object","assign","actions","type","Array","default","useDualCalendar","props","isDateDisabledRef","isStartHourDisabledRef","isEndHourDisabledRef","isStartMinuteDisabledRef","isEndMinuteDisabledRef","isStartSecondDisabledRef","isEndSecondDisabledRef","isStartDateInvalidRef","isEndDateInvalidRef","isStartTimeInvalidRef","isEndTimeInvalidRef","isStartValueInvalidRef","isEndValueInvalidRef","isRangeInvalidRef","localeRef","rangesRef","closeOnSelectRef","updateValueOnCloseRef","firstDayOfWeekRef","datePickerSlots","validation","isDateDisabled","isStartHourDisabled","isEndHourDisabled","isStartMinuteDisabled","isEndMinuteDisabled","isStartSecondDisabled","isEndSecondDisabled","isStartDateInvalid","isEndDateInvalid","isStartTimeInvalid","isEndTimeInvalid","isStartValueInvalid","isEndValueInvalid","isRangeInvalid","panelCommon","startDatesElRef","endDatesElRef","startCalendarDateTimeRef","Date","now","endCalendarDateTimeRef","nowRef","isSelectingRef","memorizedStartDateTimeRef","mergedDateFormatRef","dateFormat","value","startDateInput","isArray","dateFnsOptions","endDateInputRef","syncCalendarTimeWithValue","selectingPhaseRef","startDateArrayRef","_a","firstDayOfWeek","endDateArrayRef","weekdaysRef","slice","map","dateItem","ts","dayFormat","startCalendarMonthRef","monthFormat","endCalendarMonthRef","startCalendarYearRef","yearFormat","endCalendarYearRef","startTimeValueRef","endTimeValueRef","shortcutsRef","shortcuts","startMoment","endMoment","handleCalendarChange","oldValue","disableTransitionOneTick","adjustCalendarTimes","byStartCalendarTime","startTime","endTime","startCalendarNextYear","startCalendarPrevYear","startCalendarNextMonth","startCalendarPrevMonth","endCalendarNextYear","endCalendarPrevYear","endCalendarNextMonth","endCalendarPrevMonth","onUpdateStartCalendarValue","onUpdateEndCalendarValue","mergedIsDateDisabled","memorizedStartDateTime","resetSelectingStatus","e","_b","contains","target","handleDateClick","changeStartEndTime","closeCalendar","handleConfirmClick","handleDateMouseEnter","doConfirm","active","doClose","changeStartDateTime","time","doUpdateValue","Math","max","changeEndDateTime","min","undefined","startDefaultTime","endDefaultTime","defaultTime","sanitizeValue","datetime","handleStartDateInput","date","newValue","year","month","handleEndDateInput","handleStartDateInputBlur","refreshDisplayDateString","handleEndDateInputBlur","times","handleStartTimePickerChange","handleEndTimePickerChange","handleRangeShortcutMouseenter","shortcut","cachePendingValue","shortcutValue","getShortcutValue","handleRangeShortcutClick","clearPendingValue","ranges","startCalendarMonth","startCalendarYear","endCalendarMonth","endCalendarYear","weekdays","startDateArray","endDateArray","startDateDisplayString","endDateInput","timePickerSize","startTimeValue","endTimeValue","handleFocusDetectorFocus","startCalendarDateTime","endCalendarDateTime"],"mappings":"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","sourcesContent":["import { inject, computed, watch, ref } from 'vue';\nimport { addMonths, format, getYear, getMonth, startOfMonth, isValid, startOfSecond, startOfDay, set, getDate, getTime } from 'date-fns';\nimport { getDefaultTime, dateArray, strictParse } from '../utils';\nimport { datePickerInjectionKey } from '../interface';\nimport { usePanelCommon, usePanelCommonProps } from './use-panel-common';\nconst useDualCalendarProps = Object.assign(Object.assign({}, usePanelCommonProps), { actions: {\n        type: Array,\n        default: () => ['clear', 'confirm']\n    } });\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nfunction useDualCalendar(props, type = 'datetime') {\n    const { isDateDisabledRef, isStartHourDisabledRef, isEndHourDisabledRef, isStartMinuteDisabledRef, isEndMinuteDisabledRef, isStartSecondDisabledRef, isEndSecondDisabledRef, isStartDateInvalidRef, isEndDateInvalidRef, isStartTimeInvalidRef, isEndTimeInvalidRef, isStartValueInvalidRef, isEndValueInvalidRef, isRangeInvalidRef, localeRef, rangesRef, closeOnSelectRef, updateValueOnCloseRef, firstDayOfWeekRef, datePickerSlots\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n     } = inject(datePickerInjectionKey);\n    const validation = {\n        isDateDisabled: isDateDisabledRef,\n        isStartHourDisabled: isStartHourDisabledRef,\n        isEndHourDisabled: isEndHourDisabledRef,\n        isStartMinuteDisabled: isStartMinuteDisabledRef,\n        isEndMinuteDisabled: isEndMinuteDisabledRef,\n        isStartSecondDisabled: isStartSecondDisabledRef,\n        isEndSecondDisabled: isEndSecondDisabledRef,\n        isStartDateInvalid: isStartDateInvalidRef,\n        isEndDateInvalid: isEndDateInvalidRef,\n        isStartTimeInvalid: isStartTimeInvalidRef,\n        isEndTimeInvalid: isEndTimeInvalidRef,\n        isStartValueInvalid: isStartValueInvalidRef,\n        isEndValueInvalid: isEndValueInvalidRef,\n        isRangeInvalid: isRangeInvalidRef\n    };\n    const panelCommon = usePanelCommon(props);\n    const startDatesElRef = ref(null);\n    const endDatesElRef = ref(null);\n    const startCalendarDateTimeRef = ref(Date.now());\n    const endCalendarDateTimeRef = ref(getTime(addMonths(Date.now(), 1)));\n    const nowRef = ref(Date.now());\n    const isSelectingRef = ref(false);\n    const memorizedStartDateTimeRef = ref(0);\n    const mergedDateFormatRef = computed(() => props.dateFormat || localeRef.value.dateFormat);\n    const { value } = props;\n    const startDateInput = ref(Array.isArray(value)\n        ? format(value[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    const endDateInputRef = ref(Array.isArray(value)\n        ? format(value[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value)\n        : '');\n    if (Array.isArray(value)) {\n        syncCalendarTimeWithValue(value);\n    }\n    // derived computed\n    const selectingPhaseRef = computed(() => {\n        if (isSelectingRef.value)\n            return 'end';\n        else\n            return 'start';\n    });\n    const startDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(startCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const endDateArrayRef = computed(() => {\n        var _a;\n        return dateArray(endCalendarDateTimeRef.value, props.value, nowRef.value, (_a = firstDayOfWeekRef.value) !== null && _a !== void 0 ? _a : localeRef.value.firstDayOfWeek);\n    });\n    const weekdaysRef = computed(() => {\n        return startDateArrayRef.value.slice(0, 7).map((dateItem) => {\n            const { ts } = dateItem;\n            return format(ts, localeRef.value.dayFormat, panelCommon.dateFnsOptions.value);\n        });\n    });\n    const startCalendarMonthRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarMonthRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.monthFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startCalendarYearRef = computed(() => {\n        return format(startCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const endCalendarYearRef = computed(() => {\n        return format(endCalendarDateTimeRef.value, localeRef.value.yearFormat, panelCommon.dateFnsOptions.value);\n    });\n    const startTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[0];\n        return null;\n    });\n    const endTimeValueRef = computed(() => {\n        const { value } = props;\n        if (Array.isArray(value))\n            return value[1];\n        return null;\n    });\n    const shortcutsRef = computed(() => {\n        const { shortcuts } = props;\n        return shortcuts || rangesRef.value;\n    });\n    watch(computed(() => props.value), (value) => {\n        if (value !== null && Array.isArray(value)) {\n            const [startMoment, endMoment] = value;\n            startDateInput.value = format(startMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            endDateInputRef.value = format(endMoment, mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n            if (!isSelectingRef.value) {\n                syncCalendarTimeWithValue(value);\n            }\n        }\n        else {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n        }\n    });\n    function handleCalendarChange(value, oldValue) {\n        if (getYear(value) !== getYear(oldValue) ||\n            getMonth(value) !== getMonth(oldValue)) {\n            panelCommon.disableTransitionOneTick();\n        }\n    }\n    watch(startCalendarDateTimeRef, handleCalendarChange);\n    watch(endCalendarDateTimeRef, handleCalendarChange);\n    // change calendar\n    function adjustCalendarTimes(byStartCalendarTime) {\n        const startTime = startOfMonth(startCalendarDateTimeRef.value);\n        const endTime = startOfMonth(endCalendarDateTimeRef.value);\n        if (startTime >= endTime) {\n            if (byStartCalendarTime) {\n                endCalendarDateTimeRef.value = getTime(addMonths(startTime, 1));\n            }\n            else {\n                startCalendarDateTimeRef.value = getTime(addMonths(endTime, -1));\n            }\n        }\n    }\n    function startCalendarNextYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevYear() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarNextMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(true);\n    }\n    function startCalendarPrevMonth() {\n        startCalendarDateTimeRef.value = getTime(addMonths(startCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(true);\n    }\n    function endCalendarNextYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevYear() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -12));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarNextMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, 1));\n        adjustCalendarTimes(false);\n    }\n    function endCalendarPrevMonth() {\n        endCalendarDateTimeRef.value = getTime(addMonths(endCalendarDateTimeRef.value, -1));\n        adjustCalendarTimes(false);\n    }\n    function onUpdateStartCalendarValue(value) {\n        startCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(true);\n    }\n    function onUpdateEndCalendarValue(value) {\n        endCalendarDateTimeRef.value = value;\n        adjustCalendarTimes(false);\n    }\n    // The function is used on date panel, not the date-picker value validation\n    function mergedIsDateDisabled(ts) {\n        const isDateDisabled = isDateDisabledRef.value;\n        if (!isDateDisabled)\n            return false;\n        if (!Array.isArray(props.value))\n            return isDateDisabled(ts, 'start', null);\n        if (selectingPhaseRef.value === 'start') {\n            // before you really start to select\n            return isDateDisabled(ts, 'start', null);\n        }\n        else {\n            const { value: memorizedStartDateTime } = memorizedStartDateTimeRef;\n            // after you starting to select\n            if (ts < memorizedStartDateTimeRef.value) {\n                return isDateDisabled(ts, 'start', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n            else {\n                return isDateDisabled(ts, 'end', [\n                    memorizedStartDateTime,\n                    memorizedStartDateTime\n                ]);\n            }\n        }\n    }\n    function resetSelectingStatus(e) {\n        var _a, _b;\n        if (((_a = startDatesElRef.value) === null || _a === void 0 ? void 0 : _a.contains(e.target)) ||\n            ((_b = endDatesElRef.value) === null || _b === void 0 ? void 0 : _b.contains(e.target))) {\n            // do nothing\n        }\n        else {\n            isSelectingRef.value = false;\n        }\n    }\n    function syncCalendarTimeWithValue(value) {\n        if (value === null)\n            return;\n        const [startMoment, endMoment] = value;\n        startCalendarDateTimeRef.value = startMoment;\n        if (startOfMonth(endMoment) <= startOfMonth(startMoment)) {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(addMonths(startMoment, 1)));\n        }\n        else {\n            endCalendarDateTimeRef.value = getTime(startOfMonth(endMoment));\n        }\n    }\n    function handleDateClick(dateItem) {\n        if (mergedIsDateDisabled(dateItem.ts)) {\n            return;\n        }\n        if (!isSelectingRef.value) {\n            isSelectingRef.value = true;\n            memorizedStartDateTimeRef.value = dateItem.ts;\n            changeStartEndTime(dateItem.ts);\n        }\n        else {\n            isSelectingRef.value = false;\n            if (closeOnSelectRef.value && type === 'daterange') {\n                if (updateValueOnCloseRef.value) {\n                    closeCalendar();\n                }\n                else {\n                    handleConfirmClick();\n                }\n            }\n        }\n    }\n    function handleDateMouseEnter(dateItem) {\n        if (isSelectingRef.value) {\n            if (mergedIsDateDisabled(dateItem.ts))\n                return;\n            if (dateItem.ts >= memorizedStartDateTimeRef.value) {\n                changeStartEndTime(memorizedStartDateTimeRef.value, dateItem.ts);\n            }\n            else {\n                changeStartEndTime(dateItem.ts, memorizedStartDateTimeRef.value);\n            }\n        }\n    }\n    function handleConfirmClick() {\n        if (isRangeInvalidRef.value) {\n            return;\n        }\n        panelCommon.doConfirm();\n        closeCalendar();\n    }\n    function closeCalendar() {\n        isSelectingRef.value = false;\n        if (props.active) {\n            panelCommon.doClose();\n        }\n    }\n    function changeStartDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], false);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([time, Math.max(props.value[1], time)], false);\n        }\n    }\n    function changeEndDateTime(time) {\n        if (typeof time !== 'number') {\n            time = getTime(time);\n        }\n        if (props.value === null) {\n            panelCommon.doUpdateValue([time, time], false);\n        }\n        else if (Array.isArray(props.value)) {\n            panelCommon.doUpdateValue([Math.min(props.value[0], time), time], false);\n        }\n    }\n    function changeStartEndTime(startTime, endTime) {\n        if (endTime === undefined)\n            endTime = startTime;\n        if (typeof startTime !== 'number') {\n            startTime = getTime(startTime);\n        }\n        let startDefaultTime;\n        let endDefaultTime;\n        if (type === 'datetimerange') {\n            const { defaultTime } = props;\n            if (Array.isArray(defaultTime)) {\n                startDefaultTime = getDefaultTime(defaultTime[0]);\n                endDefaultTime = getDefaultTime(defaultTime[1]);\n            }\n            else {\n                startDefaultTime = getDefaultTime(defaultTime);\n                endDefaultTime = startDefaultTime;\n            }\n        }\n        if (startDefaultTime) {\n            startTime = getTime(set(startTime, startDefaultTime));\n        }\n        if (endDefaultTime) {\n            endTime = getTime(set(endTime, endDefaultTime));\n        }\n        panelCommon.doUpdateValue([startTime, endTime], false);\n    }\n    function sanitizeValue(datetime) {\n        if (type === 'datetimerange') {\n            return getTime(startOfSecond(datetime));\n        }\n        else {\n            // daterange\n            return getTime(startOfDay(datetime));\n        }\n    }\n    function handleStartDateInput(value) {\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (!props.value) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            startDateInput.value = value;\n        }\n    }\n    function handleEndDateInput(value) {\n        /** strict check when input */\n        const date = strictParse(value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        if (isValid(date)) {\n            if (props.value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(props.value)) {\n                const newValue = set(props.value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            endDateInputRef.value = value;\n        }\n    }\n    function handleStartDateInputBlur() {\n        const date = strictParse(startDateInput.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[0], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeStartDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function handleEndDateInputBlur() {\n        const date = strictParse(endDateInputRef.value, mergedDateFormatRef.value, new Date(), panelCommon.dateFnsOptions.value);\n        const { value } = props;\n        if (isValid(date)) {\n            if (value === null) {\n                const newValue = set(new Date(), {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n            else if (Array.isArray(value)) {\n                const newValue = set(value[1], {\n                    year: getYear(date),\n                    month: getMonth(date),\n                    date: getDate(date)\n                });\n                changeEndDateTime(sanitizeValue(getTime(newValue)));\n            }\n        }\n        else {\n            refreshDisplayDateString();\n        }\n    }\n    function refreshDisplayDateString(times) {\n        // If not selected, display nothing,\n        // else update datetime related string\n        const { value } = props;\n        if (value === null || !Array.isArray(value)) {\n            startDateInput.value = '';\n            endDateInputRef.value = '';\n            return;\n        }\n        if (times === undefined) {\n            times = value;\n        }\n        startDateInput.value = format(times[0], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n        endDateInputRef.value = format(times[1], mergedDateFormatRef.value, panelCommon.dateFnsOptions.value);\n    }\n    function handleStartTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeStartDateTime(value);\n    }\n    function handleEndTimePickerChange(value) {\n        if (value === null)\n            return;\n        changeEndDateTime(value);\n    }\n    function handleRangeShortcutMouseenter(shortcut) {\n        panelCommon.cachePendingValue();\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(...shortcutValue);\n    }\n    function handleRangeShortcutClick(shortcut) {\n        const shortcutValue = panelCommon.getShortcutValue(shortcut);\n        if (!Array.isArray(shortcutValue))\n            return;\n        changeStartEndTime(...shortcutValue);\n        panelCommon.clearPendingValue();\n        handleConfirmClick();\n    }\n    return Object.assign(Object.assign(Object.assign({ startDatesElRef,\n        endDatesElRef,\n        resetSelectingStatus,\n        handleDateClick,\n        handleDateMouseEnter,\n        handleConfirmClick,\n        startCalendarPrevYear,\n        startCalendarPrevMonth,\n        startCalendarNextYear,\n        startCalendarNextMonth,\n        endCalendarPrevYear,\n        endCalendarPrevMonth,\n        endCalendarNextMonth,\n        endCalendarNextYear,\n        mergedIsDateDisabled,\n        changeStartEndTime, ranges: rangesRef, startCalendarMonth: startCalendarMonthRef, startCalendarYear: startCalendarYearRef, endCalendarMonth: endCalendarMonthRef, endCalendarYear: endCalendarYearRef, weekdays: weekdaysRef, startDateArray: startDateArrayRef, endDateArray: endDateArrayRef, handleRangeShortcutMouseenter,\n        handleRangeShortcutClick }, panelCommon), validation), { \n        // datetimerangeonly\n        startDateDisplayString: startDateInput, endDateInput: endDateInputRef, timePickerSize: panelCommon.timePickerSize, startTimeValue: startTimeValueRef, endTimeValue: endTimeValueRef, handleFocusDetectorFocus: panelCommon.handleFocusDetectorFocus, handleStartTimePickerChange,\n        handleEndTimePickerChange,\n        handleStartDateInput,\n        handleStartDateInputBlur,\n        handleEndDateInput,\n        handleEndDateInputBlur,\n        datePickerSlots, shortcuts: shortcutsRef, startCalendarDateTime: startCalendarDateTimeRef, endCalendarDateTime: endCalendarDateTimeRef, onUpdateStartCalendarValue,\n        onUpdateEndCalendarValue });\n}\nexport { useDualCalendar, useDualCalendarProps };\n"]},"metadata":{},"sourceType":"module"}