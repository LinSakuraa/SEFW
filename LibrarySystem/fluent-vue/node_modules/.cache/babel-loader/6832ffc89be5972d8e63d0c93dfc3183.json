{"ast":null,"code":"import { inject, computed, ref } from 'vue';\nimport { get } from 'lodash-es';\nimport { formInjectionKey } from './context';\nimport { formatLength } from '../../_utils';\nexport function formItemSize(props) {\n  const NForm = inject(formInjectionKey, null);\n  return {\n    mergedSize: computed(() => {\n      if (props.size !== undefined) return props.size;\n      if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.size) !== undefined) return NForm.props.size;\n      return 'medium';\n    })\n  };\n} // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nexport function formItemMisc(props) {\n  const NForm = inject(formInjectionKey, null);\n  const mergedLabelWidthRef = computed(() => {\n    if (mergedLabelPlacementRef.value === 'top') return;\n    const {\n      labelWidth\n    } = props;\n\n    if (labelWidth !== undefined && labelWidth !== 'auto') {\n      return formatLength(labelWidth);\n    }\n\n    if (labelWidth === 'auto' || (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) === 'auto') {\n      const autoComputedWidth = NForm === null || NForm === void 0 ? void 0 : NForm.maxChildLabelWidthRef.value;\n\n      if (autoComputedWidth !== undefined) {\n        return formatLength(autoComputedWidth);\n      } else {\n        return undefined;\n      }\n    }\n\n    if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) !== undefined) {\n      return formatLength(NForm.props.labelWidth);\n    }\n\n    return undefined;\n  });\n  const mergedLabelPlacementRef = computed(() => {\n    const {\n      labelPlacement\n    } = props;\n    if (labelPlacement !== undefined) return labelPlacement;\n    if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelPlacement) return NForm.props.labelPlacement;\n    return 'top';\n  });\n  const mergedLabelAlignRef = computed(() => {\n    const {\n      labelAlign\n    } = props;\n    if (labelAlign) return labelAlign;\n    if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelAlign) return NForm.props.labelAlign;\n    return undefined;\n  });\n  const mergedLabelStyleRef = computed(() => {\n    var _a;\n\n    return [(_a = props.labelProps) === null || _a === void 0 ? void 0 : _a.style, props.labelStyle, {\n      width: mergedLabelWidthRef.value\n    }];\n  });\n  const mergedShowRequireMarkRef = computed(() => {\n    const {\n      showRequireMark\n    } = props;\n    if (showRequireMark !== undefined) return showRequireMark;\n    return NForm === null || NForm === void 0 ? void 0 : NForm.props.showRequireMark;\n  });\n  const mergedRequireMarkPlacementRef = computed(() => {\n    const {\n      requireMarkPlacement\n    } = props;\n    if (requireMarkPlacement !== undefined) return requireMarkPlacement;\n    return (NForm === null || NForm === void 0 ? void 0 : NForm.props.requireMarkPlacement) || 'right';\n  });\n  const validationErroredRef = ref(false);\n  const mergedValidationStatusRef = computed(() => {\n    const {\n      validationStatus\n    } = props;\n    if (validationStatus !== undefined) return validationStatus;\n    if (validationErroredRef.value) return 'error';\n    return undefined;\n  });\n  const mergedShowFeedbackRef = computed(() => {\n    const {\n      showFeedback\n    } = props;\n    if (showFeedback !== undefined) return showFeedback;\n    if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showFeedback) !== undefined) return NForm.props.showFeedback;\n    return true;\n  });\n  const mergedShowLabelRef = computed(() => {\n    const {\n      showLabel\n    } = props;\n    if (showLabel !== undefined) return showLabel;\n    if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showLabel) !== undefined) return NForm.props.showLabel;\n    return true;\n  });\n  return {\n    validationErrored: validationErroredRef,\n    mergedLabelStyle: mergedLabelStyleRef,\n    mergedLabelPlacement: mergedLabelPlacementRef,\n    mergedLabelAlign: mergedLabelAlignRef,\n    mergedShowRequireMark: mergedShowRequireMarkRef,\n    mergedRequireMarkPlacement: mergedRequireMarkPlacementRef,\n    mergedValidationStatus: mergedValidationStatusRef,\n    mergedShowFeedback: mergedShowFeedbackRef,\n    mergedShowLabel: mergedShowLabelRef\n  };\n} // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\nexport function formItemRule(props) {\n  const NForm = inject(formInjectionKey, null);\n  const compatibleRulePathRef = computed(() => {\n    const {\n      rulePath\n    } = props;\n    if (rulePath !== undefined) return rulePath;\n    const {\n      path\n    } = props;\n    if (path !== undefined) return path;\n    return undefined;\n  });\n  const mergedRulesRef = computed(() => {\n    const rules = [];\n    const {\n      rule\n    } = props;\n\n    if (rule !== undefined) {\n      if (Array.isArray(rule)) rules.push(...rule);else rules.push(rule);\n    }\n\n    if (NForm) {\n      const {\n        rules: formRules\n      } = NForm.props;\n      const {\n        value: rulePath\n      } = compatibleRulePathRef;\n\n      if (formRules !== undefined && rulePath !== undefined) {\n        const formRule = get(formRules, rulePath);\n\n        if (formRule !== undefined) {\n          if (Array.isArray(formRule)) {\n            rules.push(...formRule);\n          } else {\n            // terminate object must be a form item rule\n            rules.push(formRule);\n          }\n        }\n      }\n    }\n\n    return rules;\n  });\n  const hasRequiredRuleRef = computed(() => {\n    return mergedRulesRef.value.some(rule => rule.required);\n  }); // deprecated\n\n  const mergedRequiredRef = computed(() => {\n    return hasRequiredRuleRef.value || props.required;\n  });\n  return {\n    mergedRules: mergedRulesRef,\n    mergedRequired: mergedRequiredRef\n  };\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/form/src/utils.js"],"names":["inject","computed","ref","get","formInjectionKey","formatLength","formItemSize","props","NForm","mergedSize","size","undefined","formItemMisc","mergedLabelWidthRef","mergedLabelPlacementRef","value","labelWidth","autoComputedWidth","maxChildLabelWidthRef","labelPlacement","mergedLabelAlignRef","labelAlign","mergedLabelStyleRef","_a","labelProps","style","labelStyle","width","mergedShowRequireMarkRef","showRequireMark","mergedRequireMarkPlacementRef","requireMarkPlacement","validationErroredRef","mergedValidationStatusRef","validationStatus","mergedShowFeedbackRef","showFeedback","mergedShowLabelRef","showLabel","validationErrored","mergedLabelStyle","mergedLabelPlacement","mergedLabelAlign","mergedShowRequireMark","mergedRequireMarkPlacement","mergedValidationStatus","mergedShowFeedback","mergedShowLabel","formItemRule","compatibleRulePathRef","rulePath","path","mergedRulesRef","rules","rule","Array","isArray","push","formRules","formRule","hasRequiredRuleRef","some","required","mergedRequiredRef","mergedRules","mergedRequired"],"mappings":"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","sourcesContent":["import { inject, computed, ref } from 'vue';\nimport { get } from 'lodash-es';\nimport { formInjectionKey } from './context';\nimport { formatLength } from '../../_utils';\nexport function formItemSize(props) {\n    const NForm = inject(formInjectionKey, null);\n    return {\n        mergedSize: computed(() => {\n            if (props.size !== undefined)\n                return props.size;\n            if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.size) !== undefined)\n                return NForm.props.size;\n            return 'medium';\n        })\n    };\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function formItemMisc(props) {\n    const NForm = inject(formInjectionKey, null);\n    const mergedLabelWidthRef = computed(() => {\n        if (mergedLabelPlacementRef.value === 'top')\n            return;\n        const { labelWidth } = props;\n        if (labelWidth !== undefined && labelWidth !== 'auto') {\n            return formatLength(labelWidth);\n        }\n        if (labelWidth === 'auto' || (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) === 'auto') {\n            const autoComputedWidth = NForm === null || NForm === void 0 ? void 0 : NForm.maxChildLabelWidthRef.value;\n            if (autoComputedWidth !== undefined) {\n                return formatLength(autoComputedWidth);\n            }\n            else {\n                return undefined;\n            }\n        }\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.labelWidth) !== undefined) {\n            return formatLength(NForm.props.labelWidth);\n        }\n        return undefined;\n    });\n    const mergedLabelPlacementRef = computed(() => {\n        const { labelPlacement } = props;\n        if (labelPlacement !== undefined)\n            return labelPlacement;\n        if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelPlacement)\n            return NForm.props.labelPlacement;\n        return 'top';\n    });\n    const mergedLabelAlignRef = computed(() => {\n        const { labelAlign } = props;\n        if (labelAlign)\n            return labelAlign;\n        if (NForm === null || NForm === void 0 ? void 0 : NForm.props.labelAlign)\n            return NForm.props.labelAlign;\n        return undefined;\n    });\n    const mergedLabelStyleRef = computed(() => {\n        var _a;\n        return [\n            (_a = props.labelProps) === null || _a === void 0 ? void 0 : _a.style,\n            props.labelStyle,\n            {\n                width: mergedLabelWidthRef.value\n            }\n        ];\n    });\n    const mergedShowRequireMarkRef = computed(() => {\n        const { showRequireMark } = props;\n        if (showRequireMark !== undefined)\n            return showRequireMark;\n        return NForm === null || NForm === void 0 ? void 0 : NForm.props.showRequireMark;\n    });\n    const mergedRequireMarkPlacementRef = computed(() => {\n        const { requireMarkPlacement } = props;\n        if (requireMarkPlacement !== undefined)\n            return requireMarkPlacement;\n        return (NForm === null || NForm === void 0 ? void 0 : NForm.props.requireMarkPlacement) || 'right';\n    });\n    const validationErroredRef = ref(false);\n    const mergedValidationStatusRef = computed(() => {\n        const { validationStatus } = props;\n        if (validationStatus !== undefined)\n            return validationStatus;\n        if (validationErroredRef.value)\n            return 'error';\n        return undefined;\n    });\n    const mergedShowFeedbackRef = computed(() => {\n        const { showFeedback } = props;\n        if (showFeedback !== undefined)\n            return showFeedback;\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showFeedback) !== undefined)\n            return NForm.props.showFeedback;\n        return true;\n    });\n    const mergedShowLabelRef = computed(() => {\n        const { showLabel } = props;\n        if (showLabel !== undefined)\n            return showLabel;\n        if ((NForm === null || NForm === void 0 ? void 0 : NForm.props.showLabel) !== undefined)\n            return NForm.props.showLabel;\n        return true;\n    });\n    return {\n        validationErrored: validationErroredRef,\n        mergedLabelStyle: mergedLabelStyleRef,\n        mergedLabelPlacement: mergedLabelPlacementRef,\n        mergedLabelAlign: mergedLabelAlignRef,\n        mergedShowRequireMark: mergedShowRequireMarkRef,\n        mergedRequireMarkPlacement: mergedRequireMarkPlacementRef,\n        mergedValidationStatus: mergedValidationStatusRef,\n        mergedShowFeedback: mergedShowFeedbackRef,\n        mergedShowLabel: mergedShowLabelRef\n    };\n}\n// eslint-disable-next-line @typescript-eslint/explicit-function-return-type\nexport function formItemRule(props) {\n    const NForm = inject(formInjectionKey, null);\n    const compatibleRulePathRef = computed(() => {\n        const { rulePath } = props;\n        if (rulePath !== undefined)\n            return rulePath;\n        const { path } = props;\n        if (path !== undefined)\n            return path;\n        return undefined;\n    });\n    const mergedRulesRef = computed(() => {\n        const rules = [];\n        const { rule } = props;\n        if (rule !== undefined) {\n            if (Array.isArray(rule))\n                rules.push(...rule);\n            else\n                rules.push(rule);\n        }\n        if (NForm) {\n            const { rules: formRules } = NForm.props;\n            const { value: rulePath } = compatibleRulePathRef;\n            if (formRules !== undefined && rulePath !== undefined) {\n                const formRule = get(formRules, rulePath);\n                if (formRule !== undefined) {\n                    if (Array.isArray(formRule)) {\n                        rules.push(...formRule);\n                    }\n                    else {\n                        // terminate object must be a form item rule\n                        rules.push(formRule);\n                    }\n                }\n            }\n        }\n        return rules;\n    });\n    const hasRequiredRuleRef = computed(() => {\n        return mergedRulesRef.value.some((rule) => rule.required);\n    });\n    // deprecated\n    const mergedRequiredRef = computed(() => {\n        return hasRequiredRuleRef.value || props.required;\n    });\n    return {\n        mergedRules: mergedRulesRef,\n        mergedRequired: mergedRequiredRef\n    };\n}\n"]},"metadata":{},"sourceType":"module"}