{"ast":null,"code":"import { h, defineComponent, inject, computed } from 'vue';\nimport { NDropdown } from '../../../dropdown';\nimport { NBaseIcon } from '../../../_internal';\nimport { ChevronDownIcon } from '../../../_internal/icons';\nimport { dataTableInjectionKey } from '../interface';\nconst allKey = '_n_all__';\nconst noneKey = '_n_none__';\n\nfunction createSelectHandler(options, rawPaginatedDataRef, doCheckAll, doUncheckAll) {\n  if (!options) return () => {};\n  return key => {\n    for (const option of options) {\n      switch (key) {\n        case allKey:\n          doCheckAll(true);\n          return;\n\n        case noneKey:\n          doUncheckAll(true);\n          return;\n\n        default:\n          if (typeof option === 'object' && option.key === key) {\n            option.onSelect(rawPaginatedDataRef.value);\n            return;\n          }\n\n      }\n    }\n  };\n}\n\nfunction createDropdownOptions(options, localeRef) {\n  if (!options) return [];\n  return options.map(option => {\n    switch (option) {\n      case 'all':\n        return {\n          label: localeRef.checkTableAll,\n          key: allKey\n        };\n\n      case 'none':\n        return {\n          label: localeRef.uncheckTableAll,\n          key: noneKey\n        };\n\n      default:\n        return option;\n    }\n  });\n}\n\nexport default defineComponent({\n  name: 'DataTableSelectionMenu',\n  props: {\n    clsPrefix: {\n      type: String,\n      required: true\n    }\n  },\n\n  setup() {\n    const {\n      localeRef,\n      checkOptionsRef,\n      rawPaginatedDataRef,\n      doCheckAll,\n      doUncheckAll // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    } = inject(dataTableInjectionKey);\n    return {\n      handleSelect: computed(() => createSelectHandler(checkOptionsRef.value, rawPaginatedDataRef, doCheckAll, doUncheckAll)),\n      options: computed(() => createDropdownOptions(checkOptionsRef.value, localeRef.value))\n    };\n  },\n\n  render() {\n    const {\n      clsPrefix\n    } = this;\n    return h(NDropdown, {\n      options: this.options,\n      onSelect: this.handleSelect\n    }, {\n      default: () => h(NBaseIcon, {\n        clsPrefix: clsPrefix,\n        class: `${clsPrefix}-data-table-check-extra`\n      }, {\n        default: () => h(ChevronDownIcon, null)\n      })\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/data-table/src/TableParts/SelectionMenu.js"],"names":["h","defineComponent","inject","computed","NDropdown","NBaseIcon","ChevronDownIcon","dataTableInjectionKey","allKey","noneKey","createSelectHandler","options","rawPaginatedDataRef","doCheckAll","doUncheckAll","key","option","onSelect","value","createDropdownOptions","localeRef","map","label","checkTableAll","uncheckTableAll","name","props","clsPrefix","type","String","required","setup","checkOptionsRef","handleSelect","render","default","class"],"mappings":"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","sourcesContent":["import { h, defineComponent, inject, computed } from 'vue';\nimport { NDropdown } from '../../../dropdown';\nimport { NBaseIcon } from '../../../_internal';\nimport { ChevronDownIcon } from '../../../_internal/icons';\nimport { dataTableInjectionKey } from '../interface';\nconst allKey = '_n_all__';\nconst noneKey = '_n_none__';\nfunction createSelectHandler(options, rawPaginatedDataRef, doCheckAll, doUncheckAll) {\n    if (!options)\n        return () => { };\n    return (key) => {\n        for (const option of options) {\n            switch (key) {\n                case allKey:\n                    doCheckAll(true);\n                    return;\n                case noneKey:\n                    doUncheckAll(true);\n                    return;\n                default:\n                    if (typeof option === 'object' && option.key === key) {\n                        option.onSelect(rawPaginatedDataRef.value);\n                        return;\n                    }\n            }\n        }\n    };\n}\nfunction createDropdownOptions(options, localeRef) {\n    if (!options)\n        return [];\n    return options.map((option) => {\n        switch (option) {\n            case 'all':\n                return {\n                    label: localeRef.checkTableAll,\n                    key: allKey\n                };\n            case 'none':\n                return {\n                    label: localeRef.uncheckTableAll,\n                    key: noneKey\n                };\n            default:\n                return option;\n        }\n    });\n}\nexport default defineComponent({\n    name: 'DataTableSelectionMenu',\n    props: {\n        clsPrefix: {\n            type: String,\n            required: true\n        }\n    },\n    setup() {\n        const { localeRef, checkOptionsRef, rawPaginatedDataRef, doCheckAll, doUncheckAll\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n         } = inject(dataTableInjectionKey);\n        return {\n            handleSelect: computed(() => createSelectHandler(checkOptionsRef.value, rawPaginatedDataRef, doCheckAll, doUncheckAll)),\n            options: computed(() => createDropdownOptions(checkOptionsRef.value, localeRef.value))\n        };\n    },\n    render() {\n        const { clsPrefix } = this;\n        return (h(NDropdown, { options: this.options, onSelect: this.handleSelect }, {\n            default: () => (h(NBaseIcon, { clsPrefix: clsPrefix, class: `${clsPrefix}-data-table-check-extra` }, {\n                default: () => h(ChevronDownIcon, null)\n            }))\n        }));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}