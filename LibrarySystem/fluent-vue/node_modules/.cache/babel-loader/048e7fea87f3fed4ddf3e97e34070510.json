{"ast":null,"code":"import { render } from './render';\nimport { mount, unmount } from './mount';\n\nfunction wrappedRender(props) {\n  return render(this, this.instance, props);\n} // do not guard node calling, it should throw an error.\n\n\nfunction wrappedMount(options = {} // eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n  const {\n    id,\n    ssr,\n    props,\n    head = false,\n    silent = false,\n    force = false,\n    anchorMetaName\n  } = options;\n  const targetElement = mount(this.instance, this, id, props, head, silent, force, anchorMetaName, ssr);\n  return targetElement;\n}\n\nfunction wrappedUnmount(options = {}) {\n  /* istanbul ignore next */\n  // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n  const {\n    id\n  } = options;\n  unmount(this.instance, this, id);\n}\n\nconst createCNode = function (instance, $, props, children) {\n  return {\n    instance,\n    $,\n    props,\n    children,\n    els: [],\n    render: wrappedRender,\n    mount: wrappedMount,\n    unmount: wrappedUnmount\n  };\n};\n\nexport const c = function (instance, $, props, children) {\n  if (Array.isArray($)) {\n    return createCNode(instance, {\n      $: null\n    }, null, $);\n  } else if (Array.isArray(props)) {\n    return createCNode(instance, $, null, props);\n  } else if (Array.isArray(children)) {\n    return createCNode(instance, $, props, children);\n  } else {\n    return createCNode(instance, $, props, null);\n  }\n};","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/css-render/esm/c.js"],"names":["render","mount","unmount","wrappedRender","props","instance","wrappedMount","options","id","ssr","head","silent","force","anchorMetaName","targetElement","wrappedUnmount","createCNode","$","children","els","c","Array","isArray"],"mappings":"AAAA,SAASA,MAAT,QAAuB,UAAvB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,SAA/B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC1B,SAAOJ,MAAM,CAAC,IAAD,EAAO,KAAKK,QAAZ,EAAsBD,KAAtB,CAAb;AACH,C,CACD;;;AACA,SAASE,YAAT,CAAsBC,OAAO,GAAG,EAAhC,CACA;AADA,EAEE;AACE,QAAM;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,GAAN;AAAWL,IAAAA,KAAX;AAAkBM,IAAAA,IAAI,GAAG,KAAzB;AAAgCC,IAAAA,MAAM,GAAG,KAAzC;AAAgDC,IAAAA,KAAK,GAAG,KAAxD;AAA+DC,IAAAA;AAA/D,MAAkFN,OAAxF;AACA,QAAMO,aAAa,GAAGb,KAAK,CAAC,KAAKI,QAAN,EAAgB,IAAhB,EAAsBG,EAAtB,EAA0BJ,KAA1B,EAAiCM,IAAjC,EAAuCC,MAAvC,EAA+CC,KAA/C,EAAsDC,cAAtD,EAAsEJ,GAAtE,CAA3B;AACA,SAAOK,aAAP;AACH;;AACD,SAASC,cAAT,CAAwBR,OAAO,GAAG,EAAlC,EAAsC;AAClC;AACA;AACA,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAf;AACAL,EAAAA,OAAO,CAAC,KAAKG,QAAN,EAAgB,IAAhB,EAAsBG,EAAtB,CAAP;AACH;;AACD,MAAMQ,WAAW,GAAG,UAAUX,QAAV,EAAoBY,CAApB,EAAuBb,KAAvB,EAA8Bc,QAA9B,EAAwC;AACxD,SAAO;AACHb,IAAAA,QADG;AAEHY,IAAAA,CAFG;AAGHb,IAAAA,KAHG;AAIHc,IAAAA,QAJG;AAKHC,IAAAA,GAAG,EAAE,EALF;AAMHnB,IAAAA,MAAM,EAAEG,aANL;AAOHF,IAAAA,KAAK,EAAEK,YAPJ;AAQHJ,IAAAA,OAAO,EAAEa;AARN,GAAP;AAUH,CAXD;;AAYA,OAAO,MAAMK,CAAC,GAAG,UAAUf,QAAV,EAAoBY,CAApB,EAAuBb,KAAvB,EAA8Bc,QAA9B,EAAwC;AACrD,MAAIG,KAAK,CAACC,OAAN,CAAcL,CAAd,CAAJ,EAAsB;AAClB,WAAOD,WAAW,CAACX,QAAD,EAAW;AAAEY,MAAAA,CAAC,EAAE;AAAL,KAAX,EAAwB,IAAxB,EAA8BA,CAA9B,CAAlB;AACH,GAFD,MAGK,IAAII,KAAK,CAACC,OAAN,CAAclB,KAAd,CAAJ,EAA0B;AAC3B,WAAOY,WAAW,CAACX,QAAD,EAAWY,CAAX,EAAc,IAAd,EAAoBb,KAApB,CAAlB;AACH,GAFI,MAGA,IAAIiB,KAAK,CAACC,OAAN,CAAcJ,QAAd,CAAJ,EAA6B;AAC9B,WAAOF,WAAW,CAACX,QAAD,EAAWY,CAAX,EAAcb,KAAd,EAAqBc,QAArB,CAAlB;AACH,GAFI,MAGA;AACD,WAAOF,WAAW,CAACX,QAAD,EAAWY,CAAX,EAAcb,KAAd,EAAqB,IAArB,CAAlB;AACH;AACJ,CAbM","sourcesContent":["import { render } from './render';\nimport { mount, unmount } from './mount';\nfunction wrappedRender(props) {\n    return render(this, this.instance, props);\n}\n// do not guard node calling, it should throw an error.\nfunction wrappedMount(options = {}\n// eslint-disable-next-line @typescript-eslint/no-invalid-void-type\n) {\n    const { id, ssr, props, head = false, silent = false, force = false, anchorMetaName } = options;\n    const targetElement = mount(this.instance, this, id, props, head, silent, force, anchorMetaName, ssr);\n    return targetElement;\n}\nfunction wrappedUnmount(options = {}) {\n    /* istanbul ignore next */\n    // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n    const { id } = options;\n    unmount(this.instance, this, id);\n}\nconst createCNode = function (instance, $, props, children) {\n    return {\n        instance,\n        $,\n        props,\n        children,\n        els: [],\n        render: wrappedRender,\n        mount: wrappedMount,\n        unmount: wrappedUnmount\n    };\n};\nexport const c = function (instance, $, props, children) {\n    if (Array.isArray($)) {\n        return createCNode(instance, { $: null }, null, $);\n    }\n    else if (Array.isArray(props)) {\n        return createCNode(instance, $, null, props);\n    }\n    else if (Array.isArray(children)) {\n        return createCNode(instance, $, props, children);\n    }\n    else {\n        return createCNode(instance, $, props, null);\n    }\n};\n"]},"metadata":{},"sourceType":"module"}