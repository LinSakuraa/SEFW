{"ast":null,"code":"import { ref, computed, onMounted, onBeforeUnmount, defineComponent, h } from 'vue';\nimport { unwrapElement, beforeNextFrameOnce } from 'seemly';\nimport { useConfig, useStyle } from '../../_mixins';\nimport { warn, keysOf } from '../../_utils';\nimport { getScrollTop, getRect } from './utils';\nimport style from './styles/index.cssr';\nexport const affixProps = {\n  listenTo: [String, Object, Function],\n  top: Number,\n  bottom: Number,\n  triggerTop: Number,\n  triggerBottom: Number,\n  position: {\n    type: String,\n    default: 'fix'\n  },\n  // deprecated\n  offsetTop: {\n    type: Number,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('affix', '`offset-top` is deprecated, please use `trigger-top` instead.');\n      }\n\n      return true;\n    },\n    default: undefined\n  },\n  offsetBottom: {\n    type: Number,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('affix', '`offset-bottom` is deprecated, please use `trigger-bottom` instead.');\n      }\n\n      return true;\n    },\n    default: undefined\n  },\n  target: {\n    type: Function,\n    validator: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        warn('affix', '`target` is deprecated, please use `listen-to` instead.');\n      }\n\n      return true;\n    },\n    default: undefined\n  }\n};\nexport const affixPropKeys = keysOf(affixProps);\nexport default defineComponent({\n  name: 'Affix',\n  props: affixProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    useStyle('-affix', style, mergedClsPrefixRef);\n    let scrollTarget = null;\n    const stickToTopRef = ref(false);\n    const stickToBottomRef = ref(false);\n    const bottomAffixedTriggerScrollTopRef = ref(null);\n    const topAffixedTriggerScrollTopRef = ref(null);\n    const affixedRef = computed(() => {\n      return stickToBottomRef.value || stickToTopRef.value;\n    });\n    const mergedOffsetTopRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = props.triggerTop) !== null && _a !== void 0 ? _a : props.offsetTop) !== null && _b !== void 0 ? _b : props.top;\n    });\n    const mergedTopRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = props.top) !== null && _a !== void 0 ? _a : props.triggerTop) !== null && _b !== void 0 ? _b : props.offsetTop;\n    });\n    const mergedBottomRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = props.bottom) !== null && _a !== void 0 ? _a : props.triggerBottom) !== null && _b !== void 0 ? _b : props.offsetBottom;\n    });\n    const mergedOffsetBottomRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = props.triggerBottom) !== null && _a !== void 0 ? _a : props.offsetBottom) !== null && _b !== void 0 ? _b : props.bottom;\n    });\n    const selfRef = ref(null);\n\n    const init = () => {\n      const {\n        target: getScrollTarget,\n        listenTo\n      } = props;\n\n      if (getScrollTarget) {\n        // deprecated\n        scrollTarget = getScrollTarget();\n      } else if (listenTo) {\n        scrollTarget = unwrapElement(listenTo);\n      } else {\n        scrollTarget = document;\n      }\n\n      if (scrollTarget) {\n        scrollTarget.addEventListener('scroll', handleScroll);\n        handleScroll();\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('affix', 'Target to be listened to is not valid.');\n      }\n    };\n\n    function handleScroll() {\n      beforeNextFrameOnce(_handleScroll);\n    }\n\n    function _handleScroll() {\n      const {\n        value: selfEl\n      } = selfRef;\n      if (!scrollTarget || !selfEl) return;\n      const scrollTop = getScrollTop(scrollTarget);\n\n      if (affixedRef.value) {\n        if (scrollTop < topAffixedTriggerScrollTopRef.value) {\n          stickToTopRef.value = false;\n          topAffixedTriggerScrollTopRef.value = null;\n        }\n\n        if (scrollTop > bottomAffixedTriggerScrollTopRef.value) {\n          stickToBottomRef.value = false;\n          bottomAffixedTriggerScrollTopRef.value = null;\n        }\n\n        return;\n      }\n\n      const containerRect = getRect(scrollTarget);\n      const affixRect = selfEl.getBoundingClientRect();\n      const pxToTop = affixRect.top - containerRect.top;\n      const pxToBottom = containerRect.bottom - affixRect.bottom;\n      const mergedOffsetTop = mergedOffsetTopRef.value;\n      const mergedOffsetBottom = mergedOffsetBottomRef.value;\n\n      if (mergedOffsetTop !== undefined && pxToTop <= mergedOffsetTop) {\n        stickToTopRef.value = true;\n        topAffixedTriggerScrollTopRef.value = scrollTop - (mergedOffsetTop - pxToTop);\n      } else {\n        stickToTopRef.value = false;\n        topAffixedTriggerScrollTopRef.value = null;\n      }\n\n      if (mergedOffsetBottom !== undefined && pxToBottom <= mergedOffsetBottom) {\n        stickToBottomRef.value = true;\n        bottomAffixedTriggerScrollTopRef.value = scrollTop + mergedOffsetBottom - pxToBottom;\n      } else {\n        stickToBottomRef.value = false;\n        bottomAffixedTriggerScrollTopRef.value = null;\n      }\n    }\n\n    onMounted(() => {\n      init();\n    });\n    onBeforeUnmount(() => {\n      if (!scrollTarget) return;\n      scrollTarget.removeEventListener('scroll', handleScroll);\n    });\n    return {\n      selfRef,\n      affixed: affixedRef,\n      mergedClsPrefix: mergedClsPrefixRef,\n      mergedstyle: computed(() => {\n        const style = {};\n\n        if (stickToTopRef.value && mergedOffsetTopRef.value !== undefined && mergedTopRef.value !== undefined) {\n          style.top = `${mergedTopRef.value}px`;\n        }\n\n        if (stickToBottomRef.value && mergedOffsetBottomRef.value !== undefined && mergedBottomRef.value !== undefined) {\n          style.bottom = `${mergedBottomRef.value}px`;\n        }\n\n        return style;\n      })\n    };\n  },\n\n  render() {\n    const {\n      mergedClsPrefix\n    } = this;\n    return h(\"div\", {\n      ref: \"selfRef\",\n      class: [`${mergedClsPrefix}-affix`, {\n        [`${mergedClsPrefix}-affix--affixed`]: this.affixed,\n        [`${mergedClsPrefix}-affix--absolute-positioned`]: this.position === 'absolute'\n      }],\n      style: this.mergedstyle\n    }, this.$slots);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/affix/src/Affix.js"],"names":["ref","computed","onMounted","onBeforeUnmount","defineComponent","h","unwrapElement","beforeNextFrameOnce","useConfig","useStyle","warn","keysOf","getScrollTop","getRect","style","affixProps","listenTo","String","Object","Function","top","Number","bottom","triggerTop","triggerBottom","position","type","default","offsetTop","validator","process","env","NODE_ENV","undefined","offsetBottom","target","affixPropKeys","name","props","setup","mergedClsPrefixRef","scrollTarget","stickToTopRef","stickToBottomRef","bottomAffixedTriggerScrollTopRef","topAffixedTriggerScrollTopRef","affixedRef","value","mergedOffsetTopRef","_a","_b","mergedTopRef","mergedBottomRef","mergedOffsetBottomRef","selfRef","init","getScrollTarget","document","addEventListener","handleScroll","_handleScroll","selfEl","scrollTop","containerRect","affixRect","getBoundingClientRect","pxToTop","pxToBottom","mergedOffsetTop","mergedOffsetBottom","removeEventListener","affixed","mergedClsPrefix","mergedstyle","render","class","$slots"],"mappings":"AAAA,SAASA,GAAT,EAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,eAAnC,EAAoDC,eAApD,EAAqEC,CAArE,QAA8E,KAA9E;AACA,SAASC,aAAT,EAAwBC,mBAAxB,QAAmD,QAAnD;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,eAApC;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,cAA7B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,SAAtC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,MAAMC,UAAU,GAAG;AACtBC,EAAAA,QAAQ,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,QAAjB,CADY;AAEtBC,EAAAA,GAAG,EAAEC,MAFiB;AAGtBC,EAAAA,MAAM,EAAED,MAHc;AAItBE,EAAAA,UAAU,EAAEF,MAJU;AAKtBG,EAAAA,aAAa,EAAEH,MALO;AAMtBI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAET,MADA;AAENU,IAAAA,OAAO,EAAE;AAFH,GANY;AAUtB;AACAC,EAAAA,SAAS,EAAE;AACPF,IAAAA,IAAI,EAAEL,MADC;AAEPQ,IAAAA,SAAS,EAAE,MAAM;AACb,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCtB,QAAAA,IAAI,CAAC,OAAD,EAAU,+DAAV,CAAJ;AACH;;AACD,aAAO,IAAP;AACH,KAPM;AAQPiB,IAAAA,OAAO,EAAEM;AARF,GAXW;AAqBtBC,EAAAA,YAAY,EAAE;AACVR,IAAAA,IAAI,EAAEL,MADI;AAEVQ,IAAAA,SAAS,EAAE,MAAM;AACb,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCtB,QAAAA,IAAI,CAAC,OAAD,EAAU,qEAAV,CAAJ;AACH;;AACD,aAAO,IAAP;AACH,KAPS;AAQViB,IAAAA,OAAO,EAAEM;AARC,GArBQ;AA+BtBE,EAAAA,MAAM,EAAE;AACJT,IAAAA,IAAI,EAAEP,QADF;AAEJU,IAAAA,SAAS,EAAE,MAAM;AACb,UAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCtB,QAAAA,IAAI,CAAC,OAAD,EAAU,yDAAV,CAAJ;AACH;;AACD,aAAO,IAAP;AACH,KAPG;AAQJiB,IAAAA,OAAO,EAAEM;AARL;AA/Bc,CAAnB;AA0CP,OAAO,MAAMG,aAAa,GAAGzB,MAAM,CAACI,UAAD,CAA5B;AACP,eAAeX,eAAe,CAAC;AAC3BiC,EAAAA,IAAI,EAAE,OADqB;AAE3BC,EAAAA,KAAK,EAAEvB,UAFoB;;AAG3BwB,EAAAA,KAAK,CAACD,KAAD,EAAQ;AACT,UAAM;AAAEE,MAAAA;AAAF,QAAyBhC,SAAS,CAAC8B,KAAD,CAAxC;AACA7B,IAAAA,QAAQ,CAAC,QAAD,EAAWK,KAAX,EAAkB0B,kBAAlB,CAAR;AACA,QAAIC,YAAY,GAAG,IAAnB;AACA,UAAMC,aAAa,GAAG1C,GAAG,CAAC,KAAD,CAAzB;AACA,UAAM2C,gBAAgB,GAAG3C,GAAG,CAAC,KAAD,CAA5B;AACA,UAAM4C,gCAAgC,GAAG5C,GAAG,CAAC,IAAD,CAA5C;AACA,UAAM6C,6BAA6B,GAAG7C,GAAG,CAAC,IAAD,CAAzC;AACA,UAAM8C,UAAU,GAAG7C,QAAQ,CAAC,MAAM;AAC9B,aAAO0C,gBAAgB,CAACI,KAAjB,IAA0BL,aAAa,CAACK,KAA/C;AACH,KAF0B,CAA3B;AAGA,UAAMC,kBAAkB,GAAG/C,QAAQ,CAAC,MAAM;AACtC,UAAIgD,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGX,KAAK,CAACf,UAAZ,MAA4B,IAA5B,IAAoC0B,EAAE,KAAK,KAAK,CAAhD,GAAoDA,EAApD,GAAyDX,KAAK,CAACV,SAArE,MAAoF,IAApF,IAA4FsB,EAAE,KAAK,KAAK,CAAxG,GAA4GA,EAA5G,GAAiHZ,KAAK,CAAClB,GAA9H;AACH,KAHkC,CAAnC;AAIA,UAAM+B,YAAY,GAAGlD,QAAQ,CAAC,MAAM;AAChC,UAAIgD,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGX,KAAK,CAAClB,GAAZ,MAAqB,IAArB,IAA6B6B,EAAE,KAAK,KAAK,CAAzC,GAA6CA,EAA7C,GAAkDX,KAAK,CAACf,UAA9D,MAA8E,IAA9E,IAAsF2B,EAAE,KAAK,KAAK,CAAlG,GAAsGA,EAAtG,GAA2GZ,KAAK,CAACV,SAAxH;AACH,KAH4B,CAA7B;AAIA,UAAMwB,eAAe,GAAGnD,QAAQ,CAAC,MAAM;AACnC,UAAIgD,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGX,KAAK,CAAChB,MAAZ,MAAwB,IAAxB,IAAgC2B,EAAE,KAAK,KAAK,CAA5C,GAAgDA,EAAhD,GAAqDX,KAAK,CAACd,aAAjE,MAAoF,IAApF,IAA4F0B,EAAE,KAAK,KAAK,CAAxG,GAA4GA,EAA5G,GAAiHZ,KAAK,CAACJ,YAA9H;AACH,KAH+B,CAAhC;AAIA,UAAMmB,qBAAqB,GAAGpD,QAAQ,CAAC,MAAM;AACzC,UAAIgD,EAAJ,EAAQC,EAAR;;AACA,aAAO,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGX,KAAK,CAACd,aAAZ,MAA+B,IAA/B,IAAuCyB,EAAE,KAAK,KAAK,CAAnD,GAAuDA,EAAvD,GAA4DX,KAAK,CAACJ,YAAxE,MAA0F,IAA1F,IAAkGgB,EAAE,KAAK,KAAK,CAA9G,GAAkHA,EAAlH,GAAuHZ,KAAK,CAAChB,MAApI;AACH,KAHqC,CAAtC;AAIA,UAAMgC,OAAO,GAAGtD,GAAG,CAAC,IAAD,CAAnB;;AACA,UAAMuD,IAAI,GAAG,MAAM;AACf,YAAM;AAAEpB,QAAAA,MAAM,EAAEqB,eAAV;AAA2BxC,QAAAA;AAA3B,UAAwCsB,KAA9C;;AACA,UAAIkB,eAAJ,EAAqB;AACjB;AACAf,QAAAA,YAAY,GAAGe,eAAe,EAA9B;AACH,OAHD,MAIK,IAAIxC,QAAJ,EAAc;AACfyB,QAAAA,YAAY,GAAGnC,aAAa,CAACU,QAAD,CAA5B;AACH,OAFI,MAGA;AACDyB,QAAAA,YAAY,GAAGgB,QAAf;AACH;;AACD,UAAIhB,YAAJ,EAAkB;AACdA,QAAAA,YAAY,CAACiB,gBAAb,CAA8B,QAA9B,EAAwCC,YAAxC;AACAA,QAAAA,YAAY;AACf,OAHD,MAIK,IAAI7B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AAC5CtB,QAAAA,IAAI,CAAC,OAAD,EAAU,wCAAV,CAAJ;AACH;AACJ,KAnBD;;AAoBA,aAASiD,YAAT,GAAwB;AACpBpD,MAAAA,mBAAmB,CAACqD,aAAD,CAAnB;AACH;;AACD,aAASA,aAAT,GAAyB;AACrB,YAAM;AAAEb,QAAAA,KAAK,EAAEc;AAAT,UAAoBP,OAA1B;AACA,UAAI,CAACb,YAAD,IAAiB,CAACoB,MAAtB,EACI;AACJ,YAAMC,SAAS,GAAGlD,YAAY,CAAC6B,YAAD,CAA9B;;AACA,UAAIK,UAAU,CAACC,KAAf,EAAsB;AAClB,YAAIe,SAAS,GAAGjB,6BAA6B,CAACE,KAA9C,EAAqD;AACjDL,UAAAA,aAAa,CAACK,KAAd,GAAsB,KAAtB;AACAF,UAAAA,6BAA6B,CAACE,KAA9B,GAAsC,IAAtC;AACH;;AACD,YAAIe,SAAS,GAAGlB,gCAAgC,CAACG,KAAjD,EAAwD;AACpDJ,UAAAA,gBAAgB,CAACI,KAAjB,GAAyB,KAAzB;AACAH,UAAAA,gCAAgC,CAACG,KAAjC,GAAyC,IAAzC;AACH;;AACD;AACH;;AACD,YAAMgB,aAAa,GAAGlD,OAAO,CAAC4B,YAAD,CAA7B;AACA,YAAMuB,SAAS,GAAGH,MAAM,CAACI,qBAAP,EAAlB;AACA,YAAMC,OAAO,GAAGF,SAAS,CAAC5C,GAAV,GAAgB2C,aAAa,CAAC3C,GAA9C;AACA,YAAM+C,UAAU,GAAGJ,aAAa,CAACzC,MAAd,GAAuB0C,SAAS,CAAC1C,MAApD;AACA,YAAM8C,eAAe,GAAGpB,kBAAkB,CAACD,KAA3C;AACA,YAAMsB,kBAAkB,GAAGhB,qBAAqB,CAACN,KAAjD;;AACA,UAAIqB,eAAe,KAAKnC,SAApB,IAAiCiC,OAAO,IAAIE,eAAhD,EAAiE;AAC7D1B,QAAAA,aAAa,CAACK,KAAd,GAAsB,IAAtB;AACAF,QAAAA,6BAA6B,CAACE,KAA9B,GACIe,SAAS,IAAIM,eAAe,GAAGF,OAAtB,CADb;AAEH,OAJD,MAKK;AACDxB,QAAAA,aAAa,CAACK,KAAd,GAAsB,KAAtB;AACAF,QAAAA,6BAA6B,CAACE,KAA9B,GAAsC,IAAtC;AACH;;AACD,UAAIsB,kBAAkB,KAAKpC,SAAvB,IACAkC,UAAU,IAAIE,kBADlB,EACsC;AAClC1B,QAAAA,gBAAgB,CAACI,KAAjB,GAAyB,IAAzB;AACAH,QAAAA,gCAAgC,CAACG,KAAjC,GACIe,SAAS,GAAGO,kBAAZ,GAAiCF,UADrC;AAEH,OALD,MAMK;AACDxB,QAAAA,gBAAgB,CAACI,KAAjB,GAAyB,KAAzB;AACAH,QAAAA,gCAAgC,CAACG,KAAjC,GAAyC,IAAzC;AACH;AACJ;;AACD7C,IAAAA,SAAS,CAAC,MAAM;AACZqD,MAAAA,IAAI;AACP,KAFQ,CAAT;AAGApD,IAAAA,eAAe,CAAC,MAAM;AAClB,UAAI,CAACsC,YAAL,EACI;AACJA,MAAAA,YAAY,CAAC6B,mBAAb,CAAiC,QAAjC,EAA2CX,YAA3C;AACH,KAJc,CAAf;AAKA,WAAO;AACHL,MAAAA,OADG;AAEHiB,MAAAA,OAAO,EAAEzB,UAFN;AAGH0B,MAAAA,eAAe,EAAEhC,kBAHd;AAIHiC,MAAAA,WAAW,EAAExE,QAAQ,CAAC,MAAM;AACxB,cAAMa,KAAK,GAAG,EAAd;;AACA,YAAI4B,aAAa,CAACK,KAAd,IACAC,kBAAkB,CAACD,KAAnB,KAA6Bd,SAD7B,IAEAkB,YAAY,CAACJ,KAAb,KAAuBd,SAF3B,EAEsC;AAClCnB,UAAAA,KAAK,CAACM,GAAN,GAAa,GAAE+B,YAAY,CAACJ,KAAM,IAAlC;AACH;;AACD,YAAIJ,gBAAgB,CAACI,KAAjB,IACAM,qBAAqB,CAACN,KAAtB,KAAgCd,SADhC,IAEAmB,eAAe,CAACL,KAAhB,KAA0Bd,SAF9B,EAEyC;AACrCnB,UAAAA,KAAK,CAACQ,MAAN,GAAgB,GAAE8B,eAAe,CAACL,KAAM,IAAxC;AACH;;AACD,eAAOjC,KAAP;AACH,OAboB;AAJlB,KAAP;AAmBH,GA3H0B;;AA4H3B4D,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEF,MAAAA;AAAF,QAAsB,IAA5B;AACA,WAAQnE,CAAC,CAAC,KAAD,EAAQ;AAAEL,MAAAA,GAAG,EAAE,SAAP;AAAkB2E,MAAAA,KAAK,EAAE,CACjC,GAAEH,eAAgB,QADe,EAElC;AACI,SAAE,GAAEA,eAAgB,iBAApB,GAAuC,KAAKD,OADhD;AAEI,SAAE,GAAEC,eAAgB,6BAApB,GAAmD,KAAK/C,QAAL,KAAkB;AAFzE,OAFkC,CAAzB;AAMVX,MAAAA,KAAK,EAAE,KAAK2D;AANF,KAAR,EAMyB,KAAKG,MAN9B,CAAT;AAOH;;AArI0B,CAAD,CAA9B","sourcesContent":["import { ref, computed, onMounted, onBeforeUnmount, defineComponent, h } from 'vue';\nimport { unwrapElement, beforeNextFrameOnce } from 'seemly';\nimport { useConfig, useStyle } from '../../_mixins';\nimport { warn, keysOf } from '../../_utils';\nimport { getScrollTop, getRect } from './utils';\nimport style from './styles/index.cssr';\nexport const affixProps = {\n    listenTo: [String, Object, Function],\n    top: Number,\n    bottom: Number,\n    triggerTop: Number,\n    triggerBottom: Number,\n    position: {\n        type: String,\n        default: 'fix'\n    },\n    // deprecated\n    offsetTop: {\n        type: Number,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('affix', '`offset-top` is deprecated, please use `trigger-top` instead.');\n            }\n            return true;\n        },\n        default: undefined\n    },\n    offsetBottom: {\n        type: Number,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('affix', '`offset-bottom` is deprecated, please use `trigger-bottom` instead.');\n            }\n            return true;\n        },\n        default: undefined\n    },\n    target: {\n        type: Function,\n        validator: () => {\n            if (process.env.NODE_ENV !== 'production') {\n                warn('affix', '`target` is deprecated, please use `listen-to` instead.');\n            }\n            return true;\n        },\n        default: undefined\n    }\n};\nexport const affixPropKeys = keysOf(affixProps);\nexport default defineComponent({\n    name: 'Affix',\n    props: affixProps,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        useStyle('-affix', style, mergedClsPrefixRef);\n        let scrollTarget = null;\n        const stickToTopRef = ref(false);\n        const stickToBottomRef = ref(false);\n        const bottomAffixedTriggerScrollTopRef = ref(null);\n        const topAffixedTriggerScrollTopRef = ref(null);\n        const affixedRef = computed(() => {\n            return stickToBottomRef.value || stickToTopRef.value;\n        });\n        const mergedOffsetTopRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = props.triggerTop) !== null && _a !== void 0 ? _a : props.offsetTop) !== null && _b !== void 0 ? _b : props.top;\n        });\n        const mergedTopRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = props.top) !== null && _a !== void 0 ? _a : props.triggerTop) !== null && _b !== void 0 ? _b : props.offsetTop;\n        });\n        const mergedBottomRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = props.bottom) !== null && _a !== void 0 ? _a : props.triggerBottom) !== null && _b !== void 0 ? _b : props.offsetBottom;\n        });\n        const mergedOffsetBottomRef = computed(() => {\n            var _a, _b;\n            return (_b = (_a = props.triggerBottom) !== null && _a !== void 0 ? _a : props.offsetBottom) !== null && _b !== void 0 ? _b : props.bottom;\n        });\n        const selfRef = ref(null);\n        const init = () => {\n            const { target: getScrollTarget, listenTo } = props;\n            if (getScrollTarget) {\n                // deprecated\n                scrollTarget = getScrollTarget();\n            }\n            else if (listenTo) {\n                scrollTarget = unwrapElement(listenTo);\n            }\n            else {\n                scrollTarget = document;\n            }\n            if (scrollTarget) {\n                scrollTarget.addEventListener('scroll', handleScroll);\n                handleScroll();\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                warn('affix', 'Target to be listened to is not valid.');\n            }\n        };\n        function handleScroll() {\n            beforeNextFrameOnce(_handleScroll);\n        }\n        function _handleScroll() {\n            const { value: selfEl } = selfRef;\n            if (!scrollTarget || !selfEl)\n                return;\n            const scrollTop = getScrollTop(scrollTarget);\n            if (affixedRef.value) {\n                if (scrollTop < topAffixedTriggerScrollTopRef.value) {\n                    stickToTopRef.value = false;\n                    topAffixedTriggerScrollTopRef.value = null;\n                }\n                if (scrollTop > bottomAffixedTriggerScrollTopRef.value) {\n                    stickToBottomRef.value = false;\n                    bottomAffixedTriggerScrollTopRef.value = null;\n                }\n                return;\n            }\n            const containerRect = getRect(scrollTarget);\n            const affixRect = selfEl.getBoundingClientRect();\n            const pxToTop = affixRect.top - containerRect.top;\n            const pxToBottom = containerRect.bottom - affixRect.bottom;\n            const mergedOffsetTop = mergedOffsetTopRef.value;\n            const mergedOffsetBottom = mergedOffsetBottomRef.value;\n            if (mergedOffsetTop !== undefined && pxToTop <= mergedOffsetTop) {\n                stickToTopRef.value = true;\n                topAffixedTriggerScrollTopRef.value =\n                    scrollTop - (mergedOffsetTop - pxToTop);\n            }\n            else {\n                stickToTopRef.value = false;\n                topAffixedTriggerScrollTopRef.value = null;\n            }\n            if (mergedOffsetBottom !== undefined &&\n                pxToBottom <= mergedOffsetBottom) {\n                stickToBottomRef.value = true;\n                bottomAffixedTriggerScrollTopRef.value =\n                    scrollTop + mergedOffsetBottom - pxToBottom;\n            }\n            else {\n                stickToBottomRef.value = false;\n                bottomAffixedTriggerScrollTopRef.value = null;\n            }\n        }\n        onMounted(() => {\n            init();\n        });\n        onBeforeUnmount(() => {\n            if (!scrollTarget)\n                return;\n            scrollTarget.removeEventListener('scroll', handleScroll);\n        });\n        return {\n            selfRef,\n            affixed: affixedRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            mergedstyle: computed(() => {\n                const style = {};\n                if (stickToTopRef.value &&\n                    mergedOffsetTopRef.value !== undefined &&\n                    mergedTopRef.value !== undefined) {\n                    style.top = `${mergedTopRef.value}px`;\n                }\n                if (stickToBottomRef.value &&\n                    mergedOffsetBottomRef.value !== undefined &&\n                    mergedBottomRef.value !== undefined) {\n                    style.bottom = `${mergedBottomRef.value}px`;\n                }\n                return style;\n            })\n        };\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { ref: \"selfRef\", class: [\n                `${mergedClsPrefix}-affix`,\n                {\n                    [`${mergedClsPrefix}-affix--affixed`]: this.affixed,\n                    [`${mergedClsPrefix}-affix--absolute-positioned`]: this.position === 'absolute'\n                }\n            ], style: this.mergedstyle }, this.$slots));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}