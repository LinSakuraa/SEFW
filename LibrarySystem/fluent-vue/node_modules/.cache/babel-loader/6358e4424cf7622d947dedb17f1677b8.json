{"ast":null,"code":"import { DesignToken } from '@microsoft/fast-foundation';\n/**\n * Define shadow algorithms.\n *\n * TODO: The --background-luminance will need to be derived from JavaScript. For now\n * this is hard-coded to a 1, the relative luminance of pure white.\n * https://github.com/microsoft/fast/issues/2778\n * opacity was `calc(.11 * (2 - var(--background-luminance, 1)))`\n *\n * @internal\n * @deprecated Use elevationShadow design token\n */\n\nexport const ambientShadow = '0 0 2px rgba(0, 0, 0, 0.14)';\n/**\n * @internal\n * @deprecated Use elevationShadow design token\n */\n\nexport const directionalShadow = '0 calc(var(--elevation) * 0.5px) calc((var(--elevation) * 1px)) rgba(0, 0, 0, 0.2)';\n/**\n * Applies the box-shadow CSS rule set to the elevation formula.\n * Control this formula with the --elevation CSS Custom Property\n * by setting --elevation to a number.\n *\n * @public\n * @deprecated Use elevationShadow design token\n */\n\nexport const elevation = `box-shadow: ${ambientShadow}, ${directionalShadow};`;\n/**\n * @public\n */\n\nexport const elevationShadowRecipe = DesignToken.create({\n  name: 'elevation-shadow',\n  cssCustomPropertyName: null\n}).withDefault({\n  evaluate: (element, size, reference) => {\n    let ambientOpacity = 0.12;\n    let directionalOpacity = 0.14;\n\n    if (size > 16) {\n      ambientOpacity = 0.2;\n      directionalOpacity = 0.24;\n    }\n\n    const ambient = `0 0 2px rgba(0, 0, 0, ${ambientOpacity})`;\n    const directional = `0 calc(${size} * 0.5px) calc((${size} * 1px)) rgba(0, 0, 0, ${directionalOpacity})`;\n    return `${ambient}, ${directional}`;\n  }\n});\n/** @public */\n\nexport const elevationShadowCardRestSize = DesignToken.create('elevation-shadow-card-rest-size').withDefault(4);\n/** @public */\n\nexport const elevationShadowCardHoverSize = DesignToken.create('elevation-shadow-card-hover-size').withDefault(8);\n/** @public */\n\nexport const elevationShadowCardActiveSize = DesignToken.create('elevation-shadow-card-active-size').withDefault(0);\n/** @public */\n\nexport const elevationShadowCardFocusSize = DesignToken.create('elevation-shadow-card-focus-size').withDefault(8);\n/** @public */\n\nexport const elevationShadowCardRest = DesignToken.create('elevation-shadow-card-rest').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardRestSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowCardHover = DesignToken.create('elevation-shadow-card-hover').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardHoverSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowCardActive = DesignToken.create('elevation-shadow-card-active').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardActiveSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowCardFocus = DesignToken.create('elevation-shadow-card-focus').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardFocusSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowTooltipSize = DesignToken.create('elevation-shadow-tooltip-size').withDefault(16);\n/** @public */\n\nexport const elevationShadowTooltip = DesignToken.create('elevation-shadow-tooltip').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowTooltipSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowFlyoutSize = DesignToken.create('elevation-shadow-flyout-size').withDefault(32);\n/** @public */\n\nexport const elevationShadowFlyout = DesignToken.create('elevation-shadow-flyout').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowFlyoutSize.getValueFor(element)));\n/** @public */\n\nexport const elevationShadowDialogSize = DesignToken.create('elevation-shadow-dialog-size').withDefault(128);\n/** @public */\n\nexport const elevationShadowDialog = DesignToken.create('elevation-shadow-dialog').withDefault(element => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowDialogSize.getValueFor(element)));","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/styles/elevation.js"],"names":["DesignToken","ambientShadow","directionalShadow","elevation","elevationShadowRecipe","create","name","cssCustomPropertyName","withDefault","evaluate","element","size","reference","ambientOpacity","directionalOpacity","ambient","directional","elevationShadowCardRestSize","elevationShadowCardHoverSize","elevationShadowCardActiveSize","elevationShadowCardFocusSize","elevationShadowCardRest","getValueFor","elevationShadowCardHover","elevationShadowCardActive","elevationShadowCardFocus","elevationShadowTooltipSize","elevationShadowTooltip","elevationShadowFlyoutSize","elevationShadowFlyout","elevationShadowDialogSize","elevationShadowDialog"],"mappings":"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","sourcesContent":["import { DesignToken } from '@microsoft/fast-foundation';\n/**\n * Define shadow algorithms.\n *\n * TODO: The --background-luminance will need to be derived from JavaScript. For now\n * this is hard-coded to a 1, the relative luminance of pure white.\n * https://github.com/microsoft/fast/issues/2778\n * opacity was `calc(.11 * (2 - var(--background-luminance, 1)))`\n *\n * @internal\n * @deprecated Use elevationShadow design token\n */\nexport const ambientShadow = '0 0 2px rgba(0, 0, 0, 0.14)';\n/**\n * @internal\n * @deprecated Use elevationShadow design token\n */\nexport const directionalShadow = '0 calc(var(--elevation) * 0.5px) calc((var(--elevation) * 1px)) rgba(0, 0, 0, 0.2)';\n/**\n * Applies the box-shadow CSS rule set to the elevation formula.\n * Control this formula with the --elevation CSS Custom Property\n * by setting --elevation to a number.\n *\n * @public\n * @deprecated Use elevationShadow design token\n */\nexport const elevation = `box-shadow: ${ambientShadow}, ${directionalShadow};`;\n/**\n * @public\n */\nexport const elevationShadowRecipe = DesignToken.create({\n    name: 'elevation-shadow',\n    cssCustomPropertyName: null,\n}).withDefault({\n    evaluate: (element, size, reference) => {\n        let ambientOpacity = 0.12;\n        let directionalOpacity = 0.14;\n        if (size > 16) {\n            ambientOpacity = 0.2;\n            directionalOpacity = 0.24;\n        }\n        const ambient = `0 0 2px rgba(0, 0, 0, ${ambientOpacity})`;\n        const directional = `0 calc(${size} * 0.5px) calc((${size} * 1px)) rgba(0, 0, 0, ${directionalOpacity})`;\n        return `${ambient}, ${directional}`;\n    },\n});\n/** @public */\nexport const elevationShadowCardRestSize = DesignToken.create('elevation-shadow-card-rest-size').withDefault(4);\n/** @public */\nexport const elevationShadowCardHoverSize = DesignToken.create('elevation-shadow-card-hover-size').withDefault(8);\n/** @public */\nexport const elevationShadowCardActiveSize = DesignToken.create('elevation-shadow-card-active-size').withDefault(0);\n/** @public */\nexport const elevationShadowCardFocusSize = DesignToken.create('elevation-shadow-card-focus-size').withDefault(8);\n/** @public */\nexport const elevationShadowCardRest = DesignToken.create('elevation-shadow-card-rest').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardRestSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowCardHover = DesignToken.create('elevation-shadow-card-hover').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardHoverSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowCardActive = DesignToken.create('elevation-shadow-card-active').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardActiveSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowCardFocus = DesignToken.create('elevation-shadow-card-focus').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowCardFocusSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowTooltipSize = DesignToken.create('elevation-shadow-tooltip-size').withDefault(16);\n/** @public */\nexport const elevationShadowTooltip = DesignToken.create('elevation-shadow-tooltip').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowTooltipSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowFlyoutSize = DesignToken.create('elevation-shadow-flyout-size').withDefault(32);\n/** @public */\nexport const elevationShadowFlyout = DesignToken.create('elevation-shadow-flyout').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowFlyoutSize.getValueFor(element)));\n/** @public */\nexport const elevationShadowDialogSize = DesignToken.create('elevation-shadow-dialog-size').withDefault(128);\n/** @public */\nexport const elevationShadowDialog = DesignToken.create('elevation-shadow-dialog').withDefault((element) => elevationShadowRecipe.getValueFor(element).evaluate(element, elevationShadowDialogSize.getValueFor(element)));\n"]},"metadata":{},"sourceType":"module"}