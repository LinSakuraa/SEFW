{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { attr, nullableNumberConverter, observable } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * An Progress HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#progressbar | ARIA progressbar }.\n *\n * @public\n */\n\nexport class BaseProgress extends FoundationElement {\n  constructor() {\n    super(...arguments);\n    /**\n     * Indicates progress in %\n     * @internal\n     */\n\n    this.percentComplete = 0;\n  }\n\n  valueChanged() {\n    if (this.$fastController.isConnected) {\n      this.updatePercentComplete();\n    }\n  }\n\n  minChanged() {\n    if (this.$fastController.isConnected) {\n      this.updatePercentComplete();\n    }\n  }\n\n  maxChanged() {\n    if (this.$fastController.isConnected) {\n      this.updatePercentComplete();\n    }\n  }\n  /**\n   * @internal\n   */\n\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.updatePercentComplete();\n  }\n\n  updatePercentComplete() {\n    const min = typeof this.min === \"number\" ? this.min : 0;\n    const max = typeof this.max === \"number\" ? this.max : 100;\n    const value = typeof this.value === \"number\" ? this.value : 0;\n    const range = max - min;\n    this.percentComplete = range === 0 ? 0 : Math.fround((value - min) / range * 100);\n  }\n\n}\n\n__decorate([attr({\n  converter: nullableNumberConverter\n})], BaseProgress.prototype, \"value\", void 0);\n\n__decorate([attr({\n  converter: nullableNumberConverter\n})], BaseProgress.prototype, \"min\", void 0);\n\n__decorate([attr({\n  converter: nullableNumberConverter\n})], BaseProgress.prototype, \"max\", void 0);\n\n__decorate([attr({\n  mode: \"boolean\"\n})], BaseProgress.prototype, \"paused\", void 0);\n\n__decorate([observable], BaseProgress.prototype, \"percentComplete\", void 0);","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/progress/base-progress.js"],"names":["__decorate","attr","nullableNumberConverter","observable","FoundationElement","BaseProgress","constructor","arguments","percentComplete","valueChanged","$fastController","isConnected","updatePercentComplete","minChanged","maxChanged","connectedCallback","min","max","value","range","Math","fround","converter","prototype","mode"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,EAAeC,uBAAf,EAAwCC,UAAxC,QAA2D,yBAA3D;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAN,SAA2BD,iBAA3B,CAA6C;AAChDE,EAAAA,WAAW,GAAG;AACV,UAAM,GAAGC,SAAT;AACA;AACR;AACA;AACA;;AACQ,SAAKC,eAAL,GAAuB,CAAvB;AACH;;AACDC,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKC,eAAL,CAAqBC,WAAzB,EAAsC;AAClC,WAAKC,qBAAL;AACH;AACJ;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKH,eAAL,CAAqBC,WAAzB,EAAsC;AAClC,WAAKC,qBAAL;AACH;AACJ;;AACDE,EAAAA,UAAU,GAAG;AACT,QAAI,KAAKJ,eAAL,CAAqBC,WAAzB,EAAsC;AAClC,WAAKC,qBAAL;AACH;AACJ;AACD;AACJ;AACA;;;AACIG,EAAAA,iBAAiB,GAAG;AAChB,UAAMA,iBAAN;AACA,SAAKH,qBAAL;AACH;;AACDA,EAAAA,qBAAqB,GAAG;AACpB,UAAMI,GAAG,GAAG,OAAO,KAAKA,GAAZ,KAAoB,QAApB,GAA+B,KAAKA,GAApC,GAA0C,CAAtD;AACA,UAAMC,GAAG,GAAG,OAAO,KAAKA,GAAZ,KAAoB,QAApB,GAA+B,KAAKA,GAApC,GAA0C,GAAtD;AACA,UAAMC,KAAK,GAAG,OAAO,KAAKA,KAAZ,KAAsB,QAAtB,GAAiC,KAAKA,KAAtC,GAA8C,CAA5D;AACA,UAAMC,KAAK,GAAGF,GAAG,GAAGD,GAApB;AACA,SAAKR,eAAL,GACIW,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkBC,IAAI,CAACC,MAAL,CAAa,CAACH,KAAK,GAAGF,GAAT,IAAgBG,KAAjB,GAA0B,GAAtC,CADtB;AAEH;;AAtC+C;;AAwCpDnB,UAAU,CAAC,CACPC,IAAI,CAAC;AAAEqB,EAAAA,SAAS,EAAEpB;AAAb,CAAD,CADG,CAAD,EAEPG,YAAY,CAACkB,SAFN,EAEiB,OAFjB,EAE0B,KAAK,CAF/B,CAAV;;AAGAvB,UAAU,CAAC,CACPC,IAAI,CAAC;AAAEqB,EAAAA,SAAS,EAAEpB;AAAb,CAAD,CADG,CAAD,EAEPG,YAAY,CAACkB,SAFN,EAEiB,KAFjB,EAEwB,KAAK,CAF7B,CAAV;;AAGAvB,UAAU,CAAC,CACPC,IAAI,CAAC;AAAEqB,EAAAA,SAAS,EAAEpB;AAAb,CAAD,CADG,CAAD,EAEPG,YAAY,CAACkB,SAFN,EAEiB,KAFjB,EAEwB,KAAK,CAF7B,CAAV;;AAGAvB,UAAU,CAAC,CACPC,IAAI,CAAC;AAAEuB,EAAAA,IAAI,EAAE;AAAR,CAAD,CADG,CAAD,EAEPnB,YAAY,CAACkB,SAFN,EAEiB,QAFjB,EAE2B,KAAK,CAFhC,CAAV;;AAGAvB,UAAU,CAAC,CACPG,UADO,CAAD,EAEPE,YAAY,CAACkB,SAFN,EAEiB,iBAFjB,EAEoC,KAAK,CAFzC,CAAV","sourcesContent":["import { __decorate } from \"tslib\";\nimport { attr, nullableNumberConverter, observable, } from \"@microsoft/fast-element\";\nimport { FoundationElement } from \"../foundation-element\";\n/**\n * An Progress HTML Element.\n * Implements the {@link https://www.w3.org/TR/wai-aria-1.1/#progressbar | ARIA progressbar }.\n *\n * @public\n */\nexport class BaseProgress extends FoundationElement {\n    constructor() {\n        super(...arguments);\n        /**\n         * Indicates progress in %\n         * @internal\n         */\n        this.percentComplete = 0;\n    }\n    valueChanged() {\n        if (this.$fastController.isConnected) {\n            this.updatePercentComplete();\n        }\n    }\n    minChanged() {\n        if (this.$fastController.isConnected) {\n            this.updatePercentComplete();\n        }\n    }\n    maxChanged() {\n        if (this.$fastController.isConnected) {\n            this.updatePercentComplete();\n        }\n    }\n    /**\n     * @internal\n     */\n    connectedCallback() {\n        super.connectedCallback();\n        this.updatePercentComplete();\n    }\n    updatePercentComplete() {\n        const min = typeof this.min === \"number\" ? this.min : 0;\n        const max = typeof this.max === \"number\" ? this.max : 100;\n        const value = typeof this.value === \"number\" ? this.value : 0;\n        const range = max - min;\n        this.percentComplete =\n            range === 0 ? 0 : Math.fround(((value - min) / range) * 100);\n    }\n}\n__decorate([\n    attr({ converter: nullableNumberConverter })\n], BaseProgress.prototype, \"value\", void 0);\n__decorate([\n    attr({ converter: nullableNumberConverter })\n], BaseProgress.prototype, \"min\", void 0);\n__decorate([\n    attr({ converter: nullableNumberConverter })\n], BaseProgress.prototype, \"max\", void 0);\n__decorate([\n    attr({ mode: \"boolean\" })\n], BaseProgress.prototype, \"paused\", void 0);\n__decorate([\n    observable\n], BaseProgress.prototype, \"percentComplete\", void 0);\n"]},"metadata":{},"sourceType":"module"}