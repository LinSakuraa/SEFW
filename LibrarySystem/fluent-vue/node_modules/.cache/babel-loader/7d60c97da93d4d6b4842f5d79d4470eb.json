{"ast":null,"code":"import { h, defineComponent, onMounted, nextTick } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NButton, NxButton } from '../../../button';\nimport { NBaseFocusDetector, NScrollbar } from '../../../_internal';\nimport { MONTH_ITEM_HEIGHT } from '../config';\nimport { useCalendar, useCalendarProps } from './use-calendar';\n/**\n * Month Panel\n * Update picker value on:\n * 1. item click\n * 2. clear click\n */\n\nexport default defineComponent({\n  name: 'MonthPanel',\n  props: Object.assign(Object.assign({}, useCalendarProps), {\n    type: {\n      type: String,\n      required: true\n    },\n    // panelHeader prop\n    useAsQuickJump: Boolean\n  }),\n\n  setup(props) {\n    const useCalendarRef = useCalendar(props, props.type);\n\n    const getRenderContent = item => {\n      switch (item.type) {\n        case 'year':\n          return item.dateObject.year;\n\n        case 'month':\n          return item.dateObject.month + 1;\n\n        case 'quarter':\n          return `Q ${item.dateObject.quarter}`;\n      }\n    };\n\n    const renderItem = (item, i, mergedClsPrefix) => {\n      const {\n        mergedIsDateDisabled,\n        handleDateClick,\n        handleQuickMonthClick\n      } = useCalendarRef;\n      return h(\"div\", {\n        \"data-n-date\": true,\n        key: i,\n        class: [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item`, {\n          [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--current`]: item.isCurrent,\n          [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--selected`]: item.selected,\n          [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--disabled`]: mergedIsDateDisabled(item.ts)\n        }],\n        onClick: () => {\n          props.useAsQuickJump ? handleQuickMonthClick(item, value => props.onUpdateValue(value, false)) : handleDateClick(item);\n        }\n      }, getRenderContent(item));\n    };\n\n    onMounted(() => {\n      void nextTick(useCalendarRef.scrollPickerColumns);\n    });\n    return Object.assign(Object.assign({}, useCalendarRef), {\n      renderItem\n    });\n  },\n\n  render() {\n    const {\n      mergedClsPrefix,\n      mergedTheme,\n      shortcuts,\n      actions,\n      renderItem,\n      type,\n      onRender\n    } = this;\n    onRender === null || onRender === void 0 ? void 0 : onRender();\n    return h(\"div\", {\n      ref: \"selfRef\",\n      tabindex: 0,\n      class: [`${mergedClsPrefix}-date-panel`, `${mergedClsPrefix}-date-panel--month`, this.themeClass],\n      onFocus: this.handlePanelFocus,\n      onKeydown: this.handlePanelKeyDown\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month-calendar`\n    }, h(NScrollbar, {\n      ref: \"scrollbarInstRef\",\n      class: `${mergedClsPrefix}-date-panel-month-calendar__picker-col`,\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar,\n      container: this.virtualListContainer,\n      content: this.virtualListContent,\n      horizontalRailStyle: {\n        zIndex: 1\n      },\n      verticalRailStyle: {\n        zIndex: 1\n      }\n    }, {\n      default: () => h(VirtualList, {\n        ref: \"yearScrollRef\",\n        items: this.yearArray,\n        itemSize: MONTH_ITEM_HEIGHT,\n        showScrollbar: false,\n        keyField: \"ts\",\n        onScroll: this.handleVirtualListScroll,\n        paddingBottom: 4\n      }, {\n        default: ({\n          item,\n          index\n        }) => {\n          return renderItem(item, index, mergedClsPrefix);\n        }\n      })\n    }), type === 'month' || type === 'quarter' ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-month-calendar__picker-col`\n    }, h(NScrollbar, {\n      ref: \"monthScrollRef\",\n      theme: mergedTheme.peers.Scrollbar,\n      themeOverrides: mergedTheme.peerOverrides.Scrollbar\n    }, {\n      default: () => [(type === 'month' ? this.monthArray : this.quarterArray).map((item, i) => renderItem(item, i, mergedClsPrefix)), h(\"div\", {\n        class: `${mergedClsPrefix}-date-panel-${type}-calendar__padding`\n      })]\n    })) : null), this.datePickerSlots.footer ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-footer`\n    }, {\n      default: this.datePickerSlots.footer\n    }) : null, (actions === null || actions === void 0 ? void 0 : actions.length) || shortcuts ? h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions`\n    }, h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions__prefix`\n    }, shortcuts && Object.keys(shortcuts).map(key => {\n      const shortcut = shortcuts[key];\n      return Array.isArray(shortcut) ? null : h(NxButton, {\n        size: \"tiny\",\n        onMouseenter: () => {\n          this.handleSingleShortcutMouseenter(shortcut);\n        },\n        onClick: () => {\n          this.handleSingleShortcutClick(shortcut);\n        },\n        onMouseleave: () => {\n          this.handleShortcutMouseleave();\n        }\n      }, {\n        default: () => key\n      });\n    })), h(\"div\", {\n      class: `${mergedClsPrefix}-date-panel-actions__suffix`\n    }, (actions === null || actions === void 0 ? void 0 : actions.includes('clear')) ? h(NButton, {\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"tiny\",\n      onClick: this.handleClearClick\n    }, {\n      default: () => this.locale.clear\n    }) : null, (actions === null || actions === void 0 ? void 0 : actions.includes('now')) ? h(NButton, {\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"tiny\",\n      onClick: this.handleNowClick\n    }, {\n      default: () => this.locale.now\n    }) : null, (actions === null || actions === void 0 ? void 0 : actions.includes('confirm')) ? h(NButton, {\n      theme: mergedTheme.peers.Button,\n      themeOverrides: mergedTheme.peerOverrides.Button,\n      size: \"tiny\",\n      type: \"primary\",\n      disabled: this.isDateInvalid,\n      onClick: this.handleConfirmClick\n    }, {\n      default: () => this.locale.confirm\n    }) : null)) : null, h(NBaseFocusDetector, {\n      onFocus: this.handleFocusDetectorFocus\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/date-picker/src/panel/month.js"],"names":["h","defineComponent","onMounted","nextTick","VirtualList","NButton","NxButton","NBaseFocusDetector","NScrollbar","MONTH_ITEM_HEIGHT","useCalendar","useCalendarProps","name","props","Object","assign","type","String","required","useAsQuickJump","Boolean","setup","useCalendarRef","getRenderContent","item","dateObject","year","month","quarter","renderItem","i","mergedClsPrefix","mergedIsDateDisabled","handleDateClick","handleQuickMonthClick","key","class","isCurrent","selected","ts","onClick","value","onUpdateValue","scrollPickerColumns","render","mergedTheme","shortcuts","actions","onRender","ref","tabindex","themeClass","onFocus","handlePanelFocus","onKeydown","handlePanelKeyDown","theme","peers","Scrollbar","themeOverrides","peerOverrides","container","virtualListContainer","content","virtualListContent","horizontalRailStyle","zIndex","verticalRailStyle","default","items","yearArray","itemSize","showScrollbar","keyField","onScroll","handleVirtualListScroll","paddingBottom","index","monthArray","quarterArray","map","datePickerSlots","footer","length","keys","shortcut","Array","isArray","size","onMouseenter","handleSingleShortcutMouseenter","handleSingleShortcutClick","onMouseleave","handleShortcutMouseleave","includes","Button","handleClearClick","locale","clear","handleNowClick","now","disabled","isDateInvalid","handleConfirmClick","confirm","handleFocusDetectorFocus"],"mappings":"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","sourcesContent":["import { h, defineComponent, onMounted, nextTick } from 'vue';\nimport { VirtualList } from 'vueuc';\nimport { NButton, NxButton } from '../../../button';\nimport { NBaseFocusDetector, NScrollbar } from '../../../_internal';\nimport { MONTH_ITEM_HEIGHT } from '../config';\nimport { useCalendar, useCalendarProps } from './use-calendar';\n/**\n * Month Panel\n * Update picker value on:\n * 1. item click\n * 2. clear click\n */\nexport default defineComponent({\n    name: 'MonthPanel',\n    props: Object.assign(Object.assign({}, useCalendarProps), { type: {\n            type: String,\n            required: true\n        }, \n        // panelHeader prop\n        useAsQuickJump: Boolean }),\n    setup(props) {\n        const useCalendarRef = useCalendar(props, props.type);\n        const getRenderContent = (item) => {\n            switch (item.type) {\n                case 'year':\n                    return item.dateObject.year;\n                case 'month':\n                    return item.dateObject.month + 1;\n                case 'quarter':\n                    return `Q ${item.dateObject.quarter}`;\n            }\n        };\n        const renderItem = (item, i, mergedClsPrefix) => {\n            const { mergedIsDateDisabled, handleDateClick, handleQuickMonthClick } = useCalendarRef;\n            return (h(\"div\", { \"data-n-date\": true, key: i, class: [\n                    `${mergedClsPrefix}-date-panel-month-calendar__picker-col-item`,\n                    {\n                        [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--current`]: item.isCurrent,\n                        [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--selected`]: item.selected,\n                        [`${mergedClsPrefix}-date-panel-month-calendar__picker-col-item--disabled`]: mergedIsDateDisabled(item.ts)\n                    }\n                ], onClick: () => {\n                    props.useAsQuickJump\n                        ? handleQuickMonthClick(item, (value) => props.onUpdateValue(value, false))\n                        : handleDateClick(item);\n                } }, getRenderContent(item)));\n        };\n        onMounted(() => {\n            void nextTick(useCalendarRef.scrollPickerColumns);\n        });\n        return Object.assign(Object.assign({}, useCalendarRef), { renderItem });\n    },\n    render() {\n        const { mergedClsPrefix, mergedTheme, shortcuts, actions, renderItem, type, onRender } = this;\n        onRender === null || onRender === void 0 ? void 0 : onRender();\n        return (h(\"div\", { ref: \"selfRef\", tabindex: 0, class: [\n                `${mergedClsPrefix}-date-panel`,\n                `${mergedClsPrefix}-date-panel--month`,\n                this.themeClass\n            ], onFocus: this.handlePanelFocus, onKeydown: this.handlePanelKeyDown },\n            h(\"div\", { class: `${mergedClsPrefix}-date-panel-month-calendar` },\n                h(NScrollbar, { ref: \"scrollbarInstRef\", class: `${mergedClsPrefix}-date-panel-month-calendar__picker-col`, theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar, container: this.virtualListContainer, content: this.virtualListContent, horizontalRailStyle: { zIndex: 1 }, verticalRailStyle: { zIndex: 1 } }, {\n                    default: () => (h(VirtualList, { ref: \"yearScrollRef\", items: this.yearArray, itemSize: MONTH_ITEM_HEIGHT, showScrollbar: false, keyField: \"ts\", onScroll: this.handleVirtualListScroll, paddingBottom: 4 }, {\n                        default: ({ item, index }) => {\n                            return renderItem(item, index, mergedClsPrefix);\n                        }\n                    }))\n                }),\n                type === 'month' || type === 'quarter' ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-month-calendar__picker-col` },\n                    h(NScrollbar, { ref: \"monthScrollRef\", theme: mergedTheme.peers.Scrollbar, themeOverrides: mergedTheme.peerOverrides.Scrollbar }, {\n                        default: () => [\n                            (type === 'month'\n                                ? this.monthArray\n                                : this.quarterArray).map((item, i) => renderItem(item, i, mergedClsPrefix)),\n                            h(\"div\", { class: `${mergedClsPrefix}-date-panel-${type}-calendar__padding` })\n                        ]\n                    }))) : null),\n            this.datePickerSlots.footer ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-footer` }, {\n                default: this.datePickerSlots.footer\n            })) : null,\n            (actions === null || actions === void 0 ? void 0 : actions.length) || shortcuts ? (h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions` },\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions__prefix` }, shortcuts &&\n                    Object.keys(shortcuts).map((key) => {\n                        const shortcut = shortcuts[key];\n                        return Array.isArray(shortcut) ? null : (h(NxButton, { size: \"tiny\", onMouseenter: () => {\n                                this.handleSingleShortcutMouseenter(shortcut);\n                            }, onClick: () => {\n                                this.handleSingleShortcutClick(shortcut);\n                            }, onMouseleave: () => {\n                                this.handleShortcutMouseleave();\n                            } }, { default: () => key }));\n                    })),\n                h(\"div\", { class: `${mergedClsPrefix}-date-panel-actions__suffix` },\n                    (actions === null || actions === void 0 ? void 0 : actions.includes('clear')) ? (h(NButton, { theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"tiny\", onClick: this.handleClearClick }, { default: () => this.locale.clear })) : null,\n                    (actions === null || actions === void 0 ? void 0 : actions.includes('now')) ? (h(NButton, { theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"tiny\", onClick: this.handleNowClick }, { default: () => this.locale.now })) : null,\n                    (actions === null || actions === void 0 ? void 0 : actions.includes('confirm')) ? (h(NButton, { theme: mergedTheme.peers.Button, themeOverrides: mergedTheme.peerOverrides.Button, size: \"tiny\", type: \"primary\", disabled: this.isDateInvalid, onClick: this.handleConfirmClick }, { default: () => this.locale.confirm })) : null))) : null,\n            h(NBaseFocusDetector, { onFocus: this.handleFocusDetectorFocus })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}