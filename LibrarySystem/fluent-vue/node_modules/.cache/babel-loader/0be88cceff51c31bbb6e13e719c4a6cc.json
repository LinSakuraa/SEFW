{"ast":null,"code":"/**\n * Apply mixins to a constructor.\n * Sourced from {@link https://www.typescriptlang.org/docs/handbook/mixins.html | TypeScript Documentation }.\n * @public\n */\nexport function applyMixins(derivedCtor, ...baseCtors) {\n  baseCtors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n      if (name !== \"constructor\") {\n        Object.defineProperty(derivedCtor.prototype, name,\n        /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n        Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n      }\n    });\n\n    if (baseCtor.attributes) {\n      const existing = derivedCtor.attributes || [];\n      derivedCtor.attributes = existing.concat(baseCtor.attributes);\n    }\n  });\n}","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@microsoft/fast-foundation/dist/esm/utilities/apply-mixins.js"],"names":["applyMixins","derivedCtor","baseCtors","forEach","baseCtor","Object","getOwnPropertyNames","prototype","name","defineProperty","getOwnPropertyDescriptor","attributes","existing","concat"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CAAqBC,WAArB,EAAkC,GAAGC,SAArC,EAAgD;AACnDA,EAAAA,SAAS,CAACC,OAAV,CAAkBC,QAAQ,IAAI;AAC1BC,IAAAA,MAAM,CAACC,mBAAP,CAA2BF,QAAQ,CAACG,SAApC,EAA+CJ,OAA/C,CAAuDK,IAAI,IAAI;AAC3D,UAAIA,IAAI,KAAK,aAAb,EAA4B;AACxBH,QAAAA,MAAM,CAACI,cAAP,CAAsBR,WAAW,CAACM,SAAlC,EAA6CC,IAA7C;AACA;AACAH,QAAAA,MAAM,CAACK,wBAAP,CAAgCN,QAAQ,CAACG,SAAzC,EAAoDC,IAApD,CAFA;AAGH;AACJ,KAND;;AAOA,QAAIJ,QAAQ,CAACO,UAAb,EAAyB;AACrB,YAAMC,QAAQ,GAAGX,WAAW,CAACU,UAAZ,IAA0B,EAA3C;AACAV,MAAAA,WAAW,CAACU,UAAZ,GAAyBC,QAAQ,CAACC,MAAT,CAAgBT,QAAQ,CAACO,UAAzB,CAAzB;AACH;AACJ,GAZD;AAaH","sourcesContent":["/**\n * Apply mixins to a constructor.\n * Sourced from {@link https://www.typescriptlang.org/docs/handbook/mixins.html | TypeScript Documentation }.\n * @public\n */\nexport function applyMixins(derivedCtor, ...baseCtors) {\n    baseCtors.forEach(baseCtor => {\n        Object.getOwnPropertyNames(baseCtor.prototype).forEach(name => {\n            if (name !== \"constructor\") {\n                Object.defineProperty(derivedCtor.prototype, name, \n                /* eslint-disable-next-line @typescript-eslint/no-non-null-assertion */\n                Object.getOwnPropertyDescriptor(baseCtor.prototype, name));\n            }\n        });\n        if (baseCtor.attributes) {\n            const existing = derivedCtor.attributes || [];\n            derivedCtor.attributes = existing.concat(baseCtor.attributes);\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}