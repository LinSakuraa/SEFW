{"ast":null,"code":"import commonVariables from './_common';\nimport { changeColor } from 'seemly';\nimport { commonDark } from '../../_styles/common';\nconst tagDark = {\n  name: 'Tag',\n  common: commonDark,\n\n  self(vars) {\n    const {\n      textColor2,\n      primaryColorHover,\n      primaryColorPressed,\n      primaryColor,\n      infoColor,\n      successColor,\n      warningColor,\n      errorColor,\n      baseColor,\n      borderColor,\n      opacityDisabled,\n      closeColor,\n      closeColorHover,\n      closeColorPressed,\n      borderRadiusSmall: borderRadius,\n      fontSizeTiny,\n      fontSizeSmall,\n      fontSizeMedium,\n      heightTiny,\n      heightSmall,\n      heightMedium\n    } = vars;\n    return Object.assign(Object.assign({}, commonVariables), {\n      heightSmall: heightTiny,\n      heightMedium: heightSmall,\n      heightLarge: heightMedium,\n      borderRadius,\n      opacityDisabled,\n      fontSizeSmall: fontSizeTiny,\n      fontSizeMedium: fontSizeSmall,\n      fontSizeLarge: fontSizeMedium,\n      // checked\n      textColorCheckable: textColor2,\n      textColorHoverCheckable: primaryColorHover,\n      textColorPressedCheckable: primaryColorPressed,\n      textColorChecked: baseColor,\n      colorCheckable: '#0000',\n      colorHoverCheckable: '#0000',\n      colorPressedCheckable: '#0000',\n      colorChecked: primaryColor,\n      colorCheckedHover: primaryColorHover,\n      colorCheckedPressed: primaryColorPressed,\n      // default\n      border: `1px solid ${borderColor}`,\n      textColor: textColor2,\n      color: '#0000',\n      closeColor: closeColor,\n      closeColorHover: closeColorHover,\n      closeColorPressed: closeColorPressed,\n      borderPrimary: `1px solid ${changeColor(primaryColor, {\n        alpha: 0.3\n      })}`,\n      textColorPrimary: primaryColor,\n      colorPrimary: '#0000',\n      closeColorPrimary: changeColor(primaryColor, {\n        alpha: 0.7\n      }),\n      closeColorHoverPrimary: changeColor(primaryColor, {\n        alpha: 0.85\n      }),\n      closeColorPressedPrimary: changeColor(primaryColor, {\n        alpha: 0.57\n      }),\n      borderInfo: `1px solid ${changeColor(infoColor, {\n        alpha: 0.3\n      })}`,\n      textColorInfo: infoColor,\n      colorInfo: '#0000',\n      closeColorInfo: changeColor(infoColor, {\n        alpha: 0.7\n      }),\n      closeColorHoverInfo: changeColor(infoColor, {\n        alpha: 0.85\n      }),\n      closeColorPressedInfo: changeColor(infoColor, {\n        alpha: 0.57\n      }),\n      borderSuccess: `1px solid ${changeColor(successColor, {\n        alpha: 0.3\n      })}`,\n      textColorSuccess: successColor,\n      colorSuccess: '#0000',\n      closeColorSuccess: changeColor(successColor, {\n        alpha: 0.7\n      }),\n      closeColorHoverSuccess: changeColor(successColor, {\n        alpha: 0.85\n      }),\n      closeColorPressedSuccess: changeColor(successColor, {\n        alpha: 0.57\n      }),\n      borderWarning: `1px solid ${changeColor(warningColor, {\n        alpha: 0.3\n      })}`,\n      textColorWarning: warningColor,\n      colorWarning: '#0000',\n      closeColorWarning: changeColor(warningColor, {\n        alpha: 0.7\n      }),\n      closeColorHoverWarning: changeColor(warningColor, {\n        alpha: 0.85\n      }),\n      closeColorPressedWarning: changeColor(warningColor, {\n        alpha: 0.57\n      }),\n      borderError: `1px solid ${changeColor(errorColor, {\n        alpha: 0.3\n      })}`,\n      textColorError: errorColor,\n      colorError: '#0000',\n      closeColorError: changeColor(errorColor, {\n        alpha: 0.7\n      }),\n      closeColorHoverError: changeColor(errorColor, {\n        alpha: 0.85\n      }),\n      closeColorPressedError: changeColor(errorColor, {\n        alpha: 0.57\n      })\n    });\n  }\n\n};\nexport default tagDark;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/tag/styles/dark.js"],"names":["commonVariables","changeColor","commonDark","tagDark","name","common","self","vars","textColor2","primaryColorHover","primaryColorPressed","primaryColor","infoColor","successColor","warningColor","errorColor","baseColor","borderColor","opacityDisabled","closeColor","closeColorHover","closeColorPressed","borderRadiusSmall","borderRadius","fontSizeTiny","fontSizeSmall","fontSizeMedium","heightTiny","heightSmall","heightMedium","Object","assign","heightLarge","fontSizeLarge","textColorCheckable","textColorHoverCheckable","textColorPressedCheckable","textColorChecked","colorCheckable","colorHoverCheckable","colorPressedCheckable","colorChecked","colorCheckedHover","colorCheckedPressed","border","textColor","color","borderPrimary","alpha","textColorPrimary","colorPrimary","closeColorPrimary","closeColorHoverPrimary","closeColorPressedPrimary","borderInfo","textColorInfo","colorInfo","closeColorInfo","closeColorHoverInfo","closeColorPressedInfo","borderSuccess","textColorSuccess","colorSuccess","closeColorSuccess","closeColorHoverSuccess","closeColorPressedSuccess","borderWarning","textColorWarning","colorWarning","closeColorWarning","closeColorHoverWarning","closeColorPressedWarning","borderError","textColorError","colorError","closeColorError","closeColorHoverError","closeColorPressedError"],"mappings":"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","sourcesContent":["import commonVariables from './_common';\nimport { changeColor } from 'seemly';\nimport { commonDark } from '../../_styles/common';\nconst tagDark = {\n    name: 'Tag',\n    common: commonDark,\n    self(vars) {\n        const { textColor2, primaryColorHover, primaryColorPressed, primaryColor, infoColor, successColor, warningColor, errorColor, baseColor, borderColor, opacityDisabled, closeColor, closeColorHover, closeColorPressed, borderRadiusSmall: borderRadius, fontSizeTiny, fontSizeSmall, fontSizeMedium, heightTiny, heightSmall, heightMedium } = vars;\n        return Object.assign(Object.assign({}, commonVariables), { heightSmall: heightTiny, heightMedium: heightSmall, heightLarge: heightMedium, borderRadius,\n            opacityDisabled, fontSizeSmall: fontSizeTiny, fontSizeMedium: fontSizeSmall, fontSizeLarge: fontSizeMedium, \n            // checked\n            textColorCheckable: textColor2, textColorHoverCheckable: primaryColorHover, textColorPressedCheckable: primaryColorPressed, textColorChecked: baseColor, colorCheckable: '#0000', colorHoverCheckable: '#0000', colorPressedCheckable: '#0000', colorChecked: primaryColor, colorCheckedHover: primaryColorHover, colorCheckedPressed: primaryColorPressed, \n            // default\n            border: `1px solid ${borderColor}`, textColor: textColor2, color: '#0000', closeColor: closeColor, closeColorHover: closeColorHover, closeColorPressed: closeColorPressed, borderPrimary: `1px solid ${changeColor(primaryColor, { alpha: 0.3 })}`, textColorPrimary: primaryColor, colorPrimary: '#0000', closeColorPrimary: changeColor(primaryColor, { alpha: 0.7 }), closeColorHoverPrimary: changeColor(primaryColor, { alpha: 0.85 }), closeColorPressedPrimary: changeColor(primaryColor, { alpha: 0.57 }), borderInfo: `1px solid ${changeColor(infoColor, { alpha: 0.3 })}`, textColorInfo: infoColor, colorInfo: '#0000', closeColorInfo: changeColor(infoColor, { alpha: 0.7 }), closeColorHoverInfo: changeColor(infoColor, { alpha: 0.85 }), closeColorPressedInfo: changeColor(infoColor, { alpha: 0.57 }), borderSuccess: `1px solid ${changeColor(successColor, { alpha: 0.3 })}`, textColorSuccess: successColor, colorSuccess: '#0000', closeColorSuccess: changeColor(successColor, { alpha: 0.7 }), closeColorHoverSuccess: changeColor(successColor, { alpha: 0.85 }), closeColorPressedSuccess: changeColor(successColor, { alpha: 0.57 }), borderWarning: `1px solid ${changeColor(warningColor, { alpha: 0.3 })}`, textColorWarning: warningColor, colorWarning: '#0000', closeColorWarning: changeColor(warningColor, { alpha: 0.7 }), closeColorHoverWarning: changeColor(warningColor, { alpha: 0.85 }), closeColorPressedWarning: changeColor(warningColor, { alpha: 0.57 }), borderError: `1px solid ${changeColor(errorColor, { alpha: 0.3 })}`, textColorError: errorColor, colorError: '#0000', closeColorError: changeColor(errorColor, { alpha: 0.7 }), closeColorHoverError: changeColor(errorColor, { alpha: 0.85 }), closeColorPressedError: changeColor(errorColor, { alpha: 0.57 }) });\n    }\n};\nexport default tagDark;\n"]},"metadata":{},"sourceType":"module"}