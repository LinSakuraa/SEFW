{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { Button, DesignToken, display, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { heightNumber, inputFilledForcedColorStyles, inputFilledStyles, inputForcedColorStyles, inputStateStyles, inputStyles } from '../styles';\nimport { appearanceBehavior } from '../utilities/behaviors';\nimport { bodyFont, controlCornerRadius, density, designUnit, neutralFillInputRecipe, neutralFillStealthRecipe, neutralForegroundRest, typeRampBaseFontSize, typeRampBaseLineHeight } from '../design-tokens';\nconst clearButtonHover = DesignToken.create(\"clear-button-hover\").withDefault(target => {\n  const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n  const inputRecipe = neutralFillInputRecipe.getValueFor(target);\n  return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).focus).hover;\n});\nconst clearButtonActive = DesignToken.create(\"clear-button-active\").withDefault(target => {\n  const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n  const inputRecipe = neutralFillInputRecipe.getValueFor(target);\n  return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).focus).active;\n});\nexport const searchFilledStyles = (context, definition) => css`\n    ${inputFilledStyles(context, definition, '.root')}\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        ${inputFilledForcedColorStyles(context, definition, '.root')}\n      `));\nexport const searchStyles = (context, definition) => css`\n    ${display('inline-block')}\n    ${inputStyles(context, definition, '.root')}\n    ${inputStateStyles(context, definition, '.root')}\n    .root {\n      display: flex;\n      flex-direction: row;\n    }\n    .control {\n      -webkit-appearance: none;\n      color: inherit;\n      background: transparent;\n      border: 0;\n      height: calc(100% - 4px);\n      margin-top: auto;\n      margin-bottom: auto;\n      padding: 0 calc(${designUnit} * 2px + 1px);\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n    }\n    .clear-button {\n      display: inline-flex;\n      align-items: center;\n      margin: 1px;\n      height: calc(100% - 2px);\n      opacity: 0;\n      background: transparent;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      border: none;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      min-width: calc(${heightNumber} * 1px);\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      outline: none;\n      font-family: ${bodyFont};\n      padding: 0 calc((10 + (${designUnit} * 2 * ${density})) * 1px);\n    }\n    .clear-button:hover {\n      background: ${clearButtonHover};\n    }\n    .clear-button:active {\n      background: ${clearButtonActive};\n    }\n    :host(:hover:not([disabled], [readOnly])) .clear-button,\n    :host(:active:not([disabled], [readOnly])) .clear-button,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button {\n        opacity: 1;\n    }\n    :host(:hover:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:active:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button__hidden {\n        opacity: 0;\n    }\n    .control::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n    .input-wrapper {\n      display: flex;\n      position: relative;\n      width: 100%;\n    }\n    .start,\n    .end {\n      display: flex;\n      margin: 1px;\n      align-items: center;\n    }\n    .start {\n      display: flex;\n      margin-inline-start: 11px;\n    }\n    ::slotted([slot=\"end\"]) {\n      height: 100%\n    }\n    .clear-button__hidden {\n      opacity: 0;\n    }\n    .end {\n        margin-inline-end: 11px;\n    }\n    ::slotted(${context.tagFor(Button)}) {\n      margin-inline-end: 1px;\n    }\n  `.withBehaviors(appearanceBehavior('filled', searchFilledStyles(context, definition)), forcedColorsStylesheetBehavior(css`\n        ${inputForcedColorStyles(context, definition, '.root')}\n      `));","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/search/search.styles.js"],"names":["css","Button","DesignToken","display","forcedColorsStylesheetBehavior","heightNumber","inputFilledForcedColorStyles","inputFilledStyles","inputForcedColorStyles","inputStateStyles","inputStyles","appearanceBehavior","bodyFont","controlCornerRadius","density","designUnit","neutralFillInputRecipe","neutralFillStealthRecipe","neutralForegroundRest","typeRampBaseFontSize","typeRampBaseLineHeight","clearButtonHover","create","withDefault","target","buttonRecipe","getValueFor","inputRecipe","evaluate","focus","hover","clearButtonActive","active","searchFilledStyles","context","definition","withBehaviors","searchStyles","tagFor"],"mappings":"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","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { Button, DesignToken, display, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { heightNumber, inputFilledForcedColorStyles, inputFilledStyles, inputForcedColorStyles, inputStateStyles, inputStyles, } from '../styles';\nimport { appearanceBehavior } from '../utilities/behaviors';\nimport { bodyFont, controlCornerRadius, density, designUnit, neutralFillInputRecipe, neutralFillStealthRecipe, neutralForegroundRest, typeRampBaseFontSize, typeRampBaseLineHeight } from '../design-tokens';\nconst clearButtonHover = DesignToken.create(\"clear-button-hover\").withDefault((target) => {\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    const inputRecipe = neutralFillInputRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).focus).hover;\n});\nconst clearButtonActive = DesignToken.create(\"clear-button-active\").withDefault((target) => {\n    const buttonRecipe = neutralFillStealthRecipe.getValueFor(target);\n    const inputRecipe = neutralFillInputRecipe.getValueFor(target);\n    return buttonRecipe.evaluate(target, inputRecipe.evaluate(target).focus).active;\n});\nexport const searchFilledStyles = (context, definition) => css `\n    ${inputFilledStyles(context, definition, '.root')}\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        ${inputFilledForcedColorStyles(context, definition, '.root')}\n      `));\nexport const searchStyles = (context, definition) => css `\n    ${display('inline-block')}\n    ${inputStyles(context, definition, '.root')}\n    ${inputStateStyles(context, definition, '.root')}\n    .root {\n      display: flex;\n      flex-direction: row;\n    }\n    .control {\n      -webkit-appearance: none;\n      color: inherit;\n      background: transparent;\n      border: 0;\n      height: calc(100% - 4px);\n      margin-top: auto;\n      margin-bottom: auto;\n      padding: 0 calc(${designUnit} * 2px + 1px);\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n    }\n    .clear-button {\n      display: inline-flex;\n      align-items: center;\n      margin: 1px;\n      height: calc(100% - 2px);\n      opacity: 0;\n      background: transparent;\n      color: ${neutralForegroundRest};\n      fill: currentcolor;\n      border: none;\n      border-radius: calc(${controlCornerRadius} * 1px);\n      min-width: calc(${heightNumber} * 1px);\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      outline: none;\n      font-family: ${bodyFont};\n      padding: 0 calc((10 + (${designUnit} * 2 * ${density})) * 1px);\n    }\n    .clear-button:hover {\n      background: ${clearButtonHover};\n    }\n    .clear-button:active {\n      background: ${clearButtonActive};\n    }\n    :host(:hover:not([disabled], [readOnly])) .clear-button,\n    :host(:active:not([disabled], [readOnly])) .clear-button,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button {\n        opacity: 1;\n    }\n    :host(:hover:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:active:not([disabled], [readOnly])) .clear-button__hidden,\n    :host(:focus-within:not([disabled], [readOnly])) .clear-button__hidden {\n        opacity: 0;\n    }\n    .control::-webkit-search-cancel-button {\n      -webkit-appearance: none;\n    }\n    .input-wrapper {\n      display: flex;\n      position: relative;\n      width: 100%;\n    }\n    .start,\n    .end {\n      display: flex;\n      margin: 1px;\n      align-items: center;\n    }\n    .start {\n      display: flex;\n      margin-inline-start: 11px;\n    }\n    ::slotted([slot=\"end\"]) {\n      height: 100%\n    }\n    .clear-button__hidden {\n      opacity: 0;\n    }\n    .end {\n        margin-inline-end: 11px;\n    }\n    ::slotted(${context.tagFor(Button)}) {\n      margin-inline-end: 1px;\n    }\n  `.withBehaviors(appearanceBehavior('filled', searchFilledStyles(context, definition)), forcedColorsStylesheetBehavior(css `\n        ${inputForcedColorStyles(context, definition, '.root')}\n      `));\n"]},"metadata":{},"sourceType":"module"}