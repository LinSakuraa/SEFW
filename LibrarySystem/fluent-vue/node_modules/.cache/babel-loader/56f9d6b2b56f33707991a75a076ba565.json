{"ast":null,"code":"import { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins';\nimport commonVars from './_common';\nexport const self = vars => {\n  const {\n    textColor2,\n    successColor,\n    infoColor,\n    warningColor,\n    errorColor,\n    popoverColor,\n    closeColor,\n    closeColorHover,\n    textColor1,\n    textColor3,\n    borderRadius,\n    fontWeightStrong,\n    boxShadow2,\n    lineHeight,\n    fontSize\n  } = vars;\n  return Object.assign(Object.assign({}, commonVars), {\n    borderRadius,\n    lineHeight,\n    fontSize,\n    headerFontWeight: fontWeightStrong,\n    iconColor: textColor2,\n    iconColorSuccess: successColor,\n    iconColorInfo: infoColor,\n    iconColorWarning: warningColor,\n    iconColorError: errorColor,\n    color: popoverColor,\n    textColor: textColor2,\n    closeColor: closeColor,\n    closeColorHover: closeColorHover,\n    closeColorPressed: closeColor,\n    headerTextColor: textColor1,\n    descriptionTextColor: textColor3,\n    actionTextColor: textColor2,\n    boxShadow: boxShadow2\n  });\n};\nconst notificationLight = createTheme({\n  name: 'Notification',\n  common: commonLight,\n  peers: {\n    Scrollbar: scrollbarLight\n  },\n  self\n});\nexport default notificationLight;","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/notification/styles/light.js"],"names":["scrollbarLight","commonLight","createTheme","commonVars","self","vars","textColor2","successColor","infoColor","warningColor","errorColor","popoverColor","closeColor","closeColorHover","textColor1","textColor3","borderRadius","fontWeightStrong","boxShadow2","lineHeight","fontSize","Object","assign","headerFontWeight","iconColor","iconColorSuccess","iconColorInfo","iconColorWarning","iconColorError","color","textColor","closeColorPressed","headerTextColor","descriptionTextColor","actionTextColor","boxShadow","notificationLight","name","common","peers","Scrollbar"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kCAA/B;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,OAAO,MAAMC,IAAI,GAAIC,IAAD,IAAU;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,YAAd;AAA4BC,IAAAA,SAA5B;AAAuCC,IAAAA,YAAvC;AAAqDC,IAAAA,UAArD;AAAiEC,IAAAA,YAAjE;AAA+EC,IAAAA,UAA/E;AAA2FC,IAAAA,eAA3F;AAA4GC,IAAAA,UAA5G;AAAwHC,IAAAA,UAAxH;AAAoIC,IAAAA,YAApI;AAAkJC,IAAAA,gBAAlJ;AAAoKC,IAAAA,UAApK;AAAgLC,IAAAA,UAAhL;AAA4LC,IAAAA;AAA5L,MAAyMf,IAA/M;AACA,SAAOgB,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBnB,UAAlB,CAAd,EAA6C;AAAEa,IAAAA,YAAF;AAChDG,IAAAA,UADgD;AAEhDC,IAAAA,QAFgD;AAEtCG,IAAAA,gBAAgB,EAAEN,gBAFoB;AAEFO,IAAAA,SAAS,EAAElB,UAFT;AAEqBmB,IAAAA,gBAAgB,EAAElB,YAFvC;AAEqDmB,IAAAA,aAAa,EAAElB,SAFpE;AAE+EmB,IAAAA,gBAAgB,EAAElB,YAFjG;AAE+GmB,IAAAA,cAAc,EAAElB,UAF/H;AAE2ImB,IAAAA,KAAK,EAAElB,YAFlJ;AAEgKmB,IAAAA,SAAS,EAAExB,UAF3K;AAEuLM,IAAAA,UAAU,EAAEA,UAFnM;AAE+MC,IAAAA,eAAe,EAAEA,eAFhO;AAEiPkB,IAAAA,iBAAiB,EAAEnB,UAFpQ;AAEgRoB,IAAAA,eAAe,EAAElB,UAFjS;AAE6SmB,IAAAA,oBAAoB,EAAElB,UAFnU;AAE+UmB,IAAAA,eAAe,EAAE5B,UAFhW;AAE4W6B,IAAAA,SAAS,EAAEjB;AAFvX,GAA7C,CAAP;AAGH,CALM;AAMP,MAAMkB,iBAAiB,GAAGlC,WAAW,CAAC;AAClCmC,EAAAA,IAAI,EAAE,cAD4B;AAElCC,EAAAA,MAAM,EAAErC,WAF0B;AAGlCsC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAExC;AADR,GAH2B;AAMlCI,EAAAA;AANkC,CAAD,CAArC;AAQA,eAAegC,iBAAf","sourcesContent":["import { scrollbarLight } from '../../_internal/scrollbar/styles';\nimport { commonLight } from '../../_styles/common';\nimport { createTheme } from '../../_mixins';\nimport commonVars from './_common';\nexport const self = (vars) => {\n    const { textColor2, successColor, infoColor, warningColor, errorColor, popoverColor, closeColor, closeColorHover, textColor1, textColor3, borderRadius, fontWeightStrong, boxShadow2, lineHeight, fontSize } = vars;\n    return Object.assign(Object.assign({}, commonVars), { borderRadius,\n        lineHeight,\n        fontSize, headerFontWeight: fontWeightStrong, iconColor: textColor2, iconColorSuccess: successColor, iconColorInfo: infoColor, iconColorWarning: warningColor, iconColorError: errorColor, color: popoverColor, textColor: textColor2, closeColor: closeColor, closeColorHover: closeColorHover, closeColorPressed: closeColor, headerTextColor: textColor1, descriptionTextColor: textColor3, actionTextColor: textColor2, boxShadow: boxShadow2 });\n};\nconst notificationLight = createTheme({\n    name: 'Notification',\n    common: commonLight,\n    peers: {\n        Scrollbar: scrollbarLight\n    },\n    self\n});\nexport default notificationLight;\n"]},"metadata":{},"sourceType":"module"}