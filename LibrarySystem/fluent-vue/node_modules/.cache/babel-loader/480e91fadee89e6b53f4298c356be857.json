{"ast":null,"code":"import { Fragment, ref, h, reactive, Teleport, defineComponent, provide } from 'vue';\nimport { createId } from 'seemly';\nimport { omit } from '../../_utils';\nimport { useConfig, useTheme } from '../../_mixins';\nimport MessageEnvironment from './MessageEnvironment';\nimport { messageApiInjectionKey, messageProviderInjectionKey } from './context';\nconst messageProviderProps = Object.assign(Object.assign({}, useTheme.props), {\n  to: [String, Object],\n  duration: {\n    type: Number,\n    default: 3000\n  },\n  keepAliveOnHover: Boolean,\n  max: Number,\n  placement: {\n    type: String,\n    default: 'top'\n  },\n  closable: Boolean,\n  containerStyle: [String, Object]\n});\nexport default defineComponent({\n  name: 'MessageProvider',\n  props: messageProviderProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const messageListRef = ref([]);\n    const messageRefs = ref({});\n    const api = {\n      create(content, options) {\n        return create(content, Object.assign({\n          type: 'default'\n        }, options));\n      },\n\n      info(content, options) {\n        return create(content, Object.assign(Object.assign({}, options), {\n          type: 'info'\n        }));\n      },\n\n      success(content, options) {\n        return create(content, Object.assign(Object.assign({}, options), {\n          type: 'success'\n        }));\n      },\n\n      warning(content, options) {\n        return create(content, Object.assign(Object.assign({}, options), {\n          type: 'warning'\n        }));\n      },\n\n      error(content, options) {\n        return create(content, Object.assign(Object.assign({}, options), {\n          type: 'error'\n        }));\n      },\n\n      loading(content, options) {\n        return create(content, Object.assign(Object.assign({}, options), {\n          type: 'loading'\n        }));\n      },\n\n      destroyAll\n    };\n    provide(messageProviderInjectionKey, {\n      props,\n      mergedClsPrefixRef\n    });\n    provide(messageApiInjectionKey, api);\n\n    function create(content, options) {\n      const key = createId();\n      const messageReactive = reactive(Object.assign(Object.assign({}, options), {\n        content,\n        key,\n        destroy: () => {\n          messageRefs.value[key].hide();\n        }\n      }));\n      const {\n        max\n      } = props;\n\n      if (max && messageListRef.value.length >= max) {\n        messageListRef.value.shift();\n      }\n\n      messageListRef.value.push(messageReactive);\n      return messageReactive;\n    }\n\n    function handleAfterLeave(key) {\n      messageListRef.value.splice(messageListRef.value.findIndex(message => message.key === key), 1); // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n\n      delete messageRefs.value[key];\n    }\n\n    function destroyAll() {\n      Object.values(messageRefs.value).forEach(messageInstRef => {\n        messageInstRef.hide();\n      });\n    }\n\n    return Object.assign({\n      mergedClsPrefix: mergedClsPrefixRef,\n      messageRefs,\n      messageList: messageListRef,\n      handleAfterLeave\n    }, api);\n  },\n\n  render() {\n    var _a, _b, _c;\n\n    return h(Fragment, null, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 : _b.call(_a), this.messageList.length ? h(Teleport, {\n      to: (_c = this.to) !== null && _c !== void 0 ? _c : 'body'\n    }, h(\"div\", {\n      class: [`${this.mergedClsPrefix}-message-container`, `${this.mergedClsPrefix}-message-container--${this.placement}`],\n      key: \"message-container\",\n      style: this.containerStyle\n    }, this.messageList.map(message => {\n      return h(MessageEnvironment, Object.assign({\n        ref: inst => {\n          if (inst) {\n            this.messageRefs[message.key] = inst;\n          }\n        },\n        internalKey: message.key,\n        onInternalAfterLeave: this.handleAfterLeave\n      }, omit(message, ['destroy'], undefined), {\n        duration: message.duration === undefined ? this.duration : message.duration,\n        keepAliveOnHover: message.keepAliveOnHover === undefined ? this.keepAliveOnHover : message.keepAliveOnHover,\n        closable: message.closable === undefined ? this.closable : message.closable\n      }));\n    }))) : null);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/message/src/MessageProvider.js"],"names":["Fragment","ref","h","reactive","Teleport","defineComponent","provide","createId","omit","useConfig","useTheme","MessageEnvironment","messageApiInjectionKey","messageProviderInjectionKey","messageProviderProps","Object","assign","props","to","String","duration","type","Number","default","keepAliveOnHover","Boolean","max","placement","closable","containerStyle","name","setup","mergedClsPrefixRef","messageListRef","messageRefs","api","create","content","options","info","success","warning","error","loading","destroyAll","key","messageReactive","destroy","value","hide","length","shift","push","handleAfterLeave","splice","findIndex","message","values","forEach","messageInstRef","mergedClsPrefix","messageList","render","_a","_b","_c","$slots","call","class","style","map","inst","internalKey","onInternalAfterLeave","undefined"],"mappings":"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","sourcesContent":["import { Fragment, ref, h, reactive, Teleport, defineComponent, provide } from 'vue';\nimport { createId } from 'seemly';\nimport { omit } from '../../_utils';\nimport { useConfig, useTheme } from '../../_mixins';\nimport MessageEnvironment from './MessageEnvironment';\nimport { messageApiInjectionKey, messageProviderInjectionKey } from './context';\nconst messageProviderProps = Object.assign(Object.assign({}, useTheme.props), { to: [String, Object], duration: {\n        type: Number,\n        default: 3000\n    }, keepAliveOnHover: Boolean, max: Number, placement: {\n        type: String,\n        default: 'top'\n    }, closable: Boolean, containerStyle: [String, Object] });\nexport default defineComponent({\n    name: 'MessageProvider',\n    props: messageProviderProps,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const messageListRef = ref([]);\n        const messageRefs = ref({});\n        const api = {\n            create(content, options) {\n                return create(content, Object.assign({ type: 'default' }, options));\n            },\n            info(content, options) {\n                return create(content, Object.assign(Object.assign({}, options), { type: 'info' }));\n            },\n            success(content, options) {\n                return create(content, Object.assign(Object.assign({}, options), { type: 'success' }));\n            },\n            warning(content, options) {\n                return create(content, Object.assign(Object.assign({}, options), { type: 'warning' }));\n            },\n            error(content, options) {\n                return create(content, Object.assign(Object.assign({}, options), { type: 'error' }));\n            },\n            loading(content, options) {\n                return create(content, Object.assign(Object.assign({}, options), { type: 'loading' }));\n            },\n            destroyAll\n        };\n        provide(messageProviderInjectionKey, {\n            props,\n            mergedClsPrefixRef\n        });\n        provide(messageApiInjectionKey, api);\n        function create(content, options) {\n            const key = createId();\n            const messageReactive = reactive(Object.assign(Object.assign({}, options), { content,\n                key, destroy: () => {\n                    messageRefs.value[key].hide();\n                } }));\n            const { max } = props;\n            if (max && messageListRef.value.length >= max) {\n                messageListRef.value.shift();\n            }\n            messageListRef.value.push(messageReactive);\n            return messageReactive;\n        }\n        function handleAfterLeave(key) {\n            messageListRef.value.splice(messageListRef.value.findIndex((message) => message.key === key), 1);\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete messageRefs.value[key];\n        }\n        function destroyAll() {\n            Object.values(messageRefs.value).forEach((messageInstRef) => {\n                messageInstRef.hide();\n            });\n        }\n        return Object.assign({\n            mergedClsPrefix: mergedClsPrefixRef,\n            messageRefs,\n            messageList: messageListRef,\n            handleAfterLeave\n        }, api);\n    },\n    render() {\n        var _a, _b, _c;\n        return (h(Fragment, null, (_b = (_a = this.$slots).default) === null || _b === void 0 ? void 0 :\n            _b.call(_a),\n            this.messageList.length ? (h(Teleport, { to: (_c = this.to) !== null && _c !== void 0 ? _c : 'body' },\n                h(\"div\", { class: [\n                        `${this.mergedClsPrefix}-message-container`,\n                        `${this.mergedClsPrefix}-message-container--${this.placement}`\n                    ], key: \"message-container\", style: this.containerStyle }, this.messageList.map((message) => {\n                    return (h(MessageEnvironment, Object.assign({ ref: ((inst) => {\n                            if (inst) {\n                                this.messageRefs[message.key] = inst;\n                            }\n                        }), internalKey: message.key, onInternalAfterLeave: this.handleAfterLeave }, omit(message, ['destroy'], undefined), { duration: message.duration === undefined\n                            ? this.duration\n                            : message.duration, keepAliveOnHover: message.keepAliveOnHover === undefined\n                            ? this.keepAliveOnHover\n                            : message.keepAliveOnHover, closable: message.closable === undefined\n                            ? this.closable\n                            : message.closable })));\n                })))) : null));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}