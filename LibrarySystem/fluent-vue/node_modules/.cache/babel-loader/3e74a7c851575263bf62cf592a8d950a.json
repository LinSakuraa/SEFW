{"ast":null,"code":"import { h, ref, defineComponent } from 'vue';\nimport NGridItem, { gridItemProps, gridItemPropKeys } from '../../grid/src/GridItem';\nimport { keep, keysOf } from '../../_utils';\nimport NFormItem, { formItemProps, formItemPropKeys } from './FormItem';\nexport const formItemGiProps = Object.assign(Object.assign({}, gridItemProps), formItemProps);\nexport const formItemGiPropKeys = keysOf(formItemGiProps);\nexport default defineComponent({\n  __GRID_ITEM__: true,\n  name: 'FormItemGridItem',\n  alias: ['FormItemGi'],\n  props: formItemGiProps,\n\n  setup() {\n    const formItemInstRef = ref(null);\n\n    const validate = (...args) => {\n      const {\n        value\n      } = formItemInstRef;\n\n      if (value) {\n        return value.validate(...args);\n      }\n    };\n\n    const restoreValidation = () => {\n      const {\n        value\n      } = formItemInstRef;\n\n      if (value) {\n        return value.restoreValidation();\n      }\n    };\n\n    return {\n      formItemInstRef,\n      validate,\n      restoreValidation\n    };\n  },\n\n  render() {\n    return h(NGridItem, keep(this.$.vnode.props || {}, gridItemPropKeys), {\n      default: () => {\n        const itemProps = keep(this.$props, formItemPropKeys);\n        return h(NFormItem, Object.assign({\n          ref: 'formItemInstRef'\n        }, itemProps), this.$slots);\n      }\n    });\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/form/src/FormItemGridItem.js"],"names":["h","ref","defineComponent","NGridItem","gridItemProps","gridItemPropKeys","keep","keysOf","NFormItem","formItemProps","formItemPropKeys","formItemGiProps","Object","assign","formItemGiPropKeys","__GRID_ITEM__","name","alias","props","setup","formItemInstRef","validate","args","value","restoreValidation","render","$","vnode","default","itemProps","$props","$slots"],"mappings":"AAAA,SAASA,CAAT,EAAYC,GAAZ,EAAiBC,eAAjB,QAAwC,KAAxC;AACA,OAAOC,SAAP,IAAoBC,aAApB,EAAmCC,gBAAnC,QAA2D,yBAA3D;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,cAA7B;AACA,OAAOC,SAAP,IAAoBC,aAApB,EAAmCC,gBAAnC,QAA2D,YAA3D;AACA,OAAO,MAAMC,eAAe,GAAGC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBT,aAAlB,CAAd,EAAgDK,aAAhD,CAAxB;AACP,OAAO,MAAMK,kBAAkB,GAAGP,MAAM,CAACI,eAAD,CAAjC;AACP,eAAeT,eAAe,CAAC;AAC3Ba,EAAAA,aAAa,EAAE,IADY;AAE3BC,EAAAA,IAAI,EAAE,kBAFqB;AAG3BC,EAAAA,KAAK,EAAE,CAAC,YAAD,CAHoB;AAI3BC,EAAAA,KAAK,EAAEP,eAJoB;;AAK3BQ,EAAAA,KAAK,GAAG;AACJ,UAAMC,eAAe,GAAGnB,GAAG,CAAC,IAAD,CAA3B;;AACA,UAAMoB,QAAQ,GAAI,CAAC,GAAGC,IAAJ,KAAa;AAC3B,YAAM;AAAEC,QAAAA;AAAF,UAAYH,eAAlB;;AACA,UAAIG,KAAJ,EAAW;AACP,eAAOA,KAAK,CAACF,QAAN,CAAe,GAAGC,IAAlB,CAAP;AACH;AACJ,KALD;;AAMA,UAAME,iBAAiB,GAAG,MAAM;AAC5B,YAAM;AAAED,QAAAA;AAAF,UAAYH,eAAlB;;AACA,UAAIG,KAAJ,EAAW;AACP,eAAOA,KAAK,CAACC,iBAAN,EAAP;AACH;AACJ,KALD;;AAMA,WAAO;AACHJ,MAAAA,eADG;AAEHC,MAAAA,QAFG;AAGHG,MAAAA;AAHG,KAAP;AAKH,GAxB0B;;AAyB3BC,EAAAA,MAAM,GAAG;AACL,WAAOzB,CAAC,CAACG,SAAD,EAAYG,IAAI,CAAC,KAAKoB,CAAL,CAAOC,KAAP,CAAaT,KAAb,IAAsB,EAAvB,EAA2Bb,gBAA3B,CAAhB,EAA8D;AAClEuB,MAAAA,OAAO,EAAE,MAAM;AACX,cAAMC,SAAS,GAAGvB,IAAI,CAAC,KAAKwB,MAAN,EAAcpB,gBAAd,CAAtB;AACA,eAAOV,CAAC,CAACQ,SAAD,EAAYI,MAAM,CAACC,MAAP,CAAc;AAAEZ,UAAAA,GAAG,EAAE;AAAP,SAAd,EAA0C4B,SAA1C,CAAZ,EAAkE,KAAKE,MAAvE,CAAR;AACH;AAJiE,KAA9D,CAAR;AAMH;;AAhC0B,CAAD,CAA9B","sourcesContent":["import { h, ref, defineComponent } from 'vue';\nimport NGridItem, { gridItemProps, gridItemPropKeys } from '../../grid/src/GridItem';\nimport { keep, keysOf } from '../../_utils';\nimport NFormItem, { formItemProps, formItemPropKeys } from './FormItem';\nexport const formItemGiProps = Object.assign(Object.assign({}, gridItemProps), formItemProps);\nexport const formItemGiPropKeys = keysOf(formItemGiProps);\nexport default defineComponent({\n    __GRID_ITEM__: true,\n    name: 'FormItemGridItem',\n    alias: ['FormItemGi'],\n    props: formItemGiProps,\n    setup() {\n        const formItemInstRef = ref(null);\n        const validate = ((...args) => {\n            const { value } = formItemInstRef;\n            if (value) {\n                return value.validate(...args);\n            }\n        });\n        const restoreValidation = () => {\n            const { value } = formItemInstRef;\n            if (value) {\n                return value.restoreValidation();\n            }\n        };\n        return {\n            formItemInstRef,\n            validate,\n            restoreValidation\n        };\n    },\n    render() {\n        return h(NGridItem, keep(this.$.vnode.props || {}, gridItemPropKeys), {\n            default: () => {\n                const itemProps = keep(this.$props, formItemPropKeys);\n                return h(NFormItem, Object.assign({ ref: 'formItemInstRef' }, itemProps), this.$slots);\n            }\n        });\n    }\n});\n"]},"metadata":{},"sourceType":"module"}