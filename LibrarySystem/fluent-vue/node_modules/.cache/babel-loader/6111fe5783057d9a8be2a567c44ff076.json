{"ast":null,"code":"import { defineComponent, renderSlot } from 'vue';\nimport delegate from './delegate';\nimport { warn } from '../../shared';\nexport default defineComponent({\n  name: 'ResizeObserver',\n  props: {\n    onResize: Function\n  },\n\n  setup(props) {\n    return {\n      registered: false,\n\n      handleResize(entry) {\n        const {\n          onResize\n        } = props;\n        if (onResize !== undefined) onResize(entry);\n      }\n\n    };\n  },\n\n  mounted() {\n    const el = this.$el;\n\n    if (el === undefined) {\n      warn('resize-observer', '$el does not exist.');\n      return;\n    }\n\n    if (el.nextElementSibling !== el.nextSibling) {\n      if (el.nodeType === 3 && el.nodeValue !== '') {\n        warn('resize-observer', '$el can not be observed (it may be a text node).');\n        return;\n      }\n    }\n\n    if (el.nextElementSibling !== null) {\n      delegate.registerHandler(el.nextElementSibling, this.handleResize);\n      this.registered = true;\n    }\n  },\n\n  beforeUnmount() {\n    if (this.registered) {\n      delegate.unregisterHandler(this.$el.nextElementSibling);\n    }\n  },\n\n  render() {\n    return renderSlot(this.$slots, 'default');\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/vueuc/es/resize-observer/src/VResizeObserver.js"],"names":["defineComponent","renderSlot","delegate","warn","name","props","onResize","Function","setup","registered","handleResize","entry","undefined","mounted","el","$el","nextElementSibling","nextSibling","nodeType","nodeValue","registerHandler","beforeUnmount","unregisterHandler","render","$slots"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,UAA1B,QAA4C,KAA5C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,eAAeH,eAAe,CAAC;AAC3BI,EAAAA,IAAI,EAAE,gBADqB;AAE3BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAEC;AADP,GAFoB;;AAK3BC,EAAAA,KAAK,CAACH,KAAD,EAAQ;AACT,WAAO;AACHI,MAAAA,UAAU,EAAE,KADT;;AAEHC,MAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,cAAM;AAAEL,UAAAA;AAAF,YAAeD,KAArB;AACA,YAAIC,QAAQ,KAAKM,SAAjB,EACIN,QAAQ,CAACK,KAAD,CAAR;AACP;;AANE,KAAP;AAQH,GAd0B;;AAe3BE,EAAAA,OAAO,GAAG;AACN,UAAMC,EAAE,GAAG,KAAKC,GAAhB;;AACA,QAAID,EAAE,KAAKF,SAAX,EAAsB;AAClBT,MAAAA,IAAI,CAAC,iBAAD,EAAoB,qBAApB,CAAJ;AACA;AACH;;AACD,QAAIW,EAAE,CAACE,kBAAH,KAA0BF,EAAE,CAACG,WAAjC,EAA8C;AAC1C,UAAIH,EAAE,CAACI,QAAH,KAAgB,CAAhB,IAAqBJ,EAAE,CAACK,SAAH,KAAiB,EAA1C,EAA8C;AAC1ChB,QAAAA,IAAI,CAAC,iBAAD,EAAoB,kDAApB,CAAJ;AACA;AACH;AACJ;;AACD,QAAIW,EAAE,CAACE,kBAAH,KAA0B,IAA9B,EAAoC;AAChCd,MAAAA,QAAQ,CAACkB,eAAT,CAAyBN,EAAE,CAACE,kBAA5B,EAAgD,KAAKN,YAArD;AACA,WAAKD,UAAL,GAAkB,IAAlB;AACH;AACJ,GA/B0B;;AAgC3BY,EAAAA,aAAa,GAAG;AACZ,QAAI,KAAKZ,UAAT,EAAqB;AACjBP,MAAAA,QAAQ,CAACoB,iBAAT,CAA2B,KAAKP,GAAL,CAASC,kBAApC;AACH;AACJ,GApC0B;;AAqC3BO,EAAAA,MAAM,GAAG;AACL,WAAOtB,UAAU,CAAC,KAAKuB,MAAN,EAAc,SAAd,CAAjB;AACH;;AAvC0B,CAAD,CAA9B","sourcesContent":["import { defineComponent, renderSlot } from 'vue';\nimport delegate from './delegate';\nimport { warn } from '../../shared';\nexport default defineComponent({\n    name: 'ResizeObserver',\n    props: {\n        onResize: Function\n    },\n    setup(props) {\n        return {\n            registered: false,\n            handleResize(entry) {\n                const { onResize } = props;\n                if (onResize !== undefined)\n                    onResize(entry);\n            }\n        };\n    },\n    mounted() {\n        const el = this.$el;\n        if (el === undefined) {\n            warn('resize-observer', '$el does not exist.');\n            return;\n        }\n        if (el.nextElementSibling !== el.nextSibling) {\n            if (el.nodeType === 3 && el.nodeValue !== '') {\n                warn('resize-observer', '$el can not be observed (it may be a text node).');\n                return;\n            }\n        }\n        if (el.nextElementSibling !== null) {\n            delegate.registerHandler(el.nextElementSibling, this.handleResize);\n            this.registered = true;\n        }\n    },\n    beforeUnmount() {\n        if (this.registered) {\n            delegate.unregisterHandler(this.$el.nextElementSibling);\n        }\n    },\n    render() {\n        return renderSlot(this.$slots, 'default');\n    }\n});\n"]},"metadata":{},"sourceType":"module"}