{"ast":null,"code":"import { h, defineComponent, inject, computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { useConfig } from '../../_mixins';\nimport { throwError } from '../../_utils';\nimport { carouselMethodsInjectionKey } from './interface';\nexport default defineComponent({\n  name: 'CarouselItem',\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    const NCarousel = inject(carouselMethodsInjectionKey, null);\n\n    if (!NCarousel) {\n      throwError('carousel-item', '`n-carousel-item` must be placed inside `n-carousel`.');\n    }\n\n    const selfElRef = ref();\n    const isPrevRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return Boolean(selfEl && NCarousel.isPrev(selfEl));\n    });\n    const isNextRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return Boolean(selfEl && NCarousel.isNext(selfEl));\n    });\n    const isActiveRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return Boolean(selfEl && NCarousel.isActive(selfEl));\n    });\n    const styleRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return selfEl && NCarousel.getSlideStyle(selfEl);\n    });\n    const indexRef = computed(() => {\n      const {\n        value: selfEl\n      } = selfElRef;\n      return selfEl && NCarousel.getSlideIndex(selfEl);\n    });\n\n    function handleClick(event) {\n      const {\n        value: index\n      } = indexRef;\n\n      if (index !== undefined) {\n        NCarousel === null || NCarousel === void 0 ? void 0 : NCarousel.onCarouselItemClick(index, event);\n      }\n    }\n\n    onMounted(() => NCarousel.addSlide(selfElRef.value));\n    onBeforeUnmount(() => {\n      NCarousel.removeSlide(selfElRef.value);\n    });\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      selfElRef,\n      isPrev: isPrevRef,\n      isNext: isNextRef,\n      isActive: isActiveRef,\n      index: indexRef,\n      style: styleRef,\n      prevSlideStyle: NCarousel.prevSlideStyleRef,\n      nextSlideStyle: NCarousel.nextSlideStyleRef,\n      handleClick\n    };\n  },\n\n  render() {\n    var _a;\n\n    const {\n      $slots: slots,\n      mergedClsPrefix,\n      isPrev,\n      isNext,\n      isActive,\n      index,\n      style\n    } = this;\n    const className = [`${mergedClsPrefix}-carousel__slide`, {\n      [`${mergedClsPrefix}-carousel__slide--current`]: isActive,\n      [`${mergedClsPrefix}-carousel__slide--prev`]: isPrev,\n      [`${mergedClsPrefix}-carousel__slide--next`]: isNext\n    }];\n    return h(\"div\", {\n      ref: \"selfElRef\",\n      class: className,\n      role: \"option\",\n      tabindex: \"-1\",\n      \"data-index\": index,\n      \"aria-hidden\": !isActive,\n      style: [style, isPrev ? this.prevSlideStyle : '', isNext ? this.nextSlideStyle : ''],\n      // @ts-expect-error\n      onClickCapture: this.handleClick\n    }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n      isPrev,\n      isNext,\n      isActive,\n      index\n    }));\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/carousel/src/CarouselItem.js"],"names":["h","defineComponent","inject","computed","ref","onMounted","onBeforeUnmount","useConfig","throwError","carouselMethodsInjectionKey","name","setup","props","mergedClsPrefixRef","NCarousel","selfElRef","isPrevRef","value","selfEl","Boolean","isPrev","isNextRef","isNext","isActiveRef","isActive","styleRef","getSlideStyle","indexRef","getSlideIndex","handleClick","event","index","undefined","onCarouselItemClick","addSlide","removeSlide","mergedClsPrefix","style","prevSlideStyle","prevSlideStyleRef","nextSlideStyle","nextSlideStyleRef","render","_a","$slots","slots","className","class","role","tabindex","onClickCapture","default","call"],"mappings":"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","sourcesContent":["import { h, defineComponent, inject, computed, ref, onMounted, onBeforeUnmount } from 'vue';\nimport { useConfig } from '../../_mixins';\nimport { throwError } from '../../_utils';\nimport { carouselMethodsInjectionKey } from './interface';\nexport default defineComponent({\n    name: 'CarouselItem',\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const NCarousel = inject(carouselMethodsInjectionKey, null);\n        if (!NCarousel) {\n            throwError('carousel-item', '`n-carousel-item` must be placed inside `n-carousel`.');\n        }\n        const selfElRef = ref();\n        const isPrevRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return Boolean(selfEl && NCarousel.isPrev(selfEl));\n        });\n        const isNextRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return Boolean(selfEl && NCarousel.isNext(selfEl));\n        });\n        const isActiveRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return Boolean(selfEl && NCarousel.isActive(selfEl));\n        });\n        const styleRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return selfEl && NCarousel.getSlideStyle(selfEl);\n        });\n        const indexRef = computed(() => {\n            const { value: selfEl } = selfElRef;\n            return selfEl && NCarousel.getSlideIndex(selfEl);\n        });\n        function handleClick(event) {\n            const { value: index } = indexRef;\n            if (index !== undefined) {\n                NCarousel === null || NCarousel === void 0 ? void 0 : NCarousel.onCarouselItemClick(index, event);\n            }\n        }\n        onMounted(() => NCarousel.addSlide(selfElRef.value));\n        onBeforeUnmount(() => {\n            NCarousel.removeSlide(selfElRef.value);\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            selfElRef,\n            isPrev: isPrevRef,\n            isNext: isNextRef,\n            isActive: isActiveRef,\n            index: indexRef,\n            style: styleRef,\n            prevSlideStyle: NCarousel.prevSlideStyleRef,\n            nextSlideStyle: NCarousel.nextSlideStyleRef,\n            handleClick\n        };\n    },\n    render() {\n        var _a;\n        const { $slots: slots, mergedClsPrefix, isPrev, isNext, isActive, index, style } = this;\n        const className = [\n            `${mergedClsPrefix}-carousel__slide`,\n            {\n                [`${mergedClsPrefix}-carousel__slide--current`]: isActive,\n                [`${mergedClsPrefix}-carousel__slide--prev`]: isPrev,\n                [`${mergedClsPrefix}-carousel__slide--next`]: isNext\n            }\n        ];\n        return (h(\"div\", { ref: \"selfElRef\", class: className, role: \"option\", tabindex: \"-1\", \"data-index\": index, \"aria-hidden\": !isActive, style: [\n                style,\n                isPrev ? this.prevSlideStyle : '',\n                isNext ? this.nextSlideStyle : ''\n            ], \n            // @ts-expect-error\n            onClickCapture: this.handleClick }, (_a = slots.default) === null || _a === void 0 ? void 0 : _a.call(slots, {\n            isPrev,\n            isNext,\n            isActive,\n            index\n        })));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}