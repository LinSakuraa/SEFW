{"ast":null,"code":"import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { display, focusVisible, forcedColorsStylesheetBehavior } from '@microsoft/fast-foundation';\nimport { heightNumber } from '../size';\nimport { accentFillActive, accentFillHover, accentFillRest, accentForegroundActive, accentForegroundHover, accentForegroundRest, accentStrokeControlActive, accentStrokeControlHover, accentStrokeControlRest, bodyFont, controlCornerRadius, density, designUnit, focusStrokeInner, focusStrokeOuter, focusStrokeWidth, foregroundOnAccentActive, foregroundOnAccentHover, foregroundOnAccentRest, neutralFillActive, neutralFillHover, neutralFillRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRest, neutralForegroundRest, neutralStrokeActive, neutralStrokeControlActive, neutralStrokeControlHover, neutralStrokeControlRest, neutralStrokeHover, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight } from '../../design-tokens';\n/**\n * @internal\n */\n\nexport const baseButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    ${display('inline-flex')} :host {\n      position: relative;\n      box-sizing: border-box;\n      font-family: ${bodyFont};\n      outline: none;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      height: calc(${heightNumber} * 1px);\n      min-width: calc(${heightNumber} * 1px);\n      color: ${neutralForegroundRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      fill: currentcolor;\n      cursor: pointer;\n    }\n\n    :host .control {\n      background: padding-box linear-gradient(${neutralFillRest}, ${neutralFillRest}),\n        border-box ${neutralStrokeControlRest};\n      border: calc(${strokeWidth} * 1px) solid transparent;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0 calc((10 + (${designUnit} * 2 * ${density})) * 1px);\n      white-space: nowrap;\n      outline: none;\n      text-decoration: none;\n      color: inherit;\n      border-radius: inherit;\n      fill: inherit;\n      cursor: inherit;\n      font-family: inherit;\n    }\n\n    .control,\n    .end,\n    .start {\n      font: inherit;\n    }\n\n    .control.icon-only {\n      padding: 0;\n      line-height: 0;\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: padding-box linear-gradient(${neutralFillHover}, ${neutralFillHover}),\n        border-box ${neutralStrokeControlHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: padding-box linear-gradient(${neutralFillActive}, ${neutralFillActive}),\n        border-box ${neutralStrokeControlActive};\n    }\n\n    :host .control:${focusVisible} {\n      border-color: ${focusStrokeOuter} !important;\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter} inset !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: padding-box linear-gradient(${neutralFillRest}, ${neutralFillRest}), border-box ${neutralStrokeRest};\n    }\n\n    .control::-moz-focus-inner {\n      border: 0;\n    }\n\n    .content {\n      pointer-events: none;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      pointer-events: none;\n    }\n\n    .start {\n      margin-inline-end: 11px;\n    }\n\n    .end {\n      margin-inline-start: 11px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.ButtonText};\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host(:not([disabled])) .control:hover,\n        :host .control${interactivitySelector}:hover,\n        .control${interactivitySelector}:hover {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        .control:${focusVisible},\n        :host .control:${focusVisible},\n        :host(:${focusVisible}) .control {\n          forced-color-adjust: none;\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.Highlight} !important;\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight} !important;\n        }\n        :host([href]) .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.LinkText};\n          color: ${SystemColors.LinkText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:hover,\n        :host(.neutral[href]) .control:hover {\n          background: ${SystemColors.LinkText};\n          border-color: ${SystemColors.LinkText} !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:${focusVisible}{\n          forced-color-adjust: none;\n          border-color: ${SystemColors.LinkText} !important;\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText} !important;\n        }\n    `));\n/**\n * @internal\n */\n\nexport const AccentButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    :host .control {\n      background: padding-box linear-gradient(${accentFillRest}, ${accentFillRest}),\n        border-box ${accentStrokeControlRest};\n      color: ${foregroundOnAccentRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: padding-box linear-gradient(${accentFillHover}, ${accentFillHover}),\n        border-box ${accentStrokeControlHover};\n      color: ${foregroundOnAccentHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: padding-box linear-gradient(${accentFillActive}, ${accentFillActive}),\n        border-box ${accentStrokeControlActive};\n      color: ${foregroundOnAccentActive};\n    }\n\n    :host .control:${focusVisible} {\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter} inset,\n        0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${focusStrokeInner} inset !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${accentFillRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host .control {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.Highlight};\n        }\n        :host .control:${focusVisible} {\n          background: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight} inset,\n            0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${SystemColors.HighlightText} inset !important;\n        }\n        :host([href]) .control {\n          background: ${SystemColors.LinkText};\n          color: ${SystemColors.HighlightText};\n        }\n        :host([href]) .control:hover {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.LinkText};\n          box-shadow: none;\n          color: ${SystemColors.LinkText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.LinkText};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText} inset,\n            0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${SystemColors.HighlightText} inset !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n      `));\n/**\n * @internal\n */\n\nexport const HypertextStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    :host {\n      height: auto;\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n      min-width: 0;\n    }\n\n    :host .control {\n      display: inline;\n      padding: 0;\n      background: transparent;\n      border: none;\n      box-shadow: none;\n      line-height: 1;\n      text-decoration: underline 1px;\n    }\n\n    :host .control:not([href]) {\n      background: transparent;\n    }\n\n    :host .control${interactivitySelector} {\n      background: transparent;\n      color: ${accentForegroundRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: transparent;\n      color: ${accentForegroundHover};\n      text-decoration: none;\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: transparent;\n      color: ${accentForegroundActive};\n      text-decoration: none;\n    }\n\n    :host .control:${focusVisible} {\n      box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${focusStrokeOuter} !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: transparent;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n      :host .control${interactivitySelector}:hover {\n        color: ${SystemColors.Highlight};\n        fill: currentcolor;\n      }\n      :host .control:${focusVisible} {\n        color: ${SystemColors.LinkText};\n      }\n      `));\n/**\n * @internal\n */\n\nexport const LightweightButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    :host {\n      color: ${accentForegroundRest};\n    }\n\n    :host .control {\n      background: ${neutralFillStealthRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: ${neutralFillStealthHover};\n      color: ${accentForegroundHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: ${neutralFillStealthActive};\n      color: ${accentForegroundActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${neutralFillStealthRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.ButtonText};\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active,\n        :host .control:${focusVisible} {\n          border-color: ${SystemColors.Highlight};\n          background: ${SystemColors.Highlight};\n          box-shadow: none;\n          color: ${SystemColors.HighlightText};\n        }\n        :host([href]) .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover,\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.ButtonFace};\n          box-shadow: none;\n          color: ${SystemColors.LinkText};\n        }\n      `));\n/**\n * @internal\n */\n\nexport const OutlineButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    :host .control {\n      background: transparent !important;\n      border-color: ${neutralStrokeRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      border-color: ${neutralStrokeHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      border-color: ${neutralStrokeActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: transparent !important;\n      border-color: ${neutralStrokeRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host .control${nonInteractivitySelector} {\n          border-color: ${SystemColors.ButtonText};\n        }\n        :host .control${interactivitySelector}:hover {\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.ButtonText};\n        }\n        :host([href]) {\n          border-color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover {\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText};\n          color: ${SystemColors.LinkText};\n        }\n      `));\n/**\n * @internal\n */\n\nexport const StealthButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css`\n    :host .control {\n      background: ${neutralFillStealthRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: ${neutralFillStealthActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${neutralFillStealthRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css`\n        :host .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active,\n        :host .control:${focusVisible} {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n          box-shadow: none !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([href]) .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover,\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.LinkText};\n          border-color: ${SystemColors.LinkText};\n          box-shadow: none !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n      `));","map":{"version":3,"sources":["D:/VUE_FDS/fluent-vue/node_modules/@fluentui/web-components/dist/esm/styles/patterns/button.styles.js"],"names":["css","SystemColors","display","focusVisible","forcedColorsStylesheetBehavior","heightNumber","accentFillActive","accentFillHover","accentFillRest","accentForegroundActive","accentForegroundHover","accentForegroundRest","accentStrokeControlActive","accentStrokeControlHover","accentStrokeControlRest","bodyFont","controlCornerRadius","density","designUnit","focusStrokeInner","focusStrokeOuter","focusStrokeWidth","foregroundOnAccentActive","foregroundOnAccentHover","foregroundOnAccentRest","neutralFillActive","neutralFillHover","neutralFillRest","neutralFillStealthActive","neutralFillStealthHover","neutralFillStealthRest","neutralForegroundRest","neutralStrokeActive","neutralStrokeControlActive","neutralStrokeControlHover","neutralStrokeControlRest","neutralStrokeHover","neutralStrokeRest","strokeWidth","typeRampBaseFontSize","typeRampBaseLineHeight","baseButtonStyles","context","definition","interactivitySelector","nonInteractivitySelector","withBehaviors","ButtonFace","ButtonText","Highlight","HighlightText","LinkText","AccentButtonStyles","HypertextStyles","LightweightButtonStyles","OutlineButtonStyles","StealthButtonStyles"],"mappings":"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","sourcesContent":["import { css } from '@microsoft/fast-element';\nimport { SystemColors } from '@microsoft/fast-web-utilities';\nimport { display, focusVisible, forcedColorsStylesheetBehavior, } from '@microsoft/fast-foundation';\nimport { heightNumber } from '../size';\nimport { accentFillActive, accentFillHover, accentFillRest, accentForegroundActive, accentForegroundHover, accentForegroundRest, accentStrokeControlActive, accentStrokeControlHover, accentStrokeControlRest, bodyFont, controlCornerRadius, density, designUnit, focusStrokeInner, focusStrokeOuter, focusStrokeWidth, foregroundOnAccentActive, foregroundOnAccentHover, foregroundOnAccentRest, neutralFillActive, neutralFillHover, neutralFillRest, neutralFillStealthActive, neutralFillStealthHover, neutralFillStealthRest, neutralForegroundRest, neutralStrokeActive, neutralStrokeControlActive, neutralStrokeControlHover, neutralStrokeControlRest, neutralStrokeHover, neutralStrokeRest, strokeWidth, typeRampBaseFontSize, typeRampBaseLineHeight, } from '../../design-tokens';\n/**\n * @internal\n */\nexport const baseButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    ${display('inline-flex')} :host {\n      position: relative;\n      box-sizing: border-box;\n      font-family: ${bodyFont};\n      outline: none;\n      font-size: ${typeRampBaseFontSize};\n      line-height: ${typeRampBaseLineHeight};\n      height: calc(${heightNumber} * 1px);\n      min-width: calc(${heightNumber} * 1px);\n      color: ${neutralForegroundRest};\n      border-radius: calc(${controlCornerRadius} * 1px);\n      fill: currentcolor;\n      cursor: pointer;\n    }\n\n    :host .control {\n      background: padding-box linear-gradient(${neutralFillRest}, ${neutralFillRest}),\n        border-box ${neutralStrokeControlRest};\n      border: calc(${strokeWidth} * 1px) solid transparent;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: inline-flex;\n      justify-content: center;\n      align-items: center;\n      padding: 0 calc((10 + (${designUnit} * 2 * ${density})) * 1px);\n      white-space: nowrap;\n      outline: none;\n      text-decoration: none;\n      color: inherit;\n      border-radius: inherit;\n      fill: inherit;\n      cursor: inherit;\n      font-family: inherit;\n    }\n\n    .control,\n    .end,\n    .start {\n      font: inherit;\n    }\n\n    .control.icon-only {\n      padding: 0;\n      line-height: 0;\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: padding-box linear-gradient(${neutralFillHover}, ${neutralFillHover}),\n        border-box ${neutralStrokeControlHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: padding-box linear-gradient(${neutralFillActive}, ${neutralFillActive}),\n        border-box ${neutralStrokeControlActive};\n    }\n\n    :host .control:${focusVisible} {\n      border-color: ${focusStrokeOuter} !important;\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter} inset !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: padding-box linear-gradient(${neutralFillRest}, ${neutralFillRest}), border-box ${neutralStrokeRest};\n    }\n\n    .control::-moz-focus-inner {\n      border: 0;\n    }\n\n    .content {\n      pointer-events: none;\n    }\n\n    .start,\n    .end {\n      display: flex;\n      pointer-events: none;\n    }\n\n    .start {\n      margin-inline-end: 11px;\n    }\n\n    .end {\n      margin-inline-start: 11px;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.ButtonText};\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host(:not([disabled])) .control:hover,\n        :host .control${interactivitySelector}:hover,\n        .control${interactivitySelector}:hover {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        .control:${focusVisible},\n        :host .control:${focusVisible},\n        :host(:${focusVisible}) .control {\n          forced-color-adjust: none;\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.Highlight} !important;\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight} !important;\n        }\n        :host([href]) .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.LinkText};\n          color: ${SystemColors.LinkText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:hover,\n        :host(.neutral[href]) .control:hover {\n          background: ${SystemColors.LinkText};\n          border-color: ${SystemColors.LinkText} !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:${focusVisible}{\n          forced-color-adjust: none;\n          border-color: ${SystemColors.LinkText} !important;\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText} !important;\n        }\n    `));\n/**\n * @internal\n */\nexport const AccentButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    :host .control {\n      background: padding-box linear-gradient(${accentFillRest}, ${accentFillRest}),\n        border-box ${accentStrokeControlRest};\n      color: ${foregroundOnAccentRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: padding-box linear-gradient(${accentFillHover}, ${accentFillHover}),\n        border-box ${accentStrokeControlHover};\n      color: ${foregroundOnAccentHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: padding-box linear-gradient(${accentFillActive}, ${accentFillActive}),\n        border-box ${accentStrokeControlActive};\n      color: ${foregroundOnAccentActive};\n    }\n\n    :host .control:${focusVisible} {\n      box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${focusStrokeOuter} inset,\n        0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${focusStrokeInner} inset !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${accentFillRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host .control {\n          forced-color-adjust: none;\n          background: ${SystemColors.Highlight};\n          color: ${SystemColors.HighlightText};\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active {\n          background: ${SystemColors.HighlightText};\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.Highlight};\n        }\n        :host .control:${focusVisible} {\n          background: ${SystemColors.Highlight};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.Highlight} inset,\n            0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${SystemColors.HighlightText} inset !important;\n        }\n        :host([href]) .control {\n          background: ${SystemColors.LinkText};\n          color: ${SystemColors.HighlightText};\n        }\n        :host([href]) .control:hover {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.LinkText};\n          box-shadow: none;\n          color: ${SystemColors.LinkText};\n          fill: currentcolor;\n        }\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.LinkText};\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText} inset,\n            0 0 0 calc(((${focusStrokeWidth} + ${strokeWidth}) - ${strokeWidth}) * 1px) ${SystemColors.HighlightText} inset !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n      `));\n/**\n * @internal\n */\nexport const HypertextStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    :host {\n      height: auto;\n      font-family: inherit;\n      font-size: inherit;\n      line-height: inherit;\n      min-width: 0;\n    }\n\n    :host .control {\n      display: inline;\n      padding: 0;\n      background: transparent;\n      border: none;\n      box-shadow: none;\n      line-height: 1;\n      text-decoration: underline 1px;\n    }\n\n    :host .control:not([href]) {\n      background: transparent;\n    }\n\n    :host .control${interactivitySelector} {\n      background: transparent;\n      color: ${accentForegroundRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: transparent;\n      color: ${accentForegroundHover};\n      text-decoration: none;\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: transparent;\n      color: ${accentForegroundActive};\n      text-decoration: none;\n    }\n\n    :host .control:${focusVisible} {\n      box-shadow: 0 0 0 calc(${focusStrokeWidth} * 1px) ${focusStrokeOuter} !important;\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: transparent;\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n      :host .control${interactivitySelector}:hover {\n        color: ${SystemColors.Highlight};\n        fill: currentcolor;\n      }\n      :host .control:${focusVisible} {\n        color: ${SystemColors.LinkText};\n      }\n      `));\n/**\n * @internal\n */\nexport const LightweightButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    :host {\n      color: ${accentForegroundRest};\n    }\n\n    :host .control {\n      background: ${neutralFillStealthRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: ${neutralFillStealthHover};\n      color: ${accentForegroundHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: ${neutralFillStealthActive};\n      color: ${accentForegroundActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${neutralFillStealthRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.ButtonText};\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active,\n        :host .control:${focusVisible} {\n          border-color: ${SystemColors.Highlight};\n          background: ${SystemColors.Highlight};\n          box-shadow: none;\n          color: ${SystemColors.HighlightText};\n        }\n        :host([href]) .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover,\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.ButtonFace};\n          box-shadow: none;\n          color: ${SystemColors.LinkText};\n        }\n      `));\n/**\n * @internal\n */\nexport const OutlineButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    :host .control {\n      background: transparent !important;\n      border-color: ${neutralStrokeRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      border-color: ${neutralStrokeHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      border-color: ${neutralStrokeActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: transparent !important;\n      border-color: ${neutralStrokeRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host .control${nonInteractivitySelector} {\n          border-color: ${SystemColors.ButtonText};\n        }\n        :host .control${interactivitySelector}:hover {\n          border-color: ${SystemColors.Highlight};\n          color: ${SystemColors.ButtonText};\n        }\n        :host([href]) {\n          border-color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover {\n          box-shadow: 0 0 0 calc((${focusStrokeWidth} - ${strokeWidth}) * 1px) ${SystemColors.LinkText};\n          color: ${SystemColors.LinkText};\n        }\n      `));\n/**\n * @internal\n */\nexport const StealthButtonStyles = (context, definition, interactivitySelector = '', nonInteractivitySelector = '') => css `\n    :host .control {\n      background: ${neutralFillStealthRest};\n    }\n\n    :host .control${interactivitySelector}:hover {\n      background: ${neutralFillStealthHover};\n    }\n\n    :host .control${interactivitySelector}:active {\n      background: ${neutralFillStealthActive};\n    }\n\n    :host .control${nonInteractivitySelector} {\n      background: ${neutralFillStealthRest};\n    }\n  `.withBehaviors(forcedColorsStylesheetBehavior(css `\n        :host .control {\n          background: ${SystemColors.ButtonFace};\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.ButtonText};\n          fill: currentcolor;\n        }\n        :host .control${interactivitySelector}:hover,\n        :host .control${interactivitySelector}:active,\n        :host .control:${focusVisible} {\n          background: ${SystemColors.Highlight};\n          border-color: ${SystemColors.Highlight};\n          box-shadow: none !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n        :host([href]) .control {\n          border-color: ${SystemColors.ButtonFace};\n          color: ${SystemColors.LinkText};\n        }\n        :host([href]) .control:hover,\n        :host([href]) .control:${focusVisible} {\n          background: ${SystemColors.LinkText};\n          border-color: ${SystemColors.LinkText};\n          box-shadow: none !important;\n          color: ${SystemColors.HighlightText};\n          fill: currentcolor;\n        }\n      `));\n"]},"metadata":{},"sourceType":"module"}