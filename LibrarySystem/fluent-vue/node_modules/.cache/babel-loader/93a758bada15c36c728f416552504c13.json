{"ast":null,"code":"import { h } from 'vue';\nimport { keep, keysOf } from '../../_utils'; // eslint-disable-next-line import/no-cycle\n\nimport { NMenuOptionGroup, menuItemGroupProps } from './MenuOptionGroup'; // eslint-disable-next-line import/no-cycle\n\nimport { NSubmenu, submenuProps } from './Submenu';\nimport { NMenuOption, menuItemProps } from './MenuOption';\nimport NMenuDivider from './MenuDivider';\nconst groupPropKeys = keysOf(menuItemGroupProps);\nconst itemPropKeys = keysOf(menuItemProps);\nconst submenuPropKeys = keysOf(submenuProps);\nexport function isIgnoredNode(rawNode) {\n  return rawNode.type === 'divider' || rawNode.type === 'render';\n}\nexport function isDividerNode(rawNode) {\n  return rawNode.type === 'divider';\n}\nexport function itemRenderer(tmNode, menuProps) {\n  const {\n    rawNode\n  } = tmNode;\n\n  if (isIgnoredNode(rawNode)) {\n    if (isDividerNode(rawNode)) {\n      return h(NMenuDivider, Object.assign({\n        key: tmNode.key\n      }, rawNode.props));\n    }\n\n    return undefined;\n  }\n\n  const {\n    labelField\n  } = menuProps;\n  const {\n    key,\n    level,\n    isGroup\n  } = tmNode;\n  const props = Object.assign(Object.assign({}, rawNode), {\n    title: rawNode.title || rawNode[labelField],\n    extra: rawNode.titleExtra || rawNode.extra,\n    key,\n    internalKey: key,\n    // since key can't be used as a prop\n    level,\n    root: level === 0,\n    isGroup\n  });\n\n  if (tmNode.children) {\n    if (tmNode.isGroup) {\n      return h(NMenuOptionGroup, keep(props, groupPropKeys, {\n        tmNodes: tmNode.children,\n        key\n      }));\n    }\n\n    return h(NSubmenu, keep(props, submenuPropKeys, {\n      key,\n      rawNodes: rawNode[menuProps.childrenField],\n      tmNodes: tmNode.children,\n      tmNode\n    }));\n  } else {\n    return h(NMenuOption, keep(props, itemPropKeys, {\n      key,\n      tmNode\n    }));\n  }\n}","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/menu/src/utils.js"],"names":["h","keep","keysOf","NMenuOptionGroup","menuItemGroupProps","NSubmenu","submenuProps","NMenuOption","menuItemProps","NMenuDivider","groupPropKeys","itemPropKeys","submenuPropKeys","isIgnoredNode","rawNode","type","isDividerNode","itemRenderer","tmNode","menuProps","Object","assign","key","props","undefined","labelField","level","isGroup","title","extra","titleExtra","internalKey","root","children","tmNodes","rawNodes","childrenField"],"mappings":"AAAA,SAASA,CAAT,QAAkB,KAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,cAA7B,C,CACA;;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,mBAArD,C,CACA;;AACA,SAASC,QAAT,EAAmBC,YAAnB,QAAuC,WAAvC;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,cAA3C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,MAAMC,aAAa,GAAGR,MAAM,CAACE,kBAAD,CAA5B;AACA,MAAMO,YAAY,GAAGT,MAAM,CAACM,aAAD,CAA3B;AACA,MAAMI,eAAe,GAAGV,MAAM,CAACI,YAAD,CAA9B;AACA,OAAO,SAASO,aAAT,CAAuBC,OAAvB,EAAgC;AACnC,SAAOA,OAAO,CAACC,IAAR,KAAiB,SAAjB,IAA8BD,OAAO,CAACC,IAAR,KAAiB,QAAtD;AACH;AACD,OAAO,SAASC,aAAT,CAAuBF,OAAvB,EAAgC;AACnC,SAAOA,OAAO,CAACC,IAAR,KAAiB,SAAxB;AACH;AACD,OAAO,SAASE,YAAT,CAAsBC,MAAtB,EAA8BC,SAA9B,EAAyC;AAC5C,QAAM;AAAEL,IAAAA;AAAF,MAAcI,MAApB;;AACA,MAAIL,aAAa,CAACC,OAAD,CAAjB,EAA4B;AACxB,QAAIE,aAAa,CAACF,OAAD,CAAjB,EAA4B;AACxB,aAAOd,CAAC,CAACS,YAAD,EAAeW,MAAM,CAACC,MAAP,CAAc;AAAEC,QAAAA,GAAG,EAAEJ,MAAM,CAACI;AAAd,OAAd,EAAmCR,OAAO,CAACS,KAA3C,CAAf,CAAR;AACH;;AACD,WAAOC,SAAP;AACH;;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,SAAvB;AACA,QAAM;AAAEG,IAAAA,GAAF;AAAOI,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAA0BT,MAAhC;AACA,QAAMK,KAAK,GAAGH,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBP,OAAlB,CAAd,EAA0C;AAAEc,IAAAA,KAAK,EAAGd,OAAO,CAACc,KAAR,IAAiBd,OAAO,CAACW,UAAD,CAAlC;AAAiDI,IAAAA,KAAK,EAAEf,OAAO,CAACgB,UAAR,IAAsBhB,OAAO,CAACe,KAAtF;AAA6FP,IAAAA,GAA7F;AAAkGS,IAAAA,WAAW,EAAET,GAA/G;AAAoH;AACxKI,IAAAA,KADoD;AAC7CM,IAAAA,IAAI,EAAEN,KAAK,KAAK,CAD6B;AAC1BC,IAAAA;AAD0B,GAA1C,CAAd;;AAEA,MAAIT,MAAM,CAACe,QAAX,EAAqB;AACjB,QAAIf,MAAM,CAACS,OAAX,EAAoB;AAChB,aAAO3B,CAAC,CAACG,gBAAD,EAAmBF,IAAI,CAACsB,KAAD,EAAQb,aAAR,EAAuB;AAAEwB,QAAAA,OAAO,EAAEhB,MAAM,CAACe,QAAlB;AAA4BX,QAAAA;AAA5B,OAAvB,CAAvB,CAAR;AACH;;AACD,WAAOtB,CAAC,CAACK,QAAD,EAAWJ,IAAI,CAACsB,KAAD,EAAQX,eAAR,EAAyB;AAC5CU,MAAAA,GAD4C;AAE5Ca,MAAAA,QAAQ,EAAErB,OAAO,CAACK,SAAS,CAACiB,aAAX,CAF2B;AAG5CF,MAAAA,OAAO,EAAEhB,MAAM,CAACe,QAH4B;AAI5Cf,MAAAA;AAJ4C,KAAzB,CAAf,CAAR;AAMH,GAVD,MAWK;AACD,WAAOlB,CAAC,CAACO,WAAD,EAAcN,IAAI,CAACsB,KAAD,EAAQZ,YAAR,EAAsB;AAC5CW,MAAAA,GAD4C;AAE5CJ,MAAAA;AAF4C,KAAtB,CAAlB,CAAR;AAIH;AACJ","sourcesContent":["import { h } from 'vue';\nimport { keep, keysOf } from '../../_utils';\n// eslint-disable-next-line import/no-cycle\nimport { NMenuOptionGroup, menuItemGroupProps } from './MenuOptionGroup';\n// eslint-disable-next-line import/no-cycle\nimport { NSubmenu, submenuProps } from './Submenu';\nimport { NMenuOption, menuItemProps } from './MenuOption';\nimport NMenuDivider from './MenuDivider';\nconst groupPropKeys = keysOf(menuItemGroupProps);\nconst itemPropKeys = keysOf(menuItemProps);\nconst submenuPropKeys = keysOf(submenuProps);\nexport function isIgnoredNode(rawNode) {\n    return rawNode.type === 'divider' || rawNode.type === 'render';\n}\nexport function isDividerNode(rawNode) {\n    return rawNode.type === 'divider';\n}\nexport function itemRenderer(tmNode, menuProps) {\n    const { rawNode } = tmNode;\n    if (isIgnoredNode(rawNode)) {\n        if (isDividerNode(rawNode)) {\n            return h(NMenuDivider, Object.assign({ key: tmNode.key }, rawNode.props));\n        }\n        return undefined;\n    }\n    const { labelField } = menuProps;\n    const { key, level, isGroup } = tmNode;\n    const props = Object.assign(Object.assign({}, rawNode), { title: (rawNode.title || rawNode[labelField]), extra: rawNode.titleExtra || rawNode.extra, key, internalKey: key, // since key can't be used as a prop\n        level, root: level === 0, isGroup });\n    if (tmNode.children) {\n        if (tmNode.isGroup) {\n            return h(NMenuOptionGroup, keep(props, groupPropKeys, { tmNodes: tmNode.children, key }));\n        }\n        return h(NSubmenu, keep(props, submenuPropKeys, {\n            key,\n            rawNodes: rawNode[menuProps.childrenField],\n            tmNodes: tmNode.children,\n            tmNode\n        }));\n    }\n    else {\n        return h(NMenuOption, keep(props, itemPropKeys, {\n            key,\n            tmNode\n        }));\n    }\n}\n"]},"metadata":{},"sourceType":"module"}