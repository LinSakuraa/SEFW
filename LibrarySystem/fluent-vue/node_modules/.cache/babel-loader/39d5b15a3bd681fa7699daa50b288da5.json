{"ast":null,"code":"import { defineComponent, h, provide, toRef } from 'vue';\nimport { useMemo } from 'vooks';\nimport { createInjectionKey, formatLength, keysOf } from '../../_utils';\nimport { useConfig, useStyle } from '../../_mixins';\nimport style from './styles/index.cssr';\nexport const rowInjectionKey = createInjectionKey('n-row');\nexport const rowProps = {\n  gutter: {\n    type: [Array, Number, String],\n    default: 0\n  },\n  alignItems: String,\n  justifyContent: String\n};\nexport const rowPropKeys = keysOf(rowProps);\nexport default defineComponent({\n  name: 'Row',\n  props: rowProps,\n\n  setup(props) {\n    const {\n      mergedClsPrefixRef\n    } = useConfig(props);\n    useStyle('-legacy-grid', style, mergedClsPrefixRef);\n    const verticalGutterRef = useMemo(() => {\n      const {\n        gutter\n      } = props;\n\n      if (Array.isArray(gutter)) {\n        return gutter[1] || 0;\n      }\n\n      return 0;\n    });\n    const horizontalGutterRef = useMemo(() => {\n      const {\n        gutter\n      } = props;\n\n      if (Array.isArray(gutter)) {\n        return gutter[0];\n      }\n\n      return Number(gutter);\n    });\n    provide(rowInjectionKey, {\n      mergedClsPrefixRef,\n      gutterRef: toRef(props, 'gutter'),\n      verticalGutterRef: verticalGutterRef,\n      horizontalGutterRef: horizontalGutterRef\n    });\n    return {\n      mergedClsPrefix: mergedClsPrefixRef,\n      styleMargin: useMemo(() => `-${formatLength(verticalGutterRef.value, {\n        c: 0.5\n      })} -${formatLength(horizontalGutterRef.value, {\n        c: 0.5\n      })}`),\n      styleWidth: useMemo(() => `calc(100% + ${formatLength(horizontalGutterRef.value)})`)\n    };\n  },\n\n  render() {\n    return h(\"div\", {\n      class: `${this.mergedClsPrefix}-row`,\n      style: {\n        margin: this.styleMargin,\n        width: this.styleWidth,\n        alignItems: this.alignItems,\n        justifyContent: this.justifyContent\n      }\n    }, this.$slots);\n  }\n\n});","map":{"version":3,"sources":["G:/VUE_FDS/fluent-vue/node_modules/naive-ui/es/legacy-grid/src/Row.js"],"names":["defineComponent","h","provide","toRef","useMemo","createInjectionKey","formatLength","keysOf","useConfig","useStyle","style","rowInjectionKey","rowProps","gutter","type","Array","Number","String","default","alignItems","justifyContent","rowPropKeys","name","props","setup","mergedClsPrefixRef","verticalGutterRef","isArray","horizontalGutterRef","gutterRef","mergedClsPrefix","styleMargin","value","c","styleWidth","render","class","margin","width","$slots"],"mappings":"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","sourcesContent":["import { defineComponent, h, provide, toRef } from 'vue';\nimport { useMemo } from 'vooks';\nimport { createInjectionKey, formatLength, keysOf } from '../../_utils';\nimport { useConfig, useStyle } from '../../_mixins';\nimport style from './styles/index.cssr';\nexport const rowInjectionKey = createInjectionKey('n-row');\nexport const rowProps = {\n    gutter: {\n        type: [Array, Number, String],\n        default: 0\n    },\n    alignItems: String,\n    justifyContent: String\n};\nexport const rowPropKeys = keysOf(rowProps);\nexport default defineComponent({\n    name: 'Row',\n    props: rowProps,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        useStyle('-legacy-grid', style, mergedClsPrefixRef);\n        const verticalGutterRef = useMemo(() => {\n            const { gutter } = props;\n            if (Array.isArray(gutter)) {\n                return gutter[1] || 0;\n            }\n            return 0;\n        });\n        const horizontalGutterRef = useMemo(() => {\n            const { gutter } = props;\n            if (Array.isArray(gutter)) {\n                return gutter[0];\n            }\n            return Number(gutter);\n        });\n        provide(rowInjectionKey, {\n            mergedClsPrefixRef,\n            gutterRef: toRef(props, 'gutter'),\n            verticalGutterRef: verticalGutterRef,\n            horizontalGutterRef: horizontalGutterRef\n        });\n        return {\n            mergedClsPrefix: mergedClsPrefixRef,\n            styleMargin: useMemo(() => `-${formatLength(verticalGutterRef.value, {\n                c: 0.5\n            })} -${formatLength(horizontalGutterRef.value, { c: 0.5 })}`),\n            styleWidth: useMemo(() => `calc(100% + ${formatLength(horizontalGutterRef.value)})`)\n        };\n    },\n    render() {\n        return (h(\"div\", { class: `${this.mergedClsPrefix}-row`, style: {\n                margin: this.styleMargin,\n                width: this.styleWidth,\n                alignItems: this.alignItems,\n                justifyContent: this.justifyContent\n            } }, this.$slots));\n    }\n});\n"]},"metadata":{},"sourceType":"module"}